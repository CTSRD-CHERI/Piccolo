//
// Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
//
// On Thu Jan 10 22:18:47 EST 2019
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// valid                          O     1
// word_fst                       O    64
// word_snd                       O     5
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_opcode                     I     7 reg
// req_f7                         I     7 reg
// req_rm                         I     3 reg
// req_rs2                        I     5 reg
// req_v1                         I    64 reg
// req_v2                         I    64 reg
// req_v3                         I    64 reg
// EN_set_verbosity               I     1
// EN_req                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkRISCV_FBox(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    req_opcode,
		    req_f7,
		    req_rm,
		    req_rs2,
		    req_v1,
		    req_v2,
		    req_v3,
		    EN_req,

		    valid,

		    word_fst,

		    word_snd);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method req
  input  [6 : 0] req_opcode;
  input  [6 : 0] req_f7;
  input  [2 : 0] req_rm;
  input  [4 : 0] req_rs2;
  input  [63 : 0] req_v1;
  input  [63 : 0] req_v2;
  input  [63 : 0] req_v3;
  input  EN_req;

  // value method valid
  output valid;

  // value method word_fst
  output [63 : 0] word_fst;

  // value method word_snd
  output [4 : 0] word_snd;

  // signals for module outputs
  wire [63 : 0] word_fst;
  wire [4 : 0] word_snd;
  wire RDY_set_verbosity, valid;

  // inlined wires
  reg [68 : 0] dw_result$wget;
  wire dw_valid$wget, dw_valid$whas;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register requestR
  reg [214 : 0] requestR;
  wire [214 : 0] requestR$D_IN;
  wire requestR$EN;

  // register resultR
  reg [69 : 0] resultR;
  reg [69 : 0] resultR$D_IN;
  wire resultR$EN;

  // register stateR
  reg [1 : 0] stateR;
  reg [1 : 0] stateR$D_IN;
  wire stateR$EN;

  // ports of submodule fpu
  reg [201 : 0] fpu$request_put;
  wire [69 : 0] fpu$response_get;
  wire fpu$EN_request_put,
       fpu$EN_response_get,
       fpu$RDY_request_put,
       fpu$RDY_response_get;

  // ports of submodule frmFpuF
  wire frmFpuF$CLR, frmFpuF$DEQ, frmFpuF$D_IN, frmFpuF$ENQ;

  // rule scheduling signals
  wire CAN_FIRE_RL_doFADD_D,
       CAN_FIRE_RL_doFADD_S,
       CAN_FIRE_RL_doFCLASS_D,
       CAN_FIRE_RL_doFCLASS_S,
       CAN_FIRE_RL_doFCVT_D_S,
       CAN_FIRE_RL_doFCVT_D_W,
       CAN_FIRE_RL_doFCVT_D_WU,
       CAN_FIRE_RL_doFCVT_S_D,
       CAN_FIRE_RL_doFCVT_S_W,
       CAN_FIRE_RL_doFCVT_S_WU,
       CAN_FIRE_RL_doFCVT_WU_D,
       CAN_FIRE_RL_doFCVT_WU_S,
       CAN_FIRE_RL_doFCVT_W_D,
       CAN_FIRE_RL_doFCVT_W_S,
       CAN_FIRE_RL_doFEQ_D,
       CAN_FIRE_RL_doFEQ_S,
       CAN_FIRE_RL_doFLE_D,
       CAN_FIRE_RL_doFLE_S,
       CAN_FIRE_RL_doFLT_D,
       CAN_FIRE_RL_doFLT_S,
       CAN_FIRE_RL_doFMADD_D,
       CAN_FIRE_RL_doFMADD_S,
       CAN_FIRE_RL_doFMAX_D,
       CAN_FIRE_RL_doFMAX_S,
       CAN_FIRE_RL_doFMIN_D,
       CAN_FIRE_RL_doFMIN_S,
       CAN_FIRE_RL_doFMSUB_D,
       CAN_FIRE_RL_doFMSUB_S,
       CAN_FIRE_RL_doFMUL_D,
       CAN_FIRE_RL_doFMUL_S,
       CAN_FIRE_RL_doFMV_D_X,
       CAN_FIRE_RL_doFMV_W_X,
       CAN_FIRE_RL_doFMV_X_D,
       CAN_FIRE_RL_doFMV_X_W,
       CAN_FIRE_RL_doFNMADD_D,
       CAN_FIRE_RL_doFNMADD_S,
       CAN_FIRE_RL_doFNMSUB_D,
       CAN_FIRE_RL_doFNMSUB_S,
       CAN_FIRE_RL_doFSGNJN_D,
       CAN_FIRE_RL_doFSGNJN_S,
       CAN_FIRE_RL_doFSGNJX_D,
       CAN_FIRE_RL_doFSGNJX_S,
       CAN_FIRE_RL_doFSGNJ_D,
       CAN_FIRE_RL_doFSGNJ_S,
       CAN_FIRE_RL_doFSUB_D,
       CAN_FIRE_RL_doFSUB_S,
       CAN_FIRE_RL_rl_drive_fpu_result,
       CAN_FIRE_RL_rl_get_fpu_result,
       CAN_FIRE_req,
       CAN_FIRE_set_verbosity,
       WILL_FIRE_RL_doFADD_D,
       WILL_FIRE_RL_doFADD_S,
       WILL_FIRE_RL_doFCLASS_D,
       WILL_FIRE_RL_doFCLASS_S,
       WILL_FIRE_RL_doFCVT_D_S,
       WILL_FIRE_RL_doFCVT_D_W,
       WILL_FIRE_RL_doFCVT_D_WU,
       WILL_FIRE_RL_doFCVT_S_D,
       WILL_FIRE_RL_doFCVT_S_W,
       WILL_FIRE_RL_doFCVT_S_WU,
       WILL_FIRE_RL_doFCVT_WU_D,
       WILL_FIRE_RL_doFCVT_WU_S,
       WILL_FIRE_RL_doFCVT_W_D,
       WILL_FIRE_RL_doFCVT_W_S,
       WILL_FIRE_RL_doFEQ_D,
       WILL_FIRE_RL_doFEQ_S,
       WILL_FIRE_RL_doFLE_D,
       WILL_FIRE_RL_doFLE_S,
       WILL_FIRE_RL_doFLT_D,
       WILL_FIRE_RL_doFLT_S,
       WILL_FIRE_RL_doFMADD_D,
       WILL_FIRE_RL_doFMADD_S,
       WILL_FIRE_RL_doFMAX_D,
       WILL_FIRE_RL_doFMAX_S,
       WILL_FIRE_RL_doFMIN_D,
       WILL_FIRE_RL_doFMIN_S,
       WILL_FIRE_RL_doFMSUB_D,
       WILL_FIRE_RL_doFMSUB_S,
       WILL_FIRE_RL_doFMUL_D,
       WILL_FIRE_RL_doFMUL_S,
       WILL_FIRE_RL_doFMV_D_X,
       WILL_FIRE_RL_doFMV_W_X,
       WILL_FIRE_RL_doFMV_X_D,
       WILL_FIRE_RL_doFMV_X_W,
       WILL_FIRE_RL_doFNMADD_D,
       WILL_FIRE_RL_doFNMADD_S,
       WILL_FIRE_RL_doFNMSUB_D,
       WILL_FIRE_RL_doFNMSUB_S,
       WILL_FIRE_RL_doFSGNJN_D,
       WILL_FIRE_RL_doFSGNJN_S,
       WILL_FIRE_RL_doFSGNJX_D,
       WILL_FIRE_RL_doFSGNJX_S,
       WILL_FIRE_RL_doFSGNJ_D,
       WILL_FIRE_RL_doFSGNJ_S,
       WILL_FIRE_RL_doFSUB_D,
       WILL_FIRE_RL_doFSUB_S,
       WILL_FIRE_RL_rl_drive_fpu_result,
       WILL_FIRE_RL_rl_get_fpu_result,
       WILL_FIRE_req,
       WILL_FIRE_set_verbosity;

  // inputs to muxes for submodule ports
  wire [201 : 0] MUX_fpu$request_put_1__VAL_1,
		 MUX_fpu$request_put_1__VAL_10,
		 MUX_fpu$request_put_1__VAL_11,
		 MUX_fpu$request_put_1__VAL_12,
		 MUX_fpu$request_put_1__VAL_13,
		 MUX_fpu$request_put_1__VAL_14,
		 MUX_fpu$request_put_1__VAL_2,
		 MUX_fpu$request_put_1__VAL_3,
		 MUX_fpu$request_put_1__VAL_4,
		 MUX_fpu$request_put_1__VAL_5,
		 MUX_fpu$request_put_1__VAL_6,
		 MUX_fpu$request_put_1__VAL_7,
		 MUX_fpu$request_put_1__VAL_8,
		 MUX_fpu$request_put_1__VAL_9;
  wire [69 : 0] MUX_resultR$write_1__VAL_10,
		MUX_resultR$write_1__VAL_11,
		MUX_resultR$write_1__VAL_12,
		MUX_resultR$write_1__VAL_13,
		MUX_resultR$write_1__VAL_14,
		MUX_resultR$write_1__VAL_15,
		MUX_resultR$write_1__VAL_16,
		MUX_resultR$write_1__VAL_17,
		MUX_resultR$write_1__VAL_18,
		MUX_resultR$write_1__VAL_19,
		MUX_resultR$write_1__VAL_2,
		MUX_resultR$write_1__VAL_20,
		MUX_resultR$write_1__VAL_21,
		MUX_resultR$write_1__VAL_22,
		MUX_resultR$write_1__VAL_23,
		MUX_resultR$write_1__VAL_24,
		MUX_resultR$write_1__VAL_25,
		MUX_resultR$write_1__VAL_26,
		MUX_resultR$write_1__VAL_27,
		MUX_resultR$write_1__VAL_28,
		MUX_resultR$write_1__VAL_29,
		MUX_resultR$write_1__VAL_3,
		MUX_resultR$write_1__VAL_30,
		MUX_resultR$write_1__VAL_31,
		MUX_resultR$write_1__VAL_32,
		MUX_resultR$write_1__VAL_33,
		MUX_resultR$write_1__VAL_34,
		MUX_resultR$write_1__VAL_4,
		MUX_resultR$write_1__VAL_6,
		MUX_resultR$write_1__VAL_7,
		MUX_resultR$write_1__VAL_8,
		MUX_resultR$write_1__VAL_9;
  wire [68 : 0] MUX_dw_result$wset_1__VAL_1,
		MUX_dw_result$wset_1__VAL_10,
		MUX_dw_result$wset_1__VAL_11,
		MUX_dw_result$wset_1__VAL_12,
		MUX_dw_result$wset_1__VAL_13,
		MUX_dw_result$wset_1__VAL_14,
		MUX_dw_result$wset_1__VAL_15,
		MUX_dw_result$wset_1__VAL_16,
		MUX_dw_result$wset_1__VAL_17,
		MUX_dw_result$wset_1__VAL_18,
		MUX_dw_result$wset_1__VAL_19,
		MUX_dw_result$wset_1__VAL_2,
		MUX_dw_result$wset_1__VAL_20,
		MUX_dw_result$wset_1__VAL_21,
		MUX_dw_result$wset_1__VAL_22,
		MUX_dw_result$wset_1__VAL_23,
		MUX_dw_result$wset_1__VAL_24,
		MUX_dw_result$wset_1__VAL_25,
		MUX_dw_result$wset_1__VAL_26,
		MUX_dw_result$wset_1__VAL_27,
		MUX_dw_result$wset_1__VAL_28,
		MUX_dw_result$wset_1__VAL_29,
		MUX_dw_result$wset_1__VAL_3,
		MUX_dw_result$wset_1__VAL_30,
		MUX_dw_result$wset_1__VAL_31,
		MUX_dw_result$wset_1__VAL_32,
		MUX_dw_result$wset_1__VAL_4,
		MUX_dw_result$wset_1__VAL_5,
		MUX_dw_result$wset_1__VAL_6,
		MUX_dw_result$wset_1__VAL_7,
		MUX_dw_result$wset_1__VAL_8,
		MUX_dw_result$wset_1__VAL_9;
  wire MUX_dw_result$wset_1__SEL_1,
       MUX_dw_result$wset_1__SEL_2,
       MUX_dw_result$wset_1__SEL_30;

  // remaining internal signals
  reg [51 : 0] CASE_guard10059_0b0_theResult___snd17971_BITS__ETC__q88,
	       CASE_guard19295_0b0_sfdin27515_BITS_56_TO_5_0b_ETC__q90,
	       CASE_guard28320_0b0_theResult___snd36256_BITS__ETC__q92,
	       CASE_guard5019_0b0_sfd___35009_BITS_54_TO_3_0b_ETC__q41,
	       CASE_guard5437_0b0_sfd___35427_BITS_54_TO_3_0b_ETC__q33,
	       CASE_guard5706_0b0_sfd___35009_BITS_53_TO_2_0b_ETC__q40,
	       CASE_guard6125_0b0_sfd___35427_BITS_53_TO_2_0b_ETC__q31,
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q32,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q34,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin27515_B_ETC__q91,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1466,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1478;
  reg [22 : 0] CASE_guard0855_0b0_sfdin8946_BITS_56_TO_34_0b1_ETC__q62,
	       CASE_guard134_0b0_sfd___3124_BITS_31_TO_9_0b1__ETC__q12,
	       CASE_guard3197_0b0_sfd___33187_BITS_31_TO_9_0b_ETC__q22,
	       CASE_guard3681_0b0_sfd___33187_BITS_30_TO_8_0b_ETC__q20,
	       CASE_guard622_0b0_sfd___3124_BITS_30_TO_8_0b1__ETC__q10,
	       CASE_guard7287_0b0_theResult___snd5310_BITS_56_ETC__q68,
	       CASE_guard8465_0b0_sfdin6685_BITS_56_TO_34_0b1_ETC__q66,
	       CASE_guard9548_0b0_theResult___snd7547_BITS_56_ETC__q64,
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin6685_BI_ETC__q67,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin8946_BI_ETC__q63,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d681,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d693;
  reg [10 : 0] CASE_guard10059_0b0_theResult___fst_exp18020_0_ETC__q82,
	       CASE_guard19295_0b0_theResult___fst_exp27521_0_ETC__q84,
	       CASE_guard28320_0b0_theResult___fst_exp36310_0_ETC__q86,
	       CASE_guard5019_0b0_0_0b1_0_0b10_out_exp5635_0b_ETC__q38,
	       CASE_guard5437_0b0_0_0b1_0_0b10_out_exp6053_0b_ETC__q35,
	       CASE_guard5706_0b0_x5721_BITS_10_TO_0_0b1_x572_ETC__q39,
	       CASE_guard6125_0b0_x6140_BITS_10_TO_0_0b1_x614_ETC__q29,
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87,
	       CASE_requestR_BITS_194_TO_192_0x1_x6140_BITS_1_ETC__q30,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1250,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1447;
  reg [7 : 0] CASE_guard0855_0b0_theResult___fst_exp8952_0b1_ETC__q54,
	      CASE_guard134_0b0_0_0b1_0_0b10_out_exp550_0b11_ETC__q16,
	      CASE_guard3197_0b0_0_0b1_0_0b10_out_exp3610_0b_ETC__q21,
	      CASE_guard3681_0b0_x3696_BITS_7_TO_0_0b1_x3696_ETC__q19,
	      CASE_guard622_0b0_x637_BITS_7_TO_0_0b1_x637_BI_ETC__q8,
	      CASE_guard7287_0b0_theResult___fst_exp5364_0b1_ETC__q60,
	      CASE_guard8465_0b0_theResult___fst_exp6691_0b1_ETC__q58,
	      CASE_guard9548_0b0_theResult___fst_exp7596_0b1_ETC__q56,
	      CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61,
	      CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d333,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d661;
  reg [2 : 0] IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38;
  reg CASE_guard0855_0b0_requestR_BIT_191_0b1_reques_ETC__q70,
      CASE_guard10059_0b0_requestR_BITS_191_TO_160_E_ETC__q94,
      CASE_guard134_0b0_requestR_BIT_159_0b1_request_ETC__q14,
      CASE_guard19295_0b0_requestR_BITS_191_TO_160_E_ETC__q95,
      CASE_guard28320_0b0_requestR_BITS_191_TO_160_E_ETC__q96,
      CASE_guard5437_0b0_requestR_BIT_159_0b1_reques_ETC__q27,
      CASE_guard6125_0b0_requestR_BIT_159_0b1_reques_ETC__q28,
      CASE_guard622_0b0_requestR_BIT_159_0b1_request_ETC__q15,
      CASE_guard7287_0b0_requestR_BIT_191_0b1_reques_ETC__q73,
      CASE_guard8465_0b0_requestR_BIT_191_0b1_reques_ETC__q72,
      CASE_guard9548_0b0_requestR_BIT_191_0b1_reques_ETC__q71,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2026,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2972;
  wire [85 : 0] IF_requestR_BIT_191_139_THEN_NEG_0b0_CONCAT_NO_ETC___d1530,
		b__h47006,
		x__h47679,
		x__h48702;
  wire [68 : 0] ab__h155049;
  wire [64 : 0] _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66;
  wire [63 : 0] IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1004,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d988,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1003,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1005,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1075,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1076,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d987,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d989,
		IF_requestR_BITS_126_TO_116_566_EQ_2047_567_AN_ETC___d3614,
		IF_requestR_BITS_190_TO_180_511_EQ_0_519_AND_r_ETC___d3628,
		IF_requestR_BITS_190_TO_180_511_EQ_0_519_AND_r_ETC___d3699,
		res___1__h153958,
		res___1__h154396,
		res___1__h154406,
		res___1__h154425,
		res___1__h25886,
		res___1__h26122,
		res___1__h26132,
		res___1__h26151,
		res__h141666,
		res__h146214,
		res__h148918,
		res__h151613,
		res__h153490,
		res__h154441,
		res__h154622,
		res__h17490,
		res__h17727,
		res__h23099,
		res__h24582,
		res__h25651,
		res__h26167,
		x__h138249,
		x__h142797,
		x__h14574,
		x__h147241,
		x__h149936,
		x__h151813,
		x__h153940,
		x__h154590,
		x__h16114,
		x__h16812,
		x__h1771,
		x__h1917,
		x__h19446,
		x__h2051,
		x__h21971,
		x__h2199,
		x__h22092,
		x__h22230,
		x__h23713,
		x__h24782,
		x__h25868,
		x__h27035,
		x__h27157,
		x__h27281,
		x__h27411,
		x__h37245,
		x__h46798,
		x__h48321,
		x__h49014,
		x__h8546,
		x__h97202;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q44,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q77,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q49,
		IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q74,
		IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q80,
		IF_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_ETC__q46,
		IF_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_ETC__q52,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d781,
		_0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d2982,
		_0b0_CONCAT_NOT_requestR_BITS_190_TO_180_511_EQ_ETC___d2167,
		_theResult____h119285,
		_theResult____h60845,
		_theResult____h78455,
		_theResult___snd__h117971,
		_theResult___snd__h117973,
		_theResult___snd__h117980,
		_theResult___snd__h117986,
		_theResult___snd__h118009,
		_theResult___snd__h127532,
		_theResult___snd__h127543,
		_theResult___snd__h127545,
		_theResult___snd__h127555,
		_theResult___snd__h127561,
		_theResult___snd__h127584,
		_theResult___snd__h136256,
		_theResult___snd__h136270,
		_theResult___snd__h136276,
		_theResult___snd__h136294,
		_theResult___snd__h68963,
		_theResult___snd__h68974,
		_theResult___snd__h68976,
		_theResult___snd__h68986,
		_theResult___snd__h68992,
		_theResult___snd__h69015,
		_theResult___snd__h77547,
		_theResult___snd__h77549,
		_theResult___snd__h77556,
		_theResult___snd__h77562,
		_theResult___snd__h77585,
		_theResult___snd__h86702,
		_theResult___snd__h86713,
		_theResult___snd__h86715,
		_theResult___snd__h86725,
		_theResult___snd__h86731,
		_theResult___snd__h86754,
		_theResult___snd__h95310,
		_theResult___snd__h95324,
		_theResult___snd__h95330,
		_theResult___snd__h95348,
		b__h14782,
		result__h119898,
		result__h79068,
		sfd__h53245,
		sfdin__h127515,
		sfdin__h68946,
		sfdin__h86685,
		x__h119993,
		x__h15455,
		x__h16495,
		x__h79163;
  wire [54 : 0] sfd___3__h35427, sfd___3__h45009, sfd__h27426, sfd__h37257;
  wire [53 : 0] sfd__h118038,
		sfd__h127613,
		sfd__h136329,
		sfd__h35454,
		sfd__h36155,
		sfd__h45036,
		sfd__h45736,
		value__h47008;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3444,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3446,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3420,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3422,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3460,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3462,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1291,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1293,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1308,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3472,
		IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1315,
		IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1482,
		_theResult___fst_sfd__h102972,
		_theResult___fst_sfd__h118732,
		_theResult___fst_sfd__h118735,
		_theResult___fst_sfd__h128307,
		_theResult___fst_sfd__h128310,
		_theResult___fst_sfd__h137047,
		_theResult___fst_sfd__h137050,
		_theResult___fst_sfd__h137059,
		_theResult___fst_sfd__h137065,
		_theResult___fst_sfd__h36109,
		_theResult___fst_sfd__h36823,
		_theResult___fst_sfd__h36826,
		_theResult___fst_sfd__h45690,
		_theResult___fst_sfd__h46403,
		_theResult___fst_sfd__h46406,
		_theResult___fst_sfd__h49541,
		_theResult___sfd__h118673,
		_theResult___sfd__h128248,
		_theResult___sfd__h136988,
		_theResult___sfd__h36051,
		_theResult___sfd__h36765,
		_theResult___sfd__h45633,
		_theResult___sfd__h46346,
		_theResult___snd_fst_sfd__h118738,
		_theResult___snd_fst_sfd__h137053,
		_theResult___snd_fst_sfd__h36829,
		_theResult___snd_fst_sfd__h46409,
		_theResult___snd_fst_sfd__h99148,
		out___1_sfd__h97262,
		out_sfd__h118676,
		out_sfd__h128251,
		out_sfd__h136991,
		out_sfd__h36054,
		out_sfd__h36768,
		out_sfd__h45636,
		out_sfd__h46349,
		value__h49084;
  wire [32 : 0] _theResult_____2__h14720,
		_theResult_____2__h46944,
		out1___1__h15209,
		out1___1__h47433;
  wire [31 : 0] IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1000,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d984,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d998,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1001,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d840,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d985,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d836,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d838,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d899,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1585,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1587,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1648,
		IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d982,
		IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d997,
		IF_requestR_BITS_190_TO_180_511_EQ_2047_512_AN_ETC___d1589,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d769,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d901,
		IF_requestR_BIT_191_139_OR_requestR_BITS_190_T_ETC___d1650,
		IF_requestR_BIT_191_139_THEN_2147483648_ELSE_2_ETC___d1518,
		requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
		requestR_BITS_159_TO_128__q1,
		sfd___3__h13187,
		sfd___3__h7124,
		sfd__h2220,
		x__h14577,
		x__h16117,
		x__h1777,
		x__h1923,
		x__h2057,
		x__h2205,
		x__h46801,
		x__h48324,
		x__h49020;
  wire [30 : 0] IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19;
  wire [24 : 0] sfd__h13214,
		sfd__h13711,
		sfd__h69044,
		sfd__h7151,
		sfd__h7652,
		sfd__h77614,
		sfd__h86783,
		sfd__h95383,
		value__h14784;
  wire [23 : 0] NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1523,
		NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1555,
		NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1556,
		NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1621;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2632,
		IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2634,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2672,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2674,
		IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2648,
		IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2650,
		IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2688,
		IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2690,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d374,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d376,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d389,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d391,
		_theResult___fst_sfd__h13665,
		_theResult___fst_sfd__h14175,
		_theResult___fst_sfd__h14178,
		_theResult___fst_sfd__h60828,
		_theResult___fst_sfd__h69535,
		_theResult___fst_sfd__h69538,
		_theResult___fst_sfd__h7606,
		_theResult___fst_sfd__h78105,
		_theResult___fst_sfd__h78108,
		_theResult___fst_sfd__h8117,
		_theResult___fst_sfd__h8120,
		_theResult___fst_sfd__h87274,
		_theResult___fst_sfd__h87277,
		_theResult___fst_sfd__h95898,
		_theResult___fst_sfd__h95901,
		_theResult___fst_sfd__h95910,
		_theResult___fst_sfd__h95916,
		_theResult___fst_sfd__h97520,
		_theResult___sfd__h13608,
		_theResult___sfd__h14118,
		_theResult___sfd__h69476,
		_theResult___sfd__h7548,
		_theResult___sfd__h78046,
		_theResult___sfd__h8059,
		_theResult___sfd__h87215,
		_theResult___sfd__h95839,
		_theResult___snd_fst_sfd__h14181,
		_theResult___snd_fst_sfd__h53199,
		_theResult___snd_fst_sfd__h78111,
		_theResult___snd_fst_sfd__h8123,
		_theResult___snd_fst_sfd__h95904,
		out_sfd__h13611,
		out_sfd__h14121,
		out_sfd__h69479,
		out_sfd__h7551,
		out_sfd__h78049,
		out_sfd__h8062,
		out_sfd__h87218,
		out_sfd__h95842,
		sV1_sfd__h816,
		sV2_sfd__h919,
		value__h97265;
  wire [19 : 0] NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d774,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d806,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d807,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d872;
  wire [11 : 0] IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3270,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2975,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q76,
		SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_521___d2160,
		SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC__q48,
		_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1753,
		_3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d2978,
		_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1183,
		_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1376,
		_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2863,
		_3970_MINUS_SEXT_requestR_BITS_190_TO_180_511_M_ETC___d2163,
		x__h120026,
		x__h36140,
		x__h45721,
		x__h79196;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3365,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3367,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3329,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3331,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3393,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3395,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1248,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1271,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1273,
		IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1409,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q79,
		_theResult___exp__h118672,
		_theResult___exp__h128247,
		_theResult___exp__h136987,
		_theResult___exp__h36050,
		_theResult___exp__h36764,
		_theResult___exp__h45632,
		_theResult___exp__h46345,
		_theResult___fst_exp__h102971,
		_theResult___fst_exp__h118011,
		_theResult___fst_exp__h118017,
		_theResult___fst_exp__h118020,
		_theResult___fst_exp__h118731,
		_theResult___fst_exp__h118734,
		_theResult___fst_exp__h127521,
		_theResult___fst_exp__h127586,
		_theResult___fst_exp__h127592,
		_theResult___fst_exp__h127595,
		_theResult___fst_exp__h128306,
		_theResult___fst_exp__h128309,
		_theResult___fst_exp__h136262,
		_theResult___fst_exp__h136301,
		_theResult___fst_exp__h136307,
		_theResult___fst_exp__h136310,
		_theResult___fst_exp__h137046,
		_theResult___fst_exp__h137049,
		_theResult___fst_exp__h137058,
		_theResult___fst_exp__h137061,
		_theResult___fst_exp__h36108,
		_theResult___fst_exp__h36822,
		_theResult___fst_exp__h36825,
		_theResult___fst_exp__h45689,
		_theResult___fst_exp__h46402,
		_theResult___fst_exp__h46405,
		_theResult___snd_fst_exp__h118737,
		_theResult___snd_fst_exp__h137052,
		_theResult___snd_fst_exp__h36828,
		_theResult___snd_fst_exp__h36831,
		_theResult___snd_fst_exp__h36834,
		_theResult___snd_fst_exp__h46408,
		_theResult___snd_fst_exp__h46411,
		_theResult___snd_fst_exp__h46414,
		din_inc___2_exp__h137093,
		din_inc___2_exp__h137122,
		din_inc___2_exp__h137143,
		din_inc___2_exp__h36863,
		din_inc___2_exp__h46439,
		out_exp__h118675,
		out_exp__h128250,
		out_exp__h136990,
		out_exp__h36053,
		out_exp__h36767,
		out_exp__h45635,
		out_exp__h46348,
		requestR_BITS_190_TO_180_511_MINUS_1023___d1521;
  wire [8 : 0] IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2453,
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256,
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590,
	       x__h13696,
	       x__h7637;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2512,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2514,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2576,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2578,
	       IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2540,
	       IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2542,
	       IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2604,
	       IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2606,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d331,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d354,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d356,
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d365,
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d667,
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d772,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d622,
	       SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC__q51,
	       _theResult___exp__h13607,
	       _theResult___exp__h14117,
	       _theResult___exp__h69475,
	       _theResult___exp__h7547,
	       _theResult___exp__h78045,
	       _theResult___exp__h8058,
	       _theResult___exp__h87214,
	       _theResult___exp__h95838,
	       _theResult___fst_exp__h13664,
	       _theResult___fst_exp__h14174,
	       _theResult___fst_exp__h14177,
	       _theResult___fst_exp__h60827,
	       _theResult___fst_exp__h68952,
	       _theResult___fst_exp__h69017,
	       _theResult___fst_exp__h69023,
	       _theResult___fst_exp__h69026,
	       _theResult___fst_exp__h69534,
	       _theResult___fst_exp__h69537,
	       _theResult___fst_exp__h7605,
	       _theResult___fst_exp__h77587,
	       _theResult___fst_exp__h77593,
	       _theResult___fst_exp__h77596,
	       _theResult___fst_exp__h78104,
	       _theResult___fst_exp__h78107,
	       _theResult___fst_exp__h8116,
	       _theResult___fst_exp__h8119,
	       _theResult___fst_exp__h86691,
	       _theResult___fst_exp__h86756,
	       _theResult___fst_exp__h86762,
	       _theResult___fst_exp__h86765,
	       _theResult___fst_exp__h87273,
	       _theResult___fst_exp__h87276,
	       _theResult___fst_exp__h95316,
	       _theResult___fst_exp__h95355,
	       _theResult___fst_exp__h95361,
	       _theResult___fst_exp__h95364,
	       _theResult___fst_exp__h95897,
	       _theResult___fst_exp__h95900,
	       _theResult___fst_exp__h95909,
	       _theResult___fst_exp__h95912,
	       _theResult___snd_fst_exp__h14180,
	       _theResult___snd_fst_exp__h14183,
	       _theResult___snd_fst_exp__h14186,
	       _theResult___snd_fst_exp__h78110,
	       _theResult___snd_fst_exp__h8122,
	       _theResult___snd_fst_exp__h8125,
	       _theResult___snd_fst_exp__h8128,
	       _theResult___snd_fst_exp__h95903,
	       din_inc___2_exp__h14211,
	       din_inc___2_exp__h8157,
	       din_inc___2_exp__h95934,
	       din_inc___2_exp__h95955,
	       din_inc___2_exp__h95984,
	       din_inc___2_exp__h96005,
	       out_exp__h13610,
	       out_exp__h14120,
	       out_exp__h69478,
	       out_exp__h7550,
	       out_exp__h78048,
	       out_exp__h8061,
	       out_exp__h87217,
	       out_exp__h95841,
	       sV1_exp__h815,
	       sV2_exp__h918;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1987,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d3224,
	       IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2407,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2936,
	       IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1180,
	       IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d253,
	       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2123,
	       IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1373,
	       IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d587;
  wire [4 : 0] _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2716,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3502,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2745,
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3485,
	       _0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2728,
	       x__h137326,
	       x__h141798,
	       x__h14290,
	       x__h151632,
	       x__h15859,
	       x__h16572,
	       x__h18851,
	       x__h24601,
	       x__h36960,
	       x__h46514,
	       x__h48066,
	       x__h48779,
	       x__h8258,
	       x__h96220;
  wire [1 : 0] IF_sfd___3124_BIT_7_THEN_2_ELSE_0__q7,
	       IF_sfd___3124_BIT_8_THEN_2_ELSE_0__q6,
	       IF_sfd___33187_BIT_7_THEN_2_ELSE_0__q18,
	       IF_sfd___33187_BIT_8_THEN_2_ELSE_0__q17,
	       IF_sfd___35009_BIT_1_THEN_2_ELSE_0__q37,
	       IF_sfd___35009_BIT_2_THEN_2_ELSE_0__q36,
	       IF_sfd___35427_BIT_1_THEN_2_ELSE_0__q26,
	       IF_sfd___35427_BIT_2_THEN_2_ELSE_0__q25,
	       IF_sfdin27515_BIT_4_THEN_2_ELSE_0__q78,
	       IF_sfdin6685_BIT_33_THEN_2_ELSE_0__q50,
	       IF_sfdin8946_BIT_33_THEN_2_ELSE_0__q45,
	       IF_theResult___snd17971_BIT_4_THEN_2_ELSE_0__q75,
	       IF_theResult___snd36256_BIT_4_THEN_2_ELSE_0__q81,
	       IF_theResult___snd5310_BIT_33_THEN_2_ELSE_0__q53,
	       IF_theResult___snd7547_BIT_33_THEN_2_ELSE_0__q47,
	       IF_x5455_BIT_24_THEN_2_ELSE_0__q23,
	       IF_x6495_BIT_24_THEN_2_ELSE_0__q24,
	       IF_x7679_BIT_53_THEN_2_ELSE_0__q42,
	       IF_x8702_BIT_53_THEN_2_ELSE_0__q43,
	       guard__h110059,
	       guard__h119295,
	       guard__h128320,
	       guard__h13197,
	       guard__h13681,
	       guard__h14718,
	       guard__h15269,
	       guard__h16277,
	       guard__h35437,
	       guard__h36125,
	       guard__h45019,
	       guard__h45706,
	       guard__h46942,
	       guard__h47493,
	       guard__h48484,
	       guard__h60855,
	       guard__h69548,
	       guard__h7134,
	       guard__h7622,
	       guard__h78465,
	       guard__h87287;
  wire IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_ETC___d2158,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1229,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1332,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d311,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d449,
       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1499,
       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d747,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3308,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3506,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3509,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3516,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3530,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3542,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3554,
       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d862,
       IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1611,
       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d1230,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d2974,
       IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d977,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3306,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3528,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3540,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3552,
       IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2488,
       IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2774,
       IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2787,
       IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2800,
       IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d957,
       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2490,
       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2749,
       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2760,
       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2776,
       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2789,
       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2802,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1028,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1039,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1043,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d943,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d953,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d966,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d967,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d968,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d971,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d973,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d991,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1207,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1227,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1547,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1579,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1642,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2027,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2156,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2445,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2486,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d289,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2973,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d309,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3262,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3303,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d798,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d830,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d893,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d440,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d443,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d452,
       IF_requestR_BIT_191_139_THEN_NOT_requestR_BITS_ETC___d3607,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d809,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d874,
       NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1558,
       NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1623,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2768,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2796,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1038,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1044,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1062,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2909,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d851,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d918,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d980,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d981,
       NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d261,
       NOT_requestR_BITS_159_TO_128_22_EQ_0_23_24_AND_ETC___d739,
       NOT_requestR_BITS_190_TO_180_511_EQ_0_519_525__ETC___d1600,
       NOT_requestR_BITS_190_TO_180_511_EQ_2047_512_6_ETC___d1669,
       NOT_requestR_BITS_190_TO_180_511_EQ_2047_512_6_ETC___d3611,
       NOT_requestR_BITS_190_TO_180_511_EQ_2047_512_6_ETC___d3676,
       NOT_requestR_BITS_190_TO_180_511_ULT_requestR__ETC___d3653,
       NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d1042,
       NOT_requestR_BIT_158_62_63_AND_NOT_requestR_BI_ETC___d553,
       NOT_requestR_BIT_179_680_029_AND_NOT_requestR__ETC___d2068,
       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2976,
       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2977,
       SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2161,
       SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2162,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1989,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3226,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2409,
       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d2938,
       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3271,
       _0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2125,
       _0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2454,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1754,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1755,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d2731,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d2756,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d2783,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1184,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1186,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1377,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1378,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1379,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2864,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2866,
       guard__h119893,
       guard__h79063,
       requestR_BITS_126_TO_116_566_EQ_0_580_AND_requ_ETC___d3587,
       requestR_BITS_179_TO_128_513_ULE_requestR_BITS_ETC___d3599,
       requestR_BITS_179_TO_128_513_ULT_requestR_BITS_ETC___d3604,
       requestR_BITS_190_TO_180_511_EQ_0_519_AND_requ_ETC___d3583,
       requestR_BITS_190_TO_180_511_EQ_0_519_AND_requ_ETC___d3657,
       requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3575,
       requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3620,
       requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3642,
       requestR_BITS_190_TO_180_511_EQ_requestR_BITS__ETC___d3598,
       requestR_BITS_190_TO_180_511_ULE_requestR_BITS_ETC___d3596,
       requestR_BITS_190_TO_180_511_ULE_requestR_BITS_ETC___d3652,
       requestR_BITS_190_TO_180_511_ULT_requestR_BITS_ETC___d3603,
       requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d909,
       requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d979,
       requestR_BIT_158_62_OR_requestR_BIT_157_64_OR__ETC___d728,
       requestR_BIT_159_6_OR_requestR_BIT_158_62_OR_r_ETC___d750,
       requestR_BIT_191_139_OR_NOT_requestR_BITS_190__ETC___d1658;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // value method valid
  assign valid = dw_valid$whas && dw_valid$wget ;

  // value method word_fst
  assign word_fst = ab__h155049[68:5] ;

  // value method word_snd
  assign word_snd = ab__h155049[4:0] ;

  // submodule fpu
  mkFPU fpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .request_put(fpu$request_put),
	    .EN_request_put(fpu$EN_request_put),
	    .EN_response_get(fpu$EN_response_get),
	    .RDY_request_put(fpu$RDY_request_put),
	    .response_get(fpu$response_get),
	    .RDY_response_get(fpu$RDY_response_get));

  // submodule frmFpuF
  FIFO2 #(.width(32'd1), .guarded(32'd1)) frmFpuF(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(frmFpuF$D_IN),
						  .ENQ(frmFpuF$ENQ),
						  .DEQ(frmFpuF$DEQ),
						  .CLR(frmFpuF$CLR),
						  .D_OUT(),
						  .FULL_N(),
						  .EMPTY_N());

  // rule RL_doFADD_S
  assign CAN_FIRE_RL_doFADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0 ;
  assign WILL_FIRE_RL_doFADD_S = CAN_FIRE_RL_doFADD_S ;

  // rule RL_doFSUB_S
  assign CAN_FIRE_RL_doFSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h04 ;
  assign WILL_FIRE_RL_doFSUB_S = CAN_FIRE_RL_doFSUB_S ;

  // rule RL_doFMUL_S
  assign CAN_FIRE_RL_doFMUL_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h08 ;
  assign WILL_FIRE_RL_doFMUL_S = CAN_FIRE_RL_doFMUL_S ;

  // rule RL_doFMADD_S
  assign CAN_FIRE_RL_doFMADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMADD_S = CAN_FIRE_RL_doFMADD_S ;

  // rule RL_doFMSUB_S
  assign CAN_FIRE_RL_doFMSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMSUB_S = CAN_FIRE_RL_doFMSUB_S ;

  // rule RL_doFNMADD_S
  assign CAN_FIRE_RL_doFNMADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMADD_S = CAN_FIRE_RL_doFNMADD_S ;

  // rule RL_doFNMSUB_S
  assign CAN_FIRE_RL_doFNMSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMSUB_S = CAN_FIRE_RL_doFNMSUB_S ;

  // rule RL_doFSGNJ_S
  assign CAN_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;
  assign WILL_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;

  // rule RL_doFSGNJN_S
  assign CAN_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;
  assign WILL_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;

  // rule RL_doFSGNJX_S
  assign CAN_FIRE_RL_doFSGNJX_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_S = CAN_FIRE_RL_doFSGNJX_S ;

  // rule RL_doFCVT_S_W
  assign CAN_FIRE_RL_doFCVT_S_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_S_W = CAN_FIRE_RL_doFCVT_S_W ;

  // rule RL_doFCVT_S_WU
  assign CAN_FIRE_RL_doFCVT_S_WU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_WU = CAN_FIRE_RL_doFCVT_S_WU ;

  // rule RL_doFCVT_W_S
  assign CAN_FIRE_RL_doFCVT_W_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_S = CAN_FIRE_RL_doFCVT_W_S ;

  // rule RL_doFCVT_WU_S
  assign CAN_FIRE_RL_doFCVT_WU_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_S = CAN_FIRE_RL_doFCVT_WU_S ;

  // rule RL_doFMIN_S
  assign CAN_FIRE_RL_doFMIN_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_S = CAN_FIRE_RL_doFMIN_S ;

  // rule RL_doFMAX_S
  assign CAN_FIRE_RL_doFMAX_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_S = CAN_FIRE_RL_doFMAX_S ;

  // rule RL_doFMV_W_X
  assign CAN_FIRE_RL_doFMV_W_X =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h78 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_W_X = CAN_FIRE_RL_doFMV_W_X ;

  // rule RL_doFMV_X_W
  assign CAN_FIRE_RL_doFMV_X_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_W = CAN_FIRE_RL_doFMV_X_W ;

  // rule RL_doFEQ_S
  assign CAN_FIRE_RL_doFEQ_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_S = CAN_FIRE_RL_doFEQ_S ;

  // rule RL_doFLT_S
  assign CAN_FIRE_RL_doFLT_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_S = CAN_FIRE_RL_doFLT_S ;

  // rule RL_doFLE_S
  assign CAN_FIRE_RL_doFLE_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_S = CAN_FIRE_RL_doFLE_S ;

  // rule RL_doFCLASS_S
  assign CAN_FIRE_RL_doFCLASS_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_S = CAN_FIRE_RL_doFCLASS_S ;

  // rule RL_doFADD_D
  assign CAN_FIRE_RL_doFADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h01 ;
  assign WILL_FIRE_RL_doFADD_D = CAN_FIRE_RL_doFADD_D ;

  // rule RL_doFSUB_D
  assign CAN_FIRE_RL_doFSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h05 ;
  assign WILL_FIRE_RL_doFSUB_D = CAN_FIRE_RL_doFSUB_D ;

  // rule RL_doFMUL_D
  assign CAN_FIRE_RL_doFMUL_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h09 ;
  assign WILL_FIRE_RL_doFMUL_D = CAN_FIRE_RL_doFMUL_D ;

  // rule RL_doFMADD_D
  assign CAN_FIRE_RL_doFMADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMADD_D = CAN_FIRE_RL_doFMADD_D ;

  // rule RL_doFMSUB_D
  assign CAN_FIRE_RL_doFMSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMSUB_D = CAN_FIRE_RL_doFMSUB_D ;

  // rule RL_doFNMADD_D
  assign CAN_FIRE_RL_doFNMADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMADD_D = CAN_FIRE_RL_doFNMADD_D ;

  // rule RL_doFNMSUB_D
  assign CAN_FIRE_RL_doFNMSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMSUB_D = CAN_FIRE_RL_doFNMSUB_D ;

  // rule RL_doFSGNJ_D
  assign CAN_FIRE_RL_doFSGNJ_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_D = CAN_FIRE_RL_doFSGNJ_D ;

  // rule RL_doFSGNJN_D
  assign CAN_FIRE_RL_doFSGNJN_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_D = CAN_FIRE_RL_doFSGNJN_D ;

  // rule RL_doFSGNJX_D
  assign CAN_FIRE_RL_doFSGNJX_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_D = CAN_FIRE_RL_doFSGNJX_D ;

  // rule RL_doFCVT_D_W
  assign CAN_FIRE_RL_doFCVT_D_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_W = CAN_FIRE_RL_doFCVT_D_W ;

  // rule RL_doFCVT_D_WU
  assign CAN_FIRE_RL_doFCVT_D_WU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_D_WU = CAN_FIRE_RL_doFCVT_D_WU ;

  // rule RL_doFCVT_W_D
  assign CAN_FIRE_RL_doFCVT_W_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_D = CAN_FIRE_RL_doFCVT_W_D ;

  // rule RL_doFCVT_WU_D
  assign CAN_FIRE_RL_doFCVT_WU_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_D = CAN_FIRE_RL_doFCVT_WU_D ;

  // rule RL_doFCVT_S_D
  assign CAN_FIRE_RL_doFCVT_S_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h20 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_D = CAN_FIRE_RL_doFCVT_S_D ;

  // rule RL_doFCVT_D_S
  assign CAN_FIRE_RL_doFCVT_D_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h21 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_S = CAN_FIRE_RL_doFCVT_D_S ;

  // rule RL_doFMIN_D
  assign CAN_FIRE_RL_doFMIN_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_D = CAN_FIRE_RL_doFMIN_D ;

  // rule RL_doFMAX_D
  assign CAN_FIRE_RL_doFMAX_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_D = CAN_FIRE_RL_doFMAX_D ;

  // rule RL_doFEQ_D
  assign CAN_FIRE_RL_doFEQ_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_D = CAN_FIRE_RL_doFEQ_D ;

  // rule RL_doFLT_D
  assign CAN_FIRE_RL_doFLT_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_D = CAN_FIRE_RL_doFLT_D ;

  // rule RL_doFLE_D
  assign CAN_FIRE_RL_doFLE_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_D = CAN_FIRE_RL_doFLE_D ;

  // rule RL_doFMV_D_X
  assign CAN_FIRE_RL_doFMV_D_X =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h79 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_D_X = CAN_FIRE_RL_doFMV_D_X ;

  // rule RL_doFMV_X_D
  assign CAN_FIRE_RL_doFMV_X_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_D = CAN_FIRE_RL_doFMV_X_D ;

  // rule RL_doFCLASS_D
  assign CAN_FIRE_RL_doFCLASS_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_D = CAN_FIRE_RL_doFCLASS_D ;

  // rule RL_rl_get_fpu_result
  assign CAN_FIRE_RL_rl_get_fpu_result =
	     fpu$RDY_response_get && stateR == 2'd1 ;
  assign WILL_FIRE_RL_rl_get_fpu_result = CAN_FIRE_RL_rl_get_fpu_result ;

  // rule RL_rl_drive_fpu_result
  assign CAN_FIRE_RL_rl_drive_fpu_result = stateR == 2'd2 ;
  assign WILL_FIRE_RL_rl_drive_fpu_result = stateR == 2'd2 ;

  // inputs to muxes for submodule ports
  assign MUX_dw_result$wset_1__SEL_1 =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h1 ;
  assign MUX_dw_result$wset_1__SEL_2 =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h0 ;
  assign MUX_dw_result$wset_1__SEL_30 =
	     WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ;
  assign MUX_dw_result$wset_1__VAL_1 = { x__h1917, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_2 = { x__h1771, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_3 = { x__h2051, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_4 = { x__h2199, x__h8258 } ;
  assign MUX_dw_result$wset_1__VAL_5 = { x__h8546, x__h14290 } ;
  assign MUX_dw_result$wset_1__VAL_6 = { x__h14574, x__h15859 } ;
  assign MUX_dw_result$wset_1__VAL_7 = { x__h16114, x__h16572 } ;
  assign MUX_dw_result$wset_1__VAL_8 = { x__h16812, x__h18851 } ;
  assign MUX_dw_result$wset_1__VAL_9 = { x__h19446, x__h18851 } ;
  assign MUX_dw_result$wset_1__VAL_10 = { x__h21971, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_11 = { x__h22092, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_12 = { x__h22230, x__h18851 } ;
  assign MUX_dw_result$wset_1__VAL_13 = { x__h23713, x__h24601 } ;
  assign MUX_dw_result$wset_1__VAL_14 = { x__h24782, x__h24601 } ;
  assign MUX_dw_result$wset_1__VAL_15 = { x__h25868, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_16 = { x__h27035, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_17 = { x__h27157, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_18 = { x__h27281, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_19 = { x__h27411, x__h36960 } ;
  assign MUX_dw_result$wset_1__VAL_20 = { x__h37245, x__h46514 } ;
  assign MUX_dw_result$wset_1__VAL_21 = { x__h46798, x__h48066 } ;
  assign MUX_dw_result$wset_1__VAL_22 = { x__h48321, x__h48779 } ;
  assign MUX_dw_result$wset_1__VAL_23 = { x__h49014, x__h96220 } ;
  assign MUX_dw_result$wset_1__VAL_24 = { x__h97202, x__h137326 } ;
  assign MUX_dw_result$wset_1__VAL_25 = { x__h138249, x__h141798 } ;
  assign MUX_dw_result$wset_1__VAL_26 = { x__h142797, x__h141798 } ;
  assign MUX_dw_result$wset_1__VAL_27 = { x__h147241, x__h141798 } ;
  assign MUX_dw_result$wset_1__VAL_28 = { x__h149936, x__h151632 } ;
  assign MUX_dw_result$wset_1__VAL_29 = { x__h151813, x__h151632 } ;
  assign MUX_dw_result$wset_1__VAL_30 = { requestR[191:128], 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_31 = { x__h153940, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_32 =
	     { x__h154590, fpu$response_get[4:0] } ;
  assign MUX_fpu$request_put_1__VAL_1 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd0 } ;
  assign MUX_fpu$request_put_1__VAL_2 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd1 } ;
  assign MUX_fpu$request_put_1__VAL_3 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd2 } ;
  assign MUX_fpu$request_put_1__VAL_4 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd5 } ;
  assign MUX_fpu$request_put_1__VAL_5 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd6 } ;
  assign MUX_fpu$request_put_1__VAL_6 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd7 } ;
  assign MUX_fpu$request_put_1__VAL_7 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd8 } ;
  assign MUX_fpu$request_put_1__VAL_8 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd0 } ;
  assign MUX_fpu$request_put_1__VAL_9 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd1 } ;
  assign MUX_fpu$request_put_1__VAL_10 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd2 } ;
  assign MUX_fpu$request_put_1__VAL_11 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd5 } ;
  assign MUX_fpu$request_put_1__VAL_12 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd6 } ;
  assign MUX_fpu$request_put_1__VAL_13 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd7 } ;
  assign MUX_fpu$request_put_1__VAL_14 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd8 } ;
  assign MUX_resultR$write_1__VAL_2 =
	     { 1'd1, x__h154590, fpu$response_get[4:0] } ;
  assign MUX_resultR$write_1__VAL_3 = { 1'd1, x__h153940, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_4 = { 1'd1, requestR[191:128], 5'd0 } ;
  assign MUX_resultR$write_1__VAL_6 = { 1'd1, x__h151813, x__h151632 } ;
  assign MUX_resultR$write_1__VAL_7 = { 1'd1, x__h149936, x__h151632 } ;
  assign MUX_resultR$write_1__VAL_8 = { 1'd1, x__h147241, x__h141798 } ;
  assign MUX_resultR$write_1__VAL_9 = { 1'd1, x__h142797, x__h141798 } ;
  assign MUX_resultR$write_1__VAL_10 = { 1'd1, x__h138249, x__h141798 } ;
  assign MUX_resultR$write_1__VAL_11 = { 1'd1, x__h97202, x__h137326 } ;
  assign MUX_resultR$write_1__VAL_12 = { 1'd1, x__h49014, x__h96220 } ;
  assign MUX_resultR$write_1__VAL_13 = { 1'd1, x__h48321, x__h48779 } ;
  assign MUX_resultR$write_1__VAL_14 = { 1'd1, x__h46798, x__h48066 } ;
  assign MUX_resultR$write_1__VAL_15 = { 1'd1, x__h37245, x__h46514 } ;
  assign MUX_resultR$write_1__VAL_16 = { 1'd1, x__h27411, x__h36960 } ;
  assign MUX_resultR$write_1__VAL_17 = { 1'd1, x__h27281, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_18 = { 1'd1, x__h27157, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_19 = { 1'd1, x__h27035, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_20 = { 1'd1, x__h25868, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_21 = { 1'd1, x__h24782, x__h24601 } ;
  assign MUX_resultR$write_1__VAL_22 = { 1'd1, x__h23713, x__h24601 } ;
  assign MUX_resultR$write_1__VAL_23 = { 1'd1, x__h22230, x__h18851 } ;
  assign MUX_resultR$write_1__VAL_24 = { 1'd1, x__h22092, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_25 = { 1'd1, x__h21971, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_26 = { 1'd1, x__h19446, x__h18851 } ;
  assign MUX_resultR$write_1__VAL_27 = { 1'd1, x__h16812, x__h18851 } ;
  assign MUX_resultR$write_1__VAL_28 = { 1'd1, x__h16114, x__h16572 } ;
  assign MUX_resultR$write_1__VAL_29 = { 1'd1, x__h14574, x__h15859 } ;
  assign MUX_resultR$write_1__VAL_30 = { 1'd1, x__h8546, x__h14290 } ;
  assign MUX_resultR$write_1__VAL_31 = { 1'd1, x__h2199, x__h8258 } ;
  assign MUX_resultR$write_1__VAL_32 = { 1'd1, x__h2051, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_33 = { 1'd1, x__h1917, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_34 = { 1'd1, x__h1771, 5'd0 } ;

  // inlined wires
  assign dw_valid$wget = !WILL_FIRE_RL_rl_drive_fpu_result || resultR[69] ;
  assign dw_valid$whas =
	     WILL_FIRE_RL_rl_drive_fpu_result ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;
  always@(WILL_FIRE_RL_doFSGNJN_S or
	  MUX_dw_result$wset_1__VAL_1 or
	  WILL_FIRE_RL_doFSGNJ_S or
	  MUX_dw_result$wset_1__VAL_2 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_dw_result$wset_1__VAL_3 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_dw_result$wset_1__VAL_4 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_dw_result$wset_1__VAL_5 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_dw_result$wset_1__VAL_6 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_dw_result$wset_1__VAL_7 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_dw_result$wset_1__VAL_8 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_dw_result$wset_1__VAL_9 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_dw_result$wset_1__VAL_10 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_dw_result$wset_1__VAL_11 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_dw_result$wset_1__VAL_12 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_dw_result$wset_1__VAL_13 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_dw_result$wset_1__VAL_14 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_dw_result$wset_1__VAL_15 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_dw_result$wset_1__VAL_16 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_dw_result$wset_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_dw_result$wset_1__VAL_18 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_dw_result$wset_1__VAL_19 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_dw_result$wset_1__VAL_20 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_dw_result$wset_1__VAL_21 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_dw_result$wset_1__VAL_22 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_dw_result$wset_1__VAL_23 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_dw_result$wset_1__VAL_24 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_dw_result$wset_1__VAL_25 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_dw_result$wset_1__VAL_26 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_dw_result$wset_1__VAL_27 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_dw_result$wset_1__VAL_28 or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_dw_result$wset_1__VAL_29 or
	  MUX_dw_result$wset_1__SEL_30 or
	  MUX_dw_result$wset_1__VAL_30 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_dw_result$wset_1__VAL_31 or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_dw_result$wset_1__VAL_32 or
	  WILL_FIRE_RL_rl_drive_fpu_result or resultR)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFSGNJN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_1;
      WILL_FIRE_RL_doFSGNJ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_2;
      WILL_FIRE_RL_doFSGNJX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_3;
      WILL_FIRE_RL_doFCVT_S_W: dw_result$wget = MUX_dw_result$wset_1__VAL_4;
      WILL_FIRE_RL_doFCVT_S_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_5;
      WILL_FIRE_RL_doFCVT_W_S: dw_result$wget = MUX_dw_result$wset_1__VAL_6;
      WILL_FIRE_RL_doFCVT_WU_S: dw_result$wget = MUX_dw_result$wset_1__VAL_7;
      WILL_FIRE_RL_doFMIN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_8;
      WILL_FIRE_RL_doFMAX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_9;
      WILL_FIRE_RL_doFMV_W_X: dw_result$wget = MUX_dw_result$wset_1__VAL_10;
      WILL_FIRE_RL_doFMV_X_W: dw_result$wget = MUX_dw_result$wset_1__VAL_11;
      WILL_FIRE_RL_doFEQ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_12;
      WILL_FIRE_RL_doFLT_S: dw_result$wget = MUX_dw_result$wset_1__VAL_13;
      WILL_FIRE_RL_doFLE_S: dw_result$wget = MUX_dw_result$wset_1__VAL_14;
      WILL_FIRE_RL_doFCLASS_S: dw_result$wget = MUX_dw_result$wset_1__VAL_15;
      WILL_FIRE_RL_doFSGNJ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_16;
      WILL_FIRE_RL_doFSGNJN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_17;
      WILL_FIRE_RL_doFSGNJX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_18;
      WILL_FIRE_RL_doFCVT_D_W: dw_result$wget = MUX_dw_result$wset_1__VAL_19;
      WILL_FIRE_RL_doFCVT_D_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_20;
      WILL_FIRE_RL_doFCVT_W_D: dw_result$wget = MUX_dw_result$wset_1__VAL_21;
      WILL_FIRE_RL_doFCVT_WU_D: dw_result$wget = MUX_dw_result$wset_1__VAL_22;
      WILL_FIRE_RL_doFCVT_S_D: dw_result$wget = MUX_dw_result$wset_1__VAL_23;
      WILL_FIRE_RL_doFCVT_D_S: dw_result$wget = MUX_dw_result$wset_1__VAL_24;
      WILL_FIRE_RL_doFMIN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_25;
      WILL_FIRE_RL_doFMAX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_26;
      WILL_FIRE_RL_doFEQ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_27;
      WILL_FIRE_RL_doFLT_D: dw_result$wget = MUX_dw_result$wset_1__VAL_28;
      WILL_FIRE_RL_doFLE_D: dw_result$wget = MUX_dw_result$wset_1__VAL_29;
      MUX_dw_result$wset_1__SEL_30:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_30;
      WILL_FIRE_RL_doFCLASS_D: dw_result$wget = MUX_dw_result$wset_1__VAL_31;
      WILL_FIRE_RL_rl_get_fpu_result:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_32;
      WILL_FIRE_RL_rl_drive_fpu_result: dw_result$wget = resultR[68:0];
      default: dw_result$wget =
		   69'h0AAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end

  // register cfg_verbosity
  assign cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cfg_verbosity$EN = EN_set_verbosity ;

  // register requestR
  assign requestR$D_IN =
	     { 1'd1,
	       req_opcode,
	       req_f7,
	       req_rs2,
	       req_rm,
	       req_v1,
	       req_v2,
	       req_v3 } ;
  assign requestR$EN = EN_req ;

  // register resultR
  always@(EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_resultR$write_1__VAL_2 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_resultR$write_1__VAL_3 or
	  WILL_FIRE_RL_doFMV_X_D or
	  MUX_resultR$write_1__VAL_4 or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_resultR$write_1__VAL_6 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_resultR$write_1__VAL_7 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_resultR$write_1__VAL_8 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_resultR$write_1__VAL_9 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_resultR$write_1__VAL_10 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_resultR$write_1__VAL_11 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_resultR$write_1__VAL_12 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_resultR$write_1__VAL_13 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_resultR$write_1__VAL_14 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_resultR$write_1__VAL_15 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_resultR$write_1__VAL_16 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_resultR$write_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_resultR$write_1__VAL_18 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_resultR$write_1__VAL_19 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_resultR$write_1__VAL_20 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_resultR$write_1__VAL_21 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_resultR$write_1__VAL_22 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_resultR$write_1__VAL_23 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_resultR$write_1__VAL_24 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_resultR$write_1__VAL_25 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_resultR$write_1__VAL_26 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_resultR$write_1__VAL_27 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_resultR$write_1__VAL_28 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_resultR$write_1__VAL_29 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_resultR$write_1__VAL_30 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_resultR$write_1__VAL_31 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_resultR$write_1__VAL_32 or
	  WILL_FIRE_RL_doFSGNJN_S or
	  MUX_resultR$write_1__VAL_33 or
	  WILL_FIRE_RL_doFSGNJ_S or MUX_resultR$write_1__VAL_34)
  case (1'b1)
    EN_req: resultR$D_IN = 70'h0AAAAAAAAAAAAAAAAA;
    WILL_FIRE_RL_rl_get_fpu_result: resultR$D_IN = MUX_resultR$write_1__VAL_2;
    WILL_FIRE_RL_doFCLASS_D: resultR$D_IN = MUX_resultR$write_1__VAL_3;
    WILL_FIRE_RL_doFMV_X_D: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFMV_D_X: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFLE_D: resultR$D_IN = MUX_resultR$write_1__VAL_6;
    WILL_FIRE_RL_doFLT_D: resultR$D_IN = MUX_resultR$write_1__VAL_7;
    WILL_FIRE_RL_doFEQ_D: resultR$D_IN = MUX_resultR$write_1__VAL_8;
    WILL_FIRE_RL_doFMAX_D: resultR$D_IN = MUX_resultR$write_1__VAL_9;
    WILL_FIRE_RL_doFMIN_D: resultR$D_IN = MUX_resultR$write_1__VAL_10;
    WILL_FIRE_RL_doFCVT_D_S: resultR$D_IN = MUX_resultR$write_1__VAL_11;
    WILL_FIRE_RL_doFCVT_S_D: resultR$D_IN = MUX_resultR$write_1__VAL_12;
    WILL_FIRE_RL_doFCVT_WU_D: resultR$D_IN = MUX_resultR$write_1__VAL_13;
    WILL_FIRE_RL_doFCVT_W_D: resultR$D_IN = MUX_resultR$write_1__VAL_14;
    WILL_FIRE_RL_doFCVT_D_WU: resultR$D_IN = MUX_resultR$write_1__VAL_15;
    WILL_FIRE_RL_doFCVT_D_W: resultR$D_IN = MUX_resultR$write_1__VAL_16;
    WILL_FIRE_RL_doFSGNJX_D: resultR$D_IN = MUX_resultR$write_1__VAL_17;
    WILL_FIRE_RL_doFSGNJN_D: resultR$D_IN = MUX_resultR$write_1__VAL_18;
    WILL_FIRE_RL_doFSGNJ_D: resultR$D_IN = MUX_resultR$write_1__VAL_19;
    WILL_FIRE_RL_doFCLASS_S: resultR$D_IN = MUX_resultR$write_1__VAL_20;
    WILL_FIRE_RL_doFLE_S: resultR$D_IN = MUX_resultR$write_1__VAL_21;
    WILL_FIRE_RL_doFLT_S: resultR$D_IN = MUX_resultR$write_1__VAL_22;
    WILL_FIRE_RL_doFEQ_S: resultR$D_IN = MUX_resultR$write_1__VAL_23;
    WILL_FIRE_RL_doFMV_X_W: resultR$D_IN = MUX_resultR$write_1__VAL_24;
    WILL_FIRE_RL_doFMV_W_X: resultR$D_IN = MUX_resultR$write_1__VAL_25;
    WILL_FIRE_RL_doFMAX_S: resultR$D_IN = MUX_resultR$write_1__VAL_26;
    WILL_FIRE_RL_doFMIN_S: resultR$D_IN = MUX_resultR$write_1__VAL_27;
    WILL_FIRE_RL_doFCVT_WU_S: resultR$D_IN = MUX_resultR$write_1__VAL_28;
    WILL_FIRE_RL_doFCVT_W_S: resultR$D_IN = MUX_resultR$write_1__VAL_29;
    WILL_FIRE_RL_doFCVT_S_WU: resultR$D_IN = MUX_resultR$write_1__VAL_30;
    WILL_FIRE_RL_doFCVT_S_W: resultR$D_IN = MUX_resultR$write_1__VAL_31;
    WILL_FIRE_RL_doFSGNJX_S: resultR$D_IN = MUX_resultR$write_1__VAL_32;
    WILL_FIRE_RL_doFSGNJN_S: resultR$D_IN = MUX_resultR$write_1__VAL_33;
    WILL_FIRE_RL_doFSGNJ_S: resultR$D_IN = MUX_resultR$write_1__VAL_34;
    default: resultR$D_IN = 70'h2AAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign resultR$EN =
	     EN_req || WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFSGNJ_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_rl_get_fpu_result ;

  // register stateR
  always@(EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  WILL_FIRE_RL_doFCLASS_D or
	  WILL_FIRE_RL_doFMV_X_D or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  WILL_FIRE_RL_doFLT_D or
	  WILL_FIRE_RL_doFEQ_D or
	  WILL_FIRE_RL_doFMAX_D or
	  WILL_FIRE_RL_doFMIN_D or
	  WILL_FIRE_RL_doFCVT_D_S or
	  WILL_FIRE_RL_doFCVT_S_D or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  WILL_FIRE_RL_doFCVT_W_D or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  WILL_FIRE_RL_doFCVT_D_W or
	  WILL_FIRE_RL_doFSGNJX_D or
	  WILL_FIRE_RL_doFSGNJN_D or
	  WILL_FIRE_RL_doFSGNJ_D or
	  WILL_FIRE_RL_doFNMSUB_D or
	  WILL_FIRE_RL_doFNMADD_D or
	  WILL_FIRE_RL_doFMSUB_D or
	  WILL_FIRE_RL_doFMADD_D or
	  WILL_FIRE_RL_doFMUL_D or
	  WILL_FIRE_RL_doFSUB_D or
	  WILL_FIRE_RL_doFADD_D or
	  WILL_FIRE_RL_doFCLASS_S or
	  WILL_FIRE_RL_doFLE_S or
	  WILL_FIRE_RL_doFLT_S or
	  WILL_FIRE_RL_doFEQ_S or
	  WILL_FIRE_RL_doFMV_X_W or
	  WILL_FIRE_RL_doFMV_W_X or
	  WILL_FIRE_RL_doFMAX_S or
	  WILL_FIRE_RL_doFMIN_S or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  WILL_FIRE_RL_doFCVT_W_S or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  WILL_FIRE_RL_doFCVT_S_W or
	  WILL_FIRE_RL_doFSGNJX_S or
	  WILL_FIRE_RL_doFSGNJN_S or
	  WILL_FIRE_RL_doFSGNJ_S or
	  WILL_FIRE_RL_doFNMSUB_S or
	  WILL_FIRE_RL_doFNMADD_S or
	  WILL_FIRE_RL_doFMSUB_S or
	  WILL_FIRE_RL_doFMADD_S or
	  WILL_FIRE_RL_doFMUL_S or
	  WILL_FIRE_RL_doFSUB_S or WILL_FIRE_RL_doFADD_S)
  case (1'b1)
    EN_req: stateR$D_IN = 2'd0;
    WILL_FIRE_RL_rl_get_fpu_result || WILL_FIRE_RL_doFCLASS_D ||
    WILL_FIRE_RL_doFMV_X_D ||
    WILL_FIRE_RL_doFMV_D_X ||
    WILL_FIRE_RL_doFLE_D ||
    WILL_FIRE_RL_doFLT_D ||
    WILL_FIRE_RL_doFEQ_D ||
    WILL_FIRE_RL_doFMAX_D ||
    WILL_FIRE_RL_doFMIN_D ||
    WILL_FIRE_RL_doFCVT_D_S ||
    WILL_FIRE_RL_doFCVT_S_D ||
    WILL_FIRE_RL_doFCVT_WU_D ||
    WILL_FIRE_RL_doFCVT_W_D ||
    WILL_FIRE_RL_doFCVT_D_WU ||
    WILL_FIRE_RL_doFCVT_D_W ||
    WILL_FIRE_RL_doFSGNJX_D ||
    WILL_FIRE_RL_doFSGNJN_D ||
    WILL_FIRE_RL_doFSGNJ_D:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFNMSUB_D || WILL_FIRE_RL_doFNMADD_D ||
    WILL_FIRE_RL_doFMSUB_D ||
    WILL_FIRE_RL_doFMADD_D ||
    WILL_FIRE_RL_doFMUL_D ||
    WILL_FIRE_RL_doFSUB_D ||
    WILL_FIRE_RL_doFADD_D:
	stateR$D_IN = 2'd1;
    WILL_FIRE_RL_doFCLASS_S || WILL_FIRE_RL_doFLE_S || WILL_FIRE_RL_doFLT_S ||
    WILL_FIRE_RL_doFEQ_S ||
    WILL_FIRE_RL_doFMV_X_W ||
    WILL_FIRE_RL_doFMV_W_X ||
    WILL_FIRE_RL_doFMAX_S ||
    WILL_FIRE_RL_doFMIN_S ||
    WILL_FIRE_RL_doFCVT_WU_S ||
    WILL_FIRE_RL_doFCVT_W_S ||
    WILL_FIRE_RL_doFCVT_S_WU ||
    WILL_FIRE_RL_doFCVT_S_W ||
    WILL_FIRE_RL_doFSGNJX_S ||
    WILL_FIRE_RL_doFSGNJN_S ||
    WILL_FIRE_RL_doFSGNJ_S:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFNMSUB_S || WILL_FIRE_RL_doFNMADD_S ||
    WILL_FIRE_RL_doFMSUB_S ||
    WILL_FIRE_RL_doFMADD_S ||
    WILL_FIRE_RL_doFMUL_S ||
    WILL_FIRE_RL_doFSUB_S ||
    WILL_FIRE_RL_doFADD_S:
	stateR$D_IN = 2'd1;
    default: stateR$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign stateR$EN =
	     EN_req || WILL_FIRE_RL_doFNMSUB_D || WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFADD_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;

  // submodule fpu
  always@(WILL_FIRE_RL_doFADD_S or
	  MUX_fpu$request_put_1__VAL_1 or
	  WILL_FIRE_RL_doFSUB_S or
	  MUX_fpu$request_put_1__VAL_2 or
	  WILL_FIRE_RL_doFMUL_S or
	  MUX_fpu$request_put_1__VAL_3 or
	  WILL_FIRE_RL_doFMADD_S or
	  MUX_fpu$request_put_1__VAL_4 or
	  WILL_FIRE_RL_doFMSUB_S or
	  MUX_fpu$request_put_1__VAL_5 or
	  WILL_FIRE_RL_doFNMADD_S or
	  MUX_fpu$request_put_1__VAL_6 or
	  WILL_FIRE_RL_doFNMSUB_S or
	  MUX_fpu$request_put_1__VAL_7 or
	  WILL_FIRE_RL_doFADD_D or
	  MUX_fpu$request_put_1__VAL_8 or
	  WILL_FIRE_RL_doFSUB_D or
	  MUX_fpu$request_put_1__VAL_9 or
	  WILL_FIRE_RL_doFMUL_D or
	  MUX_fpu$request_put_1__VAL_10 or
	  WILL_FIRE_RL_doFMADD_D or
	  MUX_fpu$request_put_1__VAL_11 or
	  WILL_FIRE_RL_doFMSUB_D or
	  MUX_fpu$request_put_1__VAL_12 or
	  WILL_FIRE_RL_doFNMADD_D or
	  MUX_fpu$request_put_1__VAL_13 or
	  WILL_FIRE_RL_doFNMSUB_D or MUX_fpu$request_put_1__VAL_14)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_1;
      WILL_FIRE_RL_doFSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_2;
      WILL_FIRE_RL_doFMUL_S: fpu$request_put = MUX_fpu$request_put_1__VAL_3;
      WILL_FIRE_RL_doFMADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_4;
      WILL_FIRE_RL_doFMSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_5;
      WILL_FIRE_RL_doFNMADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_6;
      WILL_FIRE_RL_doFNMSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_7;
      WILL_FIRE_RL_doFADD_D: fpu$request_put = MUX_fpu$request_put_1__VAL_8;
      WILL_FIRE_RL_doFSUB_D: fpu$request_put = MUX_fpu$request_put_1__VAL_9;
      WILL_FIRE_RL_doFMUL_D: fpu$request_put = MUX_fpu$request_put_1__VAL_10;
      WILL_FIRE_RL_doFMADD_D: fpu$request_put = MUX_fpu$request_put_1__VAL_11;
      WILL_FIRE_RL_doFMSUB_D: fpu$request_put = MUX_fpu$request_put_1__VAL_12;
      WILL_FIRE_RL_doFNMADD_D:
	  fpu$request_put = MUX_fpu$request_put_1__VAL_13;
      WILL_FIRE_RL_doFNMSUB_D:
	  fpu$request_put = MUX_fpu$request_put_1__VAL_14;
      default: fpu$request_put =
		   202'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fpu$EN_request_put =
	     WILL_FIRE_RL_doFADD_S || WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFNMSUB_D ;
  assign fpu$EN_response_get = CAN_FIRE_RL_rl_get_fpu_result ;

  // submodule frmFpuF
  assign frmFpuF$D_IN = 1'b0 ;
  assign frmFpuF$ENQ = 1'b0 ;
  assign frmFpuF$DEQ = 1'b0 ;
  assign frmFpuF$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q44 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1989 ?
	       _theResult___snd__h69015 :
	       _theResult____h60845 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q77 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3226 ?
	       _theResult___snd__h127584 :
	       _theResult____h119285 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q49 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2409 ?
	       _theResult___snd__h86754 :
	       _theResult____h78455 ;
  assign IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q74 =
	     _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d2938 ?
	       _theResult___snd__h118009 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q80 =
	     _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3271 ?
	       _theResult___snd__h118009 :
	       _theResult___snd__h136294 ;
  assign IF_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_ETC__q46 =
	     _0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2125 ?
	       _theResult___snd__h77585 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_ETC__q52 =
	     _0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2454 ?
	       _theResult___snd__h77585 :
	       _theResult___snd__h95348 ;
  assign IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_ETC___d2158 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1755 ?
	       ((_theResult___fst_exp__h68952 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2027) :
	       ((_theResult___fst_exp__h77596 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2156) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1229 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1207 :
	       ((x__h36140[10:0] == 11'd2047) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1227) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1332 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188 ?
	       guard__h35437 != 2'b0 :
	       x__h36140[10:0] != 11'd2047 && guard__h36125 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d311 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d289 :
	       ((x__h7637[7:0] == 8'd255) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d309) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d449 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 ?
	       guard__h7134 != 2'b0 :
	       x__h7637[7:0] != 8'd255 && guard__h7622 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1499 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1379 ?
	       guard__h45019 != 2'b0 :
	       x__h45721[10:0] != 11'd2047 && guard__h45706 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d747 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593 ?
	       guard__h13197 != 2'b0 :
	       x__h13696[7:0] != 8'd255 && guard__h13681 != 2'b0 ;
  assign IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1987 =
	     (_theResult____h60845[56] ?
		6'd0 :
		(_theResult____h60845[55] ?
		   6'd1 :
		   (_theResult____h60845[54] ?
		      6'd2 :
		      (_theResult____h60845[53] ?
			 6'd3 :
			 (_theResult____h60845[52] ?
			    6'd4 :
			    (_theResult____h60845[51] ?
			       6'd5 :
			       (_theResult____h60845[50] ?
				  6'd6 :
				  (_theResult____h60845[49] ?
				     6'd7 :
				     (_theResult____h60845[48] ?
					6'd8 :
					(_theResult____h60845[47] ?
					   6'd9 :
					   (_theResult____h60845[46] ?
					      6'd10 :
					      (_theResult____h60845[45] ?
						 6'd11 :
						 (_theResult____h60845[44] ?
						    6'd12 :
						    (_theResult____h60845[43] ?
						       6'd13 :
						       (_theResult____h60845[42] ?
							  6'd14 :
							  (_theResult____h60845[41] ?
							     6'd15 :
							     (_theResult____h60845[40] ?
								6'd16 :
								(_theResult____h60845[39] ?
								   6'd17 :
								   (_theResult____h60845[38] ?
								      6'd18 :
								      (_theResult____h60845[37] ?
									 6'd19 :
									 (_theResult____h60845[36] ?
									    6'd20 :
									    (_theResult____h60845[35] ?
									       6'd21 :
									       (_theResult____h60845[34] ?
										  6'd22 :
										  (_theResult____h60845[33] ?
										     6'd23 :
										     (_theResult____h60845[32] ?
											6'd24 :
											(_theResult____h60845[31] ?
											   6'd25 :
											   (_theResult____h60845[30] ?
											      6'd26 :
											      (_theResult____h60845[29] ?
												 6'd27 :
												 (_theResult____h60845[28] ?
												    6'd28 :
												    (_theResult____h60845[27] ?
												       6'd29 :
												       (_theResult____h60845[26] ?
													  6'd30 :
													  (_theResult____h60845[25] ?
													     6'd31 :
													     (_theResult____h60845[24] ?
														6'd32 :
														(_theResult____h60845[23] ?
														   6'd33 :
														   (_theResult____h60845[22] ?
														      6'd34 :
														      (_theResult____h60845[21] ?
															 6'd35 :
															 (_theResult____h60845[20] ?
															    6'd36 :
															    (_theResult____h60845[19] ?
															       6'd37 :
															       (_theResult____h60845[18] ?
																  6'd38 :
																  (_theResult____h60845[17] ?
																     6'd39 :
																     (_theResult____h60845[16] ?
																	6'd40 :
																	(_theResult____h60845[15] ?
																	   6'd41 :
																	   (_theResult____h60845[14] ?
																	      6'd42 :
																	      (_theResult____h60845[13] ?
																		 6'd43 :
																		 (_theResult____h60845[12] ?
																		    6'd44 :
																		    (_theResult____h60845[11] ?
																		       6'd45 :
																		       (_theResult____h60845[10] ?
																			  6'd46 :
																			  (_theResult____h60845[9] ?
																			     6'd47 :
																			     (_theResult____h60845[8] ?
																				6'd48 :
																				(_theResult____h60845[7] ?
																				   6'd49 :
																				   (_theResult____h60845[6] ?
																				      6'd50 :
																				      (_theResult____h60845[5] ?
																					 6'd51 :
																					 (_theResult____h60845[4] ?
																					    6'd52 :
																					    (_theResult____h60845[3] ?
																					       6'd53 :
																					       (_theResult____h60845[2] ?
																						  6'd54 :
																						  (_theResult____h60845[1] ?
																						     6'd55 :
																						     (_theResult____h60845[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d3224 =
	     (_theResult____h119285[56] ?
		6'd0 :
		(_theResult____h119285[55] ?
		   6'd1 :
		   (_theResult____h119285[54] ?
		      6'd2 :
		      (_theResult____h119285[53] ?
			 6'd3 :
			 (_theResult____h119285[52] ?
			    6'd4 :
			    (_theResult____h119285[51] ?
			       6'd5 :
			       (_theResult____h119285[50] ?
				  6'd6 :
				  (_theResult____h119285[49] ?
				     6'd7 :
				     (_theResult____h119285[48] ?
					6'd8 :
					(_theResult____h119285[47] ?
					   6'd9 :
					   (_theResult____h119285[46] ?
					      6'd10 :
					      (_theResult____h119285[45] ?
						 6'd11 :
						 (_theResult____h119285[44] ?
						    6'd12 :
						    (_theResult____h119285[43] ?
						       6'd13 :
						       (_theResult____h119285[42] ?
							  6'd14 :
							  (_theResult____h119285[41] ?
							     6'd15 :
							     (_theResult____h119285[40] ?
								6'd16 :
								(_theResult____h119285[39] ?
								   6'd17 :
								   (_theResult____h119285[38] ?
								      6'd18 :
								      (_theResult____h119285[37] ?
									 6'd19 :
									 (_theResult____h119285[36] ?
									    6'd20 :
									    (_theResult____h119285[35] ?
									       6'd21 :
									       (_theResult____h119285[34] ?
										  6'd22 :
										  (_theResult____h119285[33] ?
										     6'd23 :
										     (_theResult____h119285[32] ?
											6'd24 :
											(_theResult____h119285[31] ?
											   6'd25 :
											   (_theResult____h119285[30] ?
											      6'd26 :
											      (_theResult____h119285[29] ?
												 6'd27 :
												 (_theResult____h119285[28] ?
												    6'd28 :
												    (_theResult____h119285[27] ?
												       6'd29 :
												       (_theResult____h119285[26] ?
													  6'd30 :
													  (_theResult____h119285[25] ?
													     6'd31 :
													     (_theResult____h119285[24] ?
														6'd32 :
														(_theResult____h119285[23] ?
														   6'd33 :
														   (_theResult____h119285[22] ?
														      6'd34 :
														      (_theResult____h119285[21] ?
															 6'd35 :
															 (_theResult____h119285[20] ?
															    6'd36 :
															    (_theResult____h119285[19] ?
															       6'd37 :
															       (_theResult____h119285[18] ?
																  6'd38 :
																  (_theResult____h119285[17] ?
																     6'd39 :
																     (_theResult____h119285[16] ?
																	6'd40 :
																	(_theResult____h119285[15] ?
																	   6'd41 :
																	   (_theResult____h119285[14] ?
																	      6'd42 :
																	      (_theResult____h119285[13] ?
																		 6'd43 :
																		 (_theResult____h119285[12] ?
																		    6'd44 :
																		    (_theResult____h119285[11] ?
																		       6'd45 :
																		       (_theResult____h119285[10] ?
																			  6'd46 :
																			  (_theResult____h119285[9] ?
																			     6'd47 :
																			     (_theResult____h119285[8] ?
																				6'd48 :
																				(_theResult____h119285[7] ?
																				   6'd49 :
																				   (_theResult____h119285[6] ?
																				      6'd50 :
																				      (_theResult____h119285[5] ?
																					 6'd51 :
																					 (_theResult____h119285[4] ?
																					    6'd52 :
																					    (_theResult____h119285[3] ?
																					       6'd53 :
																					       (_theResult____h119285[2] ?
																						  6'd54 :
																						  (_theResult____h119285[1] ?
																						     6'd55 :
																						     (_theResult____h119285[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2407 =
	     (_theResult____h78455[56] ?
		6'd0 :
		(_theResult____h78455[55] ?
		   6'd1 :
		   (_theResult____h78455[54] ?
		      6'd2 :
		      (_theResult____h78455[53] ?
			 6'd3 :
			 (_theResult____h78455[52] ?
			    6'd4 :
			    (_theResult____h78455[51] ?
			       6'd5 :
			       (_theResult____h78455[50] ?
				  6'd6 :
				  (_theResult____h78455[49] ?
				     6'd7 :
				     (_theResult____h78455[48] ?
					6'd8 :
					(_theResult____h78455[47] ?
					   6'd9 :
					   (_theResult____h78455[46] ?
					      6'd10 :
					      (_theResult____h78455[45] ?
						 6'd11 :
						 (_theResult____h78455[44] ?
						    6'd12 :
						    (_theResult____h78455[43] ?
						       6'd13 :
						       (_theResult____h78455[42] ?
							  6'd14 :
							  (_theResult____h78455[41] ?
							     6'd15 :
							     (_theResult____h78455[40] ?
								6'd16 :
								(_theResult____h78455[39] ?
								   6'd17 :
								   (_theResult____h78455[38] ?
								      6'd18 :
								      (_theResult____h78455[37] ?
									 6'd19 :
									 (_theResult____h78455[36] ?
									    6'd20 :
									    (_theResult____h78455[35] ?
									       6'd21 :
									       (_theResult____h78455[34] ?
										  6'd22 :
										  (_theResult____h78455[33] ?
										     6'd23 :
										     (_theResult____h78455[32] ?
											6'd24 :
											(_theResult____h78455[31] ?
											   6'd25 :
											   (_theResult____h78455[30] ?
											      6'd26 :
											      (_theResult____h78455[29] ?
												 6'd27 :
												 (_theResult____h78455[28] ?
												    6'd28 :
												    (_theResult____h78455[27] ?
												       6'd29 :
												       (_theResult____h78455[26] ?
													  6'd30 :
													  (_theResult____h78455[25] ?
													     6'd31 :
													     (_theResult____h78455[24] ?
														6'd32 :
														(_theResult____h78455[23] ?
														   6'd33 :
														   (_theResult____h78455[22] ?
														      6'd34 :
														      (_theResult____h78455[21] ?
															 6'd35 :
															 (_theResult____h78455[20] ?
															    6'd36 :
															    (_theResult____h78455[19] ?
															       6'd37 :
															       (_theResult____h78455[18] ?
																  6'd38 :
																  (_theResult____h78455[17] ?
																     6'd39 :
																     (_theResult____h78455[16] ?
																	6'd40 :
																	(_theResult____h78455[15] ?
																	   6'd41 :
																	   (_theResult____h78455[14] ?
																	      6'd42 :
																	      (_theResult____h78455[13] ?
																		 6'd43 :
																		 (_theResult____h78455[12] ?
																		    6'd44 :
																		    (_theResult____h78455[11] ?
																		       6'd45 :
																		       (_theResult____h78455[10] ?
																			  6'd46 :
																			  (_theResult____h78455[9] ?
																			     6'd47 :
																			     (_theResult____h78455[8] ?
																				6'd48 :
																				(_theResult____h78455[7] ?
																				   6'd49 :
																				   (_theResult____h78455[6] ?
																				      6'd50 :
																				      (_theResult____h78455[5] ?
																					 6'd51 :
																					 (_theResult____h78455[4] ?
																					    6'd52 :
																					    (_theResult____h78455[3] ?
																					       6'd53 :
																					       (_theResult____h78455[2] ?
																						  6'd54 :
																						  (_theResult____h78455[1] ?
																						     6'd55 :
																						     (_theResult____h78455[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2512 =
	     (guard__h60855 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h68952 :
	       _theResult___exp__h69475 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2514 =
	     (guard__h60855 == 2'b0) ?
	       _theResult___fst_exp__h68952 :
	       (requestR[191] ?
		  _theResult___exp__h69475 :
		  _theResult___fst_exp__h68952) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2632 =
	     (guard__h60855 == 2'b0 || requestR[191]) ?
	       sfdin__h68946[56:34] :
	       _theResult___sfd__h69476 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2634 =
	     (guard__h60855 == 2'b0) ?
	       sfdin__h68946[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h69476 :
		  sfdin__h68946[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3365 =
	     (guard__h119295 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h127521 :
	       _theResult___exp__h128247 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3367 =
	     (guard__h119295 == 2'b0) ?
	       _theResult___fst_exp__h127521 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h128247 :
		  _theResult___fst_exp__h127521) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3444 =
	     (guard__h119295 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       sfdin__h127515[56:5] :
	       _theResult___sfd__h128248 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3446 =
	     (guard__h119295 == 2'b0) ?
	       sfdin__h127515[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h128248 :
		  sfdin__h127515[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2576 =
	     (guard__h78465 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h86691 :
	       _theResult___exp__h87214 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2578 =
	     (guard__h78465 == 2'b0) ?
	       _theResult___fst_exp__h86691 :
	       (requestR[191] ?
		  _theResult___exp__h87214 :
		  _theResult___fst_exp__h86691) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2672 =
	     (guard__h78465 == 2'b0 || requestR[191]) ?
	       sfdin__h86685[56:34] :
	       _theResult___sfd__h87215 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2674 =
	     (guard__h78465 == 2'b0) ?
	       sfdin__h86685[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h87215 :
		  sfdin__h86685[56:34]) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3329 =
	     (guard__h110059 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h118020 :
	       _theResult___exp__h118672 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3331 =
	     (guard__h110059 == 2'b0) ?
	       _theResult___fst_exp__h118020 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h118672 :
		  _theResult___fst_exp__h118020) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3393 =
	     (guard__h128320 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h136310 :
	       _theResult___exp__h136987 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3395 =
	     (guard__h128320 == 2'b0) ?
	       _theResult___fst_exp__h136310 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h136987 :
		  _theResult___fst_exp__h136310) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3420 =
	     (guard__h110059 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h117971[56:5] :
	       _theResult___sfd__h118673 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3422 =
	     (guard__h110059 == 2'b0) ?
	       _theResult___snd__h117971[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h118673 :
		  _theResult___snd__h117971[56:5]) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3460 =
	     (guard__h128320 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h136256[56:5] :
	       _theResult___sfd__h136988 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3462 =
	     (guard__h128320 == 2'b0) ?
	       _theResult___snd__h136256[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h136988 :
		  _theResult___snd__h136256[56:5]) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2540 =
	     (guard__h69548 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h77596 :
	       _theResult___exp__h78045 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2542 =
	     (guard__h69548 == 2'b0) ?
	       _theResult___fst_exp__h77596 :
	       (requestR[191] ?
		  _theResult___exp__h78045 :
		  _theResult___fst_exp__h77596) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2604 =
	     (guard__h87287 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h95364 :
	       _theResult___exp__h95838 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2606 =
	     (guard__h87287 == 2'b0) ?
	       _theResult___fst_exp__h95364 :
	       (requestR[191] ?
		  _theResult___exp__h95838 :
		  _theResult___fst_exp__h95364) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2648 =
	     (guard__h69548 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h77547[56:34] :
	       _theResult___sfd__h78046 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2650 =
	     (guard__h69548 == 2'b0) ?
	       _theResult___snd__h77547[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h78046 :
		  _theResult___snd__h77547[56:34]) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2688 =
	     (guard__h87287 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h95310[56:34] :
	       _theResult___sfd__h95839 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2690 =
	     (guard__h87287 == 2'b0) ?
	       _theResult___snd__h95310[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h95839 :
		  _theResult___snd__h95310[56:34]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1248 =
	     (guard__h35437 == 2'b0) ?
	       11'd0 :
	       (requestR[159] ? _theResult___exp__h36050 : 11'd0) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1271 =
	     (guard__h36125 == 2'b0 || requestR[159]) ?
	       x__h36140[10:0] :
	       _theResult___exp__h36764 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1273 =
	     (guard__h36125 == 2'b0) ?
	       x__h36140[10:0] :
	       (requestR[159] ? _theResult___exp__h36764 : x__h36140[10:0]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1291 =
	     (guard__h35437 == 2'b0 || requestR[159]) ?
	       sfd___3__h35427[54:3] :
	       _theResult___sfd__h36051 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1293 =
	     (guard__h35437 == 2'b0) ?
	       sfd___3__h35427[54:3] :
	       (requestR[159] ?
		  _theResult___sfd__h36051 :
		  sfd___3__h35427[54:3]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306 =
	     (guard__h36125 == 2'b0 || requestR[159]) ?
	       sfd___3__h35427[53:2] :
	       _theResult___sfd__h36765 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1308 =
	     (guard__h36125 == 2'b0) ?
	       sfd___3__h35427[53:2] :
	       (requestR[159] ?
		  _theResult___sfd__h36765 :
		  sfd___3__h35427[53:2]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d331 =
	     (guard__h7134 == 2'b0) ?
	       8'd0 :
	       (requestR[159] ? _theResult___exp__h7547 : 8'd0) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d354 =
	     (guard__h7622 == 2'b0 || requestR[159]) ?
	       x__h7637[7:0] :
	       _theResult___exp__h8058 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d356 =
	     (guard__h7622 == 2'b0) ?
	       x__h7637[7:0] :
	       (requestR[159] ? _theResult___exp__h8058 : x__h7637[7:0]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d374 =
	     (guard__h7134 == 2'b0 || requestR[159]) ?
	       sfd___3__h7124[31:9] :
	       _theResult___sfd__h7548 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d376 =
	     (guard__h7134 == 2'b0) ?
	       sfd___3__h7124[31:9] :
	       (requestR[159] ?
		  _theResult___sfd__h7548 :
		  sfd___3__h7124[31:9]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d389 =
	     (guard__h7622 == 2'b0 || requestR[159]) ?
	       sfd___3__h7124[30:8] :
	       _theResult___sfd__h8059 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d391 =
	     (guard__h7622 == 2'b0) ?
	       sfd___3__h7124[30:8] :
	       (requestR[159] ?
		  _theResult___sfd__h8059 :
		  sfd___3__h7124[30:8]) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1000 =
	     (sV2_exp__h918 == 8'd255 && sV2_sfd__h919[22]) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       (IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d953 ?
		  requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
		  IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d998) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1004 =
	     (sV2_exp__h918 == 8'd255 && sV2_sfd__h919 != 23'd0 &&
	      !sV2_sfd__h919[22]) ?
	       res__h17727 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1003 ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d984 =
	     (sV2_exp__h918 == 8'd255 && sV2_sfd__h919[22] ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d953) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       (IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d957 ?
		  requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
		  IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d982) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d988 =
	     (sV2_exp__h918 == 8'd255 && sV2_sfd__h919 != 23'd0 &&
	      !sV2_sfd__h919[22]) ?
	       res__h17727 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d987 ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d998 =
	     IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d957 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d997 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1001 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22]) ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1000 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1003 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22] &&
	      sV2_exp__h918 == 8'd255 &&
	      sV2_sfd__h919[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1001 } ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1005 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	      !sV1_sfd__h816[22]) ?
	       res__h17490 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1004 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1075 =
	     (sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0) ?
	       res___1__h26132 :
	       ((sV1_exp__h815 == 8'd0) ? res___1__h26151 : res__h26167) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1076 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 == 23'd0) ?
	       res___1__h26122 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1075 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2936 =
	     ((sV1_exp__h815 == 8'd0) ?
		(sV1_sfd__h816[22] ?
		   6'd2 :
		   (sV1_sfd__h816[21] ?
		      6'd3 :
		      (sV1_sfd__h816[20] ?
			 6'd4 :
			 (sV1_sfd__h816[19] ?
			    6'd5 :
			    (sV1_sfd__h816[18] ?
			       6'd6 :
			       (sV1_sfd__h816[17] ?
				  6'd7 :
				  (sV1_sfd__h816[16] ?
				     6'd8 :
				     (sV1_sfd__h816[15] ?
					6'd9 :
					(sV1_sfd__h816[14] ?
					   6'd10 :
					   (sV1_sfd__h816[13] ?
					      6'd11 :
					      (sV1_sfd__h816[12] ?
						 6'd12 :
						 (sV1_sfd__h816[11] ?
						    6'd13 :
						    (sV1_sfd__h816[10] ?
						       6'd14 :
						       (sV1_sfd__h816[9] ?
							  6'd15 :
							  (sV1_sfd__h816[8] ?
							     6'd16 :
							     (sV1_sfd__h816[7] ?
								6'd17 :
								(sV1_sfd__h816[6] ?
								   6'd18 :
								   (sV1_sfd__h816[5] ?
								      6'd19 :
								      (sV1_sfd__h816[4] ?
									 6'd20 :
									 (sV1_sfd__h816[3] ?
									    6'd21 :
									    (sV1_sfd__h816[2] ?
									       6'd22 :
									       (sV1_sfd__h816[1] ?
										  6'd23 :
										  (sV1_sfd__h816[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3308 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 ||
	      (sV1_exp__h815 == 8'd255 || sV1_exp__h815 == 8'd0) &&
	      sV1_sfd__h816 == 23'd0) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((sV1_exp__h815 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d2974 :
		  IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3306) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3472 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0) ?
	       _theResult___snd_fst_sfd__h99148 :
	       _theResult___fst_sfd__h137065 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3506 =
	     (sV1_exp__h815 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2864 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2866 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3485[4] :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2976 &&
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2977 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3502[4] ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3509 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0) ?
	       sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	       !sV1_sfd__h816[22] :
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3506 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3516 =
	     (sV1_exp__h815 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2864 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2866 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3485[3] :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2976 &&
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2977 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3502[3] ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3530 =
	     (sV1_exp__h815 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2864 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2866 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3485[2] :
	       !SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2976 ||
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3528 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3542 =
	     (sV1_exp__h815 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2864 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2866 ||
		_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3485[1]) :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2976 &&
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3540 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3554 =
	     (sV1_exp__h815 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2864 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2866 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3485[0] :
	       !SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2976 ||
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3552 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d840 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 == 23'd0) ?
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d769 :
	       ((sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d838) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d985 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22]) ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d984 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d987 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22] &&
	      sV2_exp__h918 == 8'd255 &&
	      sV2_sfd__h919[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d985 } ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d989 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	      !sV1_sfd__h816[22]) ?
	       res__h17490 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d988 ;
  assign IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1180 =
	     sfd__h2220[31] ?
	       6'd0 :
	       (sfd__h2220[30] ?
		  6'd1 :
		  (sfd__h2220[29] ?
		     6'd2 :
		     (sfd__h2220[28] ?
			6'd3 :
			(sfd__h2220[27] ?
			   6'd4 :
			   (sfd__h2220[26] ?
			      6'd5 :
			      (sfd__h2220[25] ?
				 6'd6 :
				 (sfd__h2220[24] ?
				    6'd7 :
				    (sfd__h2220[23] ?
				       6'd8 :
				       (sfd__h2220[22] ?
					  6'd9 :
					  (sfd__h2220[21] ?
					     6'd10 :
					     (sfd__h2220[20] ?
						6'd11 :
						(sfd__h2220[19] ?
						   6'd12 :
						   (sfd__h2220[18] ?
						      6'd13 :
						      (sfd__h2220[17] ?
							 6'd14 :
							 (sfd__h2220[16] ?
							    6'd15 :
							    (sfd__h2220[15] ?
							       6'd16 :
							       (sfd__h2220[14] ?
								  6'd17 :
								  (sfd__h2220[13] ?
								     6'd18 :
								     (sfd__h2220[12] ?
									6'd19 :
									(sfd__h2220[11] ?
									   6'd20 :
									   (sfd__h2220[10] ?
									      6'd21 :
									      (sfd__h2220[9] ?
										 6'd22 :
										 (sfd__h2220[8] ?
										    6'd23 :
										    (sfd__h2220[7] ?
										       6'd24 :
										       (sfd__h2220[6] ?
											  6'd25 :
											  (sfd__h2220[5] ?
											     6'd26 :
											     (sfd__h2220[4] ?
												6'd27 :
												(sfd__h2220[3] ?
												   6'd28 :
												   (sfd__h2220[2] ?
												      6'd29 :
												      (sfd__h2220[1] ?
													 6'd30 :
													 (sfd__h2220[0] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d253 =
	     sfd__h2220[31] ?
	       6'd0 :
	       (sfd__h2220[30] ?
		  6'd1 :
		  (sfd__h2220[29] ?
		     6'd2 :
		     (sfd__h2220[28] ?
			6'd3 :
			(sfd__h2220[27] ?
			   6'd4 :
			   (sfd__h2220[26] ?
			      6'd5 :
			      (sfd__h2220[25] ?
				 6'd6 :
				 (sfd__h2220[24] ?
				    6'd7 :
				    (sfd__h2220[23] ?
				       6'd8 :
				       (sfd__h2220[22] ?
					  6'd9 :
					  (sfd__h2220[21] ?
					     6'd10 :
					     (sfd__h2220[20] ?
						6'd11 :
						(sfd__h2220[19] ?
						   6'd12 :
						   (sfd__h2220[18] ?
						      6'd13 :
						      (sfd__h2220[17] ?
							 6'd14 :
							 (sfd__h2220[16] ?
							    6'd15 :
							    (sfd__h2220[15] ?
							       6'd16 :
							       (sfd__h2220[14] ?
								  6'd17 :
								  (sfd__h2220[13] ?
								     6'd18 :
								     (sfd__h2220[12] ?
									6'd19 :
									(sfd__h2220[11] ?
									   6'd20 :
									   (sfd__h2220[10] ?
									      6'd21 :
									      (sfd__h2220[9] ?
										 6'd22 :
										 (sfd__h2220[8] ?
										    6'd23 :
										    (sfd__h2220[7] ?
										       6'd24 :
										       (sfd__h2220[6] ?
											  6'd25 :
											  (sfd__h2220[5] ?
											     6'd26 :
											     (sfd__h2220[4] ?
												6'd27 :
												(sfd__h2220[3] ?
												   6'd28 :
												   (sfd__h2220[2] ?
												      6'd29 :
												      (sfd__h2220[1] ?
													 6'd30 :
													 (sfd__h2220[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d836 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d809 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d830 ?
		  ((x__h15455[56:25] == 32'h7FFFFFFF) ?
		     x__h15455[56:25] :
		     x__h15455[56:25] + 32'd1) :
		  x__h15455[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d838 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d774 ==
	      20'd1048545) ?
	       ((_theResult_____2__h14720[32:31] == 2'b11) ?
		  _theResult_____2__h14720[31:0] :
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d769) :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d807[19] ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d769 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d836) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d862 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d774 ==
	      20'd1048545) ?
	       _theResult_____2__h14720[32:31] == 2'b11 &&
	       guard__h14718 != 2'd0 :
	       !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d807[19] &&
	       (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d809 ||
		guard__h15269 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d899 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d874 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d893 ?
		  ((x__h16495[56:25] == 32'hFFFFFFFF) ?
		     x__h16495[56:25] :
		     x__h16495[56:25] + 32'd1) :
		  x__h16495[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1585 =
	     NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1558 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1579 ?
		  ((x__h47679[85:54] == 32'h7FFFFFFF) ?
		     x__h47679[85:54] :
		     x__h47679[85:54] + 32'd1) :
		  x__h47679[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1587 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1523 ==
	      24'd16777185) ?
	       ((_theResult_____2__h46944[32:31] == 2'b11) ?
		  _theResult_____2__h46944[31:0] :
		  IF_requestR_BIT_191_139_THEN_2147483648_ELSE_2_ETC___d1518) :
	       (NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1556[23] ?
		  IF_requestR_BIT_191_139_THEN_2147483648_ELSE_2_ETC___d1518 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1585) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1611 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1523 ==
	      24'd16777185) ?
	       _theResult_____2__h46944[32:31] == 2'b11 &&
	       guard__h46942 != 2'd0 :
	       !NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1556[23] &&
	       (!NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1558 ||
		guard__h47493 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1648 =
	     NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1623 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1642 ?
		  ((x__h48702[85:54] == 32'hFFFFFFFF) ?
		     x__h48702[85:54] :
		     x__h48702[85:54] + 32'd1) :
		  x__h48702[85:54]) :
	       32'd0 ;
  assign IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d1230 =
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1184 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1186) ?
	       requestR[159] :
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1229 ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d2974 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2864 ||
	      _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2866 ||
	      _theResult___fst_exp__h118020 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2973 ;
  assign IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d982 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d981 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 ;
  assign IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d997 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d981 ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d977 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d966 ||
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d967 &&
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d968 :
	       !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d971 ||
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d967 &&
	       !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d973 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3270 =
	     ((SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q76[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q79[10],
		  SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q79 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3306 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2976 ?
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2977 ?
		  ((_theResult___fst_exp__h127521 == 11'd2047) ?
		     requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3262) :
		  ((_theResult___fst_exp__h136310 == 11'd2047) ?
		     requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3303)) :
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3528 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2977 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3502[2] :
	       _theResult___fst_exp__h137049 == 11'd2047 &&
	       _theResult___fst_sfd__h137050 == 52'd0 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3540 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2977 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3502[1] :
	       _theResult___fst_exp__h136310 == 11'd0 &&
	       guard__h128320 != 2'b0 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3552 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2977 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3502[0] :
	       _theResult___fst_exp__h136310 != 11'd2047 &&
	       guard__h128320 != 2'b0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2453 =
	     ((SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC__q48[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC__q51[7],
		  SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC__q51 }) -
	     9'd386 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2488 =
	     SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2162 ?
	       ((_theResult___fst_exp__h86691 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2445) :
	       ((_theResult___fst_exp__h95364 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2486) ;
  assign IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2774 =
	     SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2162 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2745[2] :
	       _theResult___fst_exp__h95900 == 8'd255 &&
	       _theResult___fst_sfd__h95901 == 23'd0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2787 =
	     SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2162 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2745[1] :
	       _theResult___fst_exp__h95364 == 8'd0 && guard__h87287 != 2'b0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2800 =
	     SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2162 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2745[0] :
	       _theResult___fst_exp__h95364 != 8'd255 &&
	       guard__h87287 != 2'b0 ;
  assign IF_requestR_BITS_126_TO_116_566_EQ_2047_567_AN_ETC___d3614 =
	     (requestR[126:116] == 11'd2047 && requestR[115] ||
	      requestR_BITS_190_TO_180_511_EQ_0_519_AND_requ_ETC___d3583) ?
	       requestR[191:128] :
	       (requestR_BITS_126_TO_116_566_EQ_0_580_AND_requ_ETC___d3587 ?
		  requestR[127:64] :
		  res__h141666) ;
  assign IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d957 =
	     sV2_exp__h918 == 8'd0 && sV2_sfd__h919 == 23'd0 &&
	     requestR[127:96] == 32'hFFFFFFFF &&
	     requestR[95] &&
	     sV1_exp__h815 == 8'd0 &&
	     sV1_sfd__h816 == 23'd0 &&
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ;
  assign IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1315 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1184 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1186) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h36829 ;
  assign IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1482 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1377 ||
	      _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1378) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h46409 ;
  assign IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d365 =
	     (requestR[159:128] == 32'd0 ||
	      !sfd__h2220[31] && !sfd__h2220[30] && !sfd__h2220[29] &&
	      !sfd__h2220[28] &&
	      !sfd__h2220[27] &&
	      !sfd__h2220[26] &&
	      !sfd__h2220[25] &&
	      !sfd__h2220[24] &&
	      !sfd__h2220[23] &&
	      !sfd__h2220[22] &&
	      !sfd__h2220[21] &&
	      !sfd__h2220[20] &&
	      !sfd__h2220[19] &&
	      !sfd__h2220[18] &&
	      !sfd__h2220[17] &&
	      !sfd__h2220[16] &&
	      !sfd__h2220[15] &&
	      !sfd__h2220[14] &&
	      !sfd__h2220[13] &&
	      !sfd__h2220[12] &&
	      !sfd__h2220[11] &&
	      !sfd__h2220[10] &&
	      !sfd__h2220[9] &&
	      !sfd__h2220[8] &&
	      !sfd__h2220[7] &&
	      !sfd__h2220[6] &&
	      !sfd__h2220[5] &&
	      !sfd__h2220[4] &&
	      !sfd__h2220[3] &&
	      !sfd__h2220[2] &&
	      !sfd__h2220[1] &&
	      !sfd__h2220[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8128 ;
  assign IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d667 =
	     (requestR[159:128] == 32'd0 ||
	      !requestR[159] &&
	      NOT_requestR_BIT_158_62_63_AND_NOT_requestR_BI_ETC___d553) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14186 ;
  assign IF_requestR_BITS_190_TO_180_511_EQ_0_519_AND_r_ETC___d3628 =
	     requestR_BITS_190_TO_180_511_EQ_0_519_AND_requ_ETC___d3583 ?
	       requestR[127:64] :
	       (requestR_BITS_126_TO_116_566_EQ_0_580_AND_requ_ETC___d3587 ?
		  requestR[191:128] :
		  res__h146214) ;
  assign IF_requestR_BITS_190_TO_180_511_EQ_0_519_AND_r_ETC___d3699 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       res___1__h154406 :
	       ((requestR[190:180] == 11'd0) ?
		  res___1__h154425 :
		  res__h154441) ;
  assign IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2123 =
	     ((requestR[190:180] == 11'd0) ?
		(requestR[179] ?
		   6'd2 :
		   (requestR[178] ?
		      6'd3 :
		      (requestR[177] ?
			 6'd4 :
			 (requestR[176] ?
			    6'd5 :
			    (requestR[175] ?
			       6'd6 :
			       (requestR[174] ?
				  6'd7 :
				  (requestR[173] ?
				     6'd8 :
				     (requestR[172] ?
					6'd9 :
					(requestR[171] ?
					   6'd10 :
					   (requestR[170] ?
					      6'd11 :
					      (requestR[169] ?
						 6'd12 :
						 (requestR[168] ?
						    6'd13 :
						    (requestR[167] ?
						       6'd14 :
						       (requestR[166] ?
							  6'd15 :
							  (requestR[165] ?
							     6'd16 :
							     (requestR[164] ?
								6'd17 :
								(requestR[163] ?
								   6'd18 :
								   (requestR[162] ?
								      6'd19 :
								      (requestR[161] ?
									 6'd20 :
									 (requestR[160] ?
									    6'd21 :
									    (requestR[159] ?
									       6'd22 :
									       (requestR[158] ?
										  6'd23 :
										  (requestR[157] ?
										     6'd24 :
										     (requestR[156] ?
											6'd25 :
											(requestR[155] ?
											   6'd26 :
											   (requestR[154] ?
											      6'd27 :
											      (requestR[153] ?
												 6'd28 :
												 (requestR[152] ?
												    6'd29 :
												    (requestR[151] ?
												       6'd30 :
												       (requestR[150] ?
													  6'd31 :
													  (requestR[149] ?
													     6'd32 :
													     (requestR[148] ?
														6'd33 :
														(requestR[147] ?
														   6'd34 :
														   (requestR[146] ?
														      6'd35 :
														      (requestR[145] ?
															 6'd36 :
															 (requestR[144] ?
															    6'd37 :
															    (requestR[143] ?
															       6'd38 :
															       (requestR[142] ?
																  6'd39 :
																  (requestR[141] ?
																     6'd40 :
																     (requestR[140] ?
																	6'd41 :
																	(requestR[139] ?
																	   6'd42 :
																	   (requestR[138] ?
																	      6'd43 :
																	      (requestR[137] ?
																		 6'd44 :
																		 (requestR[136] ?
																		    6'd45 :
																		    (requestR[135] ?
																		       6'd46 :
																		       (requestR[134] ?
																			  6'd47 :
																			  (requestR[133] ?
																			     6'd48 :
																			     (requestR[132] ?
																				6'd49 :
																				(requestR[131] ?
																				   6'd50 :
																				   (requestR[130] ?
																				      6'd51 :
																				      (requestR[129] ?
																					 6'd52 :
																					 (requestR[128] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2490 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1754 ?
		  IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_ETC___d2158 :
		  requestR[191]) :
	       (SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2161 ?
		  IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2488 :
		  requestR[191]) ;
  assign IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2749 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d2731 :
	       SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2161 &&
	       SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2162 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2745[4] ;
  assign IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2760 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d2756 :
	       SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2161 &&
	       SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2162 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2745[3] ;
  assign IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2776 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2768 :
	       !SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2161 ||
	       IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2774 ;
  assign IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2789 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d2783 :
	       SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2161 &&
	       IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2787 ;
  assign IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2802 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2796 :
	       !SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2161 ||
	       IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2800 ;
  assign IF_requestR_BITS_190_TO_180_511_EQ_2047_512_AN_ETC___d1589 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_BIT_191_139_THEN_2147483648_ELSE_2_ETC___d1518 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1587) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1028 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d991 ||
	     sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22] ||
	     sV2_exp__h918 == 8'd255 && sV2_sfd__h919[22] ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1039 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d971 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d967 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d973) &&
	     !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d966 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d967 ||
	      !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d968) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1043 =
	     sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0 &&
	     sV2_exp__h918 == 8'd0 &&
	     sV2_sfd__h919 == 23'd0 ||
	     NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d1042 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:128] :
	       31'h7FC00000 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d769 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'h80000000 :
	       32'h7FFFFFFF ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d772 =
	     sV1_exp__h815 - 8'd127 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d781 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       -b__h14782 :
	       b__h14782 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d901 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0) ?
	       32'h0 :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d872[19] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d899) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d943 =
	     sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	     !sV1_sfd__h816[22] &&
	     sV2_exp__h918 == 8'd255 &&
	     sV2_sfd__h919 != 23'd0 &&
	     !sV2_sfd__h919[22] ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d953 =
	     sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0 &&
	     requestR[191:160] == 32'hFFFFFFFF &&
	     requestR[159] &&
	     sV2_exp__h918 == 8'd0 &&
	     sV2_sfd__h919 == 23'd0 &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d966 =
	     sV1_exp__h815 < sV2_exp__h918 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d967 =
	     sV1_exp__h815 == sV2_exp__h918 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d968 =
	     sV1_sfd__h816 < sV2_sfd__h919 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d971 =
	     sV1_exp__h815 <= sV2_exp__h918 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d973 =
	     sV1_sfd__h816 <= sV2_sfd__h919 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d991 =
	     sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	     !sV1_sfd__h816[22] ||
	     sV2_exp__h918 == 8'd255 && sV2_sfd__h919 != 23'd0 &&
	     !sV2_sfd__h919[22] ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1207 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5437_0b0_requestR_BIT_159_0b1_reques_ETC__q27 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1227 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard6125_0b0_requestR_BIT_159_0b1_reques_ETC__q28 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1547 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h46942 == 2'b10) ?
		  IF_requestR_BIT_191_139_THEN_NEG_0b0_CONCAT_NO_ETC___d1530[53] :
		  guard__h46942 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h46942 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BIT_191_139_THEN_NEG_0b0_CONCAT_NO_ETC___d1530[85] &&
		  guard__h46942 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1579 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h47493 == 2'b10) ?
		  x__h47679[54] :
		  guard__h47493 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h47493 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h47679[85] &&
		  guard__h47493 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1642 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h48484 == 2'b10) ?
		  x__h48702[54] :
		  guard__h48484 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h48484 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2027 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0855_0b0_requestR_BIT_191_0b1_reques_ETC__q70 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2026 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2156 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9548_0b0_requestR_BIT_191_0b1_reques_ETC__q71 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2026 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2445 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8465_0b0_requestR_BIT_191_0b1_reques_ETC__q72 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2026 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2486 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard7287_0b0_requestR_BIT_191_0b1_reques_ETC__q73 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2026 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d289 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard134_0b0_requestR_BIT_159_0b1_request_ETC__q14 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2973 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10059_0b0_requestR_BITS_191_TO_160_E_ETC__q94 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2972 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d309 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard622_0b0_requestR_BIT_159_0b1_request_ETC__q15 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3262 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19295_0b0_requestR_BITS_191_TO_160_E_ETC__q95 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2972 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3303 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard28320_0b0_requestR_BITS_191_TO_160_E_ETC__q96 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2972 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d798 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h14718 == 2'b10) ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d781[24] :
		  guard__h14718 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h14718 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d781[56] &&
		  guard__h14718 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d830 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h15269 == 2'b10) ?
		  x__h15455[25] :
		  guard__h15269 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h15269 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h15455[56] &&
		  guard__h15269 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d893 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h16277 == 2'b10) ?
		  x__h16495[25] :
		  guard__h16277 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h16277 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1409 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h45019 == 2'b0) ? 11'd0 : _theResult___exp__h45632) :
	       11'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d622 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h13197 == 2'b0) ? 8'd0 : _theResult___exp__h13607) :
	       8'd0 ;
  assign IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1373 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d587 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d440 =
	     (sfd__h2220[31] || sfd__h2220[30] || sfd__h2220[29] ||
	      sfd__h2220[28] ||
	      sfd__h2220[27] ||
	      sfd__h2220[26] ||
	      sfd__h2220[25] ||
	      sfd__h2220[24] ||
	      sfd__h2220[23] ||
	      sfd__h2220[22] ||
	      sfd__h2220[21] ||
	      sfd__h2220[20] ||
	      sfd__h2220[19] ||
	      sfd__h2220[18] ||
	      sfd__h2220[17] ||
	      sfd__h2220[16] ||
	      sfd__h2220[15] ||
	      sfd__h2220[14] ||
	      sfd__h2220[13] ||
	      sfd__h2220[12] ||
	      sfd__h2220[11] ||
	      sfd__h2220[10] ||
	      sfd__h2220[9] ||
	      sfd__h2220[8] ||
	      sfd__h2220[7] ||
	      sfd__h2220[6] ||
	      sfd__h2220[5] ||
	      sfd__h2220[4] ||
	      sfd__h2220[3] ||
	      sfd__h2220[2] ||
	      sfd__h2220[1] ||
	      sfd__h2220[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 &&
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 &&
	      _theResult___fst_exp__h8119 == 8'd255 &&
	      _theResult___fst_sfd__h8120 == 23'd0) ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d443 =
	     (sfd__h2220[31] || sfd__h2220[30] || sfd__h2220[29] ||
	      sfd__h2220[28] ||
	      sfd__h2220[27] ||
	      sfd__h2220[26] ||
	      sfd__h2220[25] ||
	      sfd__h2220[24] ||
	      sfd__h2220[23] ||
	      sfd__h2220[22] ||
	      sfd__h2220[21] ||
	      sfd__h2220[20] ||
	      sfd__h2220[19] ||
	      sfd__h2220[18] ||
	      sfd__h2220[17] ||
	      sfd__h2220[16] ||
	      sfd__h2220[15] ||
	      sfd__h2220[14] ||
	      sfd__h2220[13] ||
	      sfd__h2220[12] ||
	      sfd__h2220[11] ||
	      sfd__h2220[10] ||
	      sfd__h2220[9] ||
	      sfd__h2220[8] ||
	      sfd__h2220[7] ||
	      sfd__h2220[6] ||
	      sfd__h2220[5] ||
	      sfd__h2220[4] ||
	      sfd__h2220[3] ||
	      sfd__h2220[2] ||
	      sfd__h2220[1] ||
	      sfd__h2220[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d452 =
	     (sfd__h2220[31] || sfd__h2220[30] || sfd__h2220[29] ||
	      sfd__h2220[28] ||
	      sfd__h2220[27] ||
	      sfd__h2220[26] ||
	      sfd__h2220[25] ||
	      sfd__h2220[24] ||
	      sfd__h2220[23] ||
	      sfd__h2220[22] ||
	      sfd__h2220[21] ||
	      sfd__h2220[20] ||
	      sfd__h2220[19] ||
	      sfd__h2220[18] ||
	      sfd__h2220[17] ||
	      sfd__h2220[16] ||
	      sfd__h2220[15] ||
	      sfd__h2220[14] ||
	      sfd__h2220[13] ||
	      sfd__h2220[12] ||
	      sfd__h2220[11] ||
	      sfd__h2220[10] ||
	      sfd__h2220[9] ||
	      sfd__h2220[8] ||
	      sfd__h2220[7] ||
	      sfd__h2220[6] ||
	      sfd__h2220[5] ||
	      sfd__h2220[4] ||
	      sfd__h2220[3] ||
	      sfd__h2220[2] ||
	      sfd__h2220[1] ||
	      sfd__h2220[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 &&
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d449 ;
  assign IF_requestR_BIT_191_139_OR_requestR_BITS_190_T_ETC___d1650 =
	     (requestR[191] ||
	      requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       32'h0 :
	       (NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1621[23] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1648) ;
  assign IF_requestR_BIT_191_139_THEN_2147483648_ELSE_2_ETC___d1518 =
	     requestR[191] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_requestR_BIT_191_139_THEN_NEG_0b0_CONCAT_NO_ETC___d1530 =
	     requestR[191] ? -b__h47006 : b__h47006 ;
  assign IF_requestR_BIT_191_139_THEN_NOT_requestR_BITS_ETC___d3607 =
	     requestR[191] ?
	       !requestR_BITS_190_TO_180_511_ULE_requestR_BITS_ETC___d3596 ||
	       requestR_BITS_190_TO_180_511_EQ_requestR_BITS__ETC___d3598 &&
	       !requestR_BITS_179_TO_128_513_ULE_requestR_BITS_ETC___d3599 :
	       requestR_BITS_190_TO_180_511_ULT_requestR_BITS_ETC___d3603 ||
	       requestR_BITS_190_TO_180_511_EQ_requestR_BITS__ETC___d3598 &&
	       requestR_BITS_179_TO_128_513_ULT_requestR_BITS_ETC___d3604 ;
  assign IF_sfd___3124_BIT_7_THEN_2_ELSE_0__q7 =
	     sfd___3__h7124[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3124_BIT_8_THEN_2_ELSE_0__q6 =
	     sfd___3__h7124[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___33187_BIT_7_THEN_2_ELSE_0__q18 =
	     sfd___3__h13187[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___33187_BIT_8_THEN_2_ELSE_0__q17 =
	     sfd___3__h13187[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35009_BIT_1_THEN_2_ELSE_0__q37 =
	     sfd___3__h45009[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35009_BIT_2_THEN_2_ELSE_0__q36 =
	     sfd___3__h45009[2] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35427_BIT_1_THEN_2_ELSE_0__q26 =
	     sfd___3__h35427[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35427_BIT_2_THEN_2_ELSE_0__q25 =
	     sfd___3__h35427[2] ? 2'd2 : 2'd0 ;
  assign IF_sfdin27515_BIT_4_THEN_2_ELSE_0__q78 =
	     sfdin__h127515[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin6685_BIT_33_THEN_2_ELSE_0__q50 =
	     sfdin__h86685[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin8946_BIT_33_THEN_2_ELSE_0__q45 =
	     sfdin__h68946[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd17971_BIT_4_THEN_2_ELSE_0__q75 =
	     _theResult___snd__h117971[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd36256_BIT_4_THEN_2_ELSE_0__q81 =
	     _theResult___snd__h136256[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd5310_BIT_33_THEN_2_ELSE_0__q53 =
	     _theResult___snd__h95310[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd7547_BIT_33_THEN_2_ELSE_0__q47 =
	     _theResult___snd__h77547[33] ? 2'd2 : 2'd0 ;
  assign IF_x5455_BIT_24_THEN_2_ELSE_0__q23 = x__h15455[24] ? 2'd2 : 2'd0 ;
  assign IF_x6495_BIT_24_THEN_2_ELSE_0__q24 = x__h16495[24] ? 2'd2 : 2'd0 ;
  assign IF_x7679_BIT_53_THEN_2_ELSE_0__q42 = x__h47679[53] ? 2'd2 : 2'd0 ;
  assign IF_x8702_BIT_53_THEN_2_ELSE_0__q43 = x__h48702[53] ? 2'd2 : 2'd0 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d774 =
	     -{ {12{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d772[7]}},
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d772 } ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d806 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d774 +
	     20'd32 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d807 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d806 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d809 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d807 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d872 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d806 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d874 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d872 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1523 =
	     -{ {13{requestR_BITS_190_TO_180_511_MINUS_1023___d1521[10]}},
		requestR_BITS_190_TO_180_511_MINUS_1023___d1521 } ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1555 =
	     NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1523 +
	     24'd32 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1556 =
	     NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1555 -
	     24'd2 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1558 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1556 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1621 =
	     NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1555 -
	     24'd1 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1623 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1621 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2768 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1754 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1755 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2716[2] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2728[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2796 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1754 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1755 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2716[0] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2728[0]) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1038 =
	     !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d966 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d967 ||
	      !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d968) &&
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d971 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d967 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d973) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1044 =
	     (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	     (sV2_exp__h918 != 8'd255 || sV2_sfd__h919 == 23'd0) &&
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1043 ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1062 =
	     (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	     (sV2_exp__h918 != 8'd255 || sV2_sfd__h919 == 23'd0) &&
	     (requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d979 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1043) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2909 =
	     !sV1_sfd__h816[21] && !sV1_sfd__h816[20] && !sV1_sfd__h816[19] &&
	     !sV1_sfd__h816[18] &&
	     !sV1_sfd__h816[17] &&
	     !sV1_sfd__h816[16] &&
	     !sV1_sfd__h816[15] &&
	     !sV1_sfd__h816[14] &&
	     !sV1_sfd__h816[13] &&
	     !sV1_sfd__h816[12] &&
	     !sV1_sfd__h816[11] &&
	     !sV1_sfd__h816[10] &&
	     !sV1_sfd__h816[9] &&
	     !sV1_sfd__h816[8] &&
	     !sV1_sfd__h816[7] &&
	     !sV1_sfd__h816[6] &&
	     !sV1_sfd__h816[5] &&
	     !sV1_sfd__h816[4] &&
	     !sV1_sfd__h816[3] &&
	     !sV1_sfd__h816[2] &&
	     !sV1_sfd__h816[1] &&
	     !sV1_sfd__h816[0] ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d851 =
	     (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d774 ==
	       20'd1048545) ?
		_theResult_____2__h14720[32:31] != 2'b11 :
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d807[19] ||
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d809 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d830 &&
		x__h15455[56:25] == 32'h7FFFFFFF) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d918 =
	     (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	     !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d872[19] &&
	     (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d874 ||
	      guard__h16277 != 2'd0) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d980 =
	     (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0 ||
	      sV2_exp__h918 != 8'd0 ||
	      sV2_sfd__h919 != 23'd0) &&
	     requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d979 ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d981 =
	     (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	     (sV2_exp__h918 != 8'd255 || sV2_sfd__h919 == 23'd0) &&
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d980 ;
  assign NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d261 =
	     !sfd__h2220[31] && !sfd__h2220[30] && !sfd__h2220[29] &&
	     !sfd__h2220[28] &&
	     !sfd__h2220[27] &&
	     !sfd__h2220[26] &&
	     !sfd__h2220[25] &&
	     !sfd__h2220[24] &&
	     !sfd__h2220[23] &&
	     !sfd__h2220[22] &&
	     !sfd__h2220[21] &&
	     !sfd__h2220[20] &&
	     !sfd__h2220[19] &&
	     !sfd__h2220[18] &&
	     !sfd__h2220[17] &&
	     !sfd__h2220[16] &&
	     !sfd__h2220[15] &&
	     !sfd__h2220[14] &&
	     !sfd__h2220[13] &&
	     !sfd__h2220[12] &&
	     !sfd__h2220[11] &&
	     !sfd__h2220[10] &&
	     !sfd__h2220[9] &&
	     !sfd__h2220[8] &&
	     !sfd__h2220[7] &&
	     !sfd__h2220[6] &&
	     !sfd__h2220[5] &&
	     !sfd__h2220[4] &&
	     !sfd__h2220[3] &&
	     !sfd__h2220[2] &&
	     !sfd__h2220[1] &&
	     !sfd__h2220[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 ||
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 ;
  assign NOT_requestR_BITS_159_TO_128_22_EQ_0_23_24_AND_ETC___d739 =
	     requestR[159:128] != 32'd0 &&
	     (requestR[159] ||
	      requestR_BIT_158_62_OR_requestR_BIT_157_64_OR__ETC___d728) &&
	     (!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592 &&
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593 &&
	      _theResult___fst_exp__h14177 == 8'd255 &&
	      _theResult___fst_sfd__h14178 == 23'd0) ;
  assign NOT_requestR_BITS_190_TO_180_511_EQ_0_519_525__ETC___d1600 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1523 ==
	       24'd16777185) ?
		_theResult_____2__h46944[32:31] != 2'b11 :
		NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1556[23] ||
		NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1558 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1579 &&
		x__h47679[85:54] == 32'h7FFFFFFF) ;
  assign NOT_requestR_BITS_190_TO_180_511_EQ_2047_512_6_ETC___d1669 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[190:180] != 11'd2047 || requestR[179:128] != 52'd0) &&
	     !requestR[191] &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1621[23] &&
	     (!NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1623 ||
	      guard__h48484 != 2'd0) ;
  assign NOT_requestR_BITS_190_TO_180_511_EQ_2047_512_6_ETC___d3611 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0 ||
	      requestR[126:116] != 11'd0 ||
	      requestR[115:64] != 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_BIT_191_139_THEN_NOT_requestR_BITS_ETC___d3607) ;
  assign NOT_requestR_BITS_190_TO_180_511_EQ_2047_512_6_ETC___d3676 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_BIT_191_139_THEN_NOT_requestR_BITS_ETC___d3607 ||
	      requestR_BITS_190_TO_180_511_EQ_0_519_AND_requ_ETC___d3657) ;
  assign NOT_requestR_BITS_190_TO_180_511_ULT_requestR__ETC___d3653 =
	     !requestR_BITS_190_TO_180_511_ULT_requestR_BITS_ETC___d3603 &&
	     (!requestR_BITS_190_TO_180_511_EQ_requestR_BITS__ETC___d3598 ||
	      !requestR_BITS_179_TO_128_513_ULT_requestR_BITS_ETC___d3604) &&
	     requestR_BITS_190_TO_180_511_ULE_requestR_BITS_ETC___d3596 &&
	     (!requestR_BITS_190_TO_180_511_EQ_requestR_BITS__ETC___d3598 ||
	      requestR_BITS_179_TO_128_513_ULE_requestR_BITS_ETC___d3599) ;
  assign NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d1042 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159] ||
	      requestR[127:96] == 32'hFFFFFFFF && requestR[95]) &&
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     ((requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
		NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1038 :
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1039) ;
  assign NOT_requestR_BIT_158_62_63_AND_NOT_requestR_BI_ETC___d553 =
	     !requestR[158] && !requestR[157] && !requestR[156] &&
	     !requestR[155] &&
	     !requestR[154] &&
	     !requestR[153] &&
	     !requestR[152] &&
	     !requestR[151] &&
	     !requestR[150] &&
	     !requestR[149] &&
	     !requestR[148] &&
	     !requestR[147] &&
	     !requestR[146] &&
	     !requestR[145] &&
	     !requestR[144] &&
	     !requestR[143] &&
	     !requestR[142] &&
	     !requestR[141] &&
	     !requestR[140] &&
	     !requestR[139] &&
	     !requestR[138] &&
	     !requestR[137] &&
	     !requestR[136] &&
	     !requestR[135] &&
	     !requestR[134] &&
	     !requestR[133] &&
	     !requestR[132] &&
	     !requestR[131] &&
	     !requestR[130] &&
	     !requestR[129] &&
	     !requestR[128] ;
  assign NOT_requestR_BIT_179_680_029_AND_NOT_requestR__ETC___d2068 =
	     !requestR[179] && !requestR[178] && !requestR[177] &&
	     !requestR[176] &&
	     !requestR[175] &&
	     !requestR[174] &&
	     !requestR[173] &&
	     !requestR[172] &&
	     !requestR[171] &&
	     !requestR[170] &&
	     !requestR[169] &&
	     !requestR[168] &&
	     !requestR[167] &&
	     !requestR[166] &&
	     !requestR[165] &&
	     !requestR[164] &&
	     !requestR[163] &&
	     !requestR[162] &&
	     !requestR[161] &&
	     !requestR[160] &&
	     !requestR[159] &&
	     NOT_requestR_BIT_158_62_63_AND_NOT_requestR_BI_ETC___d553 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2975 =
	     { {4{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d772[7]}},
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d772 } ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2976 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2975 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2977 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2975 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q76 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2975 +
	     12'd1023 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q79 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q76[10:0] -
	     11'd1023 ;
  assign SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_521___d2160 =
	     { requestR_BITS_190_TO_180_511_MINUS_1023___d1521[10],
	       requestR_BITS_190_TO_180_511_MINUS_1023___d1521 } ;
  assign SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2161 =
	     (SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_521___d2160 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2162 =
	     (SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_521___d2160 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC__q48 =
	     SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_521___d2160 +
	     12'd127 ;
  assign SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC__q51 =
	     SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC__q48[7:0] -
	     8'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1989 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1987 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2716 =
	     { 3'd0,
	       _theResult___fst_exp__h68952 == 8'd0 &&
	       (sfdin__h68946[56:34] == 23'd0 || guard__h60855 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h69537 == 8'd255 &&
	       _theResult___fst_sfd__h69538 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h68952 != 8'd255 &&
	       guard__h60855 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3226 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d3224 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3502 =
	     { 3'd0,
	       _theResult___fst_exp__h127521 == 11'd0 &&
	       (sfdin__h127515[56:5] == 52'd0 || guard__h119295 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h128309 == 11'd2047 &&
	       _theResult___fst_sfd__h128310 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h127521 != 11'd2047 &&
	       guard__h119295 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2409 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2407 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2745 =
	     { 3'd0,
	       _theResult___fst_exp__h86691 == 8'd0 &&
	       (sfdin__h86685[56:34] == 23'd0 || guard__h78465 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h87276 == 8'd255 &&
	       _theResult___fst_sfd__h87277 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h86691 != 8'd255 &&
	       guard__h78465 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d2938 =
	     ({ 6'd0,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2936 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3271 =
	     ({ 6'd0,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2936 } ^
	      12'h800) <=
	     (IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3270 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3485 =
	     { 3'd0,
	       _theResult___fst_exp__h118020 == 11'd0 &&
	       guard__h110059 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h118734 == 11'd2047 &&
	       _theResult___fst_sfd__h118735 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h118020 != 11'd2047 &&
	       guard__h110059 != 2'b0 } ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2125 =
	     ({ 3'd0,
		IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2123 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2454 =
	     ({ 3'd0,
		IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2123 } ^
	      9'h100) <=
	     (IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2453 ^
	      9'h100) ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2728 =
	     { 3'd0,
	       _theResult___fst_exp__h77596 == 8'd0 && guard__h69548 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h78107 == 8'd255 &&
	       _theResult___fst_sfd__h78108 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h77596 != 8'd255 &&
	       guard__h69548 != 2'b0 } ;
  assign _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d2982 =
	     b__h14782 >>
	     _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d2978 ;
  assign _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_511_EQ_ETC___d2167 =
	     sfd__h53245 >>
	     _3970_MINUS_SEXT_requestR_BITS_190_TO_180_511_M_ETC___d2163 ;
  assign _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66 =
	     { 33'h1AAAAAAAA,
	       requestR[63:32] == 32'hFFFFFFFF && requestR[31],
	       (requestR[63:32] == 32'hFFFFFFFF) ?
		 requestR[30:0] :
		 31'h7FC00000 } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1753 =
	     12'd3074 -
	     { 6'd0,
	       requestR[179] ?
		 6'd0 :
		 (requestR[178] ?
		    6'd1 :
		    (requestR[177] ?
		       6'd2 :
		       (requestR[176] ?
			  6'd3 :
			  (requestR[175] ?
			     6'd4 :
			     (requestR[174] ?
				6'd5 :
				(requestR[173] ?
				   6'd6 :
				   (requestR[172] ?
				      6'd7 :
				      (requestR[171] ?
					 6'd8 :
					 (requestR[170] ?
					    6'd9 :
					    (requestR[169] ?
					       6'd10 :
					       (requestR[168] ?
						  6'd11 :
						  (requestR[167] ?
						     6'd12 :
						     (requestR[166] ?
							6'd13 :
							(requestR[165] ?
							   6'd14 :
							   (requestR[164] ?
							      6'd15 :
							      (requestR[163] ?
								 6'd16 :
								 (requestR[162] ?
								    6'd17 :
								    (requestR[161] ?
								       6'd18 :
								       (requestR[160] ?
									  6'd19 :
									  (requestR[159] ?
									     6'd20 :
									     (requestR[158] ?
										6'd21 :
										(requestR[157] ?
										   6'd22 :
										   (requestR[156] ?
										      6'd23 :
										      (requestR[155] ?
											 6'd24 :
											 (requestR[154] ?
											    6'd25 :
											    (requestR[153] ?
											       6'd26 :
											       (requestR[152] ?
												  6'd27 :
												  (requestR[151] ?
												     6'd28 :
												     (requestR[150] ?
													6'd29 :
													(requestR[149] ?
													   6'd30 :
													   (requestR[148] ?
													      6'd31 :
													      (requestR[147] ?
														 6'd32 :
														 (requestR[146] ?
														    6'd33 :
														    (requestR[145] ?
														       6'd34 :
														       (requestR[144] ?
															  6'd35 :
															  (requestR[143] ?
															     6'd36 :
															     (requestR[142] ?
																6'd37 :
																(requestR[141] ?
																   6'd38 :
																   (requestR[140] ?
																      6'd39 :
																      (requestR[139] ?
																	 6'd40 :
																	 (requestR[138] ?
																	    6'd41 :
																	    (requestR[137] ?
																	       6'd42 :
																	       (requestR[136] ?
																		  6'd43 :
																		  (requestR[135] ?
																		     6'd44 :
																		     (requestR[134] ?
																			6'd45 :
																			(requestR[133] ?
																			   6'd46 :
																			   (requestR[132] ?
																			      6'd47 :
																			      (requestR[131] ?
																				 6'd48 :
																				 (requestR[130] ?
																				    6'd49 :
																				    (requestR[129] ?
																				       6'd50 :
																				       (requestR[128] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1754 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1753 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1755 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1753 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d2731 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1754 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1755 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2716[4] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2728[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d2756 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1754 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1755 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2716[3] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2728[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d2783 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1754 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1755 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2716[1] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2728[1]) ;
  assign _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d2978 =
	     12'd3074 -
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2975 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1183 =
	     (12'd32 -
	      { 6'd0,
		IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1180 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1184 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1183 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1186 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1183 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1183 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d253 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1376 =
	     (12'd32 -
	      { 6'd0,
		IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1373 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1377 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1376 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1378 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1376 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1379 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1376 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590 =
	     (9'd32 -
	      { 3'd0,
		IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d587 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590 ^
	      9'h100) <
	     9'd130 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2863 =
	     12'd3970 -
	     { 7'd0,
	       sV1_sfd__h816[22] ?
		 5'd0 :
		 (sV1_sfd__h816[21] ?
		    5'd1 :
		    (sV1_sfd__h816[20] ?
		       5'd2 :
		       (sV1_sfd__h816[19] ?
			  5'd3 :
			  (sV1_sfd__h816[18] ?
			     5'd4 :
			     (sV1_sfd__h816[17] ?
				5'd5 :
				(sV1_sfd__h816[16] ?
				   5'd6 :
				   (sV1_sfd__h816[15] ?
				      5'd7 :
				      (sV1_sfd__h816[14] ?
					 5'd8 :
					 (sV1_sfd__h816[13] ?
					    5'd9 :
					    (sV1_sfd__h816[12] ?
					       5'd10 :
					       (sV1_sfd__h816[11] ?
						  5'd11 :
						  (sV1_sfd__h816[10] ?
						     5'd12 :
						     (sV1_sfd__h816[9] ?
							5'd13 :
							(sV1_sfd__h816[8] ?
							   5'd14 :
							   (sV1_sfd__h816[7] ?
							      5'd15 :
							      (sV1_sfd__h816[6] ?
								 5'd16 :
								 (sV1_sfd__h816[5] ?
								    5'd17 :
								    (sV1_sfd__h816[4] ?
								       5'd18 :
								       (sV1_sfd__h816[3] ?
									  5'd19 :
									  (sV1_sfd__h816[2] ?
									     5'd20 :
									     (sV1_sfd__h816[1] ?
										5'd21 :
										(sV1_sfd__h816[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2864 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2863 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2866 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2863 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_requestR_BITS_190_TO_180_511_M_ETC___d2163 =
	     12'd3970 -
	     SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_521___d2160 ;
  assign _theResult_____2__h14720 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d798 ?
	       out1___1__h15209 :
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d781[56:24] ;
  assign _theResult_____2__h46944 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1547 ?
	       out1___1__h47433 :
	       IF_requestR_BIT_191_139_THEN_NEG_0b0_CONCAT_NO_ETC___d1530[85:53] ;
  assign _theResult____h119285 =
	     ((_3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d2978 ^
	       12'h800) <
	      12'd2105) ?
	       result__h119898 :
	       ((value__h14784 == 25'd0) ? b__h14782 : 57'd1) ;
  assign _theResult____h60845 =
	     (value__h47008 == 54'd0) ? sfd__h53245 : 57'd1 ;
  assign _theResult____h78455 =
	     ((_3970_MINUS_SEXT_requestR_BITS_190_TO_180_511_M_ETC___d2163 ^
	       12'h800) <
	      12'd2105) ?
	       result__h79068 :
	       _theResult____h60845 ;
  assign _theResult___exp__h118672 =
	     sfd__h118038[53] ?
	       ((_theResult___fst_exp__h118020 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h137093) :
	       ((_theResult___fst_exp__h118020 == 11'd0 &&
		 sfd__h118038[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h118020) ;
  assign _theResult___exp__h128247 =
	     sfd__h127613[53] ?
	       ((_theResult___fst_exp__h127521 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h137122) :
	       ((_theResult___fst_exp__h127521 == 11'd0 &&
		 sfd__h127613[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h127521) ;
  assign _theResult___exp__h13607 =
	     (sfd__h13214[24] || sfd__h13214[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h136987 =
	     sfd__h136329[53] ?
	       ((_theResult___fst_exp__h136310 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h137143) :
	       ((_theResult___fst_exp__h136310 == 11'd0 &&
		 sfd__h136329[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h136310) ;
  assign _theResult___exp__h14117 =
	     sfd__h13711[24] ?
	       ((x__h13696[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h14211) :
	       ((x__h13696[7:0] == 8'd0 && sfd__h13711[24:23] == 2'b01) ?
		  8'd1 :
		  x__h13696[7:0]) ;
  assign _theResult___exp__h36050 =
	     (sfd__h35454[53] || sfd__h35454[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h36764 =
	     sfd__h36155[53] ?
	       ((x__h36140[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h36863) :
	       ((x__h36140[10:0] == 11'd0 && sfd__h36155[53:52] == 2'b01) ?
		  11'd1 :
		  x__h36140[10:0]) ;
  assign _theResult___exp__h45632 =
	     (sfd__h45036[53] || sfd__h45036[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h46345 =
	     sfd__h45736[53] ?
	       ((x__h45721[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h46439) :
	       ((x__h45721[10:0] == 11'd0 && sfd__h45736[53:52] == 2'b01) ?
		  11'd1 :
		  x__h45721[10:0]) ;
  assign _theResult___exp__h69475 =
	     sfd__h69044[24] ?
	       ((_theResult___fst_exp__h68952 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h95934) :
	       ((_theResult___fst_exp__h68952 == 8'd0 &&
		 sfd__h69044[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h68952) ;
  assign _theResult___exp__h7547 =
	     (sfd__h7151[24] || sfd__h7151[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h78045 =
	     sfd__h77614[24] ?
	       ((_theResult___fst_exp__h77596 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h95955) :
	       ((_theResult___fst_exp__h77596 == 8'd0 &&
		 sfd__h77614[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h77596) ;
  assign _theResult___exp__h8058 =
	     sfd__h7652[24] ?
	       ((x__h7637[7:0] == 8'd254) ? 8'd255 : din_inc___2_exp__h8157) :
	       ((x__h7637[7:0] == 8'd0 && sfd__h7652[24:23] == 2'b01) ?
		  8'd1 :
		  x__h7637[7:0]) ;
  assign _theResult___exp__h87214 =
	     sfd__h86783[24] ?
	       ((_theResult___fst_exp__h86691 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h95984) :
	       ((_theResult___fst_exp__h86691 == 8'd0 &&
		 sfd__h86783[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h86691) ;
  assign _theResult___exp__h95838 =
	     sfd__h95383[24] ?
	       ((_theResult___fst_exp__h95364 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h96005) :
	       ((_theResult___fst_exp__h95364 == 8'd0 &&
		 sfd__h95383[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h95364) ;
  assign _theResult___fst_exp__h102971 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       11'd2047 :
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 ;
  assign _theResult___fst_exp__h118011 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2936 } ;
  assign _theResult___fst_exp__h118017 =
	     (sV1_exp__h815 == 8'd0 && !sV1_sfd__h816[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2909 ||
	      !_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d2938) ?
	       11'd0 :
	       _theResult___fst_exp__h118011 ;
  assign _theResult___fst_exp__h118020 =
	     (sV1_exp__h815 == 8'd0) ?
	       _theResult___fst_exp__h118017 :
	       11'd897 ;
  assign _theResult___fst_exp__h118731 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10059_0b0_theResult___fst_exp18020_0_ETC__q82 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83 ;
  assign _theResult___fst_exp__h118734 =
	     (_theResult___fst_exp__h118020 == 11'd2047) ?
	       _theResult___fst_exp__h118020 :
	       _theResult___fst_exp__h118731 ;
  assign _theResult___fst_exp__h127521 =
	     _theResult____h119285[56] ?
	       11'd2 :
	       _theResult___fst_exp__h127595 ;
  assign _theResult___fst_exp__h127586 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d3224 } ;
  assign _theResult___fst_exp__h127592 =
	     (!_theResult____h119285[56] && !_theResult____h119285[55] &&
	      !_theResult____h119285[54] &&
	      !_theResult____h119285[53] &&
	      !_theResult____h119285[52] &&
	      !_theResult____h119285[51] &&
	      !_theResult____h119285[50] &&
	      !_theResult____h119285[49] &&
	      !_theResult____h119285[48] &&
	      !_theResult____h119285[47] &&
	      !_theResult____h119285[46] &&
	      !_theResult____h119285[45] &&
	      !_theResult____h119285[44] &&
	      !_theResult____h119285[43] &&
	      !_theResult____h119285[42] &&
	      !_theResult____h119285[41] &&
	      !_theResult____h119285[40] &&
	      !_theResult____h119285[39] &&
	      !_theResult____h119285[38] &&
	      !_theResult____h119285[37] &&
	      !_theResult____h119285[36] &&
	      !_theResult____h119285[35] &&
	      !_theResult____h119285[34] &&
	      !_theResult____h119285[33] &&
	      !_theResult____h119285[32] &&
	      !_theResult____h119285[31] &&
	      !_theResult____h119285[30] &&
	      !_theResult____h119285[29] &&
	      !_theResult____h119285[28] &&
	      !_theResult____h119285[27] &&
	      !_theResult____h119285[26] &&
	      !_theResult____h119285[25] &&
	      !_theResult____h119285[24] &&
	      !_theResult____h119285[23] &&
	      !_theResult____h119285[22] &&
	      !_theResult____h119285[21] &&
	      !_theResult____h119285[20] &&
	      !_theResult____h119285[19] &&
	      !_theResult____h119285[18] &&
	      !_theResult____h119285[17] &&
	      !_theResult____h119285[16] &&
	      !_theResult____h119285[15] &&
	      !_theResult____h119285[14] &&
	      !_theResult____h119285[13] &&
	      !_theResult____h119285[12] &&
	      !_theResult____h119285[11] &&
	      !_theResult____h119285[10] &&
	      !_theResult____h119285[9] &&
	      !_theResult____h119285[8] &&
	      !_theResult____h119285[7] &&
	      !_theResult____h119285[6] &&
	      !_theResult____h119285[5] &&
	      !_theResult____h119285[4] &&
	      !_theResult____h119285[3] &&
	      !_theResult____h119285[2] &&
	      !_theResult____h119285[1] &&
	      !_theResult____h119285[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3226) ?
	       11'd0 :
	       _theResult___fst_exp__h127586 ;
  assign _theResult___fst_exp__h127595 =
	     (!_theResult____h119285[56] && _theResult____h119285[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h127592 ;
  assign _theResult___fst_exp__h128306 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19295_0b0_theResult___fst_exp27521_0_ETC__q84 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 ;
  assign _theResult___fst_exp__h128309 =
	     (_theResult___fst_exp__h127521 == 11'd2047) ?
	       _theResult___fst_exp__h127521 :
	       _theResult___fst_exp__h128306 ;
  assign _theResult___fst_exp__h136262 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q76[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q76[10:0] ;
  assign _theResult___fst_exp__h136301 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q76[10:0] -
	     { 5'd0,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2936 } ;
  assign _theResult___fst_exp__h136307 =
	     (sV1_exp__h815 == 8'd0 && !sV1_sfd__h816[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2909 ||
	      !_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3271) ?
	       11'd0 :
	       _theResult___fst_exp__h136301 ;
  assign _theResult___fst_exp__h136310 =
	     (sV1_exp__h815 == 8'd0) ?
	       _theResult___fst_exp__h136307 :
	       _theResult___fst_exp__h136262 ;
  assign _theResult___fst_exp__h13664 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3197_0b0_0_0b1_0_0b10_out_exp3610_0b_ETC__q21 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d622 ;
  assign _theResult___fst_exp__h137046 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard28320_0b0_theResult___fst_exp36310_0_ETC__q86 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 ;
  assign _theResult___fst_exp__h137049 =
	     (_theResult___fst_exp__h136310 == 11'd2047) ?
	       _theResult___fst_exp__h136310 :
	       _theResult___fst_exp__h137046 ;
  assign _theResult___fst_exp__h137058 =
	     (sV1_exp__h815 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2864 ?
		  _theResult___snd_fst_exp__h118737 :
		  _theResult___fst_exp__h102971) :
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2976 ?
		  _theResult___snd_fst_exp__h137052 :
		  _theResult___fst_exp__h102971) ;
  assign _theResult___fst_exp__h137061 =
	     (sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h137058 ;
  assign _theResult___fst_exp__h14174 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3681_0b0_x3696_BITS_7_TO_0_0b1_x3696_ETC__q19 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d661 ;
  assign _theResult___fst_exp__h14177 =
	     (x__h13696[7:0] == 8'd255) ?
	       x__h13696[7:0] :
	       _theResult___fst_exp__h14174 ;
  assign _theResult___fst_exp__h36108 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5437_0b0_0_0b1_0_0b10_out_exp6053_0b_ETC__q35 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1250 ;
  assign _theResult___fst_exp__h36822 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard6125_0b0_x6140_BITS_10_TO_0_0b1_x614_ETC__q29 :
	       CASE_requestR_BITS_194_TO_192_0x1_x6140_BITS_1_ETC__q30 ;
  assign _theResult___fst_exp__h36825 =
	     (x__h36140[10:0] == 11'd2047) ?
	       x__h36140[10:0] :
	       _theResult___fst_exp__h36822 ;
  assign _theResult___fst_exp__h45689 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5019_0b0_0_0b1_0_0b10_out_exp5635_0b_ETC__q38 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1409 ;
  assign _theResult___fst_exp__h46402 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5706_0b0_x5721_BITS_10_TO_0_0b1_x572_ETC__q39 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1447 ;
  assign _theResult___fst_exp__h46405 =
	     (x__h45721[10:0] == 11'd2047) ?
	       x__h45721[10:0] :
	       _theResult___fst_exp__h46402 ;
  assign _theResult___fst_exp__h60827 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       8'd255 :
	       CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 ;
  assign _theResult___fst_exp__h68952 =
	     _theResult____h60845[56] ? 8'd2 : _theResult___fst_exp__h69026 ;
  assign _theResult___fst_exp__h69017 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1987 } ;
  assign _theResult___fst_exp__h69023 =
	     (!_theResult____h60845[56] && !_theResult____h60845[55] &&
	      !_theResult____h60845[54] &&
	      !_theResult____h60845[53] &&
	      !_theResult____h60845[52] &&
	      !_theResult____h60845[51] &&
	      !_theResult____h60845[50] &&
	      !_theResult____h60845[49] &&
	      !_theResult____h60845[48] &&
	      !_theResult____h60845[47] &&
	      !_theResult____h60845[46] &&
	      !_theResult____h60845[45] &&
	      !_theResult____h60845[44] &&
	      !_theResult____h60845[43] &&
	      !_theResult____h60845[42] &&
	      !_theResult____h60845[41] &&
	      !_theResult____h60845[40] &&
	      !_theResult____h60845[39] &&
	      !_theResult____h60845[38] &&
	      !_theResult____h60845[37] &&
	      !_theResult____h60845[36] &&
	      !_theResult____h60845[35] &&
	      !_theResult____h60845[34] &&
	      !_theResult____h60845[33] &&
	      !_theResult____h60845[32] &&
	      !_theResult____h60845[31] &&
	      !_theResult____h60845[30] &&
	      !_theResult____h60845[29] &&
	      !_theResult____h60845[28] &&
	      !_theResult____h60845[27] &&
	      !_theResult____h60845[26] &&
	      !_theResult____h60845[25] &&
	      !_theResult____h60845[24] &&
	      !_theResult____h60845[23] &&
	      !_theResult____h60845[22] &&
	      !_theResult____h60845[21] &&
	      !_theResult____h60845[20] &&
	      !_theResult____h60845[19] &&
	      !_theResult____h60845[18] &&
	      !_theResult____h60845[17] &&
	      !_theResult____h60845[16] &&
	      !_theResult____h60845[15] &&
	      !_theResult____h60845[14] &&
	      !_theResult____h60845[13] &&
	      !_theResult____h60845[12] &&
	      !_theResult____h60845[11] &&
	      !_theResult____h60845[10] &&
	      !_theResult____h60845[9] &&
	      !_theResult____h60845[8] &&
	      !_theResult____h60845[7] &&
	      !_theResult____h60845[6] &&
	      !_theResult____h60845[5] &&
	      !_theResult____h60845[4] &&
	      !_theResult____h60845[3] &&
	      !_theResult____h60845[2] &&
	      !_theResult____h60845[1] &&
	      !_theResult____h60845[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1989) ?
	       8'd0 :
	       _theResult___fst_exp__h69017 ;
  assign _theResult___fst_exp__h69026 =
	     (!_theResult____h60845[56] && _theResult____h60845[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h69023 ;
  assign _theResult___fst_exp__h69534 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0855_0b0_theResult___fst_exp8952_0b1_ETC__q54 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55 ;
  assign _theResult___fst_exp__h69537 =
	     (_theResult___fst_exp__h68952 == 8'd255) ?
	       _theResult___fst_exp__h68952 :
	       _theResult___fst_exp__h69534 ;
  assign _theResult___fst_exp__h7605 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard134_0b0_0_0b1_0_0b10_out_exp550_0b11_ETC__q16 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d333 ;
  assign _theResult___fst_exp__h77587 =
	     8'd129 -
	     { 2'd0,
	       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2123 } ;
  assign _theResult___fst_exp__h77593 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_680_029_AND_NOT_requestR__ETC___d2068 ||
	      !_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2125) ?
	       8'd0 :
	       _theResult___fst_exp__h77587 ;
  assign _theResult___fst_exp__h77596 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h77593 :
	       8'd129 ;
  assign _theResult___fst_exp__h78104 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9548_0b0_theResult___fst_exp7596_0b1_ETC__q56 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57 ;
  assign _theResult___fst_exp__h78107 =
	     (_theResult___fst_exp__h77596 == 8'd255) ?
	       _theResult___fst_exp__h77596 :
	       _theResult___fst_exp__h78104 ;
  assign _theResult___fst_exp__h8116 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard622_0b0_x637_BITS_7_TO_0_0b1_x637_BI_ETC__q8 :
	       CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9 ;
  assign _theResult___fst_exp__h8119 =
	     (x__h7637[7:0] == 8'd255) ?
	       x__h7637[7:0] :
	       _theResult___fst_exp__h8116 ;
  assign _theResult___fst_exp__h86691 =
	     _theResult____h78455[56] ? 8'd2 : _theResult___fst_exp__h86765 ;
  assign _theResult___fst_exp__h86756 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2407 } ;
  assign _theResult___fst_exp__h86762 =
	     (!_theResult____h78455[56] && !_theResult____h78455[55] &&
	      !_theResult____h78455[54] &&
	      !_theResult____h78455[53] &&
	      !_theResult____h78455[52] &&
	      !_theResult____h78455[51] &&
	      !_theResult____h78455[50] &&
	      !_theResult____h78455[49] &&
	      !_theResult____h78455[48] &&
	      !_theResult____h78455[47] &&
	      !_theResult____h78455[46] &&
	      !_theResult____h78455[45] &&
	      !_theResult____h78455[44] &&
	      !_theResult____h78455[43] &&
	      !_theResult____h78455[42] &&
	      !_theResult____h78455[41] &&
	      !_theResult____h78455[40] &&
	      !_theResult____h78455[39] &&
	      !_theResult____h78455[38] &&
	      !_theResult____h78455[37] &&
	      !_theResult____h78455[36] &&
	      !_theResult____h78455[35] &&
	      !_theResult____h78455[34] &&
	      !_theResult____h78455[33] &&
	      !_theResult____h78455[32] &&
	      !_theResult____h78455[31] &&
	      !_theResult____h78455[30] &&
	      !_theResult____h78455[29] &&
	      !_theResult____h78455[28] &&
	      !_theResult____h78455[27] &&
	      !_theResult____h78455[26] &&
	      !_theResult____h78455[25] &&
	      !_theResult____h78455[24] &&
	      !_theResult____h78455[23] &&
	      !_theResult____h78455[22] &&
	      !_theResult____h78455[21] &&
	      !_theResult____h78455[20] &&
	      !_theResult____h78455[19] &&
	      !_theResult____h78455[18] &&
	      !_theResult____h78455[17] &&
	      !_theResult____h78455[16] &&
	      !_theResult____h78455[15] &&
	      !_theResult____h78455[14] &&
	      !_theResult____h78455[13] &&
	      !_theResult____h78455[12] &&
	      !_theResult____h78455[11] &&
	      !_theResult____h78455[10] &&
	      !_theResult____h78455[9] &&
	      !_theResult____h78455[8] &&
	      !_theResult____h78455[7] &&
	      !_theResult____h78455[6] &&
	      !_theResult____h78455[5] &&
	      !_theResult____h78455[4] &&
	      !_theResult____h78455[3] &&
	      !_theResult____h78455[2] &&
	      !_theResult____h78455[1] &&
	      !_theResult____h78455[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2409) ?
	       8'd0 :
	       _theResult___fst_exp__h86756 ;
  assign _theResult___fst_exp__h86765 =
	     (!_theResult____h78455[56] && _theResult____h78455[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h86762 ;
  assign _theResult___fst_exp__h87273 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8465_0b0_theResult___fst_exp6691_0b1_ETC__q58 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59 ;
  assign _theResult___fst_exp__h87276 =
	     (_theResult___fst_exp__h86691 == 8'd255) ?
	       _theResult___fst_exp__h86691 :
	       _theResult___fst_exp__h87273 ;
  assign _theResult___fst_exp__h95316 =
	     (SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC__q48[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC__q48[7:0] ;
  assign _theResult___fst_exp__h95355 =
	     SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC__q48[7:0] -
	     { 2'd0,
	       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2123 } ;
  assign _theResult___fst_exp__h95361 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_680_029_AND_NOT_requestR__ETC___d2068 ||
	      !_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_0__ETC___d2454) ?
	       8'd0 :
	       _theResult___fst_exp__h95355 ;
  assign _theResult___fst_exp__h95364 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h95361 :
	       _theResult___fst_exp__h95316 ;
  assign _theResult___fst_exp__h95897 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard7287_0b0_theResult___fst_exp5364_0b1_ETC__q60 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 ;
  assign _theResult___fst_exp__h95900 =
	     (_theResult___fst_exp__h95364 == 8'd255) ?
	       _theResult___fst_exp__h95364 :
	       _theResult___fst_exp__h95897 ;
  assign _theResult___fst_exp__h95909 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1754 ?
		  _theResult___snd_fst_exp__h78110 :
		  _theResult___fst_exp__h60827) :
	       (SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2161 ?
		  _theResult___snd_fst_exp__h95903 :
		  _theResult___fst_exp__h60827) ;
  assign _theResult___fst_exp__h95912 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h95909 ;
  assign _theResult___fst_sfd__h102972 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       52'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 ;
  assign _theResult___fst_sfd__h118732 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10059_0b0_theResult___snd17971_BITS__ETC__q88 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 ;
  assign _theResult___fst_sfd__h118735 =
	     (_theResult___fst_exp__h118020 == 11'd2047) ?
	       _theResult___snd__h117971[56:5] :
	       _theResult___fst_sfd__h118732 ;
  assign _theResult___fst_sfd__h128307 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19295_0b0_sfdin27515_BITS_56_TO_5_0b_ETC__q90 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin27515_B_ETC__q91 ;
  assign _theResult___fst_sfd__h128310 =
	     (_theResult___fst_exp__h127521 == 11'd2047) ?
	       sfdin__h127515[56:5] :
	       _theResult___fst_sfd__h128307 ;
  assign _theResult___fst_sfd__h13665 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3197_0b0_sfd___33187_BITS_31_TO_9_0b_ETC__q22 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d681 ;
  assign _theResult___fst_sfd__h137047 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard28320_0b0_theResult___snd36256_BITS__ETC__q92 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 ;
  assign _theResult___fst_sfd__h137050 =
	     (_theResult___fst_exp__h136310 == 11'd2047) ?
	       _theResult___snd__h136256[56:5] :
	       _theResult___fst_sfd__h137047 ;
  assign _theResult___fst_sfd__h137059 =
	     (sV1_exp__h815 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2864 ?
		  _theResult___snd_fst_sfd__h118738 :
		  _theResult___fst_sfd__h102972) :
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2976 ?
		  _theResult___snd_fst_sfd__h137053 :
		  _theResult___fst_sfd__h102972) ;
  assign _theResult___fst_sfd__h137065 =
	     ((sV1_exp__h815 == 8'd255 || sV1_exp__h815 == 8'd0) &&
	      sV1_sfd__h816 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h137059 ;
  assign _theResult___fst_sfd__h14175 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3681_0b0_sfd___33187_BITS_30_TO_8_0b_ETC__q20 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d693 ;
  assign _theResult___fst_sfd__h14178 =
	     (x__h13696[7:0] == 8'd255) ?
	       sfd___3__h13187[30:8] :
	       _theResult___fst_sfd__h14175 ;
  assign _theResult___fst_sfd__h36109 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5437_0b0_sfd___35427_BITS_54_TO_3_0b_ETC__q33 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q34 ;
  assign _theResult___fst_sfd__h36823 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard6125_0b0_sfd___35427_BITS_53_TO_2_0b_ETC__q31 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q32 ;
  assign _theResult___fst_sfd__h36826 =
	     (x__h36140[10:0] == 11'd2047) ?
	       sfd___3__h35427[53:2] :
	       _theResult___fst_sfd__h36823 ;
  assign _theResult___fst_sfd__h45690 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5019_0b0_sfd___35009_BITS_54_TO_3_0b_ETC__q41 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1466 ;
  assign _theResult___fst_sfd__h46403 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5706_0b0_sfd___35009_BITS_53_TO_2_0b_ETC__q40 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1478 ;
  assign _theResult___fst_sfd__h46406 =
	     (x__h45721[10:0] == 11'd2047) ?
	       sfd___3__h45009[53:2] :
	       _theResult___fst_sfd__h46403 ;
  assign _theResult___fst_sfd__h49541 = { 1'd1, requestR[178:128] } ;
  assign _theResult___fst_sfd__h60828 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       23'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 ;
  assign _theResult___fst_sfd__h69535 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0855_0b0_sfdin8946_BITS_56_TO_34_0b1_ETC__q62 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin8946_BI_ETC__q63 ;
  assign _theResult___fst_sfd__h69538 =
	     (_theResult___fst_exp__h68952 == 8'd255) ?
	       sfdin__h68946[56:34] :
	       _theResult___fst_sfd__h69535 ;
  assign _theResult___fst_sfd__h7606 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard134_0b0_sfd___3124_BITS_31_TO_9_0b1__ETC__q12 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13 ;
  assign _theResult___fst_sfd__h78105 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9548_0b0_theResult___snd7547_BITS_56_ETC__q64 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 ;
  assign _theResult___fst_sfd__h78108 =
	     (_theResult___fst_exp__h77596 == 8'd255) ?
	       _theResult___snd__h77547[56:34] :
	       _theResult___fst_sfd__h78105 ;
  assign _theResult___fst_sfd__h8117 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard622_0b0_sfd___3124_BITS_30_TO_8_0b1__ETC__q10 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11 ;
  assign _theResult___fst_sfd__h8120 =
	     (x__h7637[7:0] == 8'd255) ?
	       sfd___3__h7124[30:8] :
	       _theResult___fst_sfd__h8117 ;
  assign _theResult___fst_sfd__h87274 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8465_0b0_sfdin6685_BITS_56_TO_34_0b1_ETC__q66 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin6685_BI_ETC__q67 ;
  assign _theResult___fst_sfd__h87277 =
	     (_theResult___fst_exp__h86691 == 8'd255) ?
	       sfdin__h86685[56:34] :
	       _theResult___fst_sfd__h87274 ;
  assign _theResult___fst_sfd__h95898 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard7287_0b0_theResult___snd5310_BITS_56_ETC__q68 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 ;
  assign _theResult___fst_sfd__h95901 =
	     (_theResult___fst_exp__h95364 == 8'd255) ?
	       _theResult___snd__h95310[56:34] :
	       _theResult___fst_sfd__h95898 ;
  assign _theResult___fst_sfd__h95910 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1754 ?
		  _theResult___snd_fst_sfd__h78111 :
		  _theResult___fst_sfd__h60828) :
	       (SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2161 ?
		  _theResult___snd_fst_sfd__h95904 :
		  _theResult___fst_sfd__h60828) ;
  assign _theResult___fst_sfd__h95916 =
	     ((requestR[190:180] == 11'd2047 || requestR[190:180] == 11'd0) &&
	      requestR[179:128] == 52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h95910 ;
  assign _theResult___fst_sfd__h97520 = { 1'd1, sV1_sfd__h816[21:0] } ;
  assign _theResult___sfd__h118673 =
	     sfd__h118038[53] ?
	       ((_theResult___fst_exp__h118020 == 11'd2046) ?
		  52'd0 :
		  sfd__h118038[52:1]) :
	       sfd__h118038[51:0] ;
  assign _theResult___sfd__h128248 =
	     sfd__h127613[53] ?
	       ((_theResult___fst_exp__h127521 == 11'd2046) ?
		  52'd0 :
		  sfd__h127613[52:1]) :
	       sfd__h127613[51:0] ;
  assign _theResult___sfd__h13608 =
	     sfd__h13214[24] ? sfd__h13214[23:1] : sfd__h13214[22:0] ;
  assign _theResult___sfd__h136988 =
	     sfd__h136329[53] ?
	       ((_theResult___fst_exp__h136310 == 11'd2046) ?
		  52'd0 :
		  sfd__h136329[52:1]) :
	       sfd__h136329[51:0] ;
  assign _theResult___sfd__h14118 =
	     sfd__h13711[24] ?
	       ((x__h13696[7:0] == 8'd254) ? 23'd0 : sfd__h13711[23:1]) :
	       sfd__h13711[22:0] ;
  assign _theResult___sfd__h36051 =
	     sfd__h35454[53] ? sfd__h35454[52:1] : sfd__h35454[51:0] ;
  assign _theResult___sfd__h36765 =
	     sfd__h36155[53] ?
	       ((x__h36140[10:0] == 11'd2046) ? 52'd0 : sfd__h36155[52:1]) :
	       sfd__h36155[51:0] ;
  assign _theResult___sfd__h45633 =
	     sfd__h45036[53] ? sfd__h45036[52:1] : sfd__h45036[51:0] ;
  assign _theResult___sfd__h46346 =
	     sfd__h45736[53] ?
	       ((x__h45721[10:0] == 11'd2046) ? 52'd0 : sfd__h45736[52:1]) :
	       sfd__h45736[51:0] ;
  assign _theResult___sfd__h69476 =
	     sfd__h69044[24] ?
	       ((_theResult___fst_exp__h68952 == 8'd254) ?
		  23'd0 :
		  sfd__h69044[23:1]) :
	       sfd__h69044[22:0] ;
  assign _theResult___sfd__h7548 =
	     sfd__h7151[24] ? sfd__h7151[23:1] : sfd__h7151[22:0] ;
  assign _theResult___sfd__h78046 =
	     sfd__h77614[24] ?
	       ((_theResult___fst_exp__h77596 == 8'd254) ?
		  23'd0 :
		  sfd__h77614[23:1]) :
	       sfd__h77614[22:0] ;
  assign _theResult___sfd__h8059 =
	     sfd__h7652[24] ?
	       ((x__h7637[7:0] == 8'd254) ? 23'd0 : sfd__h7652[23:1]) :
	       sfd__h7652[22:0] ;
  assign _theResult___sfd__h87215 =
	     sfd__h86783[24] ?
	       ((_theResult___fst_exp__h86691 == 8'd254) ?
		  23'd0 :
		  sfd__h86783[23:1]) :
	       sfd__h86783[22:0] ;
  assign _theResult___sfd__h95839 =
	     sfd__h95383[24] ?
	       ((_theResult___fst_exp__h95364 == 8'd254) ?
		  23'd0 :
		  sfd__h95383[23:1]) :
	       sfd__h95383[22:0] ;
  assign _theResult___snd__h117971 =
	     (sV1_exp__h815 == 8'd0) ?
	       _theResult___snd__h117980 :
	       _theResult___snd__h117973 ;
  assign _theResult___snd__h117973 = { sV1_sfd__h816, 34'd0 } ;
  assign _theResult___snd__h117980 =
	     (sV1_exp__h815 == 8'd0 && !sV1_sfd__h816[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2909) ?
	       b__h14782 :
	       _theResult___snd__h117986 ;
  assign _theResult___snd__h117986 =
	     { IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q74[54:0],
	       2'd0 } ;
  assign _theResult___snd__h118009 =
	     b__h14782 <<
	     IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2936 ;
  assign _theResult___snd__h127532 = { _theResult____h119285[55:0], 1'd0 } ;
  assign _theResult___snd__h127543 =
	     (!_theResult____h119285[56] && _theResult____h119285[55]) ?
	       _theResult___snd__h127545 :
	       _theResult___snd__h127555 ;
  assign _theResult___snd__h127545 = { _theResult____h119285[54:0], 2'd0 } ;
  assign _theResult___snd__h127555 =
	     (!_theResult____h119285[56] && !_theResult____h119285[55] &&
	      !_theResult____h119285[54] &&
	      !_theResult____h119285[53] &&
	      !_theResult____h119285[52] &&
	      !_theResult____h119285[51] &&
	      !_theResult____h119285[50] &&
	      !_theResult____h119285[49] &&
	      !_theResult____h119285[48] &&
	      !_theResult____h119285[47] &&
	      !_theResult____h119285[46] &&
	      !_theResult____h119285[45] &&
	      !_theResult____h119285[44] &&
	      !_theResult____h119285[43] &&
	      !_theResult____h119285[42] &&
	      !_theResult____h119285[41] &&
	      !_theResult____h119285[40] &&
	      !_theResult____h119285[39] &&
	      !_theResult____h119285[38] &&
	      !_theResult____h119285[37] &&
	      !_theResult____h119285[36] &&
	      !_theResult____h119285[35] &&
	      !_theResult____h119285[34] &&
	      !_theResult____h119285[33] &&
	      !_theResult____h119285[32] &&
	      !_theResult____h119285[31] &&
	      !_theResult____h119285[30] &&
	      !_theResult____h119285[29] &&
	      !_theResult____h119285[28] &&
	      !_theResult____h119285[27] &&
	      !_theResult____h119285[26] &&
	      !_theResult____h119285[25] &&
	      !_theResult____h119285[24] &&
	      !_theResult____h119285[23] &&
	      !_theResult____h119285[22] &&
	      !_theResult____h119285[21] &&
	      !_theResult____h119285[20] &&
	      !_theResult____h119285[19] &&
	      !_theResult____h119285[18] &&
	      !_theResult____h119285[17] &&
	      !_theResult____h119285[16] &&
	      !_theResult____h119285[15] &&
	      !_theResult____h119285[14] &&
	      !_theResult____h119285[13] &&
	      !_theResult____h119285[12] &&
	      !_theResult____h119285[11] &&
	      !_theResult____h119285[10] &&
	      !_theResult____h119285[9] &&
	      !_theResult____h119285[8] &&
	      !_theResult____h119285[7] &&
	      !_theResult____h119285[6] &&
	      !_theResult____h119285[5] &&
	      !_theResult____h119285[4] &&
	      !_theResult____h119285[3] &&
	      !_theResult____h119285[2] &&
	      !_theResult____h119285[1] &&
	      !_theResult____h119285[0]) ?
	       _theResult____h119285 :
	       _theResult___snd__h127561 ;
  assign _theResult___snd__h127561 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q77[54:0],
	       2'd0 } ;
  assign _theResult___snd__h127584 =
	     _theResult____h119285 <<
	     IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d3224 ;
  assign _theResult___snd__h136256 =
	     (sV1_exp__h815 == 8'd0) ?
	       _theResult___snd__h136270 :
	       _theResult___snd__h117973 ;
  assign _theResult___snd__h136270 =
	     (sV1_exp__h815 == 8'd0 && !sV1_sfd__h816[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2909) ?
	       b__h14782 :
	       _theResult___snd__h136276 ;
  assign _theResult___snd__h136276 =
	     { IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q80[54:0],
	       2'd0 } ;
  assign _theResult___snd__h136294 =
	     b__h14782 <<
	     IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3270 ;
  assign _theResult___snd__h68963 = { _theResult____h60845[55:0], 1'd0 } ;
  assign _theResult___snd__h68974 =
	     (!_theResult____h60845[56] && _theResult____h60845[55]) ?
	       _theResult___snd__h68976 :
	       _theResult___snd__h68986 ;
  assign _theResult___snd__h68976 = { _theResult____h60845[54:0], 2'd0 } ;
  assign _theResult___snd__h68986 =
	     (!_theResult____h60845[56] && !_theResult____h60845[55] &&
	      !_theResult____h60845[54] &&
	      !_theResult____h60845[53] &&
	      !_theResult____h60845[52] &&
	      !_theResult____h60845[51] &&
	      !_theResult____h60845[50] &&
	      !_theResult____h60845[49] &&
	      !_theResult____h60845[48] &&
	      !_theResult____h60845[47] &&
	      !_theResult____h60845[46] &&
	      !_theResult____h60845[45] &&
	      !_theResult____h60845[44] &&
	      !_theResult____h60845[43] &&
	      !_theResult____h60845[42] &&
	      !_theResult____h60845[41] &&
	      !_theResult____h60845[40] &&
	      !_theResult____h60845[39] &&
	      !_theResult____h60845[38] &&
	      !_theResult____h60845[37] &&
	      !_theResult____h60845[36] &&
	      !_theResult____h60845[35] &&
	      !_theResult____h60845[34] &&
	      !_theResult____h60845[33] &&
	      !_theResult____h60845[32] &&
	      !_theResult____h60845[31] &&
	      !_theResult____h60845[30] &&
	      !_theResult____h60845[29] &&
	      !_theResult____h60845[28] &&
	      !_theResult____h60845[27] &&
	      !_theResult____h60845[26] &&
	      !_theResult____h60845[25] &&
	      !_theResult____h60845[24] &&
	      !_theResult____h60845[23] &&
	      !_theResult____h60845[22] &&
	      !_theResult____h60845[21] &&
	      !_theResult____h60845[20] &&
	      !_theResult____h60845[19] &&
	      !_theResult____h60845[18] &&
	      !_theResult____h60845[17] &&
	      !_theResult____h60845[16] &&
	      !_theResult____h60845[15] &&
	      !_theResult____h60845[14] &&
	      !_theResult____h60845[13] &&
	      !_theResult____h60845[12] &&
	      !_theResult____h60845[11] &&
	      !_theResult____h60845[10] &&
	      !_theResult____h60845[9] &&
	      !_theResult____h60845[8] &&
	      !_theResult____h60845[7] &&
	      !_theResult____h60845[6] &&
	      !_theResult____h60845[5] &&
	      !_theResult____h60845[4] &&
	      !_theResult____h60845[3] &&
	      !_theResult____h60845[2] &&
	      !_theResult____h60845[1] &&
	      !_theResult____h60845[0]) ?
	       _theResult____h60845 :
	       _theResult___snd__h68992 ;
  assign _theResult___snd__h68992 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q44[54:0],
	       2'd0 } ;
  assign _theResult___snd__h69015 =
	     _theResult____h60845 <<
	     IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1987 ;
  assign _theResult___snd__h77547 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h77556 :
	       _theResult___snd__h77549 ;
  assign _theResult___snd__h77549 = { requestR[179:128], 5'd0 } ;
  assign _theResult___snd__h77556 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_680_029_AND_NOT_requestR__ETC___d2068) ?
	       sfd__h53245 :
	       _theResult___snd__h77562 ;
  assign _theResult___snd__h77562 =
	     { IF_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_ETC__q46[54:0],
	       2'd0 } ;
  assign _theResult___snd__h77585 =
	     sfd__h53245 <<
	     IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2123 ;
  assign _theResult___snd__h86702 = { _theResult____h78455[55:0], 1'd0 } ;
  assign _theResult___snd__h86713 =
	     (!_theResult____h78455[56] && _theResult____h78455[55]) ?
	       _theResult___snd__h86715 :
	       _theResult___snd__h86725 ;
  assign _theResult___snd__h86715 = { _theResult____h78455[54:0], 2'd0 } ;
  assign _theResult___snd__h86725 =
	     (!_theResult____h78455[56] && !_theResult____h78455[55] &&
	      !_theResult____h78455[54] &&
	      !_theResult____h78455[53] &&
	      !_theResult____h78455[52] &&
	      !_theResult____h78455[51] &&
	      !_theResult____h78455[50] &&
	      !_theResult____h78455[49] &&
	      !_theResult____h78455[48] &&
	      !_theResult____h78455[47] &&
	      !_theResult____h78455[46] &&
	      !_theResult____h78455[45] &&
	      !_theResult____h78455[44] &&
	      !_theResult____h78455[43] &&
	      !_theResult____h78455[42] &&
	      !_theResult____h78455[41] &&
	      !_theResult____h78455[40] &&
	      !_theResult____h78455[39] &&
	      !_theResult____h78455[38] &&
	      !_theResult____h78455[37] &&
	      !_theResult____h78455[36] &&
	      !_theResult____h78455[35] &&
	      !_theResult____h78455[34] &&
	      !_theResult____h78455[33] &&
	      !_theResult____h78455[32] &&
	      !_theResult____h78455[31] &&
	      !_theResult____h78455[30] &&
	      !_theResult____h78455[29] &&
	      !_theResult____h78455[28] &&
	      !_theResult____h78455[27] &&
	      !_theResult____h78455[26] &&
	      !_theResult____h78455[25] &&
	      !_theResult____h78455[24] &&
	      !_theResult____h78455[23] &&
	      !_theResult____h78455[22] &&
	      !_theResult____h78455[21] &&
	      !_theResult____h78455[20] &&
	      !_theResult____h78455[19] &&
	      !_theResult____h78455[18] &&
	      !_theResult____h78455[17] &&
	      !_theResult____h78455[16] &&
	      !_theResult____h78455[15] &&
	      !_theResult____h78455[14] &&
	      !_theResult____h78455[13] &&
	      !_theResult____h78455[12] &&
	      !_theResult____h78455[11] &&
	      !_theResult____h78455[10] &&
	      !_theResult____h78455[9] &&
	      !_theResult____h78455[8] &&
	      !_theResult____h78455[7] &&
	      !_theResult____h78455[6] &&
	      !_theResult____h78455[5] &&
	      !_theResult____h78455[4] &&
	      !_theResult____h78455[3] &&
	      !_theResult____h78455[2] &&
	      !_theResult____h78455[1] &&
	      !_theResult____h78455[0]) ?
	       _theResult____h78455 :
	       _theResult___snd__h86731 ;
  assign _theResult___snd__h86731 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q49[54:0],
	       2'd0 } ;
  assign _theResult___snd__h86754 =
	     _theResult____h78455 <<
	     IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2407 ;
  assign _theResult___snd__h95310 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h95324 :
	       _theResult___snd__h77549 ;
  assign _theResult___snd__h95324 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_680_029_AND_NOT_requestR__ETC___d2068) ?
	       sfd__h53245 :
	       _theResult___snd__h95330 ;
  assign _theResult___snd__h95330 =
	     { IF_0_CONCAT_IF_requestR_BITS_190_TO_180_511_EQ_ETC__q52[54:0],
	       2'd0 } ;
  assign _theResult___snd__h95348 =
	     sfd__h53245 <<
	     IF_SEXT_requestR_BITS_190_TO_180_511_MINUS_102_ETC___d2453 ;
  assign _theResult___snd_fst_exp__h118737 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2866 ?
	       11'd0 :
	       _theResult___fst_exp__h118734 ;
  assign _theResult___snd_fst_exp__h137052 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2977 ?
	       _theResult___fst_exp__h128309 :
	       _theResult___fst_exp__h137049 ;
  assign _theResult___snd_fst_exp__h14180 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593 ?
	       _theResult___fst_exp__h13664 :
	       _theResult___fst_exp__h14177 ;
  assign _theResult___snd_fst_exp__h14183 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14180 ;
  assign _theResult___snd_fst_exp__h14186 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 ?
	       _theResult___snd_fst_exp__h14183 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h36828 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188 ?
	       _theResult___fst_exp__h36108 :
	       _theResult___fst_exp__h36825 ;
  assign _theResult___snd_fst_exp__h36831 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1186 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h36828 ;
  assign _theResult___snd_fst_exp__h36834 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1184 ?
	       _theResult___snd_fst_exp__h36831 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h46408 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1379 ?
	       _theResult___fst_exp__h45689 :
	       _theResult___fst_exp__h46405 ;
  assign _theResult___snd_fst_exp__h46411 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1378 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h46408 ;
  assign _theResult___snd_fst_exp__h46414 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1377 ?
	       _theResult___snd_fst_exp__h46411 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h78110 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1755 ?
	       _theResult___fst_exp__h69537 :
	       _theResult___fst_exp__h78107 ;
  assign _theResult___snd_fst_exp__h8122 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 ?
	       _theResult___fst_exp__h7605 :
	       _theResult___fst_exp__h8119 ;
  assign _theResult___snd_fst_exp__h8125 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8122 ;
  assign _theResult___snd_fst_exp__h8128 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 ?
	       _theResult___snd_fst_exp__h8125 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h95903 =
	     SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2162 ?
	       _theResult___fst_exp__h87276 :
	       _theResult___fst_exp__h95900 ;
  assign _theResult___snd_fst_sfd__h118738 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2866 ?
	       52'd0 :
	       _theResult___fst_sfd__h118735 ;
  assign _theResult___snd_fst_sfd__h137053 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d2977 ?
	       _theResult___fst_sfd__h128310 :
	       _theResult___fst_sfd__h137050 ;
  assign _theResult___snd_fst_sfd__h14181 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593 ?
	       _theResult___fst_sfd__h13665 :
	       _theResult___fst_sfd__h14178 ;
  assign _theResult___snd_fst_sfd__h36829 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188 ?
	       _theResult___fst_sfd__h36109 :
	       _theResult___fst_sfd__h36826 ;
  assign _theResult___snd_fst_sfd__h46409 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1379 ?
	       _theResult___fst_sfd__h45690 :
	       _theResult___fst_sfd__h46406 ;
  assign _theResult___snd_fst_sfd__h53199 =
	     (value__h49084[51:29] == 23'd0) ?
	       23'd2097152 :
	       value__h49084[51:29] ;
  assign _theResult___snd_fst_sfd__h78111 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_680_TH_ETC___d1755 ?
	       _theResult___fst_sfd__h69538 :
	       _theResult___fst_sfd__h78108 ;
  assign _theResult___snd_fst_sfd__h8123 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 ?
	       _theResult___fst_sfd__h7606 :
	       _theResult___fst_sfd__h8120 ;
  assign _theResult___snd_fst_sfd__h95904 =
	     SEXT_requestR_BITS_190_TO_180_511_MINUS_1023_5_ETC___d2162 ?
	       _theResult___fst_sfd__h87277 :
	       _theResult___fst_sfd__h95901 ;
  assign _theResult___snd_fst_sfd__h99148 =
	     (value__h97265 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h97262 ;
  assign ab__h155049 = dw_result$wget ;
  assign b__h14782 = { value__h14784, 32'd0 } ;
  assign b__h47006 = { value__h47008, 32'd0 } ;
  assign din_inc___2_exp__h137093 = _theResult___fst_exp__h118020 + 11'd1 ;
  assign din_inc___2_exp__h137122 = _theResult___fst_exp__h127521 + 11'd1 ;
  assign din_inc___2_exp__h137143 = _theResult___fst_exp__h136310 + 11'd1 ;
  assign din_inc___2_exp__h14211 = x__h13696[7:0] + 8'd1 ;
  assign din_inc___2_exp__h36863 = x__h36140[10:0] + 11'd1 ;
  assign din_inc___2_exp__h46439 = x__h45721[10:0] + 11'd1 ;
  assign din_inc___2_exp__h8157 = x__h7637[7:0] + 8'd1 ;
  assign din_inc___2_exp__h95934 = _theResult___fst_exp__h68952 + 8'd1 ;
  assign din_inc___2_exp__h95955 = _theResult___fst_exp__h77596 + 8'd1 ;
  assign din_inc___2_exp__h95984 = _theResult___fst_exp__h86691 + 8'd1 ;
  assign din_inc___2_exp__h96005 = _theResult___fst_exp__h95364 + 8'd1 ;
  assign guard__h110059 =
	     { IF_theResult___snd17971_BIT_4_THEN_2_ELSE_0__q75[1],
	       { _theResult___snd__h117971[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h119295 =
	     { IF_sfdin27515_BIT_4_THEN_2_ELSE_0__q78[1],
	       { sfdin__h127515[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h119893 = x__h119993 != 57'd0 ;
  assign guard__h128320 =
	     { IF_theResult___snd36256_BIT_4_THEN_2_ELSE_0__q81[1],
	       { _theResult___snd__h136256[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h13197 =
	     { IF_sfd___33187_BIT_8_THEN_2_ELSE_0__q17[1],
	       { sfd___3__h13187[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h13681 =
	     { IF_sfd___33187_BIT_7_THEN_2_ELSE_0__q18[1],
	       { sfd___3__h13187[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h14718 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d781[23],
	       { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d781[22:0],
		 33'd0 } !=
	       56'd0 } ;
  assign guard__h15269 =
	     { IF_x5455_BIT_24_THEN_2_ELSE_0__q23[1],
	       { x__h15455[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h16277 =
	     { IF_x6495_BIT_24_THEN_2_ELSE_0__q24[1],
	       { x__h16495[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h35437 =
	     { IF_sfd___35427_BIT_2_THEN_2_ELSE_0__q25[1],
	       { sfd___3__h35427[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h36125 =
	     { IF_sfd___35427_BIT_1_THEN_2_ELSE_0__q26[1],
	       { sfd___3__h35427[0], 53'd0 } != 54'd0 } ;
  assign guard__h45019 =
	     { IF_sfd___35009_BIT_2_THEN_2_ELSE_0__q36[1],
	       { sfd___3__h45009[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h45706 =
	     { IF_sfd___35009_BIT_1_THEN_2_ELSE_0__q37[1],
	       { sfd___3__h45009[0], 53'd0 } != 54'd0 } ;
  assign guard__h46942 =
	     { IF_requestR_BIT_191_139_THEN_NEG_0b0_CONCAT_NO_ETC___d1530[52],
	       { IF_requestR_BIT_191_139_THEN_NEG_0b0_CONCAT_NO_ETC___d1530[51:0],
		 33'd0 } !=
	       85'd0 } ;
  assign guard__h47493 =
	     { IF_x7679_BIT_53_THEN_2_ELSE_0__q42[1],
	       { x__h47679[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h48484 =
	     { IF_x8702_BIT_53_THEN_2_ELSE_0__q43[1],
	       { x__h48702[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h60855 =
	     { IF_sfdin8946_BIT_33_THEN_2_ELSE_0__q45[1],
	       { sfdin__h68946[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h69548 =
	     { IF_theResult___snd7547_BIT_33_THEN_2_ELSE_0__q47[1],
	       { _theResult___snd__h77547[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h7134 =
	     { IF_sfd___3124_BIT_8_THEN_2_ELSE_0__q6[1],
	       { sfd___3__h7124[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h7622 =
	     { IF_sfd___3124_BIT_7_THEN_2_ELSE_0__q7[1],
	       { sfd___3__h7124[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h78465 =
	     { IF_sfdin6685_BIT_33_THEN_2_ELSE_0__q50[1],
	       { sfdin__h86685[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h79063 = x__h79163 != 57'd0 ;
  assign guard__h87287 =
	     { IF_theResult___snd5310_BIT_33_THEN_2_ELSE_0__q53[1],
	       { _theResult___snd__h95310[32:0], 23'd0 } != 56'd0 } ;
  assign out1___1__h15209 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d781[56:24] +
	     33'd1 ;
  assign out1___1__h47433 =
	     IF_requestR_BIT_191_139_THEN_NEG_0b0_CONCAT_NO_ETC___d1530[85:53] +
	     33'd1 ;
  assign out___1_sfd__h97262 = { value__h97265, 29'd0 } ;
  assign out_exp__h118675 =
	     _theResult___snd__h117971[5] ?
	       _theResult___exp__h118672 :
	       _theResult___fst_exp__h118020 ;
  assign out_exp__h128250 =
	     sfdin__h127515[5] ?
	       _theResult___exp__h128247 :
	       _theResult___fst_exp__h127521 ;
  assign out_exp__h13610 =
	     sfd___3__h13187[9] ? _theResult___exp__h13607 : 8'd0 ;
  assign out_exp__h136990 =
	     _theResult___snd__h136256[5] ?
	       _theResult___exp__h136987 :
	       _theResult___fst_exp__h136310 ;
  assign out_exp__h14120 =
	     sfd___3__h13187[8] ? _theResult___exp__h14117 : x__h13696[7:0] ;
  assign out_exp__h36053 =
	     sfd___3__h35427[3] ? _theResult___exp__h36050 : 11'd0 ;
  assign out_exp__h36767 =
	     sfd___3__h35427[2] ? _theResult___exp__h36764 : x__h36140[10:0] ;
  assign out_exp__h45635 =
	     sfd___3__h45009[3] ? _theResult___exp__h45632 : 11'd0 ;
  assign out_exp__h46348 =
	     sfd___3__h45009[2] ? _theResult___exp__h46345 : x__h45721[10:0] ;
  assign out_exp__h69478 =
	     sfdin__h68946[34] ?
	       _theResult___exp__h69475 :
	       _theResult___fst_exp__h68952 ;
  assign out_exp__h7550 = sfd___3__h7124[9] ? _theResult___exp__h7547 : 8'd0 ;
  assign out_exp__h78048 =
	     _theResult___snd__h77547[34] ?
	       _theResult___exp__h78045 :
	       _theResult___fst_exp__h77596 ;
  assign out_exp__h8061 =
	     sfd___3__h7124[8] ? _theResult___exp__h8058 : x__h7637[7:0] ;
  assign out_exp__h87217 =
	     sfdin__h86685[34] ?
	       _theResult___exp__h87214 :
	       _theResult___fst_exp__h86691 ;
  assign out_exp__h95841 =
	     _theResult___snd__h95310[34] ?
	       _theResult___exp__h95838 :
	       _theResult___fst_exp__h95364 ;
  assign out_sfd__h118676 =
	     _theResult___snd__h117971[5] ?
	       _theResult___sfd__h118673 :
	       _theResult___snd__h117971[56:5] ;
  assign out_sfd__h128251 =
	     sfdin__h127515[5] ?
	       _theResult___sfd__h128248 :
	       sfdin__h127515[56:5] ;
  assign out_sfd__h13611 =
	     sfd___3__h13187[9] ?
	       _theResult___sfd__h13608 :
	       sfd___3__h13187[31:9] ;
  assign out_sfd__h136991 =
	     _theResult___snd__h136256[5] ?
	       _theResult___sfd__h136988 :
	       _theResult___snd__h136256[56:5] ;
  assign out_sfd__h14121 =
	     sfd___3__h13187[8] ?
	       _theResult___sfd__h14118 :
	       sfd___3__h13187[30:8] ;
  assign out_sfd__h36054 =
	     sfd___3__h35427[3] ?
	       _theResult___sfd__h36051 :
	       sfd___3__h35427[54:3] ;
  assign out_sfd__h36768 =
	     sfd___3__h35427[2] ?
	       _theResult___sfd__h36765 :
	       sfd___3__h35427[53:2] ;
  assign out_sfd__h45636 =
	     sfd___3__h45009[3] ?
	       _theResult___sfd__h45633 :
	       sfd___3__h45009[54:3] ;
  assign out_sfd__h46349 =
	     sfd___3__h45009[2] ?
	       _theResult___sfd__h46346 :
	       sfd___3__h45009[53:2] ;
  assign out_sfd__h69479 =
	     sfdin__h68946[34] ?
	       _theResult___sfd__h69476 :
	       sfdin__h68946[56:34] ;
  assign out_sfd__h7551 =
	     sfd___3__h7124[9] ?
	       _theResult___sfd__h7548 :
	       sfd___3__h7124[31:9] ;
  assign out_sfd__h78049 =
	     _theResult___snd__h77547[34] ?
	       _theResult___sfd__h78046 :
	       _theResult___snd__h77547[56:34] ;
  assign out_sfd__h8062 =
	     sfd___3__h7124[8] ?
	       _theResult___sfd__h8059 :
	       sfd___3__h7124[30:8] ;
  assign out_sfd__h87218 =
	     sfdin__h86685[34] ?
	       _theResult___sfd__h87215 :
	       sfdin__h86685[56:34] ;
  assign out_sfd__h95842 =
	     _theResult___snd__h95310[34] ?
	       _theResult___sfd__h95839 :
	       _theResult___snd__h95310[56:34] ;
  assign requestR_BITS_126_TO_116_566_EQ_0_580_AND_requ_ETC___d3587 =
	     requestR[126:116] == 11'd0 && requestR[115:64] == 52'd0 &&
	     requestR[127] &&
	     requestR[190:180] == 11'd0 &&
	     requestR[179:128] == 52'd0 &&
	     !requestR[191] ;
  assign requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       (requestR[127:96] == 32'hFFFFFFFF) ?
		 requestR[94:64] :
		 31'h7FC00000 } ;
  assign requestR_BITS_159_TO_128__q1 = requestR[159:128] ;
  assign requestR_BITS_179_TO_128_513_ULE_requestR_BITS_ETC___d3599 =
	     requestR[179:128] <= requestR[115:64] ;
  assign requestR_BITS_179_TO_128_513_ULT_requestR_BITS_ETC___d3604 =
	     requestR[179:128] < requestR[115:64] ;
  assign requestR_BITS_190_TO_180_511_EQ_0_519_AND_requ_ETC___d3583 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[191] &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 &&
	     !requestR[127] ;
  assign requestR_BITS_190_TO_180_511_EQ_0_519_AND_requ_ETC___d3657 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 ||
	     (!requestR[191] || requestR[127]) &&
	     (requestR[191] || !requestR[127]) &&
	     (requestR[191] ?
		requestR_BITS_190_TO_180_511_ULE_requestR_BITS_ETC___d3652 :
		NOT_requestR_BITS_190_TO_180_511_ULT_requestR__ETC___d3653) ;
  assign requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3575 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] &&
	     requestR[126:116] == 11'd2047 &&
	     requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3620 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3642 =
	     requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3620 ||
	     requestR[190:180] == 11'd2047 && requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115] ;
  assign requestR_BITS_190_TO_180_511_EQ_requestR_BITS__ETC___d3598 =
	     requestR[190:180] == requestR[126:116] ;
  assign requestR_BITS_190_TO_180_511_MINUS_1023___d1521 =
	     requestR[190:180] - 11'd1023 ;
  assign requestR_BITS_190_TO_180_511_ULE_requestR_BITS_ETC___d3596 =
	     requestR[190:180] <= requestR[126:116] ;
  assign requestR_BITS_190_TO_180_511_ULE_requestR_BITS_ETC___d3652 =
	     requestR_BITS_190_TO_180_511_ULE_requestR_BITS_ETC___d3596 &&
	     (!requestR_BITS_190_TO_180_511_EQ_requestR_BITS__ETC___d3598 ||
	      requestR_BITS_179_TO_128_513_ULE_requestR_BITS_ETC___d3599) &&
	     !requestR_BITS_190_TO_180_511_ULT_requestR_BITS_ETC___d3603 &&
	     (!requestR_BITS_190_TO_180_511_EQ_requestR_BITS__ETC___d3598 ||
	      !requestR_BITS_179_TO_128_513_ULT_requestR_BITS_ETC___d3604) ;
  assign requestR_BITS_190_TO_180_511_ULT_requestR_BITS_ETC___d3603 =
	     requestR[190:180] < requestR[126:116] ;
  assign requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d909 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	     (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d872[19] ||
	      NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d874 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d893 &&
	      x__h16495[56:25] == 32'hFFFFFFFF) ;
  assign requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d979 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ||
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d977 ;
  assign requestR_BIT_158_62_OR_requestR_BIT_157_64_OR__ETC___d728 =
	     requestR[158] || requestR[157] || requestR[156] ||
	     requestR[155] ||
	     requestR[154] ||
	     requestR[153] ||
	     requestR[152] ||
	     requestR[151] ||
	     requestR[150] ||
	     requestR[149] ||
	     requestR[148] ||
	     requestR[147] ||
	     requestR[146] ||
	     requestR[145] ||
	     requestR[144] ||
	     requestR[143] ||
	     requestR[142] ||
	     requestR[141] ||
	     requestR[140] ||
	     requestR[139] ||
	     requestR[138] ||
	     requestR[137] ||
	     requestR[136] ||
	     requestR[135] ||
	     requestR[134] ||
	     requestR[133] ||
	     requestR[132] ||
	     requestR[131] ||
	     requestR[130] ||
	     requestR[129] ||
	     requestR[128] ;
  assign requestR_BIT_159_6_OR_requestR_BIT_158_62_OR_r_ETC___d750 =
	     (requestR[159] ||
	      requestR_BIT_158_62_OR_requestR_BIT_157_64_OR__ETC___d728) &&
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 &&
	     !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592 &&
	     IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d747 ;
  assign requestR_BIT_191_139_OR_NOT_requestR_BITS_190__ETC___d1658 =
	     requestR[191] ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1621[23] ||
	      NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1623 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1642 &&
	      x__h48702[85:54] == 32'hFFFFFFFF) ;
  assign res___1__h153958 =
	     (requestR[190:180] == 11'd2047 && requestR[179]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h154396 = requestR[191] ? 64'd1 : 64'd128 ;
  assign res___1__h154406 = requestR[191] ? 64'd8 : 64'd16 ;
  assign res___1__h154425 = requestR[191] ? 64'd4 : 64'd32 ;
  assign res___1__h25886 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h26122 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd1 :
	       64'd128 ;
  assign res___1__h26132 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd8 :
	       64'd16 ;
  assign res___1__h26151 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd4 :
	       64'd32 ;
  assign res__h141666 =
	     NOT_requestR_BITS_190_TO_180_511_EQ_2047_512_6_ETC___d3611 ?
	       requestR[191:128] :
	       requestR[127:64] ;
  assign res__h146214 =
	     NOT_requestR_BITS_190_TO_180_511_EQ_2047_512_6_ETC___d3611 ?
	       requestR[127:64] :
	       requestR[191:128] ;
  assign res__h148918 =
	     ((requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	      (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	      requestR_BITS_190_TO_180_511_EQ_0_519_AND_requ_ETC___d3657) ?
	       64'd1 :
	       64'd0 ;
  assign res__h151613 =
	     NOT_requestR_BITS_190_TO_180_511_EQ_2047_512_6_ETC___d3611 ?
	       64'd1 :
	       64'd0 ;
  assign res__h153490 =
	     NOT_requestR_BITS_190_TO_180_511_EQ_2047_512_6_ETC___d3676 ?
	       64'd1 :
	       64'd0 ;
  assign res__h154441 = requestR[191] ? 64'd2 : 64'd64 ;
  assign res__h154622 = { 32'hFFFFFFFF, fpu$response_get[36:5] } ;
  assign res__h17490 =
	     { 32'hFFFFFFFF,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 } ;
  assign res__h17727 =
	     { 32'hFFFFFFFF,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign res__h23099 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1044 ?
	       64'd1 :
	       64'd0 ;
  assign res__h24582 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d981 ?
	       64'd1 :
	       64'd0 ;
  assign res__h25651 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1062 ?
	       64'd1 :
	       64'd0 ;
  assign res__h26167 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd2 :
	       64'd64 ;
  assign result__h119898 =
	     { _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d2982[56:1],
	       _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d2982[0] |
	       guard__h119893 } ;
  assign result__h79068 =
	     { _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_511_EQ_ETC___d2167[56:1],
	       _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_511_EQ_ETC___d2167[0] |
	       guard__h79063 } ;
  assign sV1_exp__h815 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:151] :
	       8'd255 ;
  assign sV1_sfd__h816 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[150:128] :
	       23'd4194304 ;
  assign sV2_exp__h918 =
	     (requestR[127:96] == 32'hFFFFFFFF) ? requestR[94:87] : 8'd255 ;
  assign sV2_sfd__h919 =
	     (requestR[127:96] == 32'hFFFFFFFF) ?
	       requestR[86:64] :
	       23'd4194304 ;
  assign sfd___3__h13187 =
	     requestR[159:128] <<
	     IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d587 ;
  assign sfd___3__h35427 =
	     sfd__h27426 <<
	     IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1180 ;
  assign sfd___3__h45009 =
	     sfd__h37257 <<
	     IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1373 ;
  assign sfd___3__h7124 =
	     sfd__h2220 <<
	     IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d253 ;
  assign sfd__h118038 =
	     { 1'b0,
	       _theResult___fst_exp__h118020 != 11'd0,
	       _theResult___snd__h117971[56:5] } +
	     54'd1 ;
  assign sfd__h127613 =
	     { 1'b0,
	       _theResult___fst_exp__h127521 != 11'd0,
	       sfdin__h127515[56:5] } +
	     54'd1 ;
  assign sfd__h13214 = { 2'd0, sfd___3__h13187[31:9] } + 25'd1 ;
  assign sfd__h136329 =
	     { 1'b0,
	       _theResult___fst_exp__h136310 != 11'd0,
	       _theResult___snd__h136256[56:5] } +
	     54'd1 ;
  assign sfd__h13711 =
	     { 1'b0, x__h13696[7:0] != 8'd0, sfd___3__h13187[30:8] } + 25'd1 ;
  assign sfd__h2220 = requestR[159] ? -requestR[159:128] : requestR[159:128] ;
  assign sfd__h27426 = { sfd__h2220, 23'd0 } ;
  assign sfd__h35454 = { 2'd0, sfd___3__h35427[54:3] } + 54'd1 ;
  assign sfd__h36155 =
	     { 1'b0, x__h36140[10:0] != 11'd0, sfd___3__h35427[53:2] } +
	     54'd1 ;
  assign sfd__h37257 = { requestR[159:128], 23'd0 } ;
  assign sfd__h45036 = { 2'd0, sfd___3__h45009[54:3] } + 54'd1 ;
  assign sfd__h45736 =
	     { 1'b0, x__h45721[10:0] != 11'd0, sfd___3__h45009[53:2] } +
	     54'd1 ;
  assign sfd__h53245 = { value__h47008, 3'd0 } ;
  assign sfd__h69044 =
	     { 1'b0,
	       _theResult___fst_exp__h68952 != 8'd0,
	       sfdin__h68946[56:34] } +
	     25'd1 ;
  assign sfd__h7151 = { 2'd0, sfd___3__h7124[31:9] } + 25'd1 ;
  assign sfd__h7652 =
	     { 1'b0, x__h7637[7:0] != 8'd0, sfd___3__h7124[30:8] } + 25'd1 ;
  assign sfd__h77614 =
	     { 1'b0,
	       _theResult___fst_exp__h77596 != 8'd0,
	       _theResult___snd__h77547[56:34] } +
	     25'd1 ;
  assign sfd__h86783 =
	     { 1'b0,
	       _theResult___fst_exp__h86691 != 8'd0,
	       sfdin__h86685[56:34] } +
	     25'd1 ;
  assign sfd__h95383 =
	     { 1'b0,
	       _theResult___fst_exp__h95364 != 8'd0,
	       _theResult___snd__h95310[56:34] } +
	     25'd1 ;
  assign sfdin__h127515 =
	     _theResult____h119285[56] ?
	       _theResult___snd__h127532 :
	       _theResult___snd__h127543 ;
  assign sfdin__h68946 =
	     _theResult____h60845[56] ?
	       _theResult___snd__h68963 :
	       _theResult___snd__h68974 ;
  assign sfdin__h86685 =
	     _theResult____h78455[56] ?
	       _theResult___snd__h86702 :
	       _theResult___snd__h86713 ;
  assign value__h14784 = { 1'b0, sV1_exp__h815 != 8'd0, sV1_sfd__h816 } ;
  assign value__h47008 =
	     { 1'b0, requestR[190:180] != 11'd0, requestR[179:128] } ;
  assign value__h49084 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	      !requestR[179]) ?
	       _theResult___fst_sfd__h49541 :
	       requestR[179:128] ;
  assign value__h97265 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	      !sV1_sfd__h816[22]) ?
	       _theResult___fst_sfd__h97520 :
	       sV1_sfd__h816 ;
  assign x__h119993 = b__h14782 << x__h120026 ;
  assign x__h120026 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d2978 ;
  assign x__h13696 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590 +
	     9'd127 ;
  assign x__h137326 =
	     { IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3509,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3516,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3530,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3542,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3554 } ;
  assign x__h138249 =
	     requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3575 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   IF_requestR_BITS_126_TO_116_566_EQ_2047_567_AN_ETC___d3614)))) ;
  assign x__h141798 =
	     { requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3620,
	       4'd0 } ;
  assign x__h142797 =
	     requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3575 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   ((requestR[126:116] == 11'd2047 && requestR[115]) ?
			      requestR[191:128] :
			      IF_requestR_BITS_190_TO_180_511_EQ_0_519_AND_r_ETC___d3628))))) ;
  assign x__h14290 =
	     { 2'd0,
	       NOT_requestR_BITS_159_TO_128_22_EQ_0_23_24_AND_ETC___d739,
	       requestR[159:128] != 32'd0 &&
	       (requestR[159] ||
		requestR_BIT_158_62_OR_requestR_BIT_157_64_OR__ETC___d728) &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592,
	       requestR[159:128] != 32'd0 &&
	       requestR_BIT_159_6_OR_requestR_BIT_158_62_OR_r_ETC___d750 } ;
  assign x__h14574 = { {32{x__h14577[31]}}, x__h14577 } ;
  assign x__h14577 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0) ?
	       32'h80000000 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d840 ;
  assign x__h147241 =
	     requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3642 ?
	       64'd0 :
	       res__h148918 ;
  assign x__h149936 =
	     requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3642 ?
	       64'd0 :
	       res__h151613 ;
  assign x__h151632 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0,
	       4'd0 } ;
  assign x__h151813 =
	     requestR_BITS_190_TO_180_511_EQ_2047_512_AND_N_ETC___d3642 ?
	       64'd0 :
	       res__h153490 ;
  assign x__h153940 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       res___1__h153958 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  res___1__h154396 :
		  IF_requestR_BITS_190_TO_180_511_EQ_0_519_AND_r_ETC___d3699) ;
  assign x__h15455 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d781 >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d807 |
	     ~(57'h1FFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d807) &
	     {57{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d781[56]}} ;
  assign x__h154590 =
	     fpu$response_get[69] ? res__h154622 : fpu$response_get[68:5] ;
  assign x__h15859 =
	     { sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 ||
	       sV1_exp__h815 == 8'd255 && sV1_sfd__h816 == 23'd0 ||
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d851,
	       3'd0,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d862 } ;
  assign x__h16114 = { 32'd0, x__h16117 } ;
  assign x__h16117 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0) ?
	       32'h0 :
	       ((sV1_exp__h815 == 8'd255 && sV1_sfd__h816 == 23'd0) ?
		  32'hFFFFFFFF :
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d901) ;
  assign x__h16495 =
	     { sV1_exp__h815 != 8'd0, sV1_sfd__h816, 33'd0 } >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d872 ;
  assign x__h16572 =
	     { sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 ||
	       sV1_exp__h815 == 8'd255 && sV1_sfd__h816 == 23'd0 ||
	       requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d909,
	       3'd0,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) &&
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d918 } ;
  assign x__h16812 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d943 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d989 ;
  assign x__h1771 = { 32'hFFFFFFFF, x__h1777 } ;
  assign x__h1777 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h18851 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d991,
	       4'd0 } ;
  assign x__h1917 = { 32'hFFFFFFFF, x__h1923 } ;
  assign x__h1923 =
	     { requestR[127:96] != 32'hFFFFFFFF || !requestR[95],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h19446 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d943 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1005 ;
  assign x__h2051 = { 32'hFFFFFFFF, x__h2057 } ;
  assign x__h2057 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) !=
	       (requestR[127:96] == 32'hFFFFFFFF && requestR[95]),
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h21971 = { 32'hFFFFFFFF, requestR[159:128] } ;
  assign x__h2199 = { 32'hFFFFFFFF, x__h2205 } ;
  assign x__h2205 =
	     { requestR[159:128] != 32'd0 &&
	       (NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d261 ?
		  requestR[159] :
		  IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d311),
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d365,
	       (requestR[159:128] == 32'd0 ||
		NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d261) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h8123 } ;
  assign x__h22092 =
	     { {32{requestR_BITS_159_TO_128__q1[31]}},
	       requestR_BITS_159_TO_128__q1 } ;
  assign x__h22230 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1028 ?
	       64'd0 :
	       res__h23099 ;
  assign x__h23713 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1028 ?
	       64'd0 :
	       res__h24582 ;
  assign x__h24601 =
	     { sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 ||
	       sV2_exp__h918 == 8'd255 && sV2_sfd__h919 != 23'd0,
	       4'd0 } ;
  assign x__h24782 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1028 ?
	       64'd0 :
	       res__h25651 ;
  assign x__h25868 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0) ?
	       res___1__h25886 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1076 ;
  assign x__h27035 = { requestR[127], requestR[190:128] } ;
  assign x__h27157 = { !requestR[127], requestR[190:128] } ;
  assign x__h27281 = { requestR[191] != requestR[127], requestR[190:128] } ;
  assign x__h27411 =
	     { requestR[159:128] != 32'd0 &&
	       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d1230,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h36834,
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1315 } ;
  assign x__h36140 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1183 +
	     12'd1023 ;
  assign x__h36960 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1184 ||
		!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1186 &&
		!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188 &&
		_theResult___fst_exp__h36825 == 11'd2047 &&
		_theResult___fst_sfd__h36826 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1184 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1186,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1184 &&
	       !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1186 &&
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1332 } ;
  assign x__h37245 =
	     { 1'd0,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h46414,
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1482 } ;
  assign x__h45721 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1376 +
	     12'd1023 ;
  assign x__h46514 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1377 ||
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1378 &&
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1379 &&
		_theResult___fst_exp__h46405 == 11'd2047 &&
		_theResult___fst_sfd__h46406 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1377 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1378,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1377 &&
	       !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1378 &&
	       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1499 } ;
  assign x__h46798 = { {32{x__h46801[31]}}, x__h46801 } ;
  assign x__h46801 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       32'h80000000 :
	       IF_requestR_BITS_190_TO_180_511_EQ_2047_512_AN_ETC___d1589 ;
  assign x__h47679 =
	     IF_requestR_BIT_191_139_THEN_NEG_0b0_CONCAT_NO_ETC___d1530 >>
	     NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1556 |
	     ~(86'h3FFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1556) &
	     {86{IF_requestR_BIT_191_139_THEN_NEG_0b0_CONCAT_NO_ETC___d1530[85]}} ;
  assign x__h48066 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_BITS_190_TO_180_511_EQ_0_519_525__ETC___d1600,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_ETC___d1611 } ;
  assign x__h48321 = { 32'd0, x__h48324 } ;
  assign x__h48324 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       32'h0 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  32'hFFFFFFFF :
		  IF_requestR_BIT_191_139_OR_requestR_BITS_190_T_ETC___d1650) ;
  assign x__h48702 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 33'd0 } >>
	     NEG_SEXT_requestR_BITS_190_TO_180_511_MINUS_10_ETC___d1621 ;
  assign x__h48779 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       requestR_BIT_191_139_OR_NOT_requestR_BITS_190__ETC___d1658,
	       3'd0,
	       NOT_requestR_BITS_190_TO_180_511_EQ_2047_512_6_ETC___d1669 } ;
  assign x__h49014 = { 32'hFFFFFFFF, x__h49020 } ;
  assign x__h49020 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
		(requestR[190:180] == 11'd2047 ||
		 requestR[190:180] == 11'd0) &&
		requestR[179:128] == 52'd0) ?
		 requestR[191] :
		 IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2490,
	       (requestR[190:180] == 11'd2047) ?
		 8'd255 :
		 _theResult___fst_exp__h95912,
	       (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 _theResult___snd_fst_sfd__h53199 :
		 _theResult___fst_sfd__h95916 } ;
  assign x__h7637 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256 +
	     9'd127 ;
  assign x__h79163 = sfd__h53245 << x__h79196 ;
  assign x__h79196 =
	     12'd57 -
	     _3970_MINUS_SEXT_requestR_BITS_190_TO_180_511_M_ETC___d2163 ;
  assign x__h8258 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d440,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d443,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d452 } ;
  assign x__h8546 =
	     { 33'h1FFFFFFFE,
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d667,
	       (requestR[159:128] == 32'd0 ||
		!requestR[159] &&
		NOT_requestR_BIT_158_62_63_AND_NOT_requestR_BI_ETC___d553 ||
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 ||
		_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h14181 } ;
  assign x__h96220 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179] :
		 (requestR[190:180] != 11'd2047 ||
		  requestR[179:128] != 52'd0) &&
		 (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
		 IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2749,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2760,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2776,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2789,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_511_EQ_0_519_THEN__ETC___d2802 } ;
  assign x__h97202 =
	     { IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3308,
	       (sV1_exp__h815 == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h137061,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3472 } ;
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd254;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd255 : 8'd254;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd254 : 8'd255;
      default: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      23'd8388607;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd0 : 23'd8388607;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd8388607 : 23'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 = 23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd2046;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2047 :
		11'd2046;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2046 :
		11'd2047;
      default: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      52'hFFFFFFFFFFFFF;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 = 52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h0:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 =
	      requestR[194:192];
      3'h1: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd4;
      3'h2: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd3;
      3'h3: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd2;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 =
		   3'd0;
    endcase
  end
  always@(guard__h7622 or
	  x__h7637 or out_exp__h8061 or _theResult___exp__h8058)
  begin
    case (guard__h7622)
      2'b0, 2'b01:
	  CASE_guard622_0b0_x637_BITS_7_TO_0_0b1_x637_BI_ETC__q8 =
	      x__h7637[7:0];
      2'b10:
	  CASE_guard622_0b0_x637_BITS_7_TO_0_0b1_x637_BI_ETC__q8 =
	      out_exp__h8061;
      2'b11:
	  CASE_guard622_0b0_x637_BITS_7_TO_0_0b1_x637_BI_ETC__q8 =
	      _theResult___exp__h8058;
    endcase
  end
  always@(requestR or
	  x__h7637 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d356 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d354)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9 =
	      x__h7637[7:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d356;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d354;
      default: CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9 = 8'd0;
    endcase
  end
  always@(guard__h7622 or
	  sfd___3__h7124 or out_sfd__h8062 or _theResult___sfd__h8059)
  begin
    case (guard__h7622)
      2'b0, 2'b01:
	  CASE_guard622_0b0_sfd___3124_BITS_30_TO_8_0b1__ETC__q10 =
	      sfd___3__h7124[30:8];
      2'b10:
	  CASE_guard622_0b0_sfd___3124_BITS_30_TO_8_0b1__ETC__q10 =
	      out_sfd__h8062;
      2'b11:
	  CASE_guard622_0b0_sfd___3124_BITS_30_TO_8_0b1__ETC__q10 =
	      _theResult___sfd__h8059;
    endcase
  end
  always@(requestR or
	  sfd___3__h7124 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d391 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d389)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11 =
	      sfd___3__h7124[30:8];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d391;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d389;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11 =
		   23'd0;
    endcase
  end
  always@(guard__h7134 or
	  sfd___3__h7124 or out_sfd__h7551 or _theResult___sfd__h7548)
  begin
    case (guard__h7134)
      2'b0, 2'b01:
	  CASE_guard134_0b0_sfd___3124_BITS_31_TO_9_0b1__ETC__q12 =
	      sfd___3__h7124[31:9];
      2'b10:
	  CASE_guard134_0b0_sfd___3124_BITS_31_TO_9_0b1__ETC__q12 =
	      out_sfd__h7551;
      2'b11:
	  CASE_guard134_0b0_sfd___3124_BITS_31_TO_9_0b1__ETC__q12 =
	      _theResult___sfd__h7548;
    endcase
  end
  always@(requestR or
	  sfd___3__h7124 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d376 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d374)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13 =
	      sfd___3__h7124[31:9];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d376;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d374;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13 =
		   23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 =
	      requestR[159];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h7134 or requestR)
  begin
    case (guard__h7134)
      2'b0, 2'b01, 2'b10:
	  CASE_guard134_0b0_requestR_BIT_159_0b1_request_ETC__q14 =
	      requestR[159];
      2'd3:
	  CASE_guard134_0b0_requestR_BIT_159_0b1_request_ETC__q14 =
	      guard__h7134 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h7622 or requestR)
  begin
    case (guard__h7622)
      2'b0, 2'b01, 2'b10:
	  CASE_guard622_0b0_requestR_BIT_159_0b1_request_ETC__q15 =
	      requestR[159];
      2'd3:
	  CASE_guard622_0b0_requestR_BIT_159_0b1_request_ETC__q15 =
	      guard__h7622 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d331 or
	  guard__h7134 or _theResult___exp__h7547)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d333 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d331;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d333 =
	      (guard__h7134 == 2'b0 || requestR[159]) ?
		8'd0 :
		_theResult___exp__h7547;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d333 =
		   8'd0;
    endcase
  end
  always@(guard__h7134 or out_exp__h7550 or _theResult___exp__h7547)
  begin
    case (guard__h7134)
      2'b0, 2'b01:
	  CASE_guard134_0b0_0_0b1_0_0b10_out_exp550_0b11_ETC__q16 = 8'd0;
      2'b10:
	  CASE_guard134_0b0_0_0b1_0_0b10_out_exp550_0b11_ETC__q16 =
	      out_exp__h7550;
      2'b11:
	  CASE_guard134_0b0_0_0b1_0_0b10_out_exp550_0b11_ETC__q16 =
	      _theResult___exp__h7547;
    endcase
  end
  always@(requestR or x__h13696 or guard__h13681 or _theResult___exp__h14117)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d661 =
	      x__h13696[7:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d661 =
	      (guard__h13681 == 2'b0) ?
		x__h13696[7:0] :
		_theResult___exp__h14117;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d661 =
		   8'd0;
    endcase
  end
  always@(guard__h13681 or
	  x__h13696 or out_exp__h14120 or _theResult___exp__h14117)
  begin
    case (guard__h13681)
      2'b0, 2'b01:
	  CASE_guard3681_0b0_x3696_BITS_7_TO_0_0b1_x3696_ETC__q19 =
	      x__h13696[7:0];
      2'b10:
	  CASE_guard3681_0b0_x3696_BITS_7_TO_0_0b1_x3696_ETC__q19 =
	      out_exp__h14120;
      2'b11:
	  CASE_guard3681_0b0_x3696_BITS_7_TO_0_0b1_x3696_ETC__q19 =
	      _theResult___exp__h14117;
    endcase
  end
  always@(requestR or
	  sfd___3__h13187 or guard__h13681 or _theResult___sfd__h14118)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d693 =
	      sfd___3__h13187[30:8];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d693 =
	      (guard__h13681 == 2'b0) ?
		sfd___3__h13187[30:8] :
		_theResult___sfd__h14118;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d693 =
		   23'd0;
    endcase
  end
  always@(guard__h13681 or
	  sfd___3__h13187 or out_sfd__h14121 or _theResult___sfd__h14118)
  begin
    case (guard__h13681)
      2'b0, 2'b01:
	  CASE_guard3681_0b0_sfd___33187_BITS_30_TO_8_0b_ETC__q20 =
	      sfd___3__h13187[30:8];
      2'b10:
	  CASE_guard3681_0b0_sfd___33187_BITS_30_TO_8_0b_ETC__q20 =
	      out_sfd__h14121;
      2'b11:
	  CASE_guard3681_0b0_sfd___33187_BITS_30_TO_8_0b_ETC__q20 =
	      _theResult___sfd__h14118;
    endcase
  end
  always@(guard__h13197 or out_exp__h13610 or _theResult___exp__h13607)
  begin
    case (guard__h13197)
      2'b0, 2'b01:
	  CASE_guard3197_0b0_0_0b1_0_0b10_out_exp3610_0b_ETC__q21 = 8'd0;
      2'b10:
	  CASE_guard3197_0b0_0_0b1_0_0b10_out_exp3610_0b_ETC__q21 =
	      out_exp__h13610;
      2'b11:
	  CASE_guard3197_0b0_0_0b1_0_0b10_out_exp3610_0b_ETC__q21 =
	      _theResult___exp__h13607;
    endcase
  end
  always@(requestR or
	  sfd___3__h13187 or guard__h13197 or _theResult___sfd__h13608)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d681 =
	      sfd___3__h13187[31:9];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d681 =
	      (guard__h13197 == 2'b0) ?
		sfd___3__h13187[31:9] :
		_theResult___sfd__h13608;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d681 =
		   23'd0;
    endcase
  end
  always@(guard__h13197 or
	  sfd___3__h13187 or out_sfd__h13611 or _theResult___sfd__h13608)
  begin
    case (guard__h13197)
      2'b0, 2'b01:
	  CASE_guard3197_0b0_sfd___33187_BITS_31_TO_9_0b_ETC__q22 =
	      sfd___3__h13187[31:9];
      2'b10:
	  CASE_guard3197_0b0_sfd___33187_BITS_31_TO_9_0b_ETC__q22 =
	      out_sfd__h13611;
      2'b11:
	  CASE_guard3197_0b0_sfd___33187_BITS_31_TO_9_0b_ETC__q22 =
	      _theResult___sfd__h13608;
    endcase
  end
  always@(guard__h35437 or requestR)
  begin
    case (guard__h35437)
      2'b0, 2'b01, 2'b10:
	  CASE_guard5437_0b0_requestR_BIT_159_0b1_reques_ETC__q27 =
	      requestR[159];
      2'd3:
	  CASE_guard5437_0b0_requestR_BIT_159_0b1_reques_ETC__q27 =
	      guard__h35437 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h36125 or requestR)
  begin
    case (guard__h36125)
      2'b0, 2'b01, 2'b10:
	  CASE_guard6125_0b0_requestR_BIT_159_0b1_reques_ETC__q28 =
	      requestR[159];
      2'd3:
	  CASE_guard6125_0b0_requestR_BIT_159_0b1_reques_ETC__q28 =
	      guard__h36125 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h36125 or
	  x__h36140 or out_exp__h36767 or _theResult___exp__h36764)
  begin
    case (guard__h36125)
      2'b0, 2'b01:
	  CASE_guard6125_0b0_x6140_BITS_10_TO_0_0b1_x614_ETC__q29 =
	      x__h36140[10:0];
      2'b10:
	  CASE_guard6125_0b0_x6140_BITS_10_TO_0_0b1_x614_ETC__q29 =
	      out_exp__h36767;
      2'b11:
	  CASE_guard6125_0b0_x6140_BITS_10_TO_0_0b1_x614_ETC__q29 =
	      _theResult___exp__h36764;
    endcase
  end
  always@(requestR or
	  x__h36140 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1273 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1271)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x6140_BITS_1_ETC__q30 =
	      x__h36140[10:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x6140_BITS_1_ETC__q30 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1273;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x6140_BITS_1_ETC__q30 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1271;
      default: CASE_requestR_BITS_194_TO_192_0x1_x6140_BITS_1_ETC__q30 =
		   11'd0;
    endcase
  end
  always@(guard__h36125 or
	  sfd___3__h35427 or out_sfd__h36768 or _theResult___sfd__h36765)
  begin
    case (guard__h36125)
      2'b0, 2'b01:
	  CASE_guard6125_0b0_sfd___35427_BITS_53_TO_2_0b_ETC__q31 =
	      sfd___3__h35427[53:2];
      2'b10:
	  CASE_guard6125_0b0_sfd___35427_BITS_53_TO_2_0b_ETC__q31 =
	      out_sfd__h36768;
      2'b11:
	  CASE_guard6125_0b0_sfd___35427_BITS_53_TO_2_0b_ETC__q31 =
	      _theResult___sfd__h36765;
    endcase
  end
  always@(requestR or
	  sfd___3__h35427 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1308 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q32 =
	      sfd___3__h35427[53:2];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q32 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1308;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q32 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q32 =
		   52'd0;
    endcase
  end
  always@(guard__h35437 or
	  sfd___3__h35427 or out_sfd__h36054 or _theResult___sfd__h36051)
  begin
    case (guard__h35437)
      2'b0, 2'b01:
	  CASE_guard5437_0b0_sfd___35427_BITS_54_TO_3_0b_ETC__q33 =
	      sfd___3__h35427[54:3];
      2'b10:
	  CASE_guard5437_0b0_sfd___35427_BITS_54_TO_3_0b_ETC__q33 =
	      out_sfd__h36054;
      2'b11:
	  CASE_guard5437_0b0_sfd___35427_BITS_54_TO_3_0b_ETC__q33 =
	      _theResult___sfd__h36051;
    endcase
  end
  always@(requestR or
	  sfd___3__h35427 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1293 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1291)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q34 =
	      sfd___3__h35427[54:3];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q34 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1293;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q34 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1291;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___35427__ETC__q34 =
		   52'd0;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1248 or
	  guard__h35437 or _theResult___exp__h36050)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1250 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1248;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1250 =
	      (guard__h35437 == 2'b0 || requestR[159]) ?
		11'd0 :
		_theResult___exp__h36050;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1250 =
		   11'd0;
    endcase
  end
  always@(guard__h35437 or out_exp__h36053 or _theResult___exp__h36050)
  begin
    case (guard__h35437)
      2'b0, 2'b01:
	  CASE_guard5437_0b0_0_0b1_0_0b10_out_exp6053_0b_ETC__q35 = 11'd0;
      2'b10:
	  CASE_guard5437_0b0_0_0b1_0_0b10_out_exp6053_0b_ETC__q35 =
	      out_exp__h36053;
      2'b11:
	  CASE_guard5437_0b0_0_0b1_0_0b10_out_exp6053_0b_ETC__q35 =
	      _theResult___exp__h36050;
    endcase
  end
  always@(guard__h45019 or out_exp__h45635 or _theResult___exp__h45632)
  begin
    case (guard__h45019)
      2'b0, 2'b01:
	  CASE_guard5019_0b0_0_0b1_0_0b10_out_exp5635_0b_ETC__q38 = 11'd0;
      2'b10:
	  CASE_guard5019_0b0_0_0b1_0_0b10_out_exp5635_0b_ETC__q38 =
	      out_exp__h45635;
      2'b11:
	  CASE_guard5019_0b0_0_0b1_0_0b10_out_exp5635_0b_ETC__q38 =
	      _theResult___exp__h45632;
    endcase
  end
  always@(requestR or x__h45721 or guard__h45706 or _theResult___exp__h46345)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1447 =
	      x__h45721[10:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1447 =
	      (guard__h45706 == 2'b0) ?
		x__h45721[10:0] :
		_theResult___exp__h46345;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1447 =
		   11'd0;
    endcase
  end
  always@(guard__h45706 or
	  x__h45721 or out_exp__h46348 or _theResult___exp__h46345)
  begin
    case (guard__h45706)
      2'b0, 2'b01:
	  CASE_guard5706_0b0_x5721_BITS_10_TO_0_0b1_x572_ETC__q39 =
	      x__h45721[10:0];
      2'b10:
	  CASE_guard5706_0b0_x5721_BITS_10_TO_0_0b1_x572_ETC__q39 =
	      out_exp__h46348;
      2'b11:
	  CASE_guard5706_0b0_x5721_BITS_10_TO_0_0b1_x572_ETC__q39 =
	      _theResult___exp__h46345;
    endcase
  end
  always@(requestR or
	  sfd___3__h45009 or guard__h45706 or _theResult___sfd__h46346)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1478 =
	      sfd___3__h45009[53:2];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1478 =
	      (guard__h45706 == 2'b0) ?
		sfd___3__h45009[53:2] :
		_theResult___sfd__h46346;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1478 =
		   52'd0;
    endcase
  end
  always@(guard__h45706 or
	  sfd___3__h45009 or out_sfd__h46349 or _theResult___sfd__h46346)
  begin
    case (guard__h45706)
      2'b0, 2'b01:
	  CASE_guard5706_0b0_sfd___35009_BITS_53_TO_2_0b_ETC__q40 =
	      sfd___3__h45009[53:2];
      2'b10:
	  CASE_guard5706_0b0_sfd___35009_BITS_53_TO_2_0b_ETC__q40 =
	      out_sfd__h46349;
      2'b11:
	  CASE_guard5706_0b0_sfd___35009_BITS_53_TO_2_0b_ETC__q40 =
	      _theResult___sfd__h46346;
    endcase
  end
  always@(requestR or
	  sfd___3__h45009 or guard__h45019 or _theResult___sfd__h45633)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1466 =
	      sfd___3__h45009[54:3];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1466 =
	      (guard__h45019 == 2'b0) ?
		sfd___3__h45009[54:3] :
		_theResult___sfd__h45633;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1466 =
		   52'd0;
    endcase
  end
  always@(guard__h45019 or
	  sfd___3__h45009 or out_sfd__h45636 or _theResult___sfd__h45633)
  begin
    case (guard__h45019)
      2'b0, 2'b01:
	  CASE_guard5019_0b0_sfd___35009_BITS_54_TO_3_0b_ETC__q41 =
	      sfd___3__h45009[54:3];
      2'b10:
	  CASE_guard5019_0b0_sfd___35009_BITS_54_TO_3_0b_ETC__q41 =
	      out_sfd__h45636;
      2'b11:
	  CASE_guard5019_0b0_sfd___35009_BITS_54_TO_3_0b_ETC__q41 =
	      _theResult___sfd__h45633;
    endcase
  end
  always@(guard__h60855 or
	  _theResult___fst_exp__h68952 or
	  out_exp__h69478 or _theResult___exp__h69475)
  begin
    case (guard__h60855)
      2'b0, 2'b01:
	  CASE_guard0855_0b0_theResult___fst_exp8952_0b1_ETC__q54 =
	      _theResult___fst_exp__h68952;
      2'b10:
	  CASE_guard0855_0b0_theResult___fst_exp8952_0b1_ETC__q54 =
	      out_exp__h69478;
      2'b11:
	  CASE_guard0855_0b0_theResult___fst_exp8952_0b1_ETC__q54 =
	      _theResult___exp__h69475;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h68952 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2514 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2512)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55 =
	      _theResult___fst_exp__h68952;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2514;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2512;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55 = 8'd0;
    endcase
  end
  always@(guard__h69548 or
	  _theResult___fst_exp__h77596 or
	  out_exp__h78048 or _theResult___exp__h78045)
  begin
    case (guard__h69548)
      2'b0, 2'b01:
	  CASE_guard9548_0b0_theResult___fst_exp7596_0b1_ETC__q56 =
	      _theResult___fst_exp__h77596;
      2'b10:
	  CASE_guard9548_0b0_theResult___fst_exp7596_0b1_ETC__q56 =
	      out_exp__h78048;
      2'b11:
	  CASE_guard9548_0b0_theResult___fst_exp7596_0b1_ETC__q56 =
	      _theResult___exp__h78045;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h77596 or
	  IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2542 or
	  IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2540)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57 =
	      _theResult___fst_exp__h77596;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57 =
	      IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2542;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57 =
	      IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2540;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57 = 8'd0;
    endcase
  end
  always@(guard__h78465 or
	  _theResult___fst_exp__h86691 or
	  out_exp__h87217 or _theResult___exp__h87214)
  begin
    case (guard__h78465)
      2'b0, 2'b01:
	  CASE_guard8465_0b0_theResult___fst_exp6691_0b1_ETC__q58 =
	      _theResult___fst_exp__h86691;
      2'b10:
	  CASE_guard8465_0b0_theResult___fst_exp6691_0b1_ETC__q58 =
	      out_exp__h87217;
      2'b11:
	  CASE_guard8465_0b0_theResult___fst_exp6691_0b1_ETC__q58 =
	      _theResult___exp__h87214;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h86691 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2578 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2576)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59 =
	      _theResult___fst_exp__h86691;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2578;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2576;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59 = 8'd0;
    endcase
  end
  always@(guard__h87287 or
	  _theResult___fst_exp__h95364 or
	  out_exp__h95841 or _theResult___exp__h95838)
  begin
    case (guard__h87287)
      2'b0, 2'b01:
	  CASE_guard7287_0b0_theResult___fst_exp5364_0b1_ETC__q60 =
	      _theResult___fst_exp__h95364;
      2'b10:
	  CASE_guard7287_0b0_theResult___fst_exp5364_0b1_ETC__q60 =
	      out_exp__h95841;
      2'b11:
	  CASE_guard7287_0b0_theResult___fst_exp5364_0b1_ETC__q60 =
	      _theResult___exp__h95838;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h95364 or
	  IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2606 or
	  IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2604)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 =
	      _theResult___fst_exp__h95364;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 =
	      IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2606;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 =
	      IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2604;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 = 8'd0;
    endcase
  end
  always@(guard__h60855 or
	  sfdin__h68946 or out_sfd__h69479 or _theResult___sfd__h69476)
  begin
    case (guard__h60855)
      2'b0, 2'b01:
	  CASE_guard0855_0b0_sfdin8946_BITS_56_TO_34_0b1_ETC__q62 =
	      sfdin__h68946[56:34];
      2'b10:
	  CASE_guard0855_0b0_sfdin8946_BITS_56_TO_34_0b1_ETC__q62 =
	      out_sfd__h69479;
      2'b11:
	  CASE_guard0855_0b0_sfdin8946_BITS_56_TO_34_0b1_ETC__q62 =
	      _theResult___sfd__h69476;
    endcase
  end
  always@(requestR or
	  sfdin__h68946 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2634 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2632)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin8946_BI_ETC__q63 =
	      sfdin__h68946[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin8946_BI_ETC__q63 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2634;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin8946_BI_ETC__q63 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2632;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin8946_BI_ETC__q63 =
		   23'd0;
    endcase
  end
  always@(guard__h69548 or
	  _theResult___snd__h77547 or
	  out_sfd__h78049 or _theResult___sfd__h78046)
  begin
    case (guard__h69548)
      2'b0, 2'b01:
	  CASE_guard9548_0b0_theResult___snd7547_BITS_56_ETC__q64 =
	      _theResult___snd__h77547[56:34];
      2'b10:
	  CASE_guard9548_0b0_theResult___snd7547_BITS_56_ETC__q64 =
	      out_sfd__h78049;
      2'b11:
	  CASE_guard9548_0b0_theResult___snd7547_BITS_56_ETC__q64 =
	      _theResult___sfd__h78046;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h77547 or
	  IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2650 or
	  IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2648)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
	      _theResult___snd__h77547[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
	      IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2650;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
	      IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2648;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
		   23'd0;
    endcase
  end
  always@(guard__h78465 or
	  sfdin__h86685 or out_sfd__h87218 or _theResult___sfd__h87215)
  begin
    case (guard__h78465)
      2'b0, 2'b01:
	  CASE_guard8465_0b0_sfdin6685_BITS_56_TO_34_0b1_ETC__q66 =
	      sfdin__h86685[56:34];
      2'b10:
	  CASE_guard8465_0b0_sfdin6685_BITS_56_TO_34_0b1_ETC__q66 =
	      out_sfd__h87218;
      2'b11:
	  CASE_guard8465_0b0_sfdin6685_BITS_56_TO_34_0b1_ETC__q66 =
	      _theResult___sfd__h87215;
    endcase
  end
  always@(requestR or
	  sfdin__h86685 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2674 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2672)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin6685_BI_ETC__q67 =
	      sfdin__h86685[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin6685_BI_ETC__q67 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2674;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin6685_BI_ETC__q67 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2672;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin6685_BI_ETC__q67 =
		   23'd0;
    endcase
  end
  always@(guard__h87287 or
	  _theResult___snd__h95310 or
	  out_sfd__h95842 or _theResult___sfd__h95839)
  begin
    case (guard__h87287)
      2'b0, 2'b01:
	  CASE_guard7287_0b0_theResult___snd5310_BITS_56_ETC__q68 =
	      _theResult___snd__h95310[56:34];
      2'b10:
	  CASE_guard7287_0b0_theResult___snd5310_BITS_56_ETC__q68 =
	      out_sfd__h95842;
      2'b11:
	  CASE_guard7287_0b0_theResult___snd5310_BITS_56_ETC__q68 =
	      _theResult___sfd__h95839;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h95310 or
	  IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2690 or
	  IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2688)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
	      _theResult___snd__h95310[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
	      IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2690;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
	      IF_IF_IF_requestR_BITS_190_TO_180_511_EQ_0_519_ETC___d2688;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
		   23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2026 =
	      requestR[191];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2026 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h60855 or requestR)
  begin
    case (guard__h60855)
      2'b0, 2'b01, 2'b10:
	  CASE_guard0855_0b0_requestR_BIT_191_0b1_reques_ETC__q70 =
	      requestR[191];
      2'd3:
	  CASE_guard0855_0b0_requestR_BIT_191_0b1_reques_ETC__q70 =
	      guard__h60855 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h69548 or requestR)
  begin
    case (guard__h69548)
      2'b0, 2'b01, 2'b10:
	  CASE_guard9548_0b0_requestR_BIT_191_0b1_reques_ETC__q71 =
	      requestR[191];
      2'd3:
	  CASE_guard9548_0b0_requestR_BIT_191_0b1_reques_ETC__q71 =
	      guard__h69548 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h78465 or requestR)
  begin
    case (guard__h78465)
      2'b0, 2'b01, 2'b10:
	  CASE_guard8465_0b0_requestR_BIT_191_0b1_reques_ETC__q72 =
	      requestR[191];
      2'd3:
	  CASE_guard8465_0b0_requestR_BIT_191_0b1_reques_ETC__q72 =
	      guard__h78465 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h87287 or requestR)
  begin
    case (guard__h87287)
      2'b0, 2'b01, 2'b10:
	  CASE_guard7287_0b0_requestR_BIT_191_0b1_reques_ETC__q73 =
	      requestR[191];
      2'd3:
	  CASE_guard7287_0b0_requestR_BIT_191_0b1_reques_ETC__q73 =
	      guard__h87287 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h110059 or
	  _theResult___fst_exp__h118020 or
	  out_exp__h118675 or _theResult___exp__h118672)
  begin
    case (guard__h110059)
      2'b0, 2'b01:
	  CASE_guard10059_0b0_theResult___fst_exp18020_0_ETC__q82 =
	      _theResult___fst_exp__h118020;
      2'b10:
	  CASE_guard10059_0b0_theResult___fst_exp18020_0_ETC__q82 =
	      out_exp__h118675;
      2'b11:
	  CASE_guard10059_0b0_theResult___fst_exp18020_0_ETC__q82 =
	      _theResult___exp__h118672;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h118020 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3331 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3329)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83 =
	      _theResult___fst_exp__h118020;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3331;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3329;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83 =
		   11'd0;
    endcase
  end
  always@(guard__h119295 or
	  _theResult___fst_exp__h127521 or
	  out_exp__h128250 or _theResult___exp__h128247)
  begin
    case (guard__h119295)
      2'b0, 2'b01:
	  CASE_guard19295_0b0_theResult___fst_exp27521_0_ETC__q84 =
	      _theResult___fst_exp__h127521;
      2'b10:
	  CASE_guard19295_0b0_theResult___fst_exp27521_0_ETC__q84 =
	      out_exp__h128250;
      2'b11:
	  CASE_guard19295_0b0_theResult___fst_exp27521_0_ETC__q84 =
	      _theResult___exp__h128247;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h127521 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3367 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3365)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 =
	      _theResult___fst_exp__h127521;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3367;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3365;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 =
		   11'd0;
    endcase
  end
  always@(guard__h128320 or
	  _theResult___fst_exp__h136310 or
	  out_exp__h136990 or _theResult___exp__h136987)
  begin
    case (guard__h128320)
      2'b0, 2'b01:
	  CASE_guard28320_0b0_theResult___fst_exp36310_0_ETC__q86 =
	      _theResult___fst_exp__h136310;
      2'b10:
	  CASE_guard28320_0b0_theResult___fst_exp36310_0_ETC__q86 =
	      out_exp__h136990;
      2'b11:
	  CASE_guard28320_0b0_theResult___fst_exp36310_0_ETC__q86 =
	      _theResult___exp__h136987;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h136310 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3395 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3393)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
	      _theResult___fst_exp__h136310;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3395;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3393;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
		   11'd0;
    endcase
  end
  always@(guard__h110059 or
	  _theResult___snd__h117971 or
	  out_sfd__h118676 or _theResult___sfd__h118673)
  begin
    case (guard__h110059)
      2'b0, 2'b01:
	  CASE_guard10059_0b0_theResult___snd17971_BITS__ETC__q88 =
	      _theResult___snd__h117971[56:5];
      2'b10:
	  CASE_guard10059_0b0_theResult___snd17971_BITS__ETC__q88 =
	      out_sfd__h118676;
      2'b11:
	  CASE_guard10059_0b0_theResult___snd17971_BITS__ETC__q88 =
	      _theResult___sfd__h118673;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h117971 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3422 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3420)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      _theResult___snd__h117971[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3422;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3420;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
		   52'd0;
    endcase
  end
  always@(guard__h119295 or
	  sfdin__h127515 or out_sfd__h128251 or _theResult___sfd__h128248)
  begin
    case (guard__h119295)
      2'b0, 2'b01:
	  CASE_guard19295_0b0_sfdin27515_BITS_56_TO_5_0b_ETC__q90 =
	      sfdin__h127515[56:5];
      2'b10:
	  CASE_guard19295_0b0_sfdin27515_BITS_56_TO_5_0b_ETC__q90 =
	      out_sfd__h128251;
      2'b11:
	  CASE_guard19295_0b0_sfdin27515_BITS_56_TO_5_0b_ETC__q90 =
	      _theResult___sfd__h128248;
    endcase
  end
  always@(requestR or
	  sfdin__h127515 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3446 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3444)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin27515_B_ETC__q91 =
	      sfdin__h127515[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin27515_B_ETC__q91 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3446;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin27515_B_ETC__q91 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3444;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin27515_B_ETC__q91 =
		   52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2972 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2972 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h128320 or
	  _theResult___snd__h136256 or
	  out_sfd__h136991 or _theResult___sfd__h136988)
  begin
    case (guard__h128320)
      2'b0, 2'b01:
	  CASE_guard28320_0b0_theResult___snd36256_BITS__ETC__q92 =
	      _theResult___snd__h136256[56:5];
      2'b10:
	  CASE_guard28320_0b0_theResult___snd36256_BITS__ETC__q92 =
	      out_sfd__h136991;
      2'b11:
	  CASE_guard28320_0b0_theResult___snd36256_BITS__ETC__q92 =
	      _theResult___sfd__h136988;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h136256 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3462 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3460)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      _theResult___snd__h136256[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3462;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3460;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
		   52'd0;
    endcase
  end
  always@(guard__h110059 or requestR)
  begin
    case (guard__h110059)
      2'b0, 2'b01, 2'b10:
	  CASE_guard10059_0b0_requestR_BITS_191_TO_160_E_ETC__q94 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard10059_0b0_requestR_BITS_191_TO_160_E_ETC__q94 =
	      guard__h110059 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(guard__h119295 or requestR)
  begin
    case (guard__h119295)
      2'b0, 2'b01, 2'b10:
	  CASE_guard19295_0b0_requestR_BITS_191_TO_160_E_ETC__q95 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard19295_0b0_requestR_BITS_191_TO_160_E_ETC__q95 =
	      guard__h119295 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(guard__h128320 or requestR)
  begin
    case (guard__h128320)
      2'b0, 2'b01, 2'b10:
	  CASE_guard28320_0b0_requestR_BITS_191_TO_160_E_ETC__q96 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard28320_0b0_requestR_BITS_191_TO_160_E_ETC__q96 =
	      guard__h128320 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	requestR <= `BSV_ASSIGNMENT_DELAY
	    215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	resultR <= `BSV_ASSIGNMENT_DELAY 70'h0AAAAAAAAAAAAAAAAA;
	stateR <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (requestR$EN) requestR <= `BSV_ASSIGNMENT_DELAY requestR$D_IN;
	if (resultR$EN) resultR <= `BSV_ASSIGNMENT_DELAY resultR$D_IN;
	if (stateR$EN) stateR <= `BSV_ASSIGNMENT_DELAY stateR$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_verbosity = 4'hA;
    requestR = 215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    resultR = 70'h2AAAAAAAAAAAAAAAAA;
    stateR = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkRISCV_FBox

