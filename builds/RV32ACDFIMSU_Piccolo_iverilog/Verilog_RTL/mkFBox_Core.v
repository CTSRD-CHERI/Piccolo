//
// Generated by Bluespec Compiler, version 2018.10.beta1 (build e1df8052c, 2018-10-17)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1 reg
// valid                          O     1
// word_fst                       O    64
// word_snd                       O     5
// CLK                            I     1 clock
// RST_N                          I     1 reset
// req_opcode                     I     7
// req_f7                         I     7
// req_rm                         I     3
// req_rs2                        I     5
// req_v1                         I    64
// req_v2                         I    64
// req_v3                         I    64
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkFBox_Core(CLK,
		   RST_N,

		   EN_server_reset_request_put,
		   RDY_server_reset_request_put,

		   EN_server_reset_response_get,
		   RDY_server_reset_response_get,

		   req_opcode,
		   req_f7,
		   req_rm,
		   req_rs2,
		   req_v1,
		   req_v2,
		   req_v3,
		   EN_req,

		   valid,

		   word_fst,

		   word_snd);
  input  CLK;
  input  RST_N;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [6 : 0] req_opcode;
  input  [6 : 0] req_f7;
  input  [2 : 0] req_rm;
  input  [4 : 0] req_rs2;
  input  [63 : 0] req_v1;
  input  [63 : 0] req_v2;
  input  [63 : 0] req_v3;
  input  EN_req;

  // value method valid
  output valid;

  // value method word_fst
  output [63 : 0] word_fst;

  // value method word_snd
  output [4 : 0] word_snd;

  // signals for module outputs
  wire [63 : 0] word_fst;
  wire [4 : 0] word_snd;
  wire RDY_server_reset_request_put, RDY_server_reset_response_get, valid;

  // inlined wires
  reg [68 : 0] dw_result$wget;
  wire dw_valid$wget, dw_valid$whas;

  // register requestR
  reg [214 : 0] requestR;
  wire [214 : 0] requestR$D_IN;
  wire requestR$EN;

  // register resultR
  reg [69 : 0] resultR;
  reg [69 : 0] resultR$D_IN;
  wire resultR$EN;

  // register stateR
  reg [1 : 0] stateR;
  reg [1 : 0] stateR$D_IN;
  wire stateR$EN;

  // ports of submodule fpu
  reg [201 : 0] fpu$server_core_request_put;
  wire [69 : 0] fpu$server_core_response_get;
  wire fpu$EN_server_core_request_put,
       fpu$EN_server_core_response_get,
       fpu$EN_server_reset_request_put,
       fpu$EN_server_reset_response_get,
       fpu$RDY_server_core_request_put,
       fpu$RDY_server_core_response_get,
       fpu$RDY_server_reset_request_put,
       fpu$RDY_server_reset_response_get;

  // ports of submodule frmFpuF
  wire frmFpuF$CLR, frmFpuF$DEQ, frmFpuF$D_IN, frmFpuF$ENQ;

  // ports of submodule resetReqsF
  wire resetReqsF$CLR,
       resetReqsF$DEQ,
       resetReqsF$EMPTY_N,
       resetReqsF$ENQ,
       resetReqsF$FULL_N;

  // ports of submodule resetRspsF
  wire resetRspsF$CLR,
       resetRspsF$DEQ,
       resetRspsF$EMPTY_N,
       resetRspsF$ENQ,
       resetRspsF$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_doFADD_D,
       CAN_FIRE_RL_doFADD_S,
       CAN_FIRE_RL_doFCLASS_D,
       CAN_FIRE_RL_doFCLASS_S,
       CAN_FIRE_RL_doFCVT_D_S,
       CAN_FIRE_RL_doFCVT_D_W,
       CAN_FIRE_RL_doFCVT_D_WU,
       CAN_FIRE_RL_doFCVT_S_D,
       CAN_FIRE_RL_doFCVT_S_W,
       CAN_FIRE_RL_doFCVT_S_WU,
       CAN_FIRE_RL_doFCVT_WU_D,
       CAN_FIRE_RL_doFCVT_WU_S,
       CAN_FIRE_RL_doFCVT_W_D,
       CAN_FIRE_RL_doFCVT_W_S,
       CAN_FIRE_RL_doFEQ_D,
       CAN_FIRE_RL_doFEQ_S,
       CAN_FIRE_RL_doFLE_D,
       CAN_FIRE_RL_doFLE_S,
       CAN_FIRE_RL_doFLT_D,
       CAN_FIRE_RL_doFLT_S,
       CAN_FIRE_RL_doFMADD_D,
       CAN_FIRE_RL_doFMADD_S,
       CAN_FIRE_RL_doFMAX_D,
       CAN_FIRE_RL_doFMAX_S,
       CAN_FIRE_RL_doFMIN_D,
       CAN_FIRE_RL_doFMIN_S,
       CAN_FIRE_RL_doFMSUB_D,
       CAN_FIRE_RL_doFMSUB_S,
       CAN_FIRE_RL_doFMUL_D,
       CAN_FIRE_RL_doFMUL_S,
       CAN_FIRE_RL_doFMV_D_X,
       CAN_FIRE_RL_doFMV_W_X,
       CAN_FIRE_RL_doFMV_X_D,
       CAN_FIRE_RL_doFMV_X_W,
       CAN_FIRE_RL_doFNMADD_D,
       CAN_FIRE_RL_doFNMADD_S,
       CAN_FIRE_RL_doFNMSUB_D,
       CAN_FIRE_RL_doFNMSUB_S,
       CAN_FIRE_RL_doFSGNJN_D,
       CAN_FIRE_RL_doFSGNJN_S,
       CAN_FIRE_RL_doFSGNJX_D,
       CAN_FIRE_RL_doFSGNJX_S,
       CAN_FIRE_RL_doFSGNJ_D,
       CAN_FIRE_RL_doFSGNJ_S,
       CAN_FIRE_RL_doFSUB_D,
       CAN_FIRE_RL_doFSUB_S,
       CAN_FIRE_RL_rl_drive_fpu_result,
       CAN_FIRE_RL_rl_get_fpu_result,
       CAN_FIRE_RL_rl_reset_begin,
       CAN_FIRE_RL_rl_reset_end,
       CAN_FIRE_req,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       WILL_FIRE_RL_doFADD_D,
       WILL_FIRE_RL_doFADD_S,
       WILL_FIRE_RL_doFCLASS_D,
       WILL_FIRE_RL_doFCLASS_S,
       WILL_FIRE_RL_doFCVT_D_S,
       WILL_FIRE_RL_doFCVT_D_W,
       WILL_FIRE_RL_doFCVT_D_WU,
       WILL_FIRE_RL_doFCVT_S_D,
       WILL_FIRE_RL_doFCVT_S_W,
       WILL_FIRE_RL_doFCVT_S_WU,
       WILL_FIRE_RL_doFCVT_WU_D,
       WILL_FIRE_RL_doFCVT_WU_S,
       WILL_FIRE_RL_doFCVT_W_D,
       WILL_FIRE_RL_doFCVT_W_S,
       WILL_FIRE_RL_doFEQ_D,
       WILL_FIRE_RL_doFEQ_S,
       WILL_FIRE_RL_doFLE_D,
       WILL_FIRE_RL_doFLE_S,
       WILL_FIRE_RL_doFLT_D,
       WILL_FIRE_RL_doFLT_S,
       WILL_FIRE_RL_doFMADD_D,
       WILL_FIRE_RL_doFMADD_S,
       WILL_FIRE_RL_doFMAX_D,
       WILL_FIRE_RL_doFMAX_S,
       WILL_FIRE_RL_doFMIN_D,
       WILL_FIRE_RL_doFMIN_S,
       WILL_FIRE_RL_doFMSUB_D,
       WILL_FIRE_RL_doFMSUB_S,
       WILL_FIRE_RL_doFMUL_D,
       WILL_FIRE_RL_doFMUL_S,
       WILL_FIRE_RL_doFMV_D_X,
       WILL_FIRE_RL_doFMV_W_X,
       WILL_FIRE_RL_doFMV_X_D,
       WILL_FIRE_RL_doFMV_X_W,
       WILL_FIRE_RL_doFNMADD_D,
       WILL_FIRE_RL_doFNMADD_S,
       WILL_FIRE_RL_doFNMSUB_D,
       WILL_FIRE_RL_doFNMSUB_S,
       WILL_FIRE_RL_doFSGNJN_D,
       WILL_FIRE_RL_doFSGNJN_S,
       WILL_FIRE_RL_doFSGNJX_D,
       WILL_FIRE_RL_doFSGNJX_S,
       WILL_FIRE_RL_doFSGNJ_D,
       WILL_FIRE_RL_doFSGNJ_S,
       WILL_FIRE_RL_doFSUB_D,
       WILL_FIRE_RL_doFSUB_S,
       WILL_FIRE_RL_rl_drive_fpu_result,
       WILL_FIRE_RL_rl_get_fpu_result,
       WILL_FIRE_RL_rl_reset_begin,
       WILL_FIRE_RL_rl_reset_end,
       WILL_FIRE_req,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get;

  // inputs to muxes for submodule ports
  wire [214 : 0] MUX_requestR$write_1__VAL_2;
  wire [201 : 0] MUX_fpu$server_core_request_put_1__VAL_1,
		 MUX_fpu$server_core_request_put_1__VAL_10,
		 MUX_fpu$server_core_request_put_1__VAL_11,
		 MUX_fpu$server_core_request_put_1__VAL_12,
		 MUX_fpu$server_core_request_put_1__VAL_13,
		 MUX_fpu$server_core_request_put_1__VAL_14,
		 MUX_fpu$server_core_request_put_1__VAL_2,
		 MUX_fpu$server_core_request_put_1__VAL_3,
		 MUX_fpu$server_core_request_put_1__VAL_4,
		 MUX_fpu$server_core_request_put_1__VAL_5,
		 MUX_fpu$server_core_request_put_1__VAL_6,
		 MUX_fpu$server_core_request_put_1__VAL_7,
		 MUX_fpu$server_core_request_put_1__VAL_8,
		 MUX_fpu$server_core_request_put_1__VAL_9;
  wire [69 : 0] MUX_resultR$write_1__VAL_10,
		MUX_resultR$write_1__VAL_11,
		MUX_resultR$write_1__VAL_12,
		MUX_resultR$write_1__VAL_13,
		MUX_resultR$write_1__VAL_14,
		MUX_resultR$write_1__VAL_15,
		MUX_resultR$write_1__VAL_16,
		MUX_resultR$write_1__VAL_17,
		MUX_resultR$write_1__VAL_18,
		MUX_resultR$write_1__VAL_19,
		MUX_resultR$write_1__VAL_20,
		MUX_resultR$write_1__VAL_21,
		MUX_resultR$write_1__VAL_22,
		MUX_resultR$write_1__VAL_23,
		MUX_resultR$write_1__VAL_24,
		MUX_resultR$write_1__VAL_25,
		MUX_resultR$write_1__VAL_26,
		MUX_resultR$write_1__VAL_27,
		MUX_resultR$write_1__VAL_28,
		MUX_resultR$write_1__VAL_29,
		MUX_resultR$write_1__VAL_3,
		MUX_resultR$write_1__VAL_30,
		MUX_resultR$write_1__VAL_31,
		MUX_resultR$write_1__VAL_32,
		MUX_resultR$write_1__VAL_33,
		MUX_resultR$write_1__VAL_34,
		MUX_resultR$write_1__VAL_35,
		MUX_resultR$write_1__VAL_4,
		MUX_resultR$write_1__VAL_5,
		MUX_resultR$write_1__VAL_7,
		MUX_resultR$write_1__VAL_8,
		MUX_resultR$write_1__VAL_9;
  wire [68 : 0] MUX_dw_result$wset_1__VAL_1,
		MUX_dw_result$wset_1__VAL_10,
		MUX_dw_result$wset_1__VAL_11,
		MUX_dw_result$wset_1__VAL_12,
		MUX_dw_result$wset_1__VAL_13,
		MUX_dw_result$wset_1__VAL_14,
		MUX_dw_result$wset_1__VAL_15,
		MUX_dw_result$wset_1__VAL_16,
		MUX_dw_result$wset_1__VAL_17,
		MUX_dw_result$wset_1__VAL_18,
		MUX_dw_result$wset_1__VAL_19,
		MUX_dw_result$wset_1__VAL_2,
		MUX_dw_result$wset_1__VAL_20,
		MUX_dw_result$wset_1__VAL_21,
		MUX_dw_result$wset_1__VAL_22,
		MUX_dw_result$wset_1__VAL_23,
		MUX_dw_result$wset_1__VAL_24,
		MUX_dw_result$wset_1__VAL_25,
		MUX_dw_result$wset_1__VAL_26,
		MUX_dw_result$wset_1__VAL_27,
		MUX_dw_result$wset_1__VAL_28,
		MUX_dw_result$wset_1__VAL_29,
		MUX_dw_result$wset_1__VAL_3,
		MUX_dw_result$wset_1__VAL_30,
		MUX_dw_result$wset_1__VAL_31,
		MUX_dw_result$wset_1__VAL_32,
		MUX_dw_result$wset_1__VAL_4,
		MUX_dw_result$wset_1__VAL_5,
		MUX_dw_result$wset_1__VAL_6,
		MUX_dw_result$wset_1__VAL_7,
		MUX_dw_result$wset_1__VAL_8,
		MUX_dw_result$wset_1__VAL_9;
  wire MUX_dw_result$wset_1__SEL_1,
       MUX_dw_result$wset_1__SEL_2,
       MUX_dw_result$wset_1__SEL_30;

  // remaining internal signals
  reg [51 : 0] CASE_guard11687_0b0_theResult___snd19599_BITS__ETC__q114,
	       CASE_guard11687_0b0_theResult___snd19599_BITS__ETC__q115,
	       CASE_guard20995_0b0_sfdin29215_BITS_56_TO_5_0b_ETC__q116,
	       CASE_guard20995_0b0_sfdin29215_BITS_56_TO_5_0b_ETC__q117,
	       CASE_guard30062_0b0_theResult___snd37998_BITS__ETC__q118,
	       CASE_guard30062_0b0_theResult___snd37998_BITS__ETC__q119,
	       CASE_guard5851_0b0_sfd___35841_BITS_54_TO_3_0b_ETC__q56,
	       CASE_guard5851_0b0_sfd___35841_BITS_54_TO_3_0b_ETC__q57,
	       CASE_guard6155_0b0_sfd___36145_BITS_54_TO_3_0b_ETC__q45,
	       CASE_guard6155_0b0_sfd___36145_BITS_54_TO_3_0b_ETC__q46,
	       CASE_guard6580_0b0_sfd___35841_BITS_53_TO_2_0b_ETC__q54,
	       CASE_guard6580_0b0_sfd___35841_BITS_53_TO_2_0b_ETC__q55,
	       CASE_guard6885_0b0_sfd___36145_BITS_53_TO_2_0b_ETC__q41,
	       CASE_guard6885_0b0_sfd___36145_BITS_53_TO_2_0b_ETC__q42,
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1390,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1558,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1573,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617;
  reg [22 : 0] CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q18,
	       CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q19,
	       CASE_guard0671_0b0_theResult___snd8670_BITS_56_ETC__q80,
	       CASE_guard0671_0b0_theResult___snd8670_BITS_56_ETC__q81,
	       CASE_guard1936_0b0_sfdin0027_BITS_56_TO_34_0b1_ETC__q78,
	       CASE_guard1936_0b0_sfdin0027_BITS_56_TO_34_0b1_ETC__q79,
	       CASE_guard3696_0b0_sfd___33686_BITS_31_TO_9_0b_ETC__q29,
	       CASE_guard3696_0b0_sfd___33686_BITS_31_TO_9_0b_ETC__q30,
	       CASE_guard4222_0b0_sfd___33686_BITS_30_TO_8_0b_ETC__q27,
	       CASE_guard4222_0b0_sfd___33686_BITS_30_TO_8_0b_ETC__q28,
	       CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q16,
	       CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q17,
	       CASE_guard8524_0b0_theResult___snd6547_BITS_56_ETC__q84,
	       CASE_guard8524_0b0_theResult___snd6547_BITS_56_ETC__q85,
	       CASE_guard9660_0b0_sfdin7880_BITS_56_TO_34_0b1_ETC__q82,
	       CASE_guard9660_0b0_sfdin7880_BITS_56_TO_34_0b1_ETC__q83,
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2736,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2755,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2782,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2801,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d412,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d430,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d730,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d745;
  reg [10 : 0] CASE_guard11687_0b0_theResult___fst_exp19648_0_ETC__q102,
	       CASE_guard11687_0b0_theResult___fst_exp19648_0_ETC__q103,
	       CASE_guard20995_0b0_theResult___fst_exp29221_0_ETC__q104,
	       CASE_guard20995_0b0_theResult___fst_exp29221_0_ETC__q105,
	       CASE_guard30062_0b0_theResult___fst_exp38052_0_ETC__q106,
	       CASE_guard30062_0b0_theResult___fst_exp38052_0_ETC__q107,
	       CASE_guard5851_0b0_0_0b1_0_0b10_out_exp6470_0b_ETC__q49,
	       CASE_guard5851_0b0_0_0b1_theResult___exp6467_0_ETC__q50,
	       CASE_guard6155_0b0_0_0b1_0_0b10_out_exp6774_0b_ETC__q44,
	       CASE_guard6155_0b0_0_0b1_theResult___exp6771_0_ETC__q43,
	       CASE_guard6580_0b0_x6595_BITS_10_TO_0_0b1_theR_ETC__q52,
	       CASE_guard6580_0b0_x6595_BITS_10_TO_0_0b1_x659_ETC__q53,
	       CASE_guard6885_0b0_x6900_BITS_10_TO_0_0b1_theR_ETC__q39,
	       CASE_guard6885_0b0_x6900_BITS_10_TO_0_0b1_x690_ETC__q40,
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4,
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard5851_ETC__q51,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1320,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1349,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1536,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538;
  reg [7 : 0] CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_theResu_ETC__q14,
	      CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_x064_BI_ETC__q15,
	      CASE_guard0671_0b0_theResult___fst_exp8719_0b1_ETC__q72,
	      CASE_guard0671_0b0_theResult___fst_exp8719_0b1_ETC__q73,
	      CASE_guard1936_0b0_theResult___fst_exp0033_0b1_ETC__q70,
	      CASE_guard1936_0b0_theResult___fst_exp0033_0b1_ETC__q71,
	      CASE_guard3696_0b0_0_0b1_0_0b10_out_exp4112_0b_ETC__q22,
	      CASE_guard3696_0b0_0_0b1_theResult___exp4109_0_ETC__q23,
	      CASE_guard4222_0b0_x4237_BITS_7_TO_0_0b1_theRe_ETC__q25,
	      CASE_guard4222_0b0_x4237_BITS_7_TO_0_0b1_x4237_ETC__q26,
	      CASE_guard519_0b0_0_0b1_0_0b10_out_exp938_0b11_ETC__q13,
	      CASE_guard519_0b0_0_0b1_theResult___exp935_0b1_ETC__q12,
	      CASE_guard8524_0b0_theResult___fst_exp6601_0b1_ETC__q76,
	      CASE_guard8524_0b0_theResult___fst_exp6601_0b1_ETC__q77,
	      CASE_guard9660_0b0_theResult___fst_exp7886_0b1_ETC__q74,
	      CASE_guard9660_0b0_theResult___fst_exp7886_0b1_ETC__q75,
	      CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2,
	      CASE_requestR_BITS_194_TO_192_0x3_IF_guard3696_ETC__q24,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2149,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2306,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2633,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2702,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d360,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d389,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d707;
  reg [2 : 0] IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50;
  reg CASE_guard049_0b0_requestR_BIT_159_0b1_request_ETC__q10,
      CASE_guard0671_0b0_requestR_BIT_191_0b1_reques_ETC__q88,
      CASE_guard11687_0b0_requestR_BITS_191_TO_160_E_ETC__q108,
      CASE_guard1936_0b0_requestR_BIT_191_0b1_reques_ETC__q86,
      CASE_guard20995_0b0_requestR_BITS_191_TO_160_E_ETC__q110,
      CASE_guard30062_0b0_requestR_BITS_191_TO_160_E_ETC__q112,
      CASE_guard519_0b0_requestR_BIT_159_0b1_request_ETC__q8,
      CASE_guard6155_0b0_requestR_BIT_159_0b1_reques_ETC__q35,
      CASE_guard6885_0b0_requestR_BIT_159_0b1_reques_ETC__q37,
      CASE_guard8524_0b0_requestR_BIT_191_0b1_reques_ETC__q92,
      CASE_guard9660_0b0_requestR_BIT_191_0b1_reques_ETC__q90,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93;
  wire [85 : 0] IF_requestR_3_BIT_191_196_THEN_NEG_0b0_CONCAT__ETC___d1628,
		b__h47990,
		x__h48666,
		x__h49744;
  wire [64 : 0] _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78;
  wire [63 : 0] IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1045,
		IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1061,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1044,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1046,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1060,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1062,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1132,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1133,
		IF_requestR_3_BITS_126_TO_116_755_EQ_2047_756__ETC___d3803,
		IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_ETC___d3817,
		IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_ETC___d3888,
		res___1__h156206,
		res___1__h156644,
		res___1__h156654,
		res___1__h156673,
		res___1__h26604,
		res___1__h26840,
		res___1__h26850,
		res___1__h26869,
		res__h139472,
		res__h143914,
		res__h148462,
		res__h151166,
		res__h153861,
		res__h155738,
		res__h156689,
		res__h156871,
		res__h18208,
		res__h18445,
		res__h23817,
		res__h25300,
		res__h26369,
		res__h26885,
		res__h97667,
		x__h140497,
		x__h145045,
		x__h149489,
		x__h15187,
		x__h152184,
		x__h154061,
		x__h156188,
		x__h156838,
		x__h16780,
		x__h17530,
		x__h20164,
		x__h2157,
		x__h22689,
		x__h22810,
		x__h22948,
		x__h2303,
		x__h2437,
		x__h24431,
		x__h25500,
		x__h2584,
		x__h26586,
		x__h27753,
		x__h27875,
		x__h27999,
		x__h28129,
		x__h38077,
		x__h47744,
		x__h49320,
		x__h50066,
		x__h9045,
		x__h98771;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65,
		IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q100,
		IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q94,
		IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606__ETC__q62,
		IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606__ETC__q68,
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837,
		_0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3162,
		_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_606__ETC___d2328,
		_theResult____h120985,
		_theResult____h61926,
		_theResult____h79650,
		_theResult___snd__h119599,
		_theResult___snd__h119601,
		_theResult___snd__h119608,
		_theResult___snd__h119614,
		_theResult___snd__h119637,
		_theResult___snd__h129232,
		_theResult___snd__h129243,
		_theResult___snd__h129245,
		_theResult___snd__h129255,
		_theResult___snd__h129261,
		_theResult___snd__h129284,
		_theResult___snd__h137998,
		_theResult___snd__h138012,
		_theResult___snd__h138018,
		_theResult___snd__h138036,
		_theResult___snd__h70044,
		_theResult___snd__h70055,
		_theResult___snd__h70057,
		_theResult___snd__h70067,
		_theResult___snd__h70073,
		_theResult___snd__h70096,
		_theResult___snd__h78670,
		_theResult___snd__h78672,
		_theResult___snd__h78679,
		_theResult___snd__h78685,
		_theResult___snd__h78708,
		_theResult___snd__h87897,
		_theResult___snd__h87908,
		_theResult___snd__h87910,
		_theResult___snd__h87920,
		_theResult___snd__h87926,
		_theResult___snd__h87949,
		_theResult___snd__h96547,
		_theResult___snd__h96561,
		_theResult___snd__h96567,
		_theResult___snd__h96585,
		b__h15433,
		result__h121598,
		result__h80263,
		sfd__h54296,
		sfdin__h129215,
		sfdin__h70027,
		sfdin__h87880,
		x__h121693,
		x__h16109,
		x__h17204,
		x__h80358;
  wire [54 : 0] sfd___3__h36145, sfd___3__h45841, sfd__h28144, sfd__h38089;
  wire [53 : 0] sfd__h119666,
		sfd__h129313,
		sfd__h138071,
		sfd__h36172,
		sfd__h36915,
		sfd__h45868,
		sfd__h46610,
		value__h47992;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3592,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3594,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3565,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3567,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3611,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3613,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1366,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1368,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1384,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1386,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3624,
		IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d1394,
		IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d1577,
		_theResult___fst_sfd__h104576,
		_theResult___fst_sfd__h120402,
		_theResult___fst_sfd__h120405,
		_theResult___fst_sfd__h130049,
		_theResult___fst_sfd__h130052,
		_theResult___fst_sfd__h138831,
		_theResult___fst_sfd__h138834,
		_theResult___fst_sfd__h138843,
		_theResult___fst_sfd__h138849,
		_theResult___fst_sfd__h36869,
		_theResult___fst_sfd__h37625,
		_theResult___fst_sfd__h37628,
		_theResult___fst_sfd__h46564,
		_theResult___fst_sfd__h47319,
		_theResult___fst_sfd__h47322,
		_theResult___fst_sfd__h50592,
		_theResult___sfd__h120304,
		_theResult___sfd__h129951,
		_theResult___sfd__h138733,
		_theResult___sfd__h36772,
		_theResult___sfd__h37528,
		_theResult___sfd__h46468,
		_theResult___sfd__h47223,
		_theResult___snd_fst_sfd__h100722,
		_theResult___snd_fst_sfd__h120408,
		_theResult___snd_fst_sfd__h138837,
		_theResult___snd_fst_sfd__h37631,
		_theResult___snd_fst_sfd__h47325,
		out___1_sfd__h98836,
		out_sfd__h120307,
		out_sfd__h129954,
		out_sfd__h138736,
		out_sfd__h36775,
		out_sfd__h37531,
		out_sfd__h46471,
		out_sfd__h47226,
		value__h50135;
  wire [32 : 0] _theResult_____2__h15368,
		_theResult_____2__h47925,
		out1___1__h15860,
		out1___1__h48417;
  wire [31 : 0] IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1041,
		IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1055,
		IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1057,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1042,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1058,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d896,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d956,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d892,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d894,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d954,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1683,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1685,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1745,
		IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1039,
		IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1054,
		IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_ETC___d1747,
		IF_requestR_3_BITS_190_TO_180_606_EQ_2047_607__ETC___d1687,
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d825,
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d958,
		IF_requestR_3_BIT_191_196_THEN_2147483648_ELSE_ETC___d1616,
		requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
		requestR_BITS_159_TO_128__q1,
		sfd___3__h13686,
		sfd___3__h7509,
		sfd__h2605,
		x__h15190,
		x__h16783,
		x__h2163,
		x__h2309,
		x__h2443,
		x__h2590,
		x__h47747,
		x__h49323,
		x__h97673;
  wire [30 : 0] IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29;
  wire [24 : 0] sfd__h13713,
		sfd__h14252,
		sfd__h70125,
		sfd__h7536,
		sfd__h78737,
		sfd__h8079,
		sfd__h87978,
		sfd__h96620,
		value__h15435;
  wire [23 : 0] NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1621,
		NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1653,
		NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1654,
		NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1718;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2730,
		IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2732,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2776,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2778,
		IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2749,
		IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2751,
		IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2795,
		IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2797,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d406,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d408,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d424,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d426,
		IF_requestR_3_BITS_190_TO_180_606_EQ_2047_607__ETC___d2808,
		_theResult___fst_sfd__h14206,
		_theResult___fst_sfd__h14758,
		_theResult___fst_sfd__h14761,
		_theResult___fst_sfd__h61909,
		_theResult___fst_sfd__h70658,
		_theResult___fst_sfd__h70661,
		_theResult___fst_sfd__h79270,
		_theResult___fst_sfd__h79273,
		_theResult___fst_sfd__h8033,
		_theResult___fst_sfd__h8586,
		_theResult___fst_sfd__h8589,
		_theResult___fst_sfd__h88511,
		_theResult___fst_sfd__h88514,
		_theResult___fst_sfd__h97177,
		_theResult___fst_sfd__h97180,
		_theResult___fst_sfd__h97189,
		_theResult___fst_sfd__h97195,
		_theResult___fst_sfd__h99094,
		_theResult___sfd__h14110,
		_theResult___sfd__h14662,
		_theResult___sfd__h70560,
		_theResult___sfd__h79172,
		_theResult___sfd__h7936,
		_theResult___sfd__h8489,
		_theResult___sfd__h88413,
		_theResult___sfd__h97079,
		_theResult___snd_fst_sfd__h14764,
		_theResult___snd_fst_sfd__h54250,
		_theResult___snd_fst_sfd__h79276,
		_theResult___snd_fst_sfd__h8592,
		_theResult___snd_fst_sfd__h97183,
		out_sfd__h14113,
		out_sfd__h14665,
		out_sfd__h70563,
		out_sfd__h79175,
		out_sfd__h7939,
		out_sfd__h8492,
		out_sfd__h88416,
		out_sfd__h97082,
		sV1_sfd__h1202,
		sV2_sfd__h1305,
		value__h98839;
  wire [19 : 0] NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d830,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d862,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d863,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d927;
  wire [11 : 0] IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3478,
		SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155,
		SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96,
		SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2321,
		SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC__q64,
		_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1850,
		_3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3158,
		_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1240,
		_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1455,
		_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3012,
		_3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_606_ETC___d2324,
		x__h121726,
		x__h36900,
		x__h46595,
		x__h80391;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3463,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3465,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3138,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3140,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3532,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3534,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1317,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1343,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1345,
		SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99,
		_theResult___exp__h120303,
		_theResult___exp__h129950,
		_theResult___exp__h138732,
		_theResult___exp__h36771,
		_theResult___exp__h37527,
		_theResult___exp__h46467,
		_theResult___exp__h47222,
		_theResult___fst_exp__h104575,
		_theResult___fst_exp__h119639,
		_theResult___fst_exp__h119645,
		_theResult___fst_exp__h119648,
		_theResult___fst_exp__h120401,
		_theResult___fst_exp__h120404,
		_theResult___fst_exp__h129221,
		_theResult___fst_exp__h129286,
		_theResult___fst_exp__h129292,
		_theResult___fst_exp__h129295,
		_theResult___fst_exp__h130048,
		_theResult___fst_exp__h130051,
		_theResult___fst_exp__h138004,
		_theResult___fst_exp__h138043,
		_theResult___fst_exp__h138049,
		_theResult___fst_exp__h138052,
		_theResult___fst_exp__h138830,
		_theResult___fst_exp__h138833,
		_theResult___fst_exp__h138842,
		_theResult___fst_exp__h138845,
		_theResult___fst_exp__h36868,
		_theResult___fst_exp__h37624,
		_theResult___fst_exp__h37627,
		_theResult___fst_exp__h46563,
		_theResult___fst_exp__h47318,
		_theResult___fst_exp__h47321,
		_theResult___snd_fst_exp__h120407,
		_theResult___snd_fst_exp__h138836,
		_theResult___snd_fst_exp__h37630,
		_theResult___snd_fst_exp__h37633,
		_theResult___snd_fst_exp__h37636,
		_theResult___snd_fst_exp__h47324,
		_theResult___snd_fst_exp__h47327,
		_theResult___snd_fst_exp__h47330,
		din_inc___2_exp__h138868,
		din_inc___2_exp__h138898,
		din_inc___2_exp__h138922,
		din_inc___2_exp__h37670,
		din_inc___2_exp__h47360,
		out_exp__h120306,
		out_exp__h129953,
		out_exp__h138735,
		out_exp__h36774,
		out_exp__h37530,
		out_exp__h46470,
		out_exp__h47225,
		requestR_3_BITS_190_TO_180_606_MINUS_1023___d1619,
		x__h98780;
  wire [8 : 0] IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2642,
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d268,
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d626,
	       x__h14237,
	       x__h8064;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2143,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2145,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2627,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2629,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2300,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2302,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2696,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2698,
	       IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d357,
	       IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d383,
	       IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d385,
	       IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d395,
	       IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d713,
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d828,
	       SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC__q67,
	       _theResult___exp__h14109,
	       _theResult___exp__h14661,
	       _theResult___exp__h70559,
	       _theResult___exp__h79171,
	       _theResult___exp__h7935,
	       _theResult___exp__h8488,
	       _theResult___exp__h88412,
	       _theResult___exp__h97078,
	       _theResult___fst_exp__h14205,
	       _theResult___fst_exp__h14757,
	       _theResult___fst_exp__h14760,
	       _theResult___fst_exp__h61908,
	       _theResult___fst_exp__h70033,
	       _theResult___fst_exp__h70098,
	       _theResult___fst_exp__h70104,
	       _theResult___fst_exp__h70107,
	       _theResult___fst_exp__h70657,
	       _theResult___fst_exp__h70660,
	       _theResult___fst_exp__h78710,
	       _theResult___fst_exp__h78716,
	       _theResult___fst_exp__h78719,
	       _theResult___fst_exp__h79269,
	       _theResult___fst_exp__h79272,
	       _theResult___fst_exp__h8032,
	       _theResult___fst_exp__h8585,
	       _theResult___fst_exp__h8588,
	       _theResult___fst_exp__h87886,
	       _theResult___fst_exp__h87951,
	       _theResult___fst_exp__h87957,
	       _theResult___fst_exp__h87960,
	       _theResult___fst_exp__h88510,
	       _theResult___fst_exp__h88513,
	       _theResult___fst_exp__h96553,
	       _theResult___fst_exp__h96592,
	       _theResult___fst_exp__h96598,
	       _theResult___fst_exp__h96601,
	       _theResult___fst_exp__h97176,
	       _theResult___fst_exp__h97179,
	       _theResult___fst_exp__h97188,
	       _theResult___fst_exp__h97191,
	       _theResult___snd_fst_exp__h14763,
	       _theResult___snd_fst_exp__h14766,
	       _theResult___snd_fst_exp__h14769,
	       _theResult___snd_fst_exp__h79275,
	       _theResult___snd_fst_exp__h8591,
	       _theResult___snd_fst_exp__h8594,
	       _theResult___snd_fst_exp__h8597,
	       _theResult___snd_fst_exp__h97182,
	       din_inc___2_exp__h14799,
	       din_inc___2_exp__h8631,
	       din_inc___2_exp__h97210,
	       din_inc___2_exp__h97234,
	       din_inc___2_exp__h97264,
	       din_inc___2_exp__h97288,
	       out_exp__h14112,
	       out_exp__h14664,
	       out_exp__h70562,
	       out_exp__h79174,
	       out_exp__h7938,
	       out_exp__h8491,
	       out_exp__h88415,
	       out_exp__h97081,
	       sV1_exp__h1201,
	       sV2_exp__h1304,
	       x__h50075;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2084,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3404,
	       IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2568,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084,
	       IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1237,
	       IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d265,
	       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2246,
	       IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1452,
	       IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d623;
  wire [4 : 0] _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2868,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2897,
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674,
	       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2880,
	       x__h139574,
	       x__h144046,
	       x__h14903,
	       x__h153880,
	       x__h16523,
	       x__h17282,
	       x__h19569,
	       x__h25319,
	       x__h37792,
	       x__h47460,
	       x__h49063,
	       x__h49822,
	       x__h8757,
	       x__h97788;
  wire [1 : 0] IF_sfd___33686_BIT_7_THEN_2_ELSE_0__q21,
	       IF_sfd___33686_BIT_8_THEN_2_ELSE_0__q20,
	       IF_sfd___3509_BIT_7_THEN_2_ELSE_0__q7,
	       IF_sfd___3509_BIT_8_THEN_2_ELSE_0__q6,
	       IF_sfd___35841_BIT_1_THEN_2_ELSE_0__q48,
	       IF_sfd___35841_BIT_2_THEN_2_ELSE_0__q47,
	       IF_sfd___36145_BIT_1_THEN_2_ELSE_0__q34,
	       IF_sfd___36145_BIT_2_THEN_2_ELSE_0__q33,
	       IF_sfdin0027_BIT_33_THEN_2_ELSE_0__q61,
	       IF_sfdin29215_BIT_4_THEN_2_ELSE_0__q98,
	       IF_sfdin7880_BIT_33_THEN_2_ELSE_0__q66,
	       IF_theResult___snd19599_BIT_4_THEN_2_ELSE_0__q95,
	       IF_theResult___snd37998_BIT_4_THEN_2_ELSE_0__q101,
	       IF_theResult___snd6547_BIT_33_THEN_2_ELSE_0__q69,
	       IF_theResult___snd8670_BIT_33_THEN_2_ELSE_0__q63,
	       IF_x6109_BIT_24_THEN_2_ELSE_0__q31,
	       IF_x7204_BIT_24_THEN_2_ELSE_0__q32,
	       IF_x8666_BIT_53_THEN_2_ELSE_0__q58,
	       IF_x9744_BIT_53_THEN_2_ELSE_0__q59,
	       guard__h111687,
	       guard__h120995,
	       guard__h130062,
	       guard__h13696,
	       guard__h14222,
	       guard__h15366,
	       guard__h15920,
	       guard__h16983,
	       guard__h36155,
	       guard__h36885,
	       guard__h45851,
	       guard__h46580,
	       guard__h47923,
	       guard__h48477,
	       guard__h49523,
	       guard__h61936,
	       guard__h70671,
	       guard__h7519,
	       guard__h79660,
	       guard__h8049,
	       guard__h88524;
  wire IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_7_ETC___d2830,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1296,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1411,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d335,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d485,
       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d1594,
       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d799,
       IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3648,
       IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3656,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3660,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3695,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3698,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3705,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3719,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3731,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3743,
       IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d918,
       IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1709,
       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1297,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3640,
       IF_NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1034,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3658,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3717,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3729,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3741,
       IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2848,
       IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2926,
       IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2939,
       IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2952,
       IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1014,
       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2850,
       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2901,
       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2912,
       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2928,
       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2941,
       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2954,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1000,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1010,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1023,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1024,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1025,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1028,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1048,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1085,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1096,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1100,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d824,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d966,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d977,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1645,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1677,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1739,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d854,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d886,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d948,
       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d476,
       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d479,
       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d488,
       IF_requestR_3_BIT_191_196_THEN_NOT_requestR_3__ETC___d3796,
       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d865,
       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d929,
       NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1656,
       NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1720,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2920,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2948,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1037,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1038,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1095,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1101,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1119,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d907,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d971,
       NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d273,
       NOT_requestR_3_BITS_159_TO_128_34_EQ_0_35_36_A_ETC___d791,
       NOT_requestR_3_BITS_190_TO_180_606_EQ_0_617_62_ETC___d1698,
       NOT_requestR_3_BITS_190_TO_180_606_EQ_0_617_62_ETC___d1762,
       NOT_requestR_3_BITS_190_TO_180_606_EQ_2047_607_ETC___d3800,
       NOT_requestR_3_BITS_190_TO_180_606_EQ_2047_607_ETC___d3865,
       NOT_requestR_3_BITS_190_TO_180_606_ULT_request_ETC___d3842,
       NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1099,
       NOT_requestR_3_BIT_158_98_99_AND_NOT_requestR__ETC___d589,
       NOT_requestR_3_BIT_179_777_152_AND_NOT_request_ETC___d2191,
       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156,
       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157,
       SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2322,
       SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2323,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2086,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3406,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2570,
       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3086,
       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3479,
       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2248,
       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2643,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1851,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1852,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d2883,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d2908,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d2935,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1241,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1243,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d269,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d271,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d274,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1456,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1457,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1458,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d627,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d628,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d629,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014,
       guard__h121593,
       guard__h80258,
       requestR_3_BITS_126_TO_116_755_EQ_0_769_AND_re_ETC___d3776,
       requestR_3_BITS_179_TO_128_608_ULE_requestR_3__ETC___d3788,
       requestR_3_BITS_179_TO_128_608_ULT_requestR_3__ETC___d3793,
       requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_re_ETC___d3772,
       requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_re_ETC___d3846,
       requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d1757,
       requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d1768,
       requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3764,
       requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3809,
       requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3831,
       requestR_3_BITS_190_TO_180_606_EQ_requestR_3_B_ETC___d3787,
       requestR_3_BITS_190_TO_180_606_ULE_requestR_3__ETC___d3785,
       requestR_3_BITS_190_TO_180_606_ULE_requestR_3__ETC___d3841,
       requestR_3_BITS_190_TO_180_606_ULT_requestR_3__ETC___d3792,
       requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1036,
       requestR_3_BIT_158_98_OR_requestR_3_BIT_157_00_ETC___d780,
       requestR_3_BIT_159_6_OR_requestR_3_BIT_158_98__ETC___d802;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = resetReqsF$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = resetReqsF$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // value method valid
  assign valid = dw_valid$whas && dw_valid$wget ;

  // value method word_fst
  assign word_fst = dw_result$wget[68:5] ;

  // value method word_snd
  assign word_snd = dw_result$wget[4:0] ;

  // submodule fpu
  mkFPU fpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .server_core_request_put(fpu$server_core_request_put),
	    .EN_server_core_request_put(fpu$EN_server_core_request_put),
	    .EN_server_core_response_get(fpu$EN_server_core_response_get),
	    .EN_server_reset_request_put(fpu$EN_server_reset_request_put),
	    .EN_server_reset_response_get(fpu$EN_server_reset_response_get),
	    .RDY_server_core_request_put(fpu$RDY_server_core_request_put),
	    .server_core_response_get(fpu$server_core_response_get),
	    .RDY_server_core_response_get(fpu$RDY_server_core_response_get),
	    .RDY_server_reset_request_put(fpu$RDY_server_reset_request_put),
	    .RDY_server_reset_response_get(fpu$RDY_server_reset_response_get));

  // submodule frmFpuF
  FIFO2 #(.width(32'd1), .guarded(32'd1)) frmFpuF(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(frmFpuF$D_IN),
						  .ENQ(frmFpuF$ENQ),
						  .DEQ(frmFpuF$DEQ),
						  .CLR(frmFpuF$CLR),
						  .D_OUT(),
						  .FULL_N(),
						  .EMPTY_N());

  // submodule resetReqsF
  FIFO20 #(.guarded(32'd1)) resetReqsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetReqsF$ENQ),
				       .DEQ(resetReqsF$DEQ),
				       .CLR(resetReqsF$CLR),
				       .FULL_N(resetReqsF$FULL_N),
				       .EMPTY_N(resetReqsF$EMPTY_N));

  // submodule resetRspsF
  FIFO20 #(.guarded(32'd1)) resetRspsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetRspsF$ENQ),
				       .DEQ(resetRspsF$DEQ),
				       .CLR(resetRspsF$CLR),
				       .FULL_N(resetRspsF$FULL_N),
				       .EMPTY_N(resetRspsF$EMPTY_N));

  // rule RL_rl_reset_end
  assign CAN_FIRE_RL_rl_reset_end =
	     fpu$RDY_server_reset_response_get && resetRspsF$FULL_N &&
	     stateR == 2'd0 ;
  assign WILL_FIRE_RL_rl_reset_end = CAN_FIRE_RL_rl_reset_end ;

  // rule RL_doFADD_S
  assign CAN_FIRE_RL_doFADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0 ;
  assign WILL_FIRE_RL_doFADD_S = CAN_FIRE_RL_doFADD_S ;

  // rule RL_doFSUB_S
  assign CAN_FIRE_RL_doFSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h04 ;
  assign WILL_FIRE_RL_doFSUB_S = CAN_FIRE_RL_doFSUB_S ;

  // rule RL_doFMUL_S
  assign CAN_FIRE_RL_doFMUL_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h08 ;
  assign WILL_FIRE_RL_doFMUL_S = CAN_FIRE_RL_doFMUL_S ;

  // rule RL_doFMADD_S
  assign CAN_FIRE_RL_doFMADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMADD_S = CAN_FIRE_RL_doFMADD_S ;

  // rule RL_doFMSUB_S
  assign CAN_FIRE_RL_doFMSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMSUB_S = CAN_FIRE_RL_doFMSUB_S ;

  // rule RL_doFNMADD_S
  assign CAN_FIRE_RL_doFNMADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMADD_S = CAN_FIRE_RL_doFNMADD_S ;

  // rule RL_doFNMSUB_S
  assign CAN_FIRE_RL_doFNMSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMSUB_S = CAN_FIRE_RL_doFNMSUB_S ;

  // rule RL_doFSGNJ_S
  assign CAN_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;
  assign WILL_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;

  // rule RL_doFSGNJN_S
  assign CAN_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;
  assign WILL_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;

  // rule RL_doFSGNJX_S
  assign CAN_FIRE_RL_doFSGNJX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_S = CAN_FIRE_RL_doFSGNJX_S ;

  // rule RL_doFCVT_S_W
  assign CAN_FIRE_RL_doFCVT_S_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_S_W = CAN_FIRE_RL_doFCVT_S_W ;

  // rule RL_doFCVT_S_WU
  assign CAN_FIRE_RL_doFCVT_S_WU =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_WU = CAN_FIRE_RL_doFCVT_S_WU ;

  // rule RL_doFCVT_W_S
  assign CAN_FIRE_RL_doFCVT_W_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_S = CAN_FIRE_RL_doFCVT_W_S ;

  // rule RL_doFCVT_WU_S
  assign CAN_FIRE_RL_doFCVT_WU_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_S = CAN_FIRE_RL_doFCVT_WU_S ;

  // rule RL_doFMIN_S
  assign CAN_FIRE_RL_doFMIN_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_S = CAN_FIRE_RL_doFMIN_S ;

  // rule RL_doFMAX_S
  assign CAN_FIRE_RL_doFMAX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_S = CAN_FIRE_RL_doFMAX_S ;

  // rule RL_doFMV_W_X
  assign CAN_FIRE_RL_doFMV_W_X =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h78 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_W_X = CAN_FIRE_RL_doFMV_W_X ;

  // rule RL_doFMV_X_W
  assign CAN_FIRE_RL_doFMV_X_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_W = CAN_FIRE_RL_doFMV_X_W ;

  // rule RL_doFEQ_S
  assign CAN_FIRE_RL_doFEQ_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_S = CAN_FIRE_RL_doFEQ_S ;

  // rule RL_doFLT_S
  assign CAN_FIRE_RL_doFLT_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_S = CAN_FIRE_RL_doFLT_S ;

  // rule RL_doFLE_S
  assign CAN_FIRE_RL_doFLE_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_S = CAN_FIRE_RL_doFLE_S ;

  // rule RL_doFCLASS_S
  assign CAN_FIRE_RL_doFCLASS_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_S = CAN_FIRE_RL_doFCLASS_S ;

  // rule RL_doFADD_D
  assign CAN_FIRE_RL_doFADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h01 ;
  assign WILL_FIRE_RL_doFADD_D = CAN_FIRE_RL_doFADD_D ;

  // rule RL_doFSUB_D
  assign CAN_FIRE_RL_doFSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h05 ;
  assign WILL_FIRE_RL_doFSUB_D = CAN_FIRE_RL_doFSUB_D ;

  // rule RL_doFMUL_D
  assign CAN_FIRE_RL_doFMUL_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h09 ;
  assign WILL_FIRE_RL_doFMUL_D = CAN_FIRE_RL_doFMUL_D ;

  // rule RL_doFMADD_D
  assign CAN_FIRE_RL_doFMADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMADD_D = CAN_FIRE_RL_doFMADD_D ;

  // rule RL_doFMSUB_D
  assign CAN_FIRE_RL_doFMSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMSUB_D = CAN_FIRE_RL_doFMSUB_D ;

  // rule RL_doFNMADD_D
  assign CAN_FIRE_RL_doFNMADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMADD_D = CAN_FIRE_RL_doFNMADD_D ;

  // rule RL_doFNMSUB_D
  assign CAN_FIRE_RL_doFNMSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMSUB_D = CAN_FIRE_RL_doFNMSUB_D ;

  // rule RL_doFSGNJ_D
  assign CAN_FIRE_RL_doFSGNJ_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_D = CAN_FIRE_RL_doFSGNJ_D ;

  // rule RL_doFSGNJN_D
  assign CAN_FIRE_RL_doFSGNJN_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_D = CAN_FIRE_RL_doFSGNJN_D ;

  // rule RL_doFSGNJX_D
  assign CAN_FIRE_RL_doFSGNJX_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_D = CAN_FIRE_RL_doFSGNJX_D ;

  // rule RL_doFCVT_D_W
  assign CAN_FIRE_RL_doFCVT_D_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_W = CAN_FIRE_RL_doFCVT_D_W ;

  // rule RL_doFCVT_D_WU
  assign CAN_FIRE_RL_doFCVT_D_WU =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_D_WU = CAN_FIRE_RL_doFCVT_D_WU ;

  // rule RL_doFCVT_W_D
  assign CAN_FIRE_RL_doFCVT_W_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_D = CAN_FIRE_RL_doFCVT_W_D ;

  // rule RL_doFCVT_WU_D
  assign CAN_FIRE_RL_doFCVT_WU_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_D = CAN_FIRE_RL_doFCVT_WU_D ;

  // rule RL_doFCVT_S_D
  assign CAN_FIRE_RL_doFCVT_S_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h20 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_D = CAN_FIRE_RL_doFCVT_S_D ;

  // rule RL_doFCVT_D_S
  assign CAN_FIRE_RL_doFCVT_D_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h21 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_S = CAN_FIRE_RL_doFCVT_D_S ;

  // rule RL_doFMIN_D
  assign CAN_FIRE_RL_doFMIN_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_D = CAN_FIRE_RL_doFMIN_D ;

  // rule RL_doFMAX_D
  assign CAN_FIRE_RL_doFMAX_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_D = CAN_FIRE_RL_doFMAX_D ;

  // rule RL_doFEQ_D
  assign CAN_FIRE_RL_doFEQ_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_D = CAN_FIRE_RL_doFEQ_D ;

  // rule RL_doFLT_D
  assign CAN_FIRE_RL_doFLT_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_D = CAN_FIRE_RL_doFLT_D ;

  // rule RL_doFLE_D
  assign CAN_FIRE_RL_doFLE_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_D = CAN_FIRE_RL_doFLE_D ;

  // rule RL_doFMV_D_X
  assign CAN_FIRE_RL_doFMV_D_X =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h79 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_D_X = CAN_FIRE_RL_doFMV_D_X ;

  // rule RL_doFMV_X_D
  assign CAN_FIRE_RL_doFMV_X_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_D = CAN_FIRE_RL_doFMV_X_D ;

  // rule RL_doFCLASS_D
  assign CAN_FIRE_RL_doFCLASS_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_D = CAN_FIRE_RL_doFCLASS_D ;

  // rule RL_rl_get_fpu_result
  assign CAN_FIRE_RL_rl_get_fpu_result =
	     fpu$RDY_server_core_response_get && stateR == 2'd2 ;
  assign WILL_FIRE_RL_rl_get_fpu_result = CAN_FIRE_RL_rl_get_fpu_result ;

  // rule RL_rl_drive_fpu_result
  assign CAN_FIRE_RL_rl_drive_fpu_result = stateR == 2'd3 ;
  assign WILL_FIRE_RL_rl_drive_fpu_result = stateR == 2'd3 ;

  // rule RL_rl_reset_begin
  assign CAN_FIRE_RL_rl_reset_begin =
	     fpu$RDY_server_reset_request_put && resetReqsF$EMPTY_N ;
  assign WILL_FIRE_RL_rl_reset_begin = CAN_FIRE_RL_rl_reset_begin ;

  // inputs to muxes for submodule ports
  assign MUX_dw_result$wset_1__SEL_1 =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h1 ;
  assign MUX_dw_result$wset_1__SEL_2 =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h0 ;
  assign MUX_dw_result$wset_1__SEL_30 =
	     WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ;
  assign MUX_dw_result$wset_1__VAL_1 = { x__h2303, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_2 = { x__h2157, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_3 = { x__h2437, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_4 = { x__h2584, x__h8757 } ;
  assign MUX_dw_result$wset_1__VAL_5 = { x__h9045, x__h14903 } ;
  assign MUX_dw_result$wset_1__VAL_6 = { x__h15187, x__h16523 } ;
  assign MUX_dw_result$wset_1__VAL_7 = { x__h16780, x__h17282 } ;
  assign MUX_dw_result$wset_1__VAL_8 = { x__h17530, x__h19569 } ;
  assign MUX_dw_result$wset_1__VAL_9 = { x__h20164, x__h19569 } ;
  assign MUX_dw_result$wset_1__VAL_10 = { x__h22689, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_11 = { x__h22810, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_12 = { x__h22948, x__h19569 } ;
  assign MUX_dw_result$wset_1__VAL_13 = { x__h24431, x__h25319 } ;
  assign MUX_dw_result$wset_1__VAL_14 = { x__h25500, x__h25319 } ;
  assign MUX_dw_result$wset_1__VAL_15 = { x__h26586, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_16 = { x__h27753, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_17 = { x__h27875, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_18 = { x__h27999, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_19 = { x__h28129, x__h37792 } ;
  assign MUX_dw_result$wset_1__VAL_20 = { x__h38077, x__h47460 } ;
  assign MUX_dw_result$wset_1__VAL_21 = { x__h47744, x__h49063 } ;
  assign MUX_dw_result$wset_1__VAL_22 = { x__h49320, x__h49822 } ;
  assign MUX_dw_result$wset_1__VAL_23 = { x__h50066, x__h97788 } ;
  assign MUX_dw_result$wset_1__VAL_24 = { x__h98771, x__h139574 } ;
  assign MUX_dw_result$wset_1__VAL_25 = { x__h140497, x__h144046 } ;
  assign MUX_dw_result$wset_1__VAL_26 = { x__h145045, x__h144046 } ;
  assign MUX_dw_result$wset_1__VAL_27 = { x__h149489, x__h144046 } ;
  assign MUX_dw_result$wset_1__VAL_28 = { x__h152184, x__h153880 } ;
  assign MUX_dw_result$wset_1__VAL_29 = { x__h154061, x__h153880 } ;
  assign MUX_dw_result$wset_1__VAL_30 = { requestR[191:128], 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_31 = { x__h156188, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_32 =
	     { x__h156838, fpu$server_core_response_get[4:0] } ;
  assign MUX_fpu$server_core_request_put_1__VAL_1 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd0 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_2 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd1 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_3 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd2 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_4 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd5 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_5 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd6 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_6 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd7 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_7 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd8 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_8 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd0 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_9 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd1 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_10 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd2 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_11 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd5 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_12 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd6 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_13 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd7 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_14 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd8 } ;
  assign MUX_requestR$write_1__VAL_2 =
	     { 1'd1,
	       req_opcode,
	       req_f7,
	       req_rs2,
	       req_rm,
	       req_v1,
	       req_v2,
	       req_v3 } ;
  assign MUX_resultR$write_1__VAL_3 =
	     { 1'd1, x__h156838, fpu$server_core_response_get[4:0] } ;
  assign MUX_resultR$write_1__VAL_4 = { 1'd1, x__h156188, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_5 = { 1'd1, requestR[191:128], 5'd0 } ;
  assign MUX_resultR$write_1__VAL_7 = { 1'd1, x__h154061, x__h153880 } ;
  assign MUX_resultR$write_1__VAL_8 = { 1'd1, x__h152184, x__h153880 } ;
  assign MUX_resultR$write_1__VAL_9 = { 1'd1, x__h149489, x__h144046 } ;
  assign MUX_resultR$write_1__VAL_10 = { 1'd1, x__h145045, x__h144046 } ;
  assign MUX_resultR$write_1__VAL_11 = { 1'd1, x__h140497, x__h144046 } ;
  assign MUX_resultR$write_1__VAL_12 = { 1'd1, x__h98771, x__h139574 } ;
  assign MUX_resultR$write_1__VAL_13 = { 1'd1, x__h50066, x__h97788 } ;
  assign MUX_resultR$write_1__VAL_14 = { 1'd1, x__h49320, x__h49822 } ;
  assign MUX_resultR$write_1__VAL_15 = { 1'd1, x__h47744, x__h49063 } ;
  assign MUX_resultR$write_1__VAL_16 = { 1'd1, x__h38077, x__h47460 } ;
  assign MUX_resultR$write_1__VAL_17 = { 1'd1, x__h28129, x__h37792 } ;
  assign MUX_resultR$write_1__VAL_18 = { 1'd1, x__h27999, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_19 = { 1'd1, x__h27875, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_20 = { 1'd1, x__h27753, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_21 = { 1'd1, x__h26586, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_22 = { 1'd1, x__h25500, x__h25319 } ;
  assign MUX_resultR$write_1__VAL_23 = { 1'd1, x__h24431, x__h25319 } ;
  assign MUX_resultR$write_1__VAL_24 = { 1'd1, x__h22948, x__h19569 } ;
  assign MUX_resultR$write_1__VAL_25 = { 1'd1, x__h22810, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_26 = { 1'd1, x__h22689, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_27 = { 1'd1, x__h20164, x__h19569 } ;
  assign MUX_resultR$write_1__VAL_28 = { 1'd1, x__h17530, x__h19569 } ;
  assign MUX_resultR$write_1__VAL_29 = { 1'd1, x__h16780, x__h17282 } ;
  assign MUX_resultR$write_1__VAL_30 = { 1'd1, x__h15187, x__h16523 } ;
  assign MUX_resultR$write_1__VAL_31 = { 1'd1, x__h9045, x__h14903 } ;
  assign MUX_resultR$write_1__VAL_32 = { 1'd1, x__h2584, x__h8757 } ;
  assign MUX_resultR$write_1__VAL_33 = { 1'd1, x__h2437, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_34 = { 1'd1, x__h2303, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_35 = { 1'd1, x__h2157, 5'd0 } ;

  // inlined wires
  assign dw_valid$wget = !WILL_FIRE_RL_rl_drive_fpu_result || resultR[69] ;
  assign dw_valid$whas =
	     WILL_FIRE_RL_rl_drive_fpu_result ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;
  always@(WILL_FIRE_RL_doFSGNJN_S or
	  MUX_dw_result$wset_1__VAL_1 or
	  WILL_FIRE_RL_doFSGNJ_S or
	  MUX_dw_result$wset_1__VAL_2 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_dw_result$wset_1__VAL_3 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_dw_result$wset_1__VAL_4 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_dw_result$wset_1__VAL_5 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_dw_result$wset_1__VAL_6 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_dw_result$wset_1__VAL_7 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_dw_result$wset_1__VAL_8 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_dw_result$wset_1__VAL_9 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_dw_result$wset_1__VAL_10 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_dw_result$wset_1__VAL_11 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_dw_result$wset_1__VAL_12 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_dw_result$wset_1__VAL_13 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_dw_result$wset_1__VAL_14 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_dw_result$wset_1__VAL_15 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_dw_result$wset_1__VAL_16 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_dw_result$wset_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_dw_result$wset_1__VAL_18 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_dw_result$wset_1__VAL_19 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_dw_result$wset_1__VAL_20 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_dw_result$wset_1__VAL_21 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_dw_result$wset_1__VAL_22 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_dw_result$wset_1__VAL_23 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_dw_result$wset_1__VAL_24 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_dw_result$wset_1__VAL_25 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_dw_result$wset_1__VAL_26 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_dw_result$wset_1__VAL_27 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_dw_result$wset_1__VAL_28 or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_dw_result$wset_1__VAL_29 or
	  MUX_dw_result$wset_1__SEL_30 or
	  MUX_dw_result$wset_1__VAL_30 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_dw_result$wset_1__VAL_31 or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_dw_result$wset_1__VAL_32 or
	  WILL_FIRE_RL_rl_drive_fpu_result or resultR)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFSGNJN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_1;
      WILL_FIRE_RL_doFSGNJ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_2;
      WILL_FIRE_RL_doFSGNJX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_3;
      WILL_FIRE_RL_doFCVT_S_W: dw_result$wget = MUX_dw_result$wset_1__VAL_4;
      WILL_FIRE_RL_doFCVT_S_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_5;
      WILL_FIRE_RL_doFCVT_W_S: dw_result$wget = MUX_dw_result$wset_1__VAL_6;
      WILL_FIRE_RL_doFCVT_WU_S: dw_result$wget = MUX_dw_result$wset_1__VAL_7;
      WILL_FIRE_RL_doFMIN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_8;
      WILL_FIRE_RL_doFMAX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_9;
      WILL_FIRE_RL_doFMV_W_X: dw_result$wget = MUX_dw_result$wset_1__VAL_10;
      WILL_FIRE_RL_doFMV_X_W: dw_result$wget = MUX_dw_result$wset_1__VAL_11;
      WILL_FIRE_RL_doFEQ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_12;
      WILL_FIRE_RL_doFLT_S: dw_result$wget = MUX_dw_result$wset_1__VAL_13;
      WILL_FIRE_RL_doFLE_S: dw_result$wget = MUX_dw_result$wset_1__VAL_14;
      WILL_FIRE_RL_doFCLASS_S: dw_result$wget = MUX_dw_result$wset_1__VAL_15;
      WILL_FIRE_RL_doFSGNJ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_16;
      WILL_FIRE_RL_doFSGNJN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_17;
      WILL_FIRE_RL_doFSGNJX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_18;
      WILL_FIRE_RL_doFCVT_D_W: dw_result$wget = MUX_dw_result$wset_1__VAL_19;
      WILL_FIRE_RL_doFCVT_D_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_20;
      WILL_FIRE_RL_doFCVT_W_D: dw_result$wget = MUX_dw_result$wset_1__VAL_21;
      WILL_FIRE_RL_doFCVT_WU_D: dw_result$wget = MUX_dw_result$wset_1__VAL_22;
      WILL_FIRE_RL_doFCVT_S_D: dw_result$wget = MUX_dw_result$wset_1__VAL_23;
      WILL_FIRE_RL_doFCVT_D_S: dw_result$wget = MUX_dw_result$wset_1__VAL_24;
      WILL_FIRE_RL_doFMIN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_25;
      WILL_FIRE_RL_doFMAX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_26;
      WILL_FIRE_RL_doFEQ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_27;
      WILL_FIRE_RL_doFLT_D: dw_result$wget = MUX_dw_result$wset_1__VAL_28;
      WILL_FIRE_RL_doFLE_D: dw_result$wget = MUX_dw_result$wset_1__VAL_29;
      MUX_dw_result$wset_1__SEL_30:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_30;
      WILL_FIRE_RL_doFCLASS_D: dw_result$wget = MUX_dw_result$wset_1__VAL_31;
      WILL_FIRE_RL_rl_get_fpu_result:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_32;
      WILL_FIRE_RL_rl_drive_fpu_result: dw_result$wget = resultR[68:0];
      default: dw_result$wget =
		   69'h0AAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end

  // register requestR
  assign requestR$D_IN =
	     WILL_FIRE_RL_rl_reset_begin ?
	       215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       MUX_requestR$write_1__VAL_2 ;
  assign requestR$EN = WILL_FIRE_RL_rl_reset_begin || EN_req ;

  // register resultR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_resultR$write_1__VAL_3 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_resultR$write_1__VAL_4 or
	  WILL_FIRE_RL_doFMV_X_D or
	  MUX_resultR$write_1__VAL_5 or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_resultR$write_1__VAL_7 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_resultR$write_1__VAL_8 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_resultR$write_1__VAL_9 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_resultR$write_1__VAL_10 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_resultR$write_1__VAL_11 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_resultR$write_1__VAL_12 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_resultR$write_1__VAL_13 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_resultR$write_1__VAL_14 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_resultR$write_1__VAL_15 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_resultR$write_1__VAL_16 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_resultR$write_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_resultR$write_1__VAL_18 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_resultR$write_1__VAL_19 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_resultR$write_1__VAL_20 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_resultR$write_1__VAL_21 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_resultR$write_1__VAL_22 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_resultR$write_1__VAL_23 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_resultR$write_1__VAL_24 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_resultR$write_1__VAL_25 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_resultR$write_1__VAL_26 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_resultR$write_1__VAL_27 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_resultR$write_1__VAL_28 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_resultR$write_1__VAL_29 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_resultR$write_1__VAL_30 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_resultR$write_1__VAL_31 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_resultR$write_1__VAL_32 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_resultR$write_1__VAL_33 or
	  WILL_FIRE_RL_doFSGNJN_S or
	  MUX_resultR$write_1__VAL_34 or
	  WILL_FIRE_RL_doFSGNJ_S or MUX_resultR$write_1__VAL_35)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin || EN_req:
	resultR$D_IN = 70'h0AAAAAAAAAAAAAAAAA;
    WILL_FIRE_RL_rl_get_fpu_result: resultR$D_IN = MUX_resultR$write_1__VAL_3;
    WILL_FIRE_RL_doFCLASS_D: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFMV_X_D: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFMV_D_X: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFLE_D: resultR$D_IN = MUX_resultR$write_1__VAL_7;
    WILL_FIRE_RL_doFLT_D: resultR$D_IN = MUX_resultR$write_1__VAL_8;
    WILL_FIRE_RL_doFEQ_D: resultR$D_IN = MUX_resultR$write_1__VAL_9;
    WILL_FIRE_RL_doFMAX_D: resultR$D_IN = MUX_resultR$write_1__VAL_10;
    WILL_FIRE_RL_doFMIN_D: resultR$D_IN = MUX_resultR$write_1__VAL_11;
    WILL_FIRE_RL_doFCVT_D_S: resultR$D_IN = MUX_resultR$write_1__VAL_12;
    WILL_FIRE_RL_doFCVT_S_D: resultR$D_IN = MUX_resultR$write_1__VAL_13;
    WILL_FIRE_RL_doFCVT_WU_D: resultR$D_IN = MUX_resultR$write_1__VAL_14;
    WILL_FIRE_RL_doFCVT_W_D: resultR$D_IN = MUX_resultR$write_1__VAL_15;
    WILL_FIRE_RL_doFCVT_D_WU: resultR$D_IN = MUX_resultR$write_1__VAL_16;
    WILL_FIRE_RL_doFCVT_D_W: resultR$D_IN = MUX_resultR$write_1__VAL_17;
    WILL_FIRE_RL_doFSGNJX_D: resultR$D_IN = MUX_resultR$write_1__VAL_18;
    WILL_FIRE_RL_doFSGNJN_D: resultR$D_IN = MUX_resultR$write_1__VAL_19;
    WILL_FIRE_RL_doFSGNJ_D: resultR$D_IN = MUX_resultR$write_1__VAL_20;
    WILL_FIRE_RL_doFCLASS_S: resultR$D_IN = MUX_resultR$write_1__VAL_21;
    WILL_FIRE_RL_doFLE_S: resultR$D_IN = MUX_resultR$write_1__VAL_22;
    WILL_FIRE_RL_doFLT_S: resultR$D_IN = MUX_resultR$write_1__VAL_23;
    WILL_FIRE_RL_doFEQ_S: resultR$D_IN = MUX_resultR$write_1__VAL_24;
    WILL_FIRE_RL_doFMV_X_W: resultR$D_IN = MUX_resultR$write_1__VAL_25;
    WILL_FIRE_RL_doFMV_W_X: resultR$D_IN = MUX_resultR$write_1__VAL_26;
    WILL_FIRE_RL_doFMAX_S: resultR$D_IN = MUX_resultR$write_1__VAL_27;
    WILL_FIRE_RL_doFMIN_S: resultR$D_IN = MUX_resultR$write_1__VAL_28;
    WILL_FIRE_RL_doFCVT_WU_S: resultR$D_IN = MUX_resultR$write_1__VAL_29;
    WILL_FIRE_RL_doFCVT_W_S: resultR$D_IN = MUX_resultR$write_1__VAL_30;
    WILL_FIRE_RL_doFCVT_S_WU: resultR$D_IN = MUX_resultR$write_1__VAL_31;
    WILL_FIRE_RL_doFCVT_S_W: resultR$D_IN = MUX_resultR$write_1__VAL_32;
    WILL_FIRE_RL_doFSGNJX_S: resultR$D_IN = MUX_resultR$write_1__VAL_33;
    WILL_FIRE_RL_doFSGNJN_S: resultR$D_IN = MUX_resultR$write_1__VAL_34;
    WILL_FIRE_RL_doFSGNJ_S: resultR$D_IN = MUX_resultR$write_1__VAL_35;
    default: resultR$D_IN = 70'h2AAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign resultR$EN =
	     WILL_FIRE_RL_rl_reset_begin || EN_req ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFSGNJ_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_rl_get_fpu_result ;

  // register stateR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  WILL_FIRE_RL_doFCLASS_D or
	  WILL_FIRE_RL_doFMV_X_D or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  WILL_FIRE_RL_doFLT_D or
	  WILL_FIRE_RL_doFEQ_D or
	  WILL_FIRE_RL_doFMAX_D or
	  WILL_FIRE_RL_doFMIN_D or
	  WILL_FIRE_RL_doFCVT_D_S or
	  WILL_FIRE_RL_doFCVT_S_D or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  WILL_FIRE_RL_doFCVT_W_D or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  WILL_FIRE_RL_doFCVT_D_W or
	  WILL_FIRE_RL_doFSGNJX_D or
	  WILL_FIRE_RL_doFSGNJN_D or
	  WILL_FIRE_RL_doFSGNJ_D or
	  WILL_FIRE_RL_doFNMSUB_D or
	  WILL_FIRE_RL_doFNMADD_D or
	  WILL_FIRE_RL_doFMSUB_D or
	  WILL_FIRE_RL_doFMADD_D or
	  WILL_FIRE_RL_doFMUL_D or
	  WILL_FIRE_RL_doFSUB_D or
	  WILL_FIRE_RL_doFADD_D or
	  WILL_FIRE_RL_doFCLASS_S or
	  WILL_FIRE_RL_doFLE_S or
	  WILL_FIRE_RL_doFLT_S or
	  WILL_FIRE_RL_doFEQ_S or
	  WILL_FIRE_RL_doFMV_X_W or
	  WILL_FIRE_RL_doFMV_W_X or
	  WILL_FIRE_RL_doFMAX_S or
	  WILL_FIRE_RL_doFMIN_S or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  WILL_FIRE_RL_doFCVT_W_S or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  WILL_FIRE_RL_doFCVT_S_W or
	  WILL_FIRE_RL_doFSGNJX_S or
	  WILL_FIRE_RL_doFSGNJN_S or
	  WILL_FIRE_RL_doFSGNJ_S or
	  WILL_FIRE_RL_doFNMSUB_S or
	  WILL_FIRE_RL_doFNMADD_S or
	  WILL_FIRE_RL_doFMSUB_S or
	  WILL_FIRE_RL_doFMADD_S or
	  WILL_FIRE_RL_doFMUL_S or
	  WILL_FIRE_RL_doFSUB_S or
	  WILL_FIRE_RL_doFADD_S or WILL_FIRE_RL_rl_reset_end)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin: stateR$D_IN = 2'd0;
    EN_req: stateR$D_IN = 2'd1;
    WILL_FIRE_RL_rl_get_fpu_result || WILL_FIRE_RL_doFCLASS_D ||
    WILL_FIRE_RL_doFMV_X_D ||
    WILL_FIRE_RL_doFMV_D_X ||
    WILL_FIRE_RL_doFLE_D ||
    WILL_FIRE_RL_doFLT_D ||
    WILL_FIRE_RL_doFEQ_D ||
    WILL_FIRE_RL_doFMAX_D ||
    WILL_FIRE_RL_doFMIN_D ||
    WILL_FIRE_RL_doFCVT_D_S ||
    WILL_FIRE_RL_doFCVT_S_D ||
    WILL_FIRE_RL_doFCVT_WU_D ||
    WILL_FIRE_RL_doFCVT_W_D ||
    WILL_FIRE_RL_doFCVT_D_WU ||
    WILL_FIRE_RL_doFCVT_D_W ||
    WILL_FIRE_RL_doFSGNJX_D ||
    WILL_FIRE_RL_doFSGNJN_D ||
    WILL_FIRE_RL_doFSGNJ_D:
	stateR$D_IN = 2'd3;
    WILL_FIRE_RL_doFNMSUB_D || WILL_FIRE_RL_doFNMADD_D ||
    WILL_FIRE_RL_doFMSUB_D ||
    WILL_FIRE_RL_doFMADD_D ||
    WILL_FIRE_RL_doFMUL_D ||
    WILL_FIRE_RL_doFSUB_D ||
    WILL_FIRE_RL_doFADD_D:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFCLASS_S || WILL_FIRE_RL_doFLE_S || WILL_FIRE_RL_doFLT_S ||
    WILL_FIRE_RL_doFEQ_S ||
    WILL_FIRE_RL_doFMV_X_W ||
    WILL_FIRE_RL_doFMV_W_X ||
    WILL_FIRE_RL_doFMAX_S ||
    WILL_FIRE_RL_doFMIN_S ||
    WILL_FIRE_RL_doFCVT_WU_S ||
    WILL_FIRE_RL_doFCVT_W_S ||
    WILL_FIRE_RL_doFCVT_S_WU ||
    WILL_FIRE_RL_doFCVT_S_W ||
    WILL_FIRE_RL_doFSGNJX_S ||
    WILL_FIRE_RL_doFSGNJN_S ||
    WILL_FIRE_RL_doFSGNJ_S:
	stateR$D_IN = 2'd3;
    WILL_FIRE_RL_doFNMSUB_S || WILL_FIRE_RL_doFNMADD_S ||
    WILL_FIRE_RL_doFMSUB_S ||
    WILL_FIRE_RL_doFMADD_S ||
    WILL_FIRE_RL_doFMUL_S ||
    WILL_FIRE_RL_doFSUB_S ||
    WILL_FIRE_RL_doFADD_S:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_rl_reset_end: stateR$D_IN = 2'd1;
    default: stateR$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign stateR$EN =
	     WILL_FIRE_RL_rl_reset_begin || WILL_FIRE_RL_rl_reset_end ||
	     EN_req ||
	     WILL_FIRE_RL_doFNMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFADD_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;

  // submodule fpu
  always@(WILL_FIRE_RL_doFADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_1 or
	  WILL_FIRE_RL_doFSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_2 or
	  WILL_FIRE_RL_doFMUL_S or
	  MUX_fpu$server_core_request_put_1__VAL_3 or
	  WILL_FIRE_RL_doFMADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_4 or
	  WILL_FIRE_RL_doFMSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_5 or
	  WILL_FIRE_RL_doFNMADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_6 or
	  WILL_FIRE_RL_doFNMSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_7 or
	  WILL_FIRE_RL_doFADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_8 or
	  WILL_FIRE_RL_doFSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_9 or
	  WILL_FIRE_RL_doFMUL_D or
	  MUX_fpu$server_core_request_put_1__VAL_10 or
	  WILL_FIRE_RL_doFMADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_11 or
	  WILL_FIRE_RL_doFMSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_12 or
	  WILL_FIRE_RL_doFNMADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_13 or
	  WILL_FIRE_RL_doFNMSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_14)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_1;
      WILL_FIRE_RL_doFSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_2;
      WILL_FIRE_RL_doFMUL_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_3;
      WILL_FIRE_RL_doFMADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_4;
      WILL_FIRE_RL_doFMSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_5;
      WILL_FIRE_RL_doFNMADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_6;
      WILL_FIRE_RL_doFNMSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_7;
      WILL_FIRE_RL_doFADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_8;
      WILL_FIRE_RL_doFSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_9;
      WILL_FIRE_RL_doFMUL_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_10;
      WILL_FIRE_RL_doFMADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_11;
      WILL_FIRE_RL_doFMSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_12;
      WILL_FIRE_RL_doFNMADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_13;
      WILL_FIRE_RL_doFNMSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_14;
      default: fpu$server_core_request_put =
		   202'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fpu$EN_server_core_request_put =
	     WILL_FIRE_RL_doFADD_S || WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFNMSUB_D ;
  assign fpu$EN_server_core_response_get = CAN_FIRE_RL_rl_get_fpu_result ;
  assign fpu$EN_server_reset_request_put = CAN_FIRE_RL_rl_reset_begin ;
  assign fpu$EN_server_reset_response_get = CAN_FIRE_RL_rl_reset_end ;

  // submodule frmFpuF
  assign frmFpuF$D_IN = 1'b0 ;
  assign frmFpuF$ENQ = 1'b0 ;
  assign frmFpuF$DEQ = 1'b0 ;
  assign frmFpuF$CLR = CAN_FIRE_RL_rl_reset_begin ;

  // submodule resetReqsF
  assign resetReqsF$ENQ = EN_server_reset_request_put ;
  assign resetReqsF$DEQ =
	     fpu$RDY_server_reset_request_put && resetReqsF$EMPTY_N ;
  assign resetReqsF$CLR = 1'b0 ;

  // submodule resetRspsF
  assign resetRspsF$ENQ =
	     fpu$RDY_server_reset_response_get && resetRspsF$FULL_N &&
	     stateR == 2'd0 ;
  assign resetRspsF$DEQ = EN_server_reset_response_get ;
  assign resetRspsF$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2086 ?
	       _theResult___snd__h70096 :
	       _theResult____h61926 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3406 ?
	       _theResult___snd__h129284 :
	       _theResult____h120985 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2570 ?
	       _theResult___snd__h87949 :
	       _theResult____h79650 ;
  assign IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q100 =
	     _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3479 ?
	       _theResult___snd__h119637 :
	       _theResult___snd__h138036 ;
  assign IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q94 =
	     _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3086 ?
	       _theResult___snd__h119637 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606__ETC__q62 =
	     _0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2248 ?
	       _theResult___snd__h78708 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606__ETC__q68 =
	     _0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2643 ?
	       _theResult___snd__h78708 :
	       _theResult___snd__h96585 ;
  assign IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_7_ETC___d2830 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1852 ?
	       ((_theResult___fst_exp__h70033 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard1936_0b0_requestR_BIT_191_0b1_reques_ETC__q86 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87)) :
	       ((_theResult___fst_exp__h78719 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard0671_0b0_requestR_BIT_191_0b1_reques_ETC__q88 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1296 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245 ?
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard6155_0b0_requestR_BIT_159_0b1_reques_ETC__q35 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36) :
	       ((x__h36900[10:0] == 11'd2047) ?
		  requestR[159] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard6885_0b0_requestR_BIT_159_0b1_reques_ETC__q37 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1411 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245 ?
	       guard__h36155 != 2'b0 :
	       x__h36900[10:0] != 11'd2047 && guard__h36885 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d335 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d274 ?
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard519_0b0_requestR_BIT_159_0b1_request_ETC__q8 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9) :
	       ((x__h8064[7:0] == 8'd255) ?
		  requestR[159] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard049_0b0_requestR_BIT_159_0b1_request_ETC__q10 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d485 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d274 ?
	       guard__h7519 != 2'b0 :
	       x__h8064[7:0] != 8'd255 && guard__h8049 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d1594 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1458 ?
	       guard__h45851 != 2'b0 :
	       x__h46595[10:0] != 11'd2047 && guard__h46580 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d799 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d629 ?
	       guard__h13696 != 2'b0 :
	       x__h14237[7:0] != 8'd255 && guard__h14222 != 2'b0 ;
  assign IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2084 =
	     (_theResult____h61926[56] ?
		6'd0 :
		(_theResult____h61926[55] ?
		   6'd1 :
		   (_theResult____h61926[54] ?
		      6'd2 :
		      (_theResult____h61926[53] ?
			 6'd3 :
			 (_theResult____h61926[52] ?
			    6'd4 :
			    (_theResult____h61926[51] ?
			       6'd5 :
			       (_theResult____h61926[50] ?
				  6'd6 :
				  (_theResult____h61926[49] ?
				     6'd7 :
				     (_theResult____h61926[48] ?
					6'd8 :
					(_theResult____h61926[47] ?
					   6'd9 :
					   (_theResult____h61926[46] ?
					      6'd10 :
					      (_theResult____h61926[45] ?
						 6'd11 :
						 (_theResult____h61926[44] ?
						    6'd12 :
						    (_theResult____h61926[43] ?
						       6'd13 :
						       (_theResult____h61926[42] ?
							  6'd14 :
							  (_theResult____h61926[41] ?
							     6'd15 :
							     (_theResult____h61926[40] ?
								6'd16 :
								(_theResult____h61926[39] ?
								   6'd17 :
								   (_theResult____h61926[38] ?
								      6'd18 :
								      (_theResult____h61926[37] ?
									 6'd19 :
									 (_theResult____h61926[36] ?
									    6'd20 :
									    (_theResult____h61926[35] ?
									       6'd21 :
									       (_theResult____h61926[34] ?
										  6'd22 :
										  (_theResult____h61926[33] ?
										     6'd23 :
										     (_theResult____h61926[32] ?
											6'd24 :
											(_theResult____h61926[31] ?
											   6'd25 :
											   (_theResult____h61926[30] ?
											      6'd26 :
											      (_theResult____h61926[29] ?
												 6'd27 :
												 (_theResult____h61926[28] ?
												    6'd28 :
												    (_theResult____h61926[27] ?
												       6'd29 :
												       (_theResult____h61926[26] ?
													  6'd30 :
													  (_theResult____h61926[25] ?
													     6'd31 :
													     (_theResult____h61926[24] ?
														6'd32 :
														(_theResult____h61926[23] ?
														   6'd33 :
														   (_theResult____h61926[22] ?
														      6'd34 :
														      (_theResult____h61926[21] ?
															 6'd35 :
															 (_theResult____h61926[20] ?
															    6'd36 :
															    (_theResult____h61926[19] ?
															       6'd37 :
															       (_theResult____h61926[18] ?
																  6'd38 :
																  (_theResult____h61926[17] ?
																     6'd39 :
																     (_theResult____h61926[16] ?
																	6'd40 :
																	(_theResult____h61926[15] ?
																	   6'd41 :
																	   (_theResult____h61926[14] ?
																	      6'd42 :
																	      (_theResult____h61926[13] ?
																		 6'd43 :
																		 (_theResult____h61926[12] ?
																		    6'd44 :
																		    (_theResult____h61926[11] ?
																		       6'd45 :
																		       (_theResult____h61926[10] ?
																			  6'd46 :
																			  (_theResult____h61926[9] ?
																			     6'd47 :
																			     (_theResult____h61926[8] ?
																				6'd48 :
																				(_theResult____h61926[7] ?
																				   6'd49 :
																				   (_theResult____h61926[6] ?
																				      6'd50 :
																				      (_theResult____h61926[5] ?
																					 6'd51 :
																					 (_theResult____h61926[4] ?
																					    6'd52 :
																					    (_theResult____h61926[3] ?
																					       6'd53 :
																					       (_theResult____h61926[2] ?
																						  6'd54 :
																						  (_theResult____h61926[1] ?
																						     6'd55 :
																						     (_theResult____h61926[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3404 =
	     (_theResult____h120985[56] ?
		6'd0 :
		(_theResult____h120985[55] ?
		   6'd1 :
		   (_theResult____h120985[54] ?
		      6'd2 :
		      (_theResult____h120985[53] ?
			 6'd3 :
			 (_theResult____h120985[52] ?
			    6'd4 :
			    (_theResult____h120985[51] ?
			       6'd5 :
			       (_theResult____h120985[50] ?
				  6'd6 :
				  (_theResult____h120985[49] ?
				     6'd7 :
				     (_theResult____h120985[48] ?
					6'd8 :
					(_theResult____h120985[47] ?
					   6'd9 :
					   (_theResult____h120985[46] ?
					      6'd10 :
					      (_theResult____h120985[45] ?
						 6'd11 :
						 (_theResult____h120985[44] ?
						    6'd12 :
						    (_theResult____h120985[43] ?
						       6'd13 :
						       (_theResult____h120985[42] ?
							  6'd14 :
							  (_theResult____h120985[41] ?
							     6'd15 :
							     (_theResult____h120985[40] ?
								6'd16 :
								(_theResult____h120985[39] ?
								   6'd17 :
								   (_theResult____h120985[38] ?
								      6'd18 :
								      (_theResult____h120985[37] ?
									 6'd19 :
									 (_theResult____h120985[36] ?
									    6'd20 :
									    (_theResult____h120985[35] ?
									       6'd21 :
									       (_theResult____h120985[34] ?
										  6'd22 :
										  (_theResult____h120985[33] ?
										     6'd23 :
										     (_theResult____h120985[32] ?
											6'd24 :
											(_theResult____h120985[31] ?
											   6'd25 :
											   (_theResult____h120985[30] ?
											      6'd26 :
											      (_theResult____h120985[29] ?
												 6'd27 :
												 (_theResult____h120985[28] ?
												    6'd28 :
												    (_theResult____h120985[27] ?
												       6'd29 :
												       (_theResult____h120985[26] ?
													  6'd30 :
													  (_theResult____h120985[25] ?
													     6'd31 :
													     (_theResult____h120985[24] ?
														6'd32 :
														(_theResult____h120985[23] ?
														   6'd33 :
														   (_theResult____h120985[22] ?
														      6'd34 :
														      (_theResult____h120985[21] ?
															 6'd35 :
															 (_theResult____h120985[20] ?
															    6'd36 :
															    (_theResult____h120985[19] ?
															       6'd37 :
															       (_theResult____h120985[18] ?
																  6'd38 :
																  (_theResult____h120985[17] ?
																     6'd39 :
																     (_theResult____h120985[16] ?
																	6'd40 :
																	(_theResult____h120985[15] ?
																	   6'd41 :
																	   (_theResult____h120985[14] ?
																	      6'd42 :
																	      (_theResult____h120985[13] ?
																		 6'd43 :
																		 (_theResult____h120985[12] ?
																		    6'd44 :
																		    (_theResult____h120985[11] ?
																		       6'd45 :
																		       (_theResult____h120985[10] ?
																			  6'd46 :
																			  (_theResult____h120985[9] ?
																			     6'd47 :
																			     (_theResult____h120985[8] ?
																				6'd48 :
																				(_theResult____h120985[7] ?
																				   6'd49 :
																				   (_theResult____h120985[6] ?
																				      6'd50 :
																				      (_theResult____h120985[5] ?
																					 6'd51 :
																					 (_theResult____h120985[4] ?
																					    6'd52 :
																					    (_theResult____h120985[3] ?
																					       6'd53 :
																					       (_theResult____h120985[2] ?
																						  6'd54 :
																						  (_theResult____h120985[1] ?
																						     6'd55 :
																						     (_theResult____h120985[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2568 =
	     (_theResult____h79650[56] ?
		6'd0 :
		(_theResult____h79650[55] ?
		   6'd1 :
		   (_theResult____h79650[54] ?
		      6'd2 :
		      (_theResult____h79650[53] ?
			 6'd3 :
			 (_theResult____h79650[52] ?
			    6'd4 :
			    (_theResult____h79650[51] ?
			       6'd5 :
			       (_theResult____h79650[50] ?
				  6'd6 :
				  (_theResult____h79650[49] ?
				     6'd7 :
				     (_theResult____h79650[48] ?
					6'd8 :
					(_theResult____h79650[47] ?
					   6'd9 :
					   (_theResult____h79650[46] ?
					      6'd10 :
					      (_theResult____h79650[45] ?
						 6'd11 :
						 (_theResult____h79650[44] ?
						    6'd12 :
						    (_theResult____h79650[43] ?
						       6'd13 :
						       (_theResult____h79650[42] ?
							  6'd14 :
							  (_theResult____h79650[41] ?
							     6'd15 :
							     (_theResult____h79650[40] ?
								6'd16 :
								(_theResult____h79650[39] ?
								   6'd17 :
								   (_theResult____h79650[38] ?
								      6'd18 :
								      (_theResult____h79650[37] ?
									 6'd19 :
									 (_theResult____h79650[36] ?
									    6'd20 :
									    (_theResult____h79650[35] ?
									       6'd21 :
									       (_theResult____h79650[34] ?
										  6'd22 :
										  (_theResult____h79650[33] ?
										     6'd23 :
										     (_theResult____h79650[32] ?
											6'd24 :
											(_theResult____h79650[31] ?
											   6'd25 :
											   (_theResult____h79650[30] ?
											      6'd26 :
											      (_theResult____h79650[29] ?
												 6'd27 :
												 (_theResult____h79650[28] ?
												    6'd28 :
												    (_theResult____h79650[27] ?
												       6'd29 :
												       (_theResult____h79650[26] ?
													  6'd30 :
													  (_theResult____h79650[25] ?
													     6'd31 :
													     (_theResult____h79650[24] ?
														6'd32 :
														(_theResult____h79650[23] ?
														   6'd33 :
														   (_theResult____h79650[22] ?
														      6'd34 :
														      (_theResult____h79650[21] ?
															 6'd35 :
															 (_theResult____h79650[20] ?
															    6'd36 :
															    (_theResult____h79650[19] ?
															       6'd37 :
															       (_theResult____h79650[18] ?
																  6'd38 :
																  (_theResult____h79650[17] ?
																     6'd39 :
																     (_theResult____h79650[16] ?
																	6'd40 :
																	(_theResult____h79650[15] ?
																	   6'd41 :
																	   (_theResult____h79650[14] ?
																	      6'd42 :
																	      (_theResult____h79650[13] ?
																		 6'd43 :
																		 (_theResult____h79650[12] ?
																		    6'd44 :
																		    (_theResult____h79650[11] ?
																		       6'd45 :
																		       (_theResult____h79650[10] ?
																			  6'd46 :
																			  (_theResult____h79650[9] ?
																			     6'd47 :
																			     (_theResult____h79650[8] ?
																				6'd48 :
																				(_theResult____h79650[7] ?
																				   6'd49 :
																				   (_theResult____h79650[6] ?
																				      6'd50 :
																				      (_theResult____h79650[5] ?
																					 6'd51 :
																					 (_theResult____h79650[4] ?
																					    6'd52 :
																					    (_theResult____h79650[3] ?
																					       6'd53 :
																					       (_theResult____h79650[2] ?
																						  6'd54 :
																						  (_theResult____h79650[1] ?
																						     6'd55 :
																						     (_theResult____h79650[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3648 =
	     (_theResult___fst_exp__h129221 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard20995_0b0_requestR_BITS_191_TO_160_E_ETC__q110 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2143 =
	     (guard__h61936 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h70033 :
	       _theResult___exp__h70559 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2145 =
	     (guard__h61936 == 2'b0) ?
	       _theResult___fst_exp__h70033 :
	       (requestR[191] ?
		  _theResult___exp__h70559 :
		  _theResult___fst_exp__h70033) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2730 =
	     (guard__h61936 == 2'b0 || requestR[191]) ?
	       sfdin__h70027[56:34] :
	       _theResult___sfd__h70560 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2732 =
	     (guard__h61936 == 2'b0) ?
	       sfdin__h70027[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h70560 :
		  sfdin__h70027[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3463 =
	     (guard__h120995 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h129221 :
	       _theResult___exp__h129950 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3465 =
	     (guard__h120995 == 2'b0) ?
	       _theResult___fst_exp__h129221 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h129950 :
		  _theResult___fst_exp__h129221) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3592 =
	     (guard__h120995 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       sfdin__h129215[56:5] :
	       _theResult___sfd__h129951 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3594 =
	     (guard__h120995 == 2'b0) ?
	       sfdin__h129215[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h129951 :
		  sfdin__h129215[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2627 =
	     (guard__h79660 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h87886 :
	       _theResult___exp__h88412 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2629 =
	     (guard__h79660 == 2'b0) ?
	       _theResult___fst_exp__h87886 :
	       (requestR[191] ?
		  _theResult___exp__h88412 :
		  _theResult___fst_exp__h87886) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2776 =
	     (guard__h79660 == 2'b0 || requestR[191]) ?
	       sfdin__h87880[56:34] :
	       _theResult___sfd__h88413 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2778 =
	     (guard__h79660 == 2'b0) ?
	       sfdin__h87880[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h88413 :
		  sfdin__h87880[56:34]) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3138 =
	     (guard__h111687 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h119648 :
	       _theResult___exp__h120303 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3140 =
	     (guard__h111687 == 2'b0) ?
	       _theResult___fst_exp__h119648 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h120303 :
		  _theResult___fst_exp__h119648) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3532 =
	     (guard__h130062 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h138052 :
	       _theResult___exp__h138732 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3534 =
	     (guard__h130062 == 2'b0) ?
	       _theResult___fst_exp__h138052 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h138732 :
		  _theResult___fst_exp__h138052) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3565 =
	     (guard__h111687 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h119599[56:5] :
	       _theResult___sfd__h120304 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3567 =
	     (guard__h111687 == 2'b0) ?
	       _theResult___snd__h119599[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h120304 :
		  _theResult___snd__h119599[56:5]) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3611 =
	     (guard__h130062 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h137998[56:5] :
	       _theResult___sfd__h138733 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3613 =
	     (guard__h130062 == 2'b0) ?
	       _theResult___snd__h137998[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h138733 :
		  _theResult___snd__h137998[56:5]) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2300 =
	     (guard__h70671 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h78719 :
	       _theResult___exp__h79171 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2302 =
	     (guard__h70671 == 2'b0) ?
	       _theResult___fst_exp__h78719 :
	       (requestR[191] ?
		  _theResult___exp__h79171 :
		  _theResult___fst_exp__h78719) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2696 =
	     (guard__h88524 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h96601 :
	       _theResult___exp__h97078 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2698 =
	     (guard__h88524 == 2'b0) ?
	       _theResult___fst_exp__h96601 :
	       (requestR[191] ?
		  _theResult___exp__h97078 :
		  _theResult___fst_exp__h96601) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2749 =
	     (guard__h70671 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h78670[56:34] :
	       _theResult___sfd__h79172 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2751 =
	     (guard__h70671 == 2'b0) ?
	       _theResult___snd__h78670[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h79172 :
		  _theResult___snd__h78670[56:34]) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2795 =
	     (guard__h88524 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h96547[56:34] :
	       _theResult___sfd__h97079 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2797 =
	     (guard__h88524 == 2'b0) ?
	       _theResult___snd__h96547[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h97079 :
		  _theResult___snd__h96547[56:34]) ;
  assign IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3656 =
	     (_theResult___fst_exp__h138052 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard30062_0b0_requestR_BITS_191_TO_160_E_ETC__q112 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1317 =
	     (guard__h36155 == 2'b0) ?
	       11'd0 :
	       (requestR[159] ? _theResult___exp__h36771 : 11'd0) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1343 =
	     (guard__h36885 == 2'b0 || requestR[159]) ?
	       x__h36900[10:0] :
	       _theResult___exp__h37527 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1345 =
	     (guard__h36885 == 2'b0) ?
	       x__h36900[10:0] :
	       (requestR[159] ? _theResult___exp__h37527 : x__h36900[10:0]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1366 =
	     (guard__h36155 == 2'b0 || requestR[159]) ?
	       sfd___3__h36145[54:3] :
	       _theResult___sfd__h36772 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1368 =
	     (guard__h36155 == 2'b0) ?
	       sfd___3__h36145[54:3] :
	       (requestR[159] ?
		  _theResult___sfd__h36772 :
		  sfd___3__h36145[54:3]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1384 =
	     (guard__h36885 == 2'b0 || requestR[159]) ?
	       sfd___3__h36145[53:2] :
	       _theResult___sfd__h37528 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1386 =
	     (guard__h36885 == 2'b0) ?
	       sfd___3__h36145[53:2] :
	       (requestR[159] ?
		  _theResult___sfd__h37528 :
		  sfd___3__h36145[53:2]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d357 =
	     (guard__h7519 == 2'b0) ?
	       8'd0 :
	       (requestR[159] ? _theResult___exp__h7935 : 8'd0) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d383 =
	     (guard__h8049 == 2'b0 || requestR[159]) ?
	       x__h8064[7:0] :
	       _theResult___exp__h8488 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d385 =
	     (guard__h8049 == 2'b0) ?
	       x__h8064[7:0] :
	       (requestR[159] ? _theResult___exp__h8488 : x__h8064[7:0]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d406 =
	     (guard__h7519 == 2'b0 || requestR[159]) ?
	       sfd___3__h7509[31:9] :
	       _theResult___sfd__h7936 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d408 =
	     (guard__h7519 == 2'b0) ?
	       sfd___3__h7509[31:9] :
	       (requestR[159] ?
		  _theResult___sfd__h7936 :
		  sfd___3__h7509[31:9]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d424 =
	     (guard__h8049 == 2'b0 || requestR[159]) ?
	       sfd___3__h7509[30:8] :
	       _theResult___sfd__h8489 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d426 =
	     (guard__h8049 == 2'b0) ?
	       sfd___3__h7509[30:8] :
	       (requestR[159] ?
		  _theResult___sfd__h8489 :
		  sfd___3__h7509[30:8]) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1041 =
	     (sV2_exp__h1304 == 8'd255 && sV2_sfd__h1305[22] ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1010) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       (IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1014 ?
		  requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
		  IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1039) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1045 =
	     (sV2_exp__h1304 == 8'd255 && sV2_sfd__h1305 != 23'd0 &&
	      !sV2_sfd__h1305[22]) ?
	       res__h18445 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1044 ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1055 =
	     IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1014 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1054 ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1057 =
	     (sV2_exp__h1304 == 8'd255 && sV2_sfd__h1305[22]) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       (IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1010 ?
		  requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
		  IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1055) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1061 =
	     (sV2_exp__h1304 == 8'd255 && sV2_sfd__h1305 != 23'd0 &&
	      !sV2_sfd__h1305[22]) ?
	       res__h18445 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1060 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1042 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202[22]) ?
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1041 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1044 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202[22] &&
	      sV2_exp__h1304 == 8'd255 &&
	      sV2_sfd__h1305[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1042 } ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1046 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0 &&
	      !sV1_sfd__h1202[22]) ?
	       res__h18208 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1045 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1058 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202[22]) ?
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1057 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1060 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202[22] &&
	      sV2_exp__h1304 == 8'd255 &&
	      sV2_sfd__h1305[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1058 } ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1062 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0 &&
	      !sV1_sfd__h1202[22]) ?
	       res__h18208 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1061 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1132 =
	     (sV1_exp__h1201 == 8'd0 && sV1_sfd__h1202 == 23'd0) ?
	       res___1__h26850 :
	       ((sV1_exp__h1201 == 8'd0) ? res___1__h26869 : res__h26885) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1133 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 == 23'd0) ?
	       res___1__h26840 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1132 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 =
	     ((sV1_exp__h1201 == 8'd0) ?
		(sV1_sfd__h1202[22] ?
		   6'd2 :
		   (sV1_sfd__h1202[21] ?
		      6'd3 :
		      (sV1_sfd__h1202[20] ?
			 6'd4 :
			 (sV1_sfd__h1202[19] ?
			    6'd5 :
			    (sV1_sfd__h1202[18] ?
			       6'd6 :
			       (sV1_sfd__h1202[17] ?
				  6'd7 :
				  (sV1_sfd__h1202[16] ?
				     6'd8 :
				     (sV1_sfd__h1202[15] ?
					6'd9 :
					(sV1_sfd__h1202[14] ?
					   6'd10 :
					   (sV1_sfd__h1202[13] ?
					      6'd11 :
					      (sV1_sfd__h1202[12] ?
						 6'd12 :
						 (sV1_sfd__h1202[11] ?
						    6'd13 :
						    (sV1_sfd__h1202[10] ?
						       6'd14 :
						       (sV1_sfd__h1202[9] ?
							  6'd15 :
							  (sV1_sfd__h1202[8] ?
							     6'd16 :
							     (sV1_sfd__h1202[7] ?
								6'd17 :
								(sV1_sfd__h1202[6] ?
								   6'd18 :
								   (sV1_sfd__h1202[5] ?
								      6'd19 :
								      (sV1_sfd__h1202[4] ?
									 6'd20 :
									 (sV1_sfd__h1202[3] ?
									    6'd21 :
									    (sV1_sfd__h1202[2] ?
									       6'd22 :
									       (sV1_sfd__h1202[1] ?
										  6'd23 :
										  (sV1_sfd__h1202[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3624 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0) ?
	       _theResult___snd_fst_sfd__h100722 :
	       _theResult___fst_sfd__h138849 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3660 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0 ||
	      (sV1_exp__h1201 == 8'd255 || sV1_exp__h1201 == 8'd0) &&
	      sV1_sfd__h1202 == 23'd0) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((sV1_exp__h1201 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3640 :
		  IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3658) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3695 =
	     (sV1_exp__h1201 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674[4] :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 &&
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691[4] ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3698 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0) ?
	       sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0 &&
	       !sV1_sfd__h1202[22] :
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 != 23'd0) &&
	       (sV1_exp__h1201 != 8'd0 || sV1_sfd__h1202 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3695 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3705 =
	     (sV1_exp__h1201 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674[3] :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 &&
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691[3] ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3719 =
	     (sV1_exp__h1201 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674[2] :
	       !SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 ||
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3717 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3731 =
	     (sV1_exp__h1201 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 ||
		_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674[1]) :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 &&
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3729 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3743 =
	     (sV1_exp__h1201 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674[0] :
	       !SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 ||
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3741 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d896 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 == 23'd0) ?
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d825 :
	       ((sV1_exp__h1201 == 8'd0 && sV1_sfd__h1202 == 23'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d894) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d956 =
	     (sV1_exp__h1201 == 8'd0 && sV1_sfd__h1202 == 23'd0) ?
	       32'd0 :
	       (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d927[19] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d954) ;
  assign IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1237 =
	     sfd__h2605[31] ?
	       6'd0 :
	       (sfd__h2605[30] ?
		  6'd1 :
		  (sfd__h2605[29] ?
		     6'd2 :
		     (sfd__h2605[28] ?
			6'd3 :
			(sfd__h2605[27] ?
			   6'd4 :
			   (sfd__h2605[26] ?
			      6'd5 :
			      (sfd__h2605[25] ?
				 6'd6 :
				 (sfd__h2605[24] ?
				    6'd7 :
				    (sfd__h2605[23] ?
				       6'd8 :
				       (sfd__h2605[22] ?
					  6'd9 :
					  (sfd__h2605[21] ?
					     6'd10 :
					     (sfd__h2605[20] ?
						6'd11 :
						(sfd__h2605[19] ?
						   6'd12 :
						   (sfd__h2605[18] ?
						      6'd13 :
						      (sfd__h2605[17] ?
							 6'd14 :
							 (sfd__h2605[16] ?
							    6'd15 :
							    (sfd__h2605[15] ?
							       6'd16 :
							       (sfd__h2605[14] ?
								  6'd17 :
								  (sfd__h2605[13] ?
								     6'd18 :
								     (sfd__h2605[12] ?
									6'd19 :
									(sfd__h2605[11] ?
									   6'd20 :
									   (sfd__h2605[10] ?
									      6'd21 :
									      (sfd__h2605[9] ?
										 6'd22 :
										 (sfd__h2605[8] ?
										    6'd23 :
										    (sfd__h2605[7] ?
										       6'd24 :
										       (sfd__h2605[6] ?
											  6'd25 :
											  (sfd__h2605[5] ?
											     6'd26 :
											     (sfd__h2605[4] ?
												6'd27 :
												(sfd__h2605[3] ?
												   6'd28 :
												   (sfd__h2605[2] ?
												      6'd29 :
												      (sfd__h2605[1] ?
													 6'd30 :
													 (sfd__h2605[0] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d265 =
	     sfd__h2605[31] ?
	       6'd0 :
	       (sfd__h2605[30] ?
		  6'd1 :
		  (sfd__h2605[29] ?
		     6'd2 :
		     (sfd__h2605[28] ?
			6'd3 :
			(sfd__h2605[27] ?
			   6'd4 :
			   (sfd__h2605[26] ?
			      6'd5 :
			      (sfd__h2605[25] ?
				 6'd6 :
				 (sfd__h2605[24] ?
				    6'd7 :
				    (sfd__h2605[23] ?
				       6'd8 :
				       (sfd__h2605[22] ?
					  6'd9 :
					  (sfd__h2605[21] ?
					     6'd10 :
					     (sfd__h2605[20] ?
						6'd11 :
						(sfd__h2605[19] ?
						   6'd12 :
						   (sfd__h2605[18] ?
						      6'd13 :
						      (sfd__h2605[17] ?
							 6'd14 :
							 (sfd__h2605[16] ?
							    6'd15 :
							    (sfd__h2605[15] ?
							       6'd16 :
							       (sfd__h2605[14] ?
								  6'd17 :
								  (sfd__h2605[13] ?
								     6'd18 :
								     (sfd__h2605[12] ?
									6'd19 :
									(sfd__h2605[11] ?
									   6'd20 :
									   (sfd__h2605[10] ?
									      6'd21 :
									      (sfd__h2605[9] ?
										 6'd22 :
										 (sfd__h2605[8] ?
										    6'd23 :
										    (sfd__h2605[7] ?
										       6'd24 :
										       (sfd__h2605[6] ?
											  6'd25 :
											  (sfd__h2605[5] ?
											     6'd26 :
											     (sfd__h2605[4] ?
												6'd27 :
												(sfd__h2605[3] ?
												   6'd28 :
												   (sfd__h2605[2] ?
												      6'd29 :
												      (sfd__h2605[1] ?
													 6'd30 :
													 (sfd__h2605[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d892 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d865 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d886 ?
		  ((x__h16109[56:25] == 32'h7FFFFFFF) ?
		     x__h16109[56:25] :
		     x__h16109[56:25] + 32'd1) :
		  x__h16109[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d894 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d830 ==
	      20'd1048545) ?
	       ((_theResult_____2__h15368[32:31] == 2'b11) ?
		  _theResult_____2__h15368[31:0] :
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d825) :
	       (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d863[19] ?
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d825 :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d892) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d918 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d830 ==
	      20'd1048545) ?
	       _theResult_____2__h15368[32:31] == 2'b11 &&
	       guard__h15366 != 2'd0 :
	       !NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d863[19] &&
	       (!NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d865 ||
		guard__h15920 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d954 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d929 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d948 ?
		  ((x__h17204[56:25] == 32'hFFFFFFFF) ?
		     x__h17204[56:25] :
		     x__h17204[56:25] + 32'd1) :
		  x__h17204[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1683 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1656 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1677 ?
		  ((x__h48666[85:54] == 32'h7FFFFFFF) ?
		     x__h48666[85:54] :
		     x__h48666[85:54] + 32'd1) :
		  x__h48666[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1685 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1621 ==
	      24'd16777185) ?
	       ((_theResult_____2__h47925[32:31] == 2'b11) ?
		  _theResult_____2__h47925[31:0] :
		  IF_requestR_3_BIT_191_196_THEN_2147483648_ELSE_ETC___d1616) :
	       (NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1654[23] ?
		  IF_requestR_3_BIT_191_196_THEN_2147483648_ELSE_ETC___d1616 :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1683) ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1709 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1621 ==
	      24'd16777185) ?
	       _theResult_____2__h47925[32:31] == 2'b11 &&
	       guard__h47923 != 2'd0 :
	       !NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1654[23] &&
	       (!NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1656 ||
		guard__h48477 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1745 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1720 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1739 ?
		  ((x__h49744[85:54] == 32'hFFFFFFFF) ?
		     x__h49744[85:54] :
		     x__h49744[85:54] + 32'd1) :
		  x__h49744[85:54]) :
	       32'd0 ;
  assign IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1297 =
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1241 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1243) ?
	       requestR[159] :
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1296 ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3640 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 ||
	      _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 ||
	      _theResult___fst_exp__h119648 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard11687_0b0_requestR_BITS_191_TO_160_E_ETC__q108 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109) ;
  assign IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1039 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1038 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 ;
  assign IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1054 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1038 ?
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign IF_NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1034 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1023 ||
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1024 &&
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1025 :
	       !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1028 ||
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1024 &&
	       !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3478 =
	     ((SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99[10],
		  SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3658 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 ?
	       (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3648 :
		  IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3656) :
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3717 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691[2] :
	       _theResult___fst_exp__h138833 == 11'd2047 &&
	       _theResult___fst_sfd__h138834 == 52'd0 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3729 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691[1] :
	       _theResult___fst_exp__h138052 == 11'd0 &&
	       guard__h130062 != 2'b0 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3741 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691[0] :
	       _theResult___fst_exp__h138052 != 11'd2047 &&
	       guard__h130062 != 2'b0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2642 =
	     ((SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC__q64[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC__q67[7],
		  SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC__q67 }) -
	     9'd386 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2848 =
	     SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2323 ?
	       ((_theResult___fst_exp__h87886 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard9660_0b0_requestR_BIT_191_0b1_reques_ETC__q90 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91)) :
	       ((_theResult___fst_exp__h96601 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard8524_0b0_requestR_BIT_191_0b1_reques_ETC__q92 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93)) ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2926 =
	     SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2323 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2897[2] :
	       _theResult___fst_exp__h97179 == 8'd255 &&
	       _theResult___fst_sfd__h97180 == 23'd0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2939 =
	     SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2323 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2897[1] :
	       _theResult___fst_exp__h96601 == 8'd0 && guard__h88524 != 2'b0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2952 =
	     SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2323 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2897[0] :
	       _theResult___fst_exp__h96601 != 8'd255 &&
	       guard__h88524 != 2'b0 ;
  assign IF_requestR_3_BITS_126_TO_116_755_EQ_2047_756__ETC___d3803 =
	     (requestR[126:116] == 11'd2047 && requestR[115] ||
	      requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_re_ETC___d3772) ?
	       requestR[191:128] :
	       (requestR_3_BITS_126_TO_116_755_EQ_0_769_AND_re_ETC___d3776 ?
		  requestR[127:64] :
		  res__h143914) ;
  assign IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1014 =
	     sV2_exp__h1304 == 8'd0 && sV2_sfd__h1305 == 23'd0 &&
	     requestR[127:96] == 32'hFFFFFFFF &&
	     requestR[95] &&
	     sV1_exp__h1201 == 8'd0 &&
	     sV1_sfd__h1202 == 23'd0 &&
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ;
  assign IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d1394 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1241 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1243) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h37631 ;
  assign IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d1577 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1456 ||
	      _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1457) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h47325 ;
  assign IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d395 =
	     (requestR[159:128] == 32'd0 ||
	      !sfd__h2605[31] && !sfd__h2605[30] && !sfd__h2605[29] &&
	      !sfd__h2605[28] &&
	      !sfd__h2605[27] &&
	      !sfd__h2605[26] &&
	      !sfd__h2605[25] &&
	      !sfd__h2605[24] &&
	      !sfd__h2605[23] &&
	      !sfd__h2605[22] &&
	      !sfd__h2605[21] &&
	      !sfd__h2605[20] &&
	      !sfd__h2605[19] &&
	      !sfd__h2605[18] &&
	      !sfd__h2605[17] &&
	      !sfd__h2605[16] &&
	      !sfd__h2605[15] &&
	      !sfd__h2605[14] &&
	      !sfd__h2605[13] &&
	      !sfd__h2605[12] &&
	      !sfd__h2605[11] &&
	      !sfd__h2605[10] &&
	      !sfd__h2605[9] &&
	      !sfd__h2605[8] &&
	      !sfd__h2605[7] &&
	      !sfd__h2605[6] &&
	      !sfd__h2605[5] &&
	      !sfd__h2605[4] &&
	      !sfd__h2605[3] &&
	      !sfd__h2605[2] &&
	      !sfd__h2605[1] &&
	      !sfd__h2605[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8597 ;
  assign IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d713 =
	     (requestR[159:128] == 32'd0 ||
	      !requestR[159] &&
	      NOT_requestR_3_BIT_158_98_99_AND_NOT_requestR__ETC___d589) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14769 ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_ETC___d1747 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       32'd0 :
	       (NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1718[23] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1745) ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_ETC___d3817 =
	     requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_re_ETC___d3772 ?
	       requestR[127:64] :
	       (requestR_3_BITS_126_TO_116_755_EQ_0_769_AND_re_ETC___d3776 ?
		  requestR[191:128] :
		  res__h148462) ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_ETC___d3888 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       res___1__h156654 :
	       ((requestR[190:180] == 11'd0) ?
		  res___1__h156673 :
		  res__h156689) ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2246 =
	     ((requestR[190:180] == 11'd0) ?
		(requestR[179] ?
		   6'd2 :
		   (requestR[178] ?
		      6'd3 :
		      (requestR[177] ?
			 6'd4 :
			 (requestR[176] ?
			    6'd5 :
			    (requestR[175] ?
			       6'd6 :
			       (requestR[174] ?
				  6'd7 :
				  (requestR[173] ?
				     6'd8 :
				     (requestR[172] ?
					6'd9 :
					(requestR[171] ?
					   6'd10 :
					   (requestR[170] ?
					      6'd11 :
					      (requestR[169] ?
						 6'd12 :
						 (requestR[168] ?
						    6'd13 :
						    (requestR[167] ?
						       6'd14 :
						       (requestR[166] ?
							  6'd15 :
							  (requestR[165] ?
							     6'd16 :
							     (requestR[164] ?
								6'd17 :
								(requestR[163] ?
								   6'd18 :
								   (requestR[162] ?
								      6'd19 :
								      (requestR[161] ?
									 6'd20 :
									 (requestR[160] ?
									    6'd21 :
									    (requestR[159] ?
									       6'd22 :
									       (requestR[158] ?
										  6'd23 :
										  (requestR[157] ?
										     6'd24 :
										     (requestR[156] ?
											6'd25 :
											(requestR[155] ?
											   6'd26 :
											   (requestR[154] ?
											      6'd27 :
											      (requestR[153] ?
												 6'd28 :
												 (requestR[152] ?
												    6'd29 :
												    (requestR[151] ?
												       6'd30 :
												       (requestR[150] ?
													  6'd31 :
													  (requestR[149] ?
													     6'd32 :
													     (requestR[148] ?
														6'd33 :
														(requestR[147] ?
														   6'd34 :
														   (requestR[146] ?
														      6'd35 :
														      (requestR[145] ?
															 6'd36 :
															 (requestR[144] ?
															    6'd37 :
															    (requestR[143] ?
															       6'd38 :
															       (requestR[142] ?
																  6'd39 :
																  (requestR[141] ?
																     6'd40 :
																     (requestR[140] ?
																	6'd41 :
																	(requestR[139] ?
																	   6'd42 :
																	   (requestR[138] ?
																	      6'd43 :
																	      (requestR[137] ?
																		 6'd44 :
																		 (requestR[136] ?
																		    6'd45 :
																		    (requestR[135] ?
																		       6'd46 :
																		       (requestR[134] ?
																			  6'd47 :
																			  (requestR[133] ?
																			     6'd48 :
																			     (requestR[132] ?
																				6'd49 :
																				(requestR[131] ?
																				   6'd50 :
																				   (requestR[130] ?
																				      6'd51 :
																				      (requestR[129] ?
																					 6'd52 :
																					 (requestR[128] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2850 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1851 ?
		  IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_7_ETC___d2830 :
		  requestR[191]) :
	       (SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2322 ?
		  IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2848 :
		  requestR[191]) ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2901 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d2883 :
	       SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2322 &&
	       SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2323 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2897[4] ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2912 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d2908 :
	       SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2322 &&
	       SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2323 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2897[3] ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2928 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2920 :
	       !SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2322 ||
	       IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2926 ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2941 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d2935 :
	       SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2322 &&
	       IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2939 ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2954 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2948 :
	       !SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2322 ||
	       IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2952 ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_2047_607__ETC___d1687 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_3_BIT_191_196_THEN_2147483648_ELSE_ETC___d1616 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1685) ;
  assign IF_requestR_3_BITS_190_TO_180_606_EQ_2047_607__ETC___d2808 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       _theResult___snd_fst_sfd__h54250 :
	       _theResult___fst_sfd__h97195 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1000 =
	     sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0 &&
	     !sV1_sfd__h1202[22] &&
	     sV2_exp__h1304 == 8'd255 &&
	     sV2_sfd__h1305 != 23'd0 &&
	     !sV2_sfd__h1305[22] ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1010 =
	     sV1_exp__h1201 == 8'd0 && sV1_sfd__h1202 == 23'd0 &&
	     requestR[191:160] == 32'hFFFFFFFF &&
	     requestR[159] &&
	     sV2_exp__h1304 == 8'd0 &&
	     sV2_sfd__h1305 == 23'd0 &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1023 =
	     sV1_exp__h1201 < sV2_exp__h1304 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1024 =
	     sV1_exp__h1201 == sV2_exp__h1304 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1025 =
	     sV1_sfd__h1202 < sV2_sfd__h1305 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1028 =
	     sV1_exp__h1201 <= sV2_exp__h1304 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030 =
	     sV1_sfd__h1202 <= sV2_sfd__h1305 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1048 =
	     sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0 &&
	     !sV1_sfd__h1202[22] ||
	     sV2_exp__h1304 == 8'd255 && sV2_sfd__h1305 != 23'd0 &&
	     !sV2_sfd__h1305[22] ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1085 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1048 ||
	     sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202[22] ||
	     sV2_exp__h1304 == 8'd255 && sV2_sfd__h1305[22] ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1096 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1028 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1024 ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030) &&
	     !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1023 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1024 ||
	      !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1025) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1100 =
	     sV1_exp__h1201 == 8'd0 && sV1_sfd__h1202 == 23'd0 &&
	     sV2_exp__h1304 == 8'd0 &&
	     sV2_sfd__h1305 == 23'd0 ||
	     NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1099 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:128] :
	       31'h7FC00000 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d824 =
	     sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0 ||
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) &&
	     sV1_exp__h1201 == 8'd255 &&
	     sV1_sfd__h1202 == 23'd0 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d825 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'h80000000 :
	       32'h7FFFFFFF ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d828 =
	     sV1_exp__h1201 - 8'd127 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       -b__h15433 :
	       b__h15433 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d958 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'd0 :
	       ((sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 == 23'd0) ?
		  32'hFFFFFFFF :
		  IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d956) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d966 =
	     sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0 ||
	     sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 == 23'd0 ||
	     (sV1_exp__h1201 != 8'd0 || sV1_sfd__h1202 != 23'd0) &&
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d927[19] ||
	      NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d929 &&
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d948 &&
	      x__h17204[56:25] == 32'hFFFFFFFF) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d977 =
	     { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d966,
	       3'd0,
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 == 23'd0) &&
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 != 23'd0) &&
	       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d971 } ==
	     5'd0 ||
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d966 ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1645 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h47923 == 2'b10) ?
		  IF_requestR_3_BIT_191_196_THEN_NEG_0b0_CONCAT__ETC___d1628[53] :
		  guard__h47923 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h47923 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_3_BIT_191_196_THEN_NEG_0b0_CONCAT__ETC___d1628[85] &&
		  guard__h47923 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1677 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h48477 == 2'b10) ?
		  x__h48666[54] :
		  guard__h48477 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h48477 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h48666[85] &&
		  guard__h48477 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1739 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h49523 == 2'b10) ?
		  x__h49744[54] :
		  guard__h49523 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h49523 != 2'd0 ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d854 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h15366 == 2'b10) ?
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837[24] :
		  guard__h15366 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h15366 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837[56] &&
		  guard__h15366 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d886 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h15920 == 2'b10) ?
		  x__h16109[25] :
		  guard__h15920 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h15920 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h16109[56] &&
		  guard__h15920 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d948 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h16983 == 2'b10) ?
		  x__h17204[25] :
		  guard__h16983 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h16983 != 2'd0 ;
  assign IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1452 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d623 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d476 =
	     (sfd__h2605[31] || sfd__h2605[30] || sfd__h2605[29] ||
	      sfd__h2605[28] ||
	      sfd__h2605[27] ||
	      sfd__h2605[26] ||
	      sfd__h2605[25] ||
	      sfd__h2605[24] ||
	      sfd__h2605[23] ||
	      sfd__h2605[22] ||
	      sfd__h2605[21] ||
	      sfd__h2605[20] ||
	      sfd__h2605[19] ||
	      sfd__h2605[18] ||
	      sfd__h2605[17] ||
	      sfd__h2605[16] ||
	      sfd__h2605[15] ||
	      sfd__h2605[14] ||
	      sfd__h2605[13] ||
	      sfd__h2605[12] ||
	      sfd__h2605[11] ||
	      sfd__h2605[10] ||
	      sfd__h2605[9] ||
	      sfd__h2605[8] ||
	      sfd__h2605[7] ||
	      sfd__h2605[6] ||
	      sfd__h2605[5] ||
	      sfd__h2605[4] ||
	      sfd__h2605[3] ||
	      sfd__h2605[2] ||
	      sfd__h2605[1] ||
	      sfd__h2605[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d269 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d271 &&
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d274 &&
	      _theResult___fst_exp__h8588 == 8'd255 &&
	      _theResult___fst_sfd__h8589 == 23'd0) ;
  assign IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d479 =
	     (sfd__h2605[31] || sfd__h2605[30] || sfd__h2605[29] ||
	      sfd__h2605[28] ||
	      sfd__h2605[27] ||
	      sfd__h2605[26] ||
	      sfd__h2605[25] ||
	      sfd__h2605[24] ||
	      sfd__h2605[23] ||
	      sfd__h2605[22] ||
	      sfd__h2605[21] ||
	      sfd__h2605[20] ||
	      sfd__h2605[19] ||
	      sfd__h2605[18] ||
	      sfd__h2605[17] ||
	      sfd__h2605[16] ||
	      sfd__h2605[15] ||
	      sfd__h2605[14] ||
	      sfd__h2605[13] ||
	      sfd__h2605[12] ||
	      sfd__h2605[11] ||
	      sfd__h2605[10] ||
	      sfd__h2605[9] ||
	      sfd__h2605[8] ||
	      sfd__h2605[7] ||
	      sfd__h2605[6] ||
	      sfd__h2605[5] ||
	      sfd__h2605[4] ||
	      sfd__h2605[3] ||
	      sfd__h2605[2] ||
	      sfd__h2605[1] ||
	      sfd__h2605[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d269 &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d271 ;
  assign IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d488 =
	     (sfd__h2605[31] || sfd__h2605[30] || sfd__h2605[29] ||
	      sfd__h2605[28] ||
	      sfd__h2605[27] ||
	      sfd__h2605[26] ||
	      sfd__h2605[25] ||
	      sfd__h2605[24] ||
	      sfd__h2605[23] ||
	      sfd__h2605[22] ||
	      sfd__h2605[21] ||
	      sfd__h2605[20] ||
	      sfd__h2605[19] ||
	      sfd__h2605[18] ||
	      sfd__h2605[17] ||
	      sfd__h2605[16] ||
	      sfd__h2605[15] ||
	      sfd__h2605[14] ||
	      sfd__h2605[13] ||
	      sfd__h2605[12] ||
	      sfd__h2605[11] ||
	      sfd__h2605[10] ||
	      sfd__h2605[9] ||
	      sfd__h2605[8] ||
	      sfd__h2605[7] ||
	      sfd__h2605[6] ||
	      sfd__h2605[5] ||
	      sfd__h2605[4] ||
	      sfd__h2605[3] ||
	      sfd__h2605[2] ||
	      sfd__h2605[1] ||
	      sfd__h2605[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d269 &&
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d271 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d485 ;
  assign IF_requestR_3_BIT_191_196_THEN_2147483648_ELSE_ETC___d1616 =
	     requestR[191] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_requestR_3_BIT_191_196_THEN_NEG_0b0_CONCAT__ETC___d1628 =
	     requestR[191] ? -b__h47990 : b__h47990 ;
  assign IF_requestR_3_BIT_191_196_THEN_NOT_requestR_3__ETC___d3796 =
	     requestR[191] ?
	       !requestR_3_BITS_190_TO_180_606_ULE_requestR_3__ETC___d3785 ||
	       requestR_3_BITS_190_TO_180_606_EQ_requestR_3_B_ETC___d3787 &&
	       !requestR_3_BITS_179_TO_128_608_ULE_requestR_3__ETC___d3788 :
	       requestR_3_BITS_190_TO_180_606_ULT_requestR_3__ETC___d3792 ||
	       requestR_3_BITS_190_TO_180_606_EQ_requestR_3_B_ETC___d3787 &&
	       requestR_3_BITS_179_TO_128_608_ULT_requestR_3__ETC___d3793 ;
  assign IF_sfd___33686_BIT_7_THEN_2_ELSE_0__q21 =
	     sfd___3__h13686[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___33686_BIT_8_THEN_2_ELSE_0__q20 =
	     sfd___3__h13686[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3509_BIT_7_THEN_2_ELSE_0__q7 =
	     sfd___3__h7509[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3509_BIT_8_THEN_2_ELSE_0__q6 =
	     sfd___3__h7509[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35841_BIT_1_THEN_2_ELSE_0__q48 =
	     sfd___3__h45841[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35841_BIT_2_THEN_2_ELSE_0__q47 =
	     sfd___3__h45841[2] ? 2'd2 : 2'd0 ;
  assign IF_sfd___36145_BIT_1_THEN_2_ELSE_0__q34 =
	     sfd___3__h36145[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___36145_BIT_2_THEN_2_ELSE_0__q33 =
	     sfd___3__h36145[2] ? 2'd2 : 2'd0 ;
  assign IF_sfdin0027_BIT_33_THEN_2_ELSE_0__q61 =
	     sfdin__h70027[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin29215_BIT_4_THEN_2_ELSE_0__q98 =
	     sfdin__h129215[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin7880_BIT_33_THEN_2_ELSE_0__q66 =
	     sfdin__h87880[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd19599_BIT_4_THEN_2_ELSE_0__q95 =
	     _theResult___snd__h119599[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd37998_BIT_4_THEN_2_ELSE_0__q101 =
	     _theResult___snd__h137998[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd6547_BIT_33_THEN_2_ELSE_0__q69 =
	     _theResult___snd__h96547[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd8670_BIT_33_THEN_2_ELSE_0__q63 =
	     _theResult___snd__h78670[33] ? 2'd2 : 2'd0 ;
  assign IF_x6109_BIT_24_THEN_2_ELSE_0__q31 = x__h16109[24] ? 2'd2 : 2'd0 ;
  assign IF_x7204_BIT_24_THEN_2_ELSE_0__q32 = x__h17204[24] ? 2'd2 : 2'd0 ;
  assign IF_x8666_BIT_53_THEN_2_ELSE_0__q58 = x__h48666[53] ? 2'd2 : 2'd0 ;
  assign IF_x9744_BIT_53_THEN_2_ELSE_0__q59 = x__h49744[53] ? 2'd2 : 2'd0 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d830 =
	     -{ {12{IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d828[7]}},
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d828 } ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d862 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d830 +
	     20'd32 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d863 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d862 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d865 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d863 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d927 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d862 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d929 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d927 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1621 =
	     -{ {13{requestR_3_BITS_190_TO_180_606_MINUS_1023___d1619[10]}},
		requestR_3_BITS_190_TO_180_606_MINUS_1023___d1619 } ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1653 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1621 +
	     24'd32 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1654 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1653 -
	     24'd2 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1656 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1654 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1718 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1653 -
	     24'd1 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1720 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1718 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2920 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1851 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1852 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2868[2] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2880[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2948 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1851 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1852 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2868[0] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2880[0]) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1037 =
	     (sV1_exp__h1201 != 8'd0 || sV1_sfd__h1202 != 23'd0 ||
	      sV2_exp__h1304 != 8'd0 ||
	      sV2_sfd__h1305 != 23'd0) &&
	     requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1036 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1038 =
	     (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 == 23'd0) &&
	     (sV2_exp__h1304 != 8'd255 || sV2_sfd__h1305 == 23'd0) &&
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1037 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1095 =
	     !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1023 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1024 ||
	      !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1025) &&
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1028 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1024 ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1101 =
	     (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 == 23'd0) &&
	     (sV2_exp__h1304 != 8'd255 || sV2_sfd__h1305 == 23'd0) &&
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1100 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1119 =
	     (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 == 23'd0) &&
	     (sV2_exp__h1304 != 8'd255 || sV2_sfd__h1305 == 23'd0) &&
	     (requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1036 ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1100) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057 =
	     !sV1_sfd__h1202[21] && !sV1_sfd__h1202[20] &&
	     !sV1_sfd__h1202[19] &&
	     !sV1_sfd__h1202[18] &&
	     !sV1_sfd__h1202[17] &&
	     !sV1_sfd__h1202[16] &&
	     !sV1_sfd__h1202[15] &&
	     !sV1_sfd__h1202[14] &&
	     !sV1_sfd__h1202[13] &&
	     !sV1_sfd__h1202[12] &&
	     !sV1_sfd__h1202[11] &&
	     !sV1_sfd__h1202[10] &&
	     !sV1_sfd__h1202[9] &&
	     !sV1_sfd__h1202[8] &&
	     !sV1_sfd__h1202[7] &&
	     !sV1_sfd__h1202[6] &&
	     !sV1_sfd__h1202[5] &&
	     !sV1_sfd__h1202[4] &&
	     !sV1_sfd__h1202[3] &&
	     !sV1_sfd__h1202[2] &&
	     !sV1_sfd__h1202[1] &&
	     !sV1_sfd__h1202[0] ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d907 =
	     (sV1_exp__h1201 != 8'd0 || sV1_sfd__h1202 != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d830 ==
	       20'd1048545) ?
		_theResult_____2__h15368[32:31] != 2'b11 :
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d863[19] ||
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d865 &&
		IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d886 &&
		x__h16109[56:25] == 32'h7FFFFFFF) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d971 =
	     (sV1_exp__h1201 != 8'd0 || sV1_sfd__h1202 != 23'd0) &&
	     !NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d927[19] &&
	     (!NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d929 ||
	      guard__h16983 != 2'd0) ;
  assign NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d273 =
	     !sfd__h2605[31] && !sfd__h2605[30] && !sfd__h2605[29] &&
	     !sfd__h2605[28] &&
	     !sfd__h2605[27] &&
	     !sfd__h2605[26] &&
	     !sfd__h2605[25] &&
	     !sfd__h2605[24] &&
	     !sfd__h2605[23] &&
	     !sfd__h2605[22] &&
	     !sfd__h2605[21] &&
	     !sfd__h2605[20] &&
	     !sfd__h2605[19] &&
	     !sfd__h2605[18] &&
	     !sfd__h2605[17] &&
	     !sfd__h2605[16] &&
	     !sfd__h2605[15] &&
	     !sfd__h2605[14] &&
	     !sfd__h2605[13] &&
	     !sfd__h2605[12] &&
	     !sfd__h2605[11] &&
	     !sfd__h2605[10] &&
	     !sfd__h2605[9] &&
	     !sfd__h2605[8] &&
	     !sfd__h2605[7] &&
	     !sfd__h2605[6] &&
	     !sfd__h2605[5] &&
	     !sfd__h2605[4] &&
	     !sfd__h2605[3] &&
	     !sfd__h2605[2] &&
	     !sfd__h2605[1] &&
	     !sfd__h2605[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d269 ||
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d271 ;
  assign NOT_requestR_3_BITS_159_TO_128_34_EQ_0_35_36_A_ETC___d791 =
	     requestR[159:128] != 32'd0 &&
	     (requestR[159] ||
	      requestR_3_BIT_158_98_OR_requestR_3_BIT_157_00_ETC___d780) &&
	     (!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d627 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d628 &&
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d629 &&
	      _theResult___fst_exp__h14760 == 8'd255 &&
	      _theResult___fst_sfd__h14761 == 23'd0) ;
  assign NOT_requestR_3_BITS_190_TO_180_606_EQ_0_617_62_ETC___d1698 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1621 ==
	       24'd16777185) ?
		_theResult_____2__h47925[32:31] != 2'b11 :
		NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1654[23] ||
		NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1656 &&
		IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1677 &&
		x__h48666[85:54] == 32'h7FFFFFFF) ;
  assign NOT_requestR_3_BITS_190_TO_180_606_EQ_0_617_62_ETC___d1762 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1718[23] &&
	     (!NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1720 ||
	      guard__h49523 != 2'd0) ;
  assign NOT_requestR_3_BITS_190_TO_180_606_EQ_2047_607_ETC___d3800 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0 ||
	      requestR[126:116] != 11'd0 ||
	      requestR[115:64] != 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_3_BIT_191_196_THEN_NOT_requestR_3__ETC___d3796) ;
  assign NOT_requestR_3_BITS_190_TO_180_606_EQ_2047_607_ETC___d3865 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_3_BIT_191_196_THEN_NOT_requestR_3__ETC___d3796 ||
	      requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_re_ETC___d3846) ;
  assign NOT_requestR_3_BITS_190_TO_180_606_ULT_request_ETC___d3842 =
	     !requestR_3_BITS_190_TO_180_606_ULT_requestR_3__ETC___d3792 &&
	     (!requestR_3_BITS_190_TO_180_606_EQ_requestR_3_B_ETC___d3787 ||
	      !requestR_3_BITS_179_TO_128_608_ULT_requestR_3__ETC___d3793) &&
	     requestR_3_BITS_190_TO_180_606_ULE_requestR_3__ETC___d3785 &&
	     (!requestR_3_BITS_190_TO_180_606_EQ_requestR_3_B_ETC___d3787 ||
	      requestR_3_BITS_179_TO_128_608_ULE_requestR_3__ETC___d3788) ;
  assign NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1099 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159] ||
	      requestR[127:96] == 32'hFFFFFFFF && requestR[95]) &&
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     ((requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
		NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1095 :
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1096) ;
  assign NOT_requestR_3_BIT_158_98_99_AND_NOT_requestR__ETC___d589 =
	     !requestR[158] && !requestR[157] && !requestR[156] &&
	     !requestR[155] &&
	     !requestR[154] &&
	     !requestR[153] &&
	     !requestR[152] &&
	     !requestR[151] &&
	     !requestR[150] &&
	     !requestR[149] &&
	     !requestR[148] &&
	     !requestR[147] &&
	     !requestR[146] &&
	     !requestR[145] &&
	     !requestR[144] &&
	     !requestR[143] &&
	     !requestR[142] &&
	     !requestR[141] &&
	     !requestR[140] &&
	     !requestR[139] &&
	     !requestR[138] &&
	     !requestR[137] &&
	     !requestR[136] &&
	     !requestR[135] &&
	     !requestR[134] &&
	     !requestR[133] &&
	     !requestR[132] &&
	     !requestR[131] &&
	     !requestR[130] &&
	     !requestR[129] &&
	     !requestR[128] ;
  assign NOT_requestR_3_BIT_179_777_152_AND_NOT_request_ETC___d2191 =
	     !requestR[179] && !requestR[178] && !requestR[177] &&
	     !requestR[176] &&
	     !requestR[175] &&
	     !requestR[174] &&
	     !requestR[173] &&
	     !requestR[172] &&
	     !requestR[171] &&
	     !requestR[170] &&
	     !requestR[169] &&
	     !requestR[168] &&
	     !requestR[167] &&
	     !requestR[166] &&
	     !requestR[165] &&
	     !requestR[164] &&
	     !requestR[163] &&
	     !requestR[162] &&
	     !requestR[161] &&
	     !requestR[160] &&
	     !requestR[159] &&
	     NOT_requestR_3_BIT_158_98_99_AND_NOT_requestR__ETC___d589 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155 =
	     { {4{IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d828[7]}},
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d828 } ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155 +
	     12'd1023 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] -
	     11'd1023 ;
  assign SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2321 =
	     { requestR_3_BITS_190_TO_180_606_MINUS_1023___d1619[10],
	       requestR_3_BITS_190_TO_180_606_MINUS_1023___d1619 } ;
  assign SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2322 =
	     (SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2321 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2323 =
	     (SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2321 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC__q64 =
	     SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2321 +
	     12'd127 ;
  assign SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC__q67 =
	     SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC__q64[7:0] -
	     8'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2086 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2084 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2868 =
	     { 3'd0,
	       _theResult___fst_exp__h70033 == 8'd0 &&
	       (sfdin__h70027[56:34] == 23'd0 || guard__h61936 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h70660 == 8'd255 &&
	       _theResult___fst_sfd__h70661 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h70033 != 8'd255 &&
	       guard__h61936 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3406 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3404 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691 =
	     { 3'd0,
	       _theResult___fst_exp__h129221 == 11'd0 &&
	       (sfdin__h129215[56:5] == 52'd0 || guard__h120995 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h130051 == 11'd2047 &&
	       _theResult___fst_sfd__h130052 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h129221 != 11'd2047 &&
	       guard__h120995 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2570 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2568 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2897 =
	     { 3'd0,
	       _theResult___fst_exp__h87886 == 8'd0 &&
	       (sfdin__h87880[56:34] == 23'd0 || guard__h79660 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h88513 == 8'd255 &&
	       _theResult___fst_sfd__h88514 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h87886 != 8'd255 &&
	       guard__h79660 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3086 =
	     ({ 6'd0,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3479 =
	     ({ 6'd0,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 } ^
	      12'h800) <=
	     (IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3478 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674 =
	     { 3'd0,
	       _theResult___fst_exp__h119648 == 11'd0 &&
	       guard__h111687 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h120404 == 11'd2047 &&
	       _theResult___fst_sfd__h120405 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h119648 != 11'd2047 &&
	       guard__h111687 != 2'b0 } ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2248 =
	     ({ 3'd0,
		IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2246 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2643 =
	     ({ 3'd0,
		IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2246 } ^
	      9'h100) <=
	     (IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2642 ^
	      9'h100) ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2880 =
	     { 3'd0,
	       _theResult___fst_exp__h78719 == 8'd0 && guard__h70671 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h79272 == 8'd255 &&
	       _theResult___fst_sfd__h79273 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h78719 != 8'd255 &&
	       guard__h70671 != 2'b0 } ;
  assign _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3162 =
	     b__h15433 >>
	     _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3158 ;
  assign _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_606__ETC___d2328 =
	     sfd__h54296 >>
	     _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_606_ETC___d2324 ;
  assign _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78 =
	     { 33'h1AAAAAAAA,
	       requestR[63:32] == 32'hFFFFFFFF && requestR[31],
	       (requestR[63:32] == 32'hFFFFFFFF) ?
		 requestR[30:0] :
		 31'h7FC00000 } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1850 =
	     12'd3074 -
	     { 6'd0,
	       requestR[179] ?
		 6'd0 :
		 (requestR[178] ?
		    6'd1 :
		    (requestR[177] ?
		       6'd2 :
		       (requestR[176] ?
			  6'd3 :
			  (requestR[175] ?
			     6'd4 :
			     (requestR[174] ?
				6'd5 :
				(requestR[173] ?
				   6'd6 :
				   (requestR[172] ?
				      6'd7 :
				      (requestR[171] ?
					 6'd8 :
					 (requestR[170] ?
					    6'd9 :
					    (requestR[169] ?
					       6'd10 :
					       (requestR[168] ?
						  6'd11 :
						  (requestR[167] ?
						     6'd12 :
						     (requestR[166] ?
							6'd13 :
							(requestR[165] ?
							   6'd14 :
							   (requestR[164] ?
							      6'd15 :
							      (requestR[163] ?
								 6'd16 :
								 (requestR[162] ?
								    6'd17 :
								    (requestR[161] ?
								       6'd18 :
								       (requestR[160] ?
									  6'd19 :
									  (requestR[159] ?
									     6'd20 :
									     (requestR[158] ?
										6'd21 :
										(requestR[157] ?
										   6'd22 :
										   (requestR[156] ?
										      6'd23 :
										      (requestR[155] ?
											 6'd24 :
											 (requestR[154] ?
											    6'd25 :
											    (requestR[153] ?
											       6'd26 :
											       (requestR[152] ?
												  6'd27 :
												  (requestR[151] ?
												     6'd28 :
												     (requestR[150] ?
													6'd29 :
													(requestR[149] ?
													   6'd30 :
													   (requestR[148] ?
													      6'd31 :
													      (requestR[147] ?
														 6'd32 :
														 (requestR[146] ?
														    6'd33 :
														    (requestR[145] ?
														       6'd34 :
														       (requestR[144] ?
															  6'd35 :
															  (requestR[143] ?
															     6'd36 :
															     (requestR[142] ?
																6'd37 :
																(requestR[141] ?
																   6'd38 :
																   (requestR[140] ?
																      6'd39 :
																      (requestR[139] ?
																	 6'd40 :
																	 (requestR[138] ?
																	    6'd41 :
																	    (requestR[137] ?
																	       6'd42 :
																	       (requestR[136] ?
																		  6'd43 :
																		  (requestR[135] ?
																		     6'd44 :
																		     (requestR[134] ?
																			6'd45 :
																			(requestR[133] ?
																			   6'd46 :
																			   (requestR[132] ?
																			      6'd47 :
																			      (requestR[131] ?
																				 6'd48 :
																				 (requestR[130] ?
																				    6'd49 :
																				    (requestR[129] ?
																				       6'd50 :
																				       (requestR[128] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1851 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1850 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1852 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1850 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d2883 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1851 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1852 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2868[4] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2880[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d2908 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1851 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1852 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2868[3] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2880[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d2935 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1851 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1852 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2868[1] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2880[1]) ;
  assign _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3158 =
	     12'd3074 -
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1240 =
	     (12'd32 -
	      { 6'd0,
		IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1237 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1241 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1240 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1243 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1240 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1240 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d268 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d265 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d269 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d268 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d271 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d268 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d274 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d268 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1455 =
	     (12'd32 -
	      { 6'd0,
		IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1452 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1456 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1455 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1457 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1455 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1458 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1455 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d626 =
	     (9'd32 -
	      { 3'd0,
		IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d623 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d627 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d626 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d628 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d626 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d629 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d626 ^
	      9'h100) <
	     9'd130 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3012 =
	     12'd3970 -
	     { 7'd0,
	       sV1_sfd__h1202[22] ?
		 5'd0 :
		 (sV1_sfd__h1202[21] ?
		    5'd1 :
		    (sV1_sfd__h1202[20] ?
		       5'd2 :
		       (sV1_sfd__h1202[19] ?
			  5'd3 :
			  (sV1_sfd__h1202[18] ?
			     5'd4 :
			     (sV1_sfd__h1202[17] ?
				5'd5 :
				(sV1_sfd__h1202[16] ?
				   5'd6 :
				   (sV1_sfd__h1202[15] ?
				      5'd7 :
				      (sV1_sfd__h1202[14] ?
					 5'd8 :
					 (sV1_sfd__h1202[13] ?
					    5'd9 :
					    (sV1_sfd__h1202[12] ?
					       5'd10 :
					       (sV1_sfd__h1202[11] ?
						  5'd11 :
						  (sV1_sfd__h1202[10] ?
						     5'd12 :
						     (sV1_sfd__h1202[9] ?
							5'd13 :
							(sV1_sfd__h1202[8] ?
							   5'd14 :
							   (sV1_sfd__h1202[7] ?
							      5'd15 :
							      (sV1_sfd__h1202[6] ?
								 5'd16 :
								 (sV1_sfd__h1202[5] ?
								    5'd17 :
								    (sV1_sfd__h1202[4] ?
								       5'd18 :
								       (sV1_sfd__h1202[3] ?
									  5'd19 :
									  (sV1_sfd__h1202[2] ?
									     5'd20 :
									     (sV1_sfd__h1202[1] ?
										5'd21 :
										(sV1_sfd__h1202[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3012 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3012 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_606_ETC___d2324 =
	     12'd3970 -
	     SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2321 ;
  assign _theResult_____2__h15368 =
	     IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d854 ?
	       out1___1__h15860 :
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837[56:24] ;
  assign _theResult_____2__h47925 =
	     IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1645 ?
	       out1___1__h48417 :
	       IF_requestR_3_BIT_191_196_THEN_NEG_0b0_CONCAT__ETC___d1628[85:53] ;
  assign _theResult____h120985 =
	     ((_3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3158 ^
	       12'h800) <
	      12'd2105) ?
	       result__h121598 :
	       ((value__h15435 == 25'd0) ? b__h15433 : 57'd1) ;
  assign _theResult____h61926 =
	     (value__h47992 == 54'd0) ? sfd__h54296 : 57'd1 ;
  assign _theResult____h79650 =
	     ((_3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_606_ETC___d2324 ^
	       12'h800) <
	      12'd2105) ?
	       result__h80263 :
	       _theResult____h61926 ;
  assign _theResult___exp__h120303 =
	     sfd__h119666[53] ?
	       ((_theResult___fst_exp__h119648 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h138868) :
	       ((_theResult___fst_exp__h119648 == 11'd0 &&
		 sfd__h119666[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h119648) ;
  assign _theResult___exp__h129950 =
	     sfd__h129313[53] ?
	       ((_theResult___fst_exp__h129221 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h138898) :
	       ((_theResult___fst_exp__h129221 == 11'd0 &&
		 sfd__h129313[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h129221) ;
  assign _theResult___exp__h138732 =
	     sfd__h138071[53] ?
	       ((_theResult___fst_exp__h138052 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h138922) :
	       ((_theResult___fst_exp__h138052 == 11'd0 &&
		 sfd__h138071[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h138052) ;
  assign _theResult___exp__h14109 =
	     (sfd__h13713[24] || sfd__h13713[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h14661 =
	     sfd__h14252[24] ?
	       ((x__h14237[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h14799) :
	       ((x__h14237[7:0] == 8'd0 && sfd__h14252[24:23] == 2'b01) ?
		  8'd1 :
		  x__h14237[7:0]) ;
  assign _theResult___exp__h36771 =
	     (sfd__h36172[53] || sfd__h36172[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h37527 =
	     sfd__h36915[53] ?
	       ((x__h36900[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h37670) :
	       ((x__h36900[10:0] == 11'd0 && sfd__h36915[53:52] == 2'b01) ?
		  11'd1 :
		  x__h36900[10:0]) ;
  assign _theResult___exp__h46467 =
	     (sfd__h45868[53] || sfd__h45868[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h47222 =
	     sfd__h46610[53] ?
	       ((x__h46595[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h47360) :
	       ((x__h46595[10:0] == 11'd0 && sfd__h46610[53:52] == 2'b01) ?
		  11'd1 :
		  x__h46595[10:0]) ;
  assign _theResult___exp__h70559 =
	     sfd__h70125[24] ?
	       ((_theResult___fst_exp__h70033 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h97210) :
	       ((_theResult___fst_exp__h70033 == 8'd0 &&
		 sfd__h70125[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h70033) ;
  assign _theResult___exp__h79171 =
	     sfd__h78737[24] ?
	       ((_theResult___fst_exp__h78719 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h97234) :
	       ((_theResult___fst_exp__h78719 == 8'd0 &&
		 sfd__h78737[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h78719) ;
  assign _theResult___exp__h7935 =
	     (sfd__h7536[24] || sfd__h7536[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h8488 =
	     sfd__h8079[24] ?
	       ((x__h8064[7:0] == 8'd254) ? 8'd255 : din_inc___2_exp__h8631) :
	       ((x__h8064[7:0] == 8'd0 && sfd__h8079[24:23] == 2'b01) ?
		  8'd1 :
		  x__h8064[7:0]) ;
  assign _theResult___exp__h88412 =
	     sfd__h87978[24] ?
	       ((_theResult___fst_exp__h87886 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h97264) :
	       ((_theResult___fst_exp__h87886 == 8'd0 &&
		 sfd__h87978[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h87886) ;
  assign _theResult___exp__h97078 =
	     sfd__h96620[24] ?
	       ((_theResult___fst_exp__h96601 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h97288) :
	       ((_theResult___fst_exp__h96601 == 8'd0 &&
		 sfd__h96620[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h96601) ;
  assign _theResult___fst_exp__h104575 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       11'd2047 :
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 ;
  assign _theResult___fst_exp__h119639 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 } ;
  assign _theResult___fst_exp__h119645 =
	     (sV1_exp__h1201 == 8'd0 && !sV1_sfd__h1202[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057 ||
	      !_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3086) ?
	       11'd0 :
	       _theResult___fst_exp__h119639 ;
  assign _theResult___fst_exp__h119648 =
	     (sV1_exp__h1201 == 8'd0) ?
	       _theResult___fst_exp__h119645 :
	       11'd897 ;
  assign _theResult___fst_exp__h120401 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard11687_0b0_theResult___fst_exp19648_0_ETC__q103 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 ;
  assign _theResult___fst_exp__h120404 =
	     (_theResult___fst_exp__h119648 == 11'd2047) ?
	       _theResult___fst_exp__h119648 :
	       _theResult___fst_exp__h120401 ;
  assign _theResult___fst_exp__h129221 =
	     _theResult____h120985[56] ?
	       11'd2 :
	       _theResult___fst_exp__h129295 ;
  assign _theResult___fst_exp__h129286 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3404 } ;
  assign _theResult___fst_exp__h129292 =
	     (!_theResult____h120985[56] && !_theResult____h120985[55] &&
	      !_theResult____h120985[54] &&
	      !_theResult____h120985[53] &&
	      !_theResult____h120985[52] &&
	      !_theResult____h120985[51] &&
	      !_theResult____h120985[50] &&
	      !_theResult____h120985[49] &&
	      !_theResult____h120985[48] &&
	      !_theResult____h120985[47] &&
	      !_theResult____h120985[46] &&
	      !_theResult____h120985[45] &&
	      !_theResult____h120985[44] &&
	      !_theResult____h120985[43] &&
	      !_theResult____h120985[42] &&
	      !_theResult____h120985[41] &&
	      !_theResult____h120985[40] &&
	      !_theResult____h120985[39] &&
	      !_theResult____h120985[38] &&
	      !_theResult____h120985[37] &&
	      !_theResult____h120985[36] &&
	      !_theResult____h120985[35] &&
	      !_theResult____h120985[34] &&
	      !_theResult____h120985[33] &&
	      !_theResult____h120985[32] &&
	      !_theResult____h120985[31] &&
	      !_theResult____h120985[30] &&
	      !_theResult____h120985[29] &&
	      !_theResult____h120985[28] &&
	      !_theResult____h120985[27] &&
	      !_theResult____h120985[26] &&
	      !_theResult____h120985[25] &&
	      !_theResult____h120985[24] &&
	      !_theResult____h120985[23] &&
	      !_theResult____h120985[22] &&
	      !_theResult____h120985[21] &&
	      !_theResult____h120985[20] &&
	      !_theResult____h120985[19] &&
	      !_theResult____h120985[18] &&
	      !_theResult____h120985[17] &&
	      !_theResult____h120985[16] &&
	      !_theResult____h120985[15] &&
	      !_theResult____h120985[14] &&
	      !_theResult____h120985[13] &&
	      !_theResult____h120985[12] &&
	      !_theResult____h120985[11] &&
	      !_theResult____h120985[10] &&
	      !_theResult____h120985[9] &&
	      !_theResult____h120985[8] &&
	      !_theResult____h120985[7] &&
	      !_theResult____h120985[6] &&
	      !_theResult____h120985[5] &&
	      !_theResult____h120985[4] &&
	      !_theResult____h120985[3] &&
	      !_theResult____h120985[2] &&
	      !_theResult____h120985[1] &&
	      !_theResult____h120985[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3406) ?
	       11'd0 :
	       _theResult___fst_exp__h129286 ;
  assign _theResult___fst_exp__h129295 =
	     (!_theResult____h120985[56] && _theResult____h120985[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h129292 ;
  assign _theResult___fst_exp__h130048 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard20995_0b0_theResult___fst_exp29221_0_ETC__q105 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 ;
  assign _theResult___fst_exp__h130051 =
	     (_theResult___fst_exp__h129221 == 11'd2047) ?
	       _theResult___fst_exp__h129221 :
	       _theResult___fst_exp__h130048 ;
  assign _theResult___fst_exp__h138004 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] ;
  assign _theResult___fst_exp__h138043 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] -
	     { 5'd0,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 } ;
  assign _theResult___fst_exp__h138049 =
	     (sV1_exp__h1201 == 8'd0 && !sV1_sfd__h1202[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057 ||
	      !_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3479) ?
	       11'd0 :
	       _theResult___fst_exp__h138043 ;
  assign _theResult___fst_exp__h138052 =
	     (sV1_exp__h1201 == 8'd0) ?
	       _theResult___fst_exp__h138049 :
	       _theResult___fst_exp__h138004 ;
  assign _theResult___fst_exp__h138830 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard30062_0b0_theResult___fst_exp38052_0_ETC__q107 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 ;
  assign _theResult___fst_exp__h138833 =
	     (_theResult___fst_exp__h138052 == 11'd2047) ?
	       _theResult___fst_exp__h138052 :
	       _theResult___fst_exp__h138830 ;
  assign _theResult___fst_exp__h138842 =
	     (sV1_exp__h1201 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 ?
		  _theResult___snd_fst_exp__h120407 :
		  _theResult___fst_exp__h104575) :
	       (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 ?
		  _theResult___snd_fst_exp__h138836 :
		  _theResult___fst_exp__h104575) ;
  assign _theResult___fst_exp__h138845 =
	     (sV1_exp__h1201 == 8'd0 && sV1_sfd__h1202 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h138842 ;
  assign _theResult___fst_exp__h14205 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard3696_0b0_0_0b1_0_0b10_out_exp4112_0b_ETC__q22 :
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard3696_ETC__q24 ;
  assign _theResult___fst_exp__h14757 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4222_0b0_x4237_BITS_7_TO_0_0b1_x4237_ETC__q26 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d707 ;
  assign _theResult___fst_exp__h14760 =
	     (x__h14237[7:0] == 8'd255) ?
	       x__h14237[7:0] :
	       _theResult___fst_exp__h14757 ;
  assign _theResult___fst_exp__h36868 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6155_0b0_0_0b1_0_0b10_out_exp6774_0b_ETC__q44 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1320 ;
  assign _theResult___fst_exp__h37624 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6885_0b0_x6900_BITS_10_TO_0_0b1_x690_ETC__q40 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1349 ;
  assign _theResult___fst_exp__h37627 =
	     (x__h36900[10:0] == 11'd2047) ?
	       x__h36900[10:0] :
	       _theResult___fst_exp__h37624 ;
  assign _theResult___fst_exp__h46563 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5851_0b0_0_0b1_0_0b10_out_exp6470_0b_ETC__q49 :
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard5851_ETC__q51 ;
  assign _theResult___fst_exp__h47318 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6580_0b0_x6595_BITS_10_TO_0_0b1_x659_ETC__q53 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1536 ;
  assign _theResult___fst_exp__h47321 =
	     (x__h46595[10:0] == 11'd2047) ?
	       x__h46595[10:0] :
	       _theResult___fst_exp__h47318 ;
  assign _theResult___fst_exp__h61908 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       8'd255 :
	       CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 ;
  assign _theResult___fst_exp__h70033 =
	     _theResult____h61926[56] ? 8'd2 : _theResult___fst_exp__h70107 ;
  assign _theResult___fst_exp__h70098 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2084 } ;
  assign _theResult___fst_exp__h70104 =
	     (!_theResult____h61926[56] && !_theResult____h61926[55] &&
	      !_theResult____h61926[54] &&
	      !_theResult____h61926[53] &&
	      !_theResult____h61926[52] &&
	      !_theResult____h61926[51] &&
	      !_theResult____h61926[50] &&
	      !_theResult____h61926[49] &&
	      !_theResult____h61926[48] &&
	      !_theResult____h61926[47] &&
	      !_theResult____h61926[46] &&
	      !_theResult____h61926[45] &&
	      !_theResult____h61926[44] &&
	      !_theResult____h61926[43] &&
	      !_theResult____h61926[42] &&
	      !_theResult____h61926[41] &&
	      !_theResult____h61926[40] &&
	      !_theResult____h61926[39] &&
	      !_theResult____h61926[38] &&
	      !_theResult____h61926[37] &&
	      !_theResult____h61926[36] &&
	      !_theResult____h61926[35] &&
	      !_theResult____h61926[34] &&
	      !_theResult____h61926[33] &&
	      !_theResult____h61926[32] &&
	      !_theResult____h61926[31] &&
	      !_theResult____h61926[30] &&
	      !_theResult____h61926[29] &&
	      !_theResult____h61926[28] &&
	      !_theResult____h61926[27] &&
	      !_theResult____h61926[26] &&
	      !_theResult____h61926[25] &&
	      !_theResult____h61926[24] &&
	      !_theResult____h61926[23] &&
	      !_theResult____h61926[22] &&
	      !_theResult____h61926[21] &&
	      !_theResult____h61926[20] &&
	      !_theResult____h61926[19] &&
	      !_theResult____h61926[18] &&
	      !_theResult____h61926[17] &&
	      !_theResult____h61926[16] &&
	      !_theResult____h61926[15] &&
	      !_theResult____h61926[14] &&
	      !_theResult____h61926[13] &&
	      !_theResult____h61926[12] &&
	      !_theResult____h61926[11] &&
	      !_theResult____h61926[10] &&
	      !_theResult____h61926[9] &&
	      !_theResult____h61926[8] &&
	      !_theResult____h61926[7] &&
	      !_theResult____h61926[6] &&
	      !_theResult____h61926[5] &&
	      !_theResult____h61926[4] &&
	      !_theResult____h61926[3] &&
	      !_theResult____h61926[2] &&
	      !_theResult____h61926[1] &&
	      !_theResult____h61926[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2086) ?
	       8'd0 :
	       _theResult___fst_exp__h70098 ;
  assign _theResult___fst_exp__h70107 =
	     (!_theResult____h61926[56] && _theResult____h61926[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h70104 ;
  assign _theResult___fst_exp__h70657 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard1936_0b0_theResult___fst_exp0033_0b1_ETC__q71 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2149 ;
  assign _theResult___fst_exp__h70660 =
	     (_theResult___fst_exp__h70033 == 8'd255) ?
	       _theResult___fst_exp__h70033 :
	       _theResult___fst_exp__h70657 ;
  assign _theResult___fst_exp__h78710 =
	     8'd129 -
	     { 2'd0,
	       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2246 } ;
  assign _theResult___fst_exp__h78716 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_777_152_AND_NOT_request_ETC___d2191 ||
	      !_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2248) ?
	       8'd0 :
	       _theResult___fst_exp__h78710 ;
  assign _theResult___fst_exp__h78719 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h78716 :
	       8'd129 ;
  assign _theResult___fst_exp__h79269 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard0671_0b0_theResult___fst_exp8719_0b1_ETC__q73 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2306 ;
  assign _theResult___fst_exp__h79272 =
	     (_theResult___fst_exp__h78719 == 8'd255) ?
	       _theResult___fst_exp__h78719 :
	       _theResult___fst_exp__h79269 ;
  assign _theResult___fst_exp__h8032 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard519_0b0_0_0b1_0_0b10_out_exp938_0b11_ETC__q13 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d360 ;
  assign _theResult___fst_exp__h8585 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_x064_BI_ETC__q15 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d389 ;
  assign _theResult___fst_exp__h8588 =
	     (x__h8064[7:0] == 8'd255) ?
	       x__h8064[7:0] :
	       _theResult___fst_exp__h8585 ;
  assign _theResult___fst_exp__h87886 =
	     _theResult____h79650[56] ? 8'd2 : _theResult___fst_exp__h87960 ;
  assign _theResult___fst_exp__h87951 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2568 } ;
  assign _theResult___fst_exp__h87957 =
	     (!_theResult____h79650[56] && !_theResult____h79650[55] &&
	      !_theResult____h79650[54] &&
	      !_theResult____h79650[53] &&
	      !_theResult____h79650[52] &&
	      !_theResult____h79650[51] &&
	      !_theResult____h79650[50] &&
	      !_theResult____h79650[49] &&
	      !_theResult____h79650[48] &&
	      !_theResult____h79650[47] &&
	      !_theResult____h79650[46] &&
	      !_theResult____h79650[45] &&
	      !_theResult____h79650[44] &&
	      !_theResult____h79650[43] &&
	      !_theResult____h79650[42] &&
	      !_theResult____h79650[41] &&
	      !_theResult____h79650[40] &&
	      !_theResult____h79650[39] &&
	      !_theResult____h79650[38] &&
	      !_theResult____h79650[37] &&
	      !_theResult____h79650[36] &&
	      !_theResult____h79650[35] &&
	      !_theResult____h79650[34] &&
	      !_theResult____h79650[33] &&
	      !_theResult____h79650[32] &&
	      !_theResult____h79650[31] &&
	      !_theResult____h79650[30] &&
	      !_theResult____h79650[29] &&
	      !_theResult____h79650[28] &&
	      !_theResult____h79650[27] &&
	      !_theResult____h79650[26] &&
	      !_theResult____h79650[25] &&
	      !_theResult____h79650[24] &&
	      !_theResult____h79650[23] &&
	      !_theResult____h79650[22] &&
	      !_theResult____h79650[21] &&
	      !_theResult____h79650[20] &&
	      !_theResult____h79650[19] &&
	      !_theResult____h79650[18] &&
	      !_theResult____h79650[17] &&
	      !_theResult____h79650[16] &&
	      !_theResult____h79650[15] &&
	      !_theResult____h79650[14] &&
	      !_theResult____h79650[13] &&
	      !_theResult____h79650[12] &&
	      !_theResult____h79650[11] &&
	      !_theResult____h79650[10] &&
	      !_theResult____h79650[9] &&
	      !_theResult____h79650[8] &&
	      !_theResult____h79650[7] &&
	      !_theResult____h79650[6] &&
	      !_theResult____h79650[5] &&
	      !_theResult____h79650[4] &&
	      !_theResult____h79650[3] &&
	      !_theResult____h79650[2] &&
	      !_theResult____h79650[1] &&
	      !_theResult____h79650[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2570) ?
	       8'd0 :
	       _theResult___fst_exp__h87951 ;
  assign _theResult___fst_exp__h87960 =
	     (!_theResult____h79650[56] && _theResult____h79650[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h87957 ;
  assign _theResult___fst_exp__h88510 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9660_0b0_theResult___fst_exp7886_0b1_ETC__q75 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2633 ;
  assign _theResult___fst_exp__h88513 =
	     (_theResult___fst_exp__h87886 == 8'd255) ?
	       _theResult___fst_exp__h87886 :
	       _theResult___fst_exp__h88510 ;
  assign _theResult___fst_exp__h96553 =
	     (SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC__q64[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC__q64[7:0] ;
  assign _theResult___fst_exp__h96592 =
	     SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC__q64[7:0] -
	     { 2'd0,
	       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2246 } ;
  assign _theResult___fst_exp__h96598 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_777_152_AND_NOT_request_ETC___d2191 ||
	      !_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606_EQ__ETC___d2643) ?
	       8'd0 :
	       _theResult___fst_exp__h96592 ;
  assign _theResult___fst_exp__h96601 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h96598 :
	       _theResult___fst_exp__h96553 ;
  assign _theResult___fst_exp__h97176 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8524_0b0_theResult___fst_exp6601_0b1_ETC__q77 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2702 ;
  assign _theResult___fst_exp__h97179 =
	     (_theResult___fst_exp__h96601 == 8'd255) ?
	       _theResult___fst_exp__h96601 :
	       _theResult___fst_exp__h97176 ;
  assign _theResult___fst_exp__h97188 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1851 ?
		  _theResult___snd_fst_exp__h79275 :
		  _theResult___fst_exp__h61908) :
	       (SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2322 ?
		  _theResult___snd_fst_exp__h97182 :
		  _theResult___fst_exp__h61908) ;
  assign _theResult___fst_exp__h97191 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h97188 ;
  assign _theResult___fst_sfd__h104576 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       52'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 ;
  assign _theResult___fst_sfd__h120402 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard11687_0b0_theResult___snd19599_BITS__ETC__q115 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 ;
  assign _theResult___fst_sfd__h120405 =
	     (_theResult___fst_exp__h119648 == 11'd2047) ?
	       _theResult___snd__h119599[56:5] :
	       _theResult___fst_sfd__h120402 ;
  assign _theResult___fst_sfd__h130049 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard20995_0b0_sfdin29215_BITS_56_TO_5_0b_ETC__q117 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 ;
  assign _theResult___fst_sfd__h130052 =
	     (_theResult___fst_exp__h129221 == 11'd2047) ?
	       sfdin__h129215[56:5] :
	       _theResult___fst_sfd__h130049 ;
  assign _theResult___fst_sfd__h138831 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard30062_0b0_theResult___snd37998_BITS__ETC__q119 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 ;
  assign _theResult___fst_sfd__h138834 =
	     (_theResult___fst_exp__h138052 == 11'd2047) ?
	       _theResult___snd__h137998[56:5] :
	       _theResult___fst_sfd__h138831 ;
  assign _theResult___fst_sfd__h138843 =
	     (sV1_exp__h1201 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 ?
		  _theResult___snd_fst_sfd__h120408 :
		  _theResult___fst_sfd__h104576) :
	       (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 ?
		  _theResult___snd_fst_sfd__h138837 :
		  _theResult___fst_sfd__h104576) ;
  assign _theResult___fst_sfd__h138849 =
	     ((sV1_exp__h1201 == 8'd255 || sV1_exp__h1201 == 8'd0) &&
	      sV1_sfd__h1202 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h138843 ;
  assign _theResult___fst_sfd__h14206 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard3696_0b0_sfd___33686_BITS_31_TO_9_0b_ETC__q30 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d730 ;
  assign _theResult___fst_sfd__h14758 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4222_0b0_sfd___33686_BITS_30_TO_8_0b_ETC__q28 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d745 ;
  assign _theResult___fst_sfd__h14761 =
	     (x__h14237[7:0] == 8'd255) ?
	       sfd___3__h13686[30:8] :
	       _theResult___fst_sfd__h14758 ;
  assign _theResult___fst_sfd__h36869 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6155_0b0_sfd___36145_BITS_54_TO_3_0b_ETC__q46 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 ;
  assign _theResult___fst_sfd__h37625 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6885_0b0_sfd___36145_BITS_53_TO_2_0b_ETC__q42 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1390 ;
  assign _theResult___fst_sfd__h37628 =
	     (x__h36900[10:0] == 11'd2047) ?
	       sfd___3__h36145[53:2] :
	       _theResult___fst_sfd__h37625 ;
  assign _theResult___fst_sfd__h46564 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5851_0b0_sfd___35841_BITS_54_TO_3_0b_ETC__q57 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1558 ;
  assign _theResult___fst_sfd__h47319 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6580_0b0_sfd___35841_BITS_53_TO_2_0b_ETC__q55 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1573 ;
  assign _theResult___fst_sfd__h47322 =
	     (x__h46595[10:0] == 11'd2047) ?
	       sfd___3__h45841[53:2] :
	       _theResult___fst_sfd__h47319 ;
  assign _theResult___fst_sfd__h50592 = { 1'd1, requestR[178:128] } ;
  assign _theResult___fst_sfd__h61909 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       23'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 ;
  assign _theResult___fst_sfd__h70658 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard1936_0b0_sfdin0027_BITS_56_TO_34_0b1_ETC__q79 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2736 ;
  assign _theResult___fst_sfd__h70661 =
	     (_theResult___fst_exp__h70033 == 8'd255) ?
	       sfdin__h70027[56:34] :
	       _theResult___fst_sfd__h70658 ;
  assign _theResult___fst_sfd__h79270 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard0671_0b0_theResult___snd8670_BITS_56_ETC__q81 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2755 ;
  assign _theResult___fst_sfd__h79273 =
	     (_theResult___fst_exp__h78719 == 8'd255) ?
	       _theResult___snd__h78670[56:34] :
	       _theResult___fst_sfd__h79270 ;
  assign _theResult___fst_sfd__h8033 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q17 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d412 ;
  assign _theResult___fst_sfd__h8586 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q19 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d430 ;
  assign _theResult___fst_sfd__h8589 =
	     (x__h8064[7:0] == 8'd255) ?
	       sfd___3__h7509[30:8] :
	       _theResult___fst_sfd__h8586 ;
  assign _theResult___fst_sfd__h88511 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9660_0b0_sfdin7880_BITS_56_TO_34_0b1_ETC__q83 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2782 ;
  assign _theResult___fst_sfd__h88514 =
	     (_theResult___fst_exp__h87886 == 8'd255) ?
	       sfdin__h87880[56:34] :
	       _theResult___fst_sfd__h88511 ;
  assign _theResult___fst_sfd__h97177 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8524_0b0_theResult___snd6547_BITS_56_ETC__q85 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2801 ;
  assign _theResult___fst_sfd__h97180 =
	     (_theResult___fst_exp__h96601 == 8'd255) ?
	       _theResult___snd__h96547[56:34] :
	       _theResult___fst_sfd__h97177 ;
  assign _theResult___fst_sfd__h97189 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1851 ?
		  _theResult___snd_fst_sfd__h79276 :
		  _theResult___fst_sfd__h61909) :
	       (SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2322 ?
		  _theResult___snd_fst_sfd__h97183 :
		  _theResult___fst_sfd__h61909) ;
  assign _theResult___fst_sfd__h97195 =
	     ((requestR[190:180] == 11'd2047 || requestR[190:180] == 11'd0) &&
	      requestR[179:128] == 52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h97189 ;
  assign _theResult___fst_sfd__h99094 = { 1'd1, sV1_sfd__h1202[21:0] } ;
  assign _theResult___sfd__h120304 =
	     sfd__h119666[53] ?
	       ((_theResult___fst_exp__h119648 == 11'd2046) ?
		  52'd0 :
		  sfd__h119666[52:1]) :
	       sfd__h119666[51:0] ;
  assign _theResult___sfd__h129951 =
	     sfd__h129313[53] ?
	       ((_theResult___fst_exp__h129221 == 11'd2046) ?
		  52'd0 :
		  sfd__h129313[52:1]) :
	       sfd__h129313[51:0] ;
  assign _theResult___sfd__h138733 =
	     sfd__h138071[53] ?
	       ((_theResult___fst_exp__h138052 == 11'd2046) ?
		  52'd0 :
		  sfd__h138071[52:1]) :
	       sfd__h138071[51:0] ;
  assign _theResult___sfd__h14110 =
	     sfd__h13713[24] ? sfd__h13713[23:1] : sfd__h13713[22:0] ;
  assign _theResult___sfd__h14662 =
	     sfd__h14252[24] ?
	       ((x__h14237[7:0] == 8'd254) ? 23'd0 : sfd__h14252[23:1]) :
	       sfd__h14252[22:0] ;
  assign _theResult___sfd__h36772 =
	     sfd__h36172[53] ? sfd__h36172[52:1] : sfd__h36172[51:0] ;
  assign _theResult___sfd__h37528 =
	     sfd__h36915[53] ?
	       ((x__h36900[10:0] == 11'd2046) ? 52'd0 : sfd__h36915[52:1]) :
	       sfd__h36915[51:0] ;
  assign _theResult___sfd__h46468 =
	     sfd__h45868[53] ? sfd__h45868[52:1] : sfd__h45868[51:0] ;
  assign _theResult___sfd__h47223 =
	     sfd__h46610[53] ?
	       ((x__h46595[10:0] == 11'd2046) ? 52'd0 : sfd__h46610[52:1]) :
	       sfd__h46610[51:0] ;
  assign _theResult___sfd__h70560 =
	     sfd__h70125[24] ?
	       ((_theResult___fst_exp__h70033 == 8'd254) ?
		  23'd0 :
		  sfd__h70125[23:1]) :
	       sfd__h70125[22:0] ;
  assign _theResult___sfd__h79172 =
	     sfd__h78737[24] ?
	       ((_theResult___fst_exp__h78719 == 8'd254) ?
		  23'd0 :
		  sfd__h78737[23:1]) :
	       sfd__h78737[22:0] ;
  assign _theResult___sfd__h7936 =
	     sfd__h7536[24] ? sfd__h7536[23:1] : sfd__h7536[22:0] ;
  assign _theResult___sfd__h8489 =
	     sfd__h8079[24] ?
	       ((x__h8064[7:0] == 8'd254) ? 23'd0 : sfd__h8079[23:1]) :
	       sfd__h8079[22:0] ;
  assign _theResult___sfd__h88413 =
	     sfd__h87978[24] ?
	       ((_theResult___fst_exp__h87886 == 8'd254) ?
		  23'd0 :
		  sfd__h87978[23:1]) :
	       sfd__h87978[22:0] ;
  assign _theResult___sfd__h97079 =
	     sfd__h96620[24] ?
	       ((_theResult___fst_exp__h96601 == 8'd254) ?
		  23'd0 :
		  sfd__h96620[23:1]) :
	       sfd__h96620[22:0] ;
  assign _theResult___snd__h119599 =
	     (sV1_exp__h1201 == 8'd0) ?
	       _theResult___snd__h119608 :
	       _theResult___snd__h119601 ;
  assign _theResult___snd__h119601 = { sV1_sfd__h1202, 34'd0 } ;
  assign _theResult___snd__h119608 =
	     (sV1_exp__h1201 == 8'd0 && !sV1_sfd__h1202[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057) ?
	       b__h15433 :
	       _theResult___snd__h119614 ;
  assign _theResult___snd__h119614 =
	     { IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q94[54:0],
	       2'd0 } ;
  assign _theResult___snd__h119637 =
	     b__h15433 <<
	     IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 ;
  assign _theResult___snd__h129232 = { _theResult____h120985[55:0], 1'd0 } ;
  assign _theResult___snd__h129243 =
	     (!_theResult____h120985[56] && _theResult____h120985[55]) ?
	       _theResult___snd__h129245 :
	       _theResult___snd__h129255 ;
  assign _theResult___snd__h129245 = { _theResult____h120985[54:0], 2'd0 } ;
  assign _theResult___snd__h129255 =
	     (!_theResult____h120985[56] && !_theResult____h120985[55] &&
	      !_theResult____h120985[54] &&
	      !_theResult____h120985[53] &&
	      !_theResult____h120985[52] &&
	      !_theResult____h120985[51] &&
	      !_theResult____h120985[50] &&
	      !_theResult____h120985[49] &&
	      !_theResult____h120985[48] &&
	      !_theResult____h120985[47] &&
	      !_theResult____h120985[46] &&
	      !_theResult____h120985[45] &&
	      !_theResult____h120985[44] &&
	      !_theResult____h120985[43] &&
	      !_theResult____h120985[42] &&
	      !_theResult____h120985[41] &&
	      !_theResult____h120985[40] &&
	      !_theResult____h120985[39] &&
	      !_theResult____h120985[38] &&
	      !_theResult____h120985[37] &&
	      !_theResult____h120985[36] &&
	      !_theResult____h120985[35] &&
	      !_theResult____h120985[34] &&
	      !_theResult____h120985[33] &&
	      !_theResult____h120985[32] &&
	      !_theResult____h120985[31] &&
	      !_theResult____h120985[30] &&
	      !_theResult____h120985[29] &&
	      !_theResult____h120985[28] &&
	      !_theResult____h120985[27] &&
	      !_theResult____h120985[26] &&
	      !_theResult____h120985[25] &&
	      !_theResult____h120985[24] &&
	      !_theResult____h120985[23] &&
	      !_theResult____h120985[22] &&
	      !_theResult____h120985[21] &&
	      !_theResult____h120985[20] &&
	      !_theResult____h120985[19] &&
	      !_theResult____h120985[18] &&
	      !_theResult____h120985[17] &&
	      !_theResult____h120985[16] &&
	      !_theResult____h120985[15] &&
	      !_theResult____h120985[14] &&
	      !_theResult____h120985[13] &&
	      !_theResult____h120985[12] &&
	      !_theResult____h120985[11] &&
	      !_theResult____h120985[10] &&
	      !_theResult____h120985[9] &&
	      !_theResult____h120985[8] &&
	      !_theResult____h120985[7] &&
	      !_theResult____h120985[6] &&
	      !_theResult____h120985[5] &&
	      !_theResult____h120985[4] &&
	      !_theResult____h120985[3] &&
	      !_theResult____h120985[2] &&
	      !_theResult____h120985[1] &&
	      !_theResult____h120985[0]) ?
	       _theResult____h120985 :
	       _theResult___snd__h129261 ;
  assign _theResult___snd__h129261 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97[54:0],
	       2'd0 } ;
  assign _theResult___snd__h129284 =
	     _theResult____h120985 <<
	     IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3404 ;
  assign _theResult___snd__h137998 =
	     (sV1_exp__h1201 == 8'd0) ?
	       _theResult___snd__h138012 :
	       _theResult___snd__h119601 ;
  assign _theResult___snd__h138012 =
	     (sV1_exp__h1201 == 8'd0 && !sV1_sfd__h1202[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057) ?
	       b__h15433 :
	       _theResult___snd__h138018 ;
  assign _theResult___snd__h138018 =
	     { IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q100[54:0],
	       2'd0 } ;
  assign _theResult___snd__h138036 =
	     b__h15433 <<
	     IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3478 ;
  assign _theResult___snd__h70044 = { _theResult____h61926[55:0], 1'd0 } ;
  assign _theResult___snd__h70055 =
	     (!_theResult____h61926[56] && _theResult____h61926[55]) ?
	       _theResult___snd__h70057 :
	       _theResult___snd__h70067 ;
  assign _theResult___snd__h70057 = { _theResult____h61926[54:0], 2'd0 } ;
  assign _theResult___snd__h70067 =
	     (!_theResult____h61926[56] && !_theResult____h61926[55] &&
	      !_theResult____h61926[54] &&
	      !_theResult____h61926[53] &&
	      !_theResult____h61926[52] &&
	      !_theResult____h61926[51] &&
	      !_theResult____h61926[50] &&
	      !_theResult____h61926[49] &&
	      !_theResult____h61926[48] &&
	      !_theResult____h61926[47] &&
	      !_theResult____h61926[46] &&
	      !_theResult____h61926[45] &&
	      !_theResult____h61926[44] &&
	      !_theResult____h61926[43] &&
	      !_theResult____h61926[42] &&
	      !_theResult____h61926[41] &&
	      !_theResult____h61926[40] &&
	      !_theResult____h61926[39] &&
	      !_theResult____h61926[38] &&
	      !_theResult____h61926[37] &&
	      !_theResult____h61926[36] &&
	      !_theResult____h61926[35] &&
	      !_theResult____h61926[34] &&
	      !_theResult____h61926[33] &&
	      !_theResult____h61926[32] &&
	      !_theResult____h61926[31] &&
	      !_theResult____h61926[30] &&
	      !_theResult____h61926[29] &&
	      !_theResult____h61926[28] &&
	      !_theResult____h61926[27] &&
	      !_theResult____h61926[26] &&
	      !_theResult____h61926[25] &&
	      !_theResult____h61926[24] &&
	      !_theResult____h61926[23] &&
	      !_theResult____h61926[22] &&
	      !_theResult____h61926[21] &&
	      !_theResult____h61926[20] &&
	      !_theResult____h61926[19] &&
	      !_theResult____h61926[18] &&
	      !_theResult____h61926[17] &&
	      !_theResult____h61926[16] &&
	      !_theResult____h61926[15] &&
	      !_theResult____h61926[14] &&
	      !_theResult____h61926[13] &&
	      !_theResult____h61926[12] &&
	      !_theResult____h61926[11] &&
	      !_theResult____h61926[10] &&
	      !_theResult____h61926[9] &&
	      !_theResult____h61926[8] &&
	      !_theResult____h61926[7] &&
	      !_theResult____h61926[6] &&
	      !_theResult____h61926[5] &&
	      !_theResult____h61926[4] &&
	      !_theResult____h61926[3] &&
	      !_theResult____h61926[2] &&
	      !_theResult____h61926[1] &&
	      !_theResult____h61926[0]) ?
	       _theResult____h61926 :
	       _theResult___snd__h70073 ;
  assign _theResult___snd__h70073 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60[54:0],
	       2'd0 } ;
  assign _theResult___snd__h70096 =
	     _theResult____h61926 <<
	     IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2084 ;
  assign _theResult___snd__h78670 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h78679 :
	       _theResult___snd__h78672 ;
  assign _theResult___snd__h78672 = { requestR[179:128], 5'd0 } ;
  assign _theResult___snd__h78679 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_777_152_AND_NOT_request_ETC___d2191) ?
	       sfd__h54296 :
	       _theResult___snd__h78685 ;
  assign _theResult___snd__h78685 =
	     { IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606__ETC__q62[54:0],
	       2'd0 } ;
  assign _theResult___snd__h78708 =
	     sfd__h54296 <<
	     IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2246 ;
  assign _theResult___snd__h87897 = { _theResult____h79650[55:0], 1'd0 } ;
  assign _theResult___snd__h87908 =
	     (!_theResult____h79650[56] && _theResult____h79650[55]) ?
	       _theResult___snd__h87910 :
	       _theResult___snd__h87920 ;
  assign _theResult___snd__h87910 = { _theResult____h79650[54:0], 2'd0 } ;
  assign _theResult___snd__h87920 =
	     (!_theResult____h79650[56] && !_theResult____h79650[55] &&
	      !_theResult____h79650[54] &&
	      !_theResult____h79650[53] &&
	      !_theResult____h79650[52] &&
	      !_theResult____h79650[51] &&
	      !_theResult____h79650[50] &&
	      !_theResult____h79650[49] &&
	      !_theResult____h79650[48] &&
	      !_theResult____h79650[47] &&
	      !_theResult____h79650[46] &&
	      !_theResult____h79650[45] &&
	      !_theResult____h79650[44] &&
	      !_theResult____h79650[43] &&
	      !_theResult____h79650[42] &&
	      !_theResult____h79650[41] &&
	      !_theResult____h79650[40] &&
	      !_theResult____h79650[39] &&
	      !_theResult____h79650[38] &&
	      !_theResult____h79650[37] &&
	      !_theResult____h79650[36] &&
	      !_theResult____h79650[35] &&
	      !_theResult____h79650[34] &&
	      !_theResult____h79650[33] &&
	      !_theResult____h79650[32] &&
	      !_theResult____h79650[31] &&
	      !_theResult____h79650[30] &&
	      !_theResult____h79650[29] &&
	      !_theResult____h79650[28] &&
	      !_theResult____h79650[27] &&
	      !_theResult____h79650[26] &&
	      !_theResult____h79650[25] &&
	      !_theResult____h79650[24] &&
	      !_theResult____h79650[23] &&
	      !_theResult____h79650[22] &&
	      !_theResult____h79650[21] &&
	      !_theResult____h79650[20] &&
	      !_theResult____h79650[19] &&
	      !_theResult____h79650[18] &&
	      !_theResult____h79650[17] &&
	      !_theResult____h79650[16] &&
	      !_theResult____h79650[15] &&
	      !_theResult____h79650[14] &&
	      !_theResult____h79650[13] &&
	      !_theResult____h79650[12] &&
	      !_theResult____h79650[11] &&
	      !_theResult____h79650[10] &&
	      !_theResult____h79650[9] &&
	      !_theResult____h79650[8] &&
	      !_theResult____h79650[7] &&
	      !_theResult____h79650[6] &&
	      !_theResult____h79650[5] &&
	      !_theResult____h79650[4] &&
	      !_theResult____h79650[3] &&
	      !_theResult____h79650[2] &&
	      !_theResult____h79650[1] &&
	      !_theResult____h79650[0]) ?
	       _theResult____h79650 :
	       _theResult___snd__h87926 ;
  assign _theResult___snd__h87926 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65[54:0],
	       2'd0 } ;
  assign _theResult___snd__h87949 =
	     _theResult____h79650 <<
	     IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2568 ;
  assign _theResult___snd__h96547 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h96561 :
	       _theResult___snd__h78672 ;
  assign _theResult___snd__h96561 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_777_152_AND_NOT_request_ETC___d2191) ?
	       sfd__h54296 :
	       _theResult___snd__h96567 ;
  assign _theResult___snd__h96567 =
	     { IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_606__ETC__q68[54:0],
	       2'd0 } ;
  assign _theResult___snd__h96585 =
	     sfd__h54296 <<
	     IF_SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1_ETC___d2642 ;
  assign _theResult___snd_fst_exp__h120407 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 ?
	       11'd0 :
	       _theResult___fst_exp__h120404 ;
  assign _theResult___snd_fst_exp__h138836 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
	       _theResult___fst_exp__h130051 :
	       _theResult___fst_exp__h138833 ;
  assign _theResult___snd_fst_exp__h14763 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d629 ?
	       _theResult___fst_exp__h14205 :
	       _theResult___fst_exp__h14760 ;
  assign _theResult___snd_fst_exp__h14766 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d628 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14763 ;
  assign _theResult___snd_fst_exp__h14769 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d627 ?
	       _theResult___snd_fst_exp__h14766 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h37630 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245 ?
	       _theResult___fst_exp__h36868 :
	       _theResult___fst_exp__h37627 ;
  assign _theResult___snd_fst_exp__h37633 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1243 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h37630 ;
  assign _theResult___snd_fst_exp__h37636 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1241 ?
	       _theResult___snd_fst_exp__h37633 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h47324 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1458 ?
	       _theResult___fst_exp__h46563 :
	       _theResult___fst_exp__h47321 ;
  assign _theResult___snd_fst_exp__h47327 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1457 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h47324 ;
  assign _theResult___snd_fst_exp__h47330 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1456 ?
	       _theResult___snd_fst_exp__h47327 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h79275 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1852 ?
	       _theResult___fst_exp__h70660 :
	       _theResult___fst_exp__h79272 ;
  assign _theResult___snd_fst_exp__h8591 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d274 ?
	       _theResult___fst_exp__h8032 :
	       _theResult___fst_exp__h8588 ;
  assign _theResult___snd_fst_exp__h8594 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d271 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8591 ;
  assign _theResult___snd_fst_exp__h8597 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d269 ?
	       _theResult___snd_fst_exp__h8594 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h97182 =
	     SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2323 ?
	       _theResult___fst_exp__h88513 :
	       _theResult___fst_exp__h97179 ;
  assign _theResult___snd_fst_sfd__h100722 =
	     (value__h98839 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h98836 ;
  assign _theResult___snd_fst_sfd__h120408 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 ?
	       52'd0 :
	       _theResult___fst_sfd__h120405 ;
  assign _theResult___snd_fst_sfd__h138837 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
	       _theResult___fst_sfd__h130052 :
	       _theResult___fst_sfd__h138834 ;
  assign _theResult___snd_fst_sfd__h14764 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d629 ?
	       _theResult___fst_sfd__h14206 :
	       _theResult___fst_sfd__h14761 ;
  assign _theResult___snd_fst_sfd__h37631 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245 ?
	       _theResult___fst_sfd__h36869 :
	       _theResult___fst_sfd__h37628 ;
  assign _theResult___snd_fst_sfd__h47325 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1458 ?
	       _theResult___fst_sfd__h46564 :
	       _theResult___fst_sfd__h47322 ;
  assign _theResult___snd_fst_sfd__h54250 =
	     (value__h50135[51:29] == 23'd0) ?
	       23'd2097152 :
	       value__h50135[51:29] ;
  assign _theResult___snd_fst_sfd__h79276 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_777__ETC___d1852 ?
	       _theResult___fst_sfd__h70661 :
	       _theResult___fst_sfd__h79273 ;
  assign _theResult___snd_fst_sfd__h8592 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d274 ?
	       _theResult___fst_sfd__h8033 :
	       _theResult___fst_sfd__h8589 ;
  assign _theResult___snd_fst_sfd__h97183 =
	     SEXT_requestR_3_BITS_190_TO_180_606_MINUS_1023_ETC___d2323 ?
	       _theResult___fst_sfd__h88514 :
	       _theResult___fst_sfd__h97180 ;
  assign b__h15433 = { value__h15435, 32'd0 } ;
  assign b__h47990 = { value__h47992, 32'd0 } ;
  assign din_inc___2_exp__h138868 = _theResult___fst_exp__h119648 + 11'd1 ;
  assign din_inc___2_exp__h138898 = _theResult___fst_exp__h129221 + 11'd1 ;
  assign din_inc___2_exp__h138922 = _theResult___fst_exp__h138052 + 11'd1 ;
  assign din_inc___2_exp__h14799 = x__h14237[7:0] + 8'd1 ;
  assign din_inc___2_exp__h37670 = x__h36900[10:0] + 11'd1 ;
  assign din_inc___2_exp__h47360 = x__h46595[10:0] + 11'd1 ;
  assign din_inc___2_exp__h8631 = x__h8064[7:0] + 8'd1 ;
  assign din_inc___2_exp__h97210 = _theResult___fst_exp__h70033 + 8'd1 ;
  assign din_inc___2_exp__h97234 = _theResult___fst_exp__h78719 + 8'd1 ;
  assign din_inc___2_exp__h97264 = _theResult___fst_exp__h87886 + 8'd1 ;
  assign din_inc___2_exp__h97288 = _theResult___fst_exp__h96601 + 8'd1 ;
  assign guard__h111687 =
	     { IF_theResult___snd19599_BIT_4_THEN_2_ELSE_0__q95[1],
	       { _theResult___snd__h119599[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h120995 =
	     { IF_sfdin29215_BIT_4_THEN_2_ELSE_0__q98[1],
	       { sfdin__h129215[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h121593 = x__h121693 != 57'd0 ;
  assign guard__h130062 =
	     { IF_theResult___snd37998_BIT_4_THEN_2_ELSE_0__q101[1],
	       { _theResult___snd__h137998[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h13696 =
	     { IF_sfd___33686_BIT_8_THEN_2_ELSE_0__q20[1],
	       { sfd___3__h13686[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h14222 =
	     { IF_sfd___33686_BIT_7_THEN_2_ELSE_0__q21[1],
	       { sfd___3__h13686[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h15366 =
	     { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837[23],
	       { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837[22:0],
		 33'd0 } !=
	       56'd0 } ;
  assign guard__h15920 =
	     { IF_x6109_BIT_24_THEN_2_ELSE_0__q31[1],
	       { x__h16109[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h16983 =
	     { IF_x7204_BIT_24_THEN_2_ELSE_0__q32[1],
	       { x__h17204[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h36155 =
	     { IF_sfd___36145_BIT_2_THEN_2_ELSE_0__q33[1],
	       { sfd___3__h36145[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h36885 =
	     { IF_sfd___36145_BIT_1_THEN_2_ELSE_0__q34[1],
	       { sfd___3__h36145[0], 53'd0 } != 54'd0 } ;
  assign guard__h45851 =
	     { IF_sfd___35841_BIT_2_THEN_2_ELSE_0__q47[1],
	       { sfd___3__h45841[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h46580 =
	     { IF_sfd___35841_BIT_1_THEN_2_ELSE_0__q48[1],
	       { sfd___3__h45841[0], 53'd0 } != 54'd0 } ;
  assign guard__h47923 =
	     { IF_requestR_3_BIT_191_196_THEN_NEG_0b0_CONCAT__ETC___d1628[52],
	       { IF_requestR_3_BIT_191_196_THEN_NEG_0b0_CONCAT__ETC___d1628[51:0],
		 33'd0 } !=
	       85'd0 } ;
  assign guard__h48477 =
	     { IF_x8666_BIT_53_THEN_2_ELSE_0__q58[1],
	       { x__h48666[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h49523 =
	     { IF_x9744_BIT_53_THEN_2_ELSE_0__q59[1],
	       { x__h49744[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h61936 =
	     { IF_sfdin0027_BIT_33_THEN_2_ELSE_0__q61[1],
	       { sfdin__h70027[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h70671 =
	     { IF_theResult___snd8670_BIT_33_THEN_2_ELSE_0__q63[1],
	       { _theResult___snd__h78670[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h7519 =
	     { IF_sfd___3509_BIT_8_THEN_2_ELSE_0__q6[1],
	       { sfd___3__h7509[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h79660 =
	     { IF_sfdin7880_BIT_33_THEN_2_ELSE_0__q66[1],
	       { sfdin__h87880[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h80258 = x__h80358 != 57'd0 ;
  assign guard__h8049 =
	     { IF_sfd___3509_BIT_7_THEN_2_ELSE_0__q7[1],
	       { sfd___3__h7509[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h88524 =
	     { IF_theResult___snd6547_BIT_33_THEN_2_ELSE_0__q69[1],
	       { _theResult___snd__h96547[32:0], 23'd0 } != 56'd0 } ;
  assign out1___1__h15860 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837[56:24] +
	     33'd1 ;
  assign out1___1__h48417 =
	     IF_requestR_3_BIT_191_196_THEN_NEG_0b0_CONCAT__ETC___d1628[85:53] +
	     33'd1 ;
  assign out___1_sfd__h98836 = { value__h98839, 29'd0 } ;
  assign out_exp__h120306 =
	     _theResult___snd__h119599[5] ?
	       _theResult___exp__h120303 :
	       _theResult___fst_exp__h119648 ;
  assign out_exp__h129953 =
	     sfdin__h129215[5] ?
	       _theResult___exp__h129950 :
	       _theResult___fst_exp__h129221 ;
  assign out_exp__h138735 =
	     _theResult___snd__h137998[5] ?
	       _theResult___exp__h138732 :
	       _theResult___fst_exp__h138052 ;
  assign out_exp__h14112 =
	     sfd___3__h13686[9] ? _theResult___exp__h14109 : 8'd0 ;
  assign out_exp__h14664 =
	     sfd___3__h13686[8] ? _theResult___exp__h14661 : x__h14237[7:0] ;
  assign out_exp__h36774 =
	     sfd___3__h36145[3] ? _theResult___exp__h36771 : 11'd0 ;
  assign out_exp__h37530 =
	     sfd___3__h36145[2] ? _theResult___exp__h37527 : x__h36900[10:0] ;
  assign out_exp__h46470 =
	     sfd___3__h45841[3] ? _theResult___exp__h46467 : 11'd0 ;
  assign out_exp__h47225 =
	     sfd___3__h45841[2] ? _theResult___exp__h47222 : x__h46595[10:0] ;
  assign out_exp__h70562 =
	     sfdin__h70027[34] ?
	       _theResult___exp__h70559 :
	       _theResult___fst_exp__h70033 ;
  assign out_exp__h79174 =
	     _theResult___snd__h78670[34] ?
	       _theResult___exp__h79171 :
	       _theResult___fst_exp__h78719 ;
  assign out_exp__h7938 = sfd___3__h7509[9] ? _theResult___exp__h7935 : 8'd0 ;
  assign out_exp__h8491 =
	     sfd___3__h7509[8] ? _theResult___exp__h8488 : x__h8064[7:0] ;
  assign out_exp__h88415 =
	     sfdin__h87880[34] ?
	       _theResult___exp__h88412 :
	       _theResult___fst_exp__h87886 ;
  assign out_exp__h97081 =
	     _theResult___snd__h96547[34] ?
	       _theResult___exp__h97078 :
	       _theResult___fst_exp__h96601 ;
  assign out_sfd__h120307 =
	     _theResult___snd__h119599[5] ?
	       _theResult___sfd__h120304 :
	       _theResult___snd__h119599[56:5] ;
  assign out_sfd__h129954 =
	     sfdin__h129215[5] ?
	       _theResult___sfd__h129951 :
	       sfdin__h129215[56:5] ;
  assign out_sfd__h138736 =
	     _theResult___snd__h137998[5] ?
	       _theResult___sfd__h138733 :
	       _theResult___snd__h137998[56:5] ;
  assign out_sfd__h14113 =
	     sfd___3__h13686[9] ?
	       _theResult___sfd__h14110 :
	       sfd___3__h13686[31:9] ;
  assign out_sfd__h14665 =
	     sfd___3__h13686[8] ?
	       _theResult___sfd__h14662 :
	       sfd___3__h13686[30:8] ;
  assign out_sfd__h36775 =
	     sfd___3__h36145[3] ?
	       _theResult___sfd__h36772 :
	       sfd___3__h36145[54:3] ;
  assign out_sfd__h37531 =
	     sfd___3__h36145[2] ?
	       _theResult___sfd__h37528 :
	       sfd___3__h36145[53:2] ;
  assign out_sfd__h46471 =
	     sfd___3__h45841[3] ?
	       _theResult___sfd__h46468 :
	       sfd___3__h45841[54:3] ;
  assign out_sfd__h47226 =
	     sfd___3__h45841[2] ?
	       _theResult___sfd__h47223 :
	       sfd___3__h45841[53:2] ;
  assign out_sfd__h70563 =
	     sfdin__h70027[34] ?
	       _theResult___sfd__h70560 :
	       sfdin__h70027[56:34] ;
  assign out_sfd__h79175 =
	     _theResult___snd__h78670[34] ?
	       _theResult___sfd__h79172 :
	       _theResult___snd__h78670[56:34] ;
  assign out_sfd__h7939 =
	     sfd___3__h7509[9] ?
	       _theResult___sfd__h7936 :
	       sfd___3__h7509[31:9] ;
  assign out_sfd__h8492 =
	     sfd___3__h7509[8] ?
	       _theResult___sfd__h8489 :
	       sfd___3__h7509[30:8] ;
  assign out_sfd__h88416 =
	     sfdin__h87880[34] ?
	       _theResult___sfd__h88413 :
	       sfdin__h87880[56:34] ;
  assign out_sfd__h97082 =
	     _theResult___snd__h96547[34] ?
	       _theResult___sfd__h97079 :
	       _theResult___snd__h96547[56:34] ;
  assign requestR_3_BITS_126_TO_116_755_EQ_0_769_AND_re_ETC___d3776 =
	     requestR[126:116] == 11'd0 && requestR[115:64] == 52'd0 &&
	     requestR[127] &&
	     requestR[190:180] == 11'd0 &&
	     requestR[179:128] == 52'd0 &&
	     !requestR[191] ;
  assign requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       (requestR[127:96] == 32'hFFFFFFFF) ?
		 requestR[94:64] :
		 31'h7FC00000 } ;
  assign requestR_3_BITS_179_TO_128_608_ULE_requestR_3__ETC___d3788 =
	     requestR[179:128] <= requestR[115:64] ;
  assign requestR_3_BITS_179_TO_128_608_ULT_requestR_3__ETC___d3793 =
	     requestR[179:128] < requestR[115:64] ;
  assign requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_re_ETC___d3772 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[191] &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 &&
	     !requestR[127] ;
  assign requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_re_ETC___d3846 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 ||
	     (!requestR[191] || requestR[127]) &&
	     (requestR[191] || !requestR[127]) &&
	     (requestR[191] ?
		requestR_3_BITS_190_TO_180_606_ULE_requestR_3__ETC___d3841 :
		NOT_requestR_3_BITS_190_TO_180_606_ULT_request_ETC___d3842) ;
  assign requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d1757 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	     requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1718[23] ||
	      NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1720 &&
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1739 &&
	      x__h49744[85:54] == 32'hFFFFFFFF) ;
  assign requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d1768 =
	     { requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d1757,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_3_BITS_190_TO_180_606_EQ_0_617_62_ETC___d1762 } ==
	     5'd0 ||
	     requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d1757 ;
  assign requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3764 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] &&
	     requestR[126:116] == 11'd2047 &&
	     requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3809 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3831 =
	     requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3809 ||
	     requestR[190:180] == 11'd2047 && requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115] ;
  assign requestR_3_BITS_190_TO_180_606_EQ_requestR_3_B_ETC___d3787 =
	     requestR[190:180] == requestR[126:116] ;
  assign requestR_3_BITS_190_TO_180_606_MINUS_1023___d1619 =
	     requestR[190:180] - 11'd1023 ;
  assign requestR_3_BITS_190_TO_180_606_ULE_requestR_3__ETC___d3785 =
	     requestR[190:180] <= requestR[126:116] ;
  assign requestR_3_BITS_190_TO_180_606_ULE_requestR_3__ETC___d3841 =
	     requestR_3_BITS_190_TO_180_606_ULE_requestR_3__ETC___d3785 &&
	     (!requestR_3_BITS_190_TO_180_606_EQ_requestR_3_B_ETC___d3787 ||
	      requestR_3_BITS_179_TO_128_608_ULE_requestR_3__ETC___d3788) &&
	     !requestR_3_BITS_190_TO_180_606_ULT_requestR_3__ETC___d3792 &&
	     (!requestR_3_BITS_190_TO_180_606_EQ_requestR_3_B_ETC___d3787 ||
	      !requestR_3_BITS_179_TO_128_608_ULT_requestR_3__ETC___d3793) ;
  assign requestR_3_BITS_190_TO_180_606_ULT_requestR_3__ETC___d3792 =
	     requestR[190:180] < requestR[126:116] ;
  assign requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1036 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ||
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     IF_NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1034 ;
  assign requestR_3_BIT_158_98_OR_requestR_3_BIT_157_00_ETC___d780 =
	     requestR[158] || requestR[157] || requestR[156] ||
	     requestR[155] ||
	     requestR[154] ||
	     requestR[153] ||
	     requestR[152] ||
	     requestR[151] ||
	     requestR[150] ||
	     requestR[149] ||
	     requestR[148] ||
	     requestR[147] ||
	     requestR[146] ||
	     requestR[145] ||
	     requestR[144] ||
	     requestR[143] ||
	     requestR[142] ||
	     requestR[141] ||
	     requestR[140] ||
	     requestR[139] ||
	     requestR[138] ||
	     requestR[137] ||
	     requestR[136] ||
	     requestR[135] ||
	     requestR[134] ||
	     requestR[133] ||
	     requestR[132] ||
	     requestR[131] ||
	     requestR[130] ||
	     requestR[129] ||
	     requestR[128] ;
  assign requestR_3_BIT_159_6_OR_requestR_3_BIT_158_98__ETC___d802 =
	     (requestR[159] ||
	      requestR_3_BIT_158_98_OR_requestR_3_BIT_157_00_ETC___d780) &&
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d627 &&
	     !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d628 &&
	     IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d799 ;
  assign requestR_BITS_159_TO_128__q1 = requestR[159:128] ;
  assign res___1__h156206 =
	     (requestR[190:180] == 11'd2047 && requestR[179]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h156644 = requestR[191] ? 64'd1 : 64'd128 ;
  assign res___1__h156654 = requestR[191] ? 64'd8 : 64'd16 ;
  assign res___1__h156673 = requestR[191] ? 64'd4 : 64'd32 ;
  assign res___1__h26604 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202[22]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h26840 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd1 :
	       64'd128 ;
  assign res___1__h26850 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd8 :
	       64'd16 ;
  assign res___1__h26869 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd4 :
	       64'd32 ;
  assign res__h139472 =
	     { IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3660,
	       x__h98780,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3624 } ;
  assign res__h143914 =
	     NOT_requestR_3_BITS_190_TO_180_606_EQ_2047_607_ETC___d3800 ?
	       requestR[191:128] :
	       requestR[127:64] ;
  assign res__h148462 =
	     NOT_requestR_3_BITS_190_TO_180_606_EQ_2047_607_ETC___d3800 ?
	       requestR[127:64] :
	       requestR[191:128] ;
  assign res__h151166 =
	     ((requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	      (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	      requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_re_ETC___d3846) ?
	       64'd1 :
	       64'd0 ;
  assign res__h153861 =
	     NOT_requestR_3_BITS_190_TO_180_606_EQ_2047_607_ETC___d3800 ?
	       64'd1 :
	       64'd0 ;
  assign res__h155738 =
	     NOT_requestR_3_BITS_190_TO_180_606_EQ_2047_607_ETC___d3865 ?
	       64'd1 :
	       64'd0 ;
  assign res__h156689 = requestR[191] ? 64'd2 : 64'd64 ;
  assign res__h156871 = { 32'hFFFFFFFF, fpu$server_core_response_get[36:5] } ;
  assign res__h18208 =
	     { 32'hFFFFFFFF,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 } ;
  assign res__h18445 =
	     { 32'hFFFFFFFF,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign res__h23817 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1101 ?
	       64'd1 :
	       64'd0 ;
  assign res__h25300 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1038 ?
	       64'd1 :
	       64'd0 ;
  assign res__h26369 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1119 ?
	       64'd1 :
	       64'd0 ;
  assign res__h26885 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd2 :
	       64'd64 ;
  assign res__h97667 = { 32'hFFFFFFFF, x__h97673 } ;
  assign result__h121598 =
	     { _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3162[56:1],
	       _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3162[0] |
	       guard__h121593 } ;
  assign result__h80263 =
	     { _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_606__ETC___d2328[56:1],
	       _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_606__ETC___d2328[0] |
	       guard__h80258 } ;
  assign sV1_exp__h1201 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:151] :
	       8'd255 ;
  assign sV1_sfd__h1202 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[150:128] :
	       23'd4194304 ;
  assign sV2_exp__h1304 =
	     (requestR[127:96] == 32'hFFFFFFFF) ? requestR[94:87] : 8'd255 ;
  assign sV2_sfd__h1305 =
	     (requestR[127:96] == 32'hFFFFFFFF) ?
	       requestR[86:64] :
	       23'd4194304 ;
  assign sfd___3__h13686 =
	     requestR[159:128] <<
	     IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d623 ;
  assign sfd___3__h36145 =
	     sfd__h28144 <<
	     IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1237 ;
  assign sfd___3__h45841 =
	     sfd__h38089 <<
	     IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1452 ;
  assign sfd___3__h7509 =
	     sfd__h2605 <<
	     IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d265 ;
  assign sfd__h119666 =
	     { 1'b0,
	       _theResult___fst_exp__h119648 != 11'd0,
	       _theResult___snd__h119599[56:5] } +
	     54'd1 ;
  assign sfd__h129313 =
	     { 1'b0,
	       _theResult___fst_exp__h129221 != 11'd0,
	       sfdin__h129215[56:5] } +
	     54'd1 ;
  assign sfd__h13713 = { 2'd0, sfd___3__h13686[31:9] } + 25'd1 ;
  assign sfd__h138071 =
	     { 1'b0,
	       _theResult___fst_exp__h138052 != 11'd0,
	       _theResult___snd__h137998[56:5] } +
	     54'd1 ;
  assign sfd__h14252 =
	     { 1'b0, x__h14237[7:0] != 8'd0, sfd___3__h13686[30:8] } + 25'd1 ;
  assign sfd__h2605 = requestR[159] ? -requestR[159:128] : requestR[159:128] ;
  assign sfd__h28144 = { sfd__h2605, 23'd0 } ;
  assign sfd__h36172 = { 2'd0, sfd___3__h36145[54:3] } + 54'd1 ;
  assign sfd__h36915 =
	     { 1'b0, x__h36900[10:0] != 11'd0, sfd___3__h36145[53:2] } +
	     54'd1 ;
  assign sfd__h38089 = { requestR[159:128], 23'd0 } ;
  assign sfd__h45868 = { 2'd0, sfd___3__h45841[54:3] } + 54'd1 ;
  assign sfd__h46610 =
	     { 1'b0, x__h46595[10:0] != 11'd0, sfd___3__h45841[53:2] } +
	     54'd1 ;
  assign sfd__h54296 = { value__h47992, 3'd0 } ;
  assign sfd__h70125 =
	     { 1'b0,
	       _theResult___fst_exp__h70033 != 8'd0,
	       sfdin__h70027[56:34] } +
	     25'd1 ;
  assign sfd__h7536 = { 2'd0, sfd___3__h7509[31:9] } + 25'd1 ;
  assign sfd__h78737 =
	     { 1'b0,
	       _theResult___fst_exp__h78719 != 8'd0,
	       _theResult___snd__h78670[56:34] } +
	     25'd1 ;
  assign sfd__h8079 =
	     { 1'b0, x__h8064[7:0] != 8'd0, sfd___3__h7509[30:8] } + 25'd1 ;
  assign sfd__h87978 =
	     { 1'b0,
	       _theResult___fst_exp__h87886 != 8'd0,
	       sfdin__h87880[56:34] } +
	     25'd1 ;
  assign sfd__h96620 =
	     { 1'b0,
	       _theResult___fst_exp__h96601 != 8'd0,
	       _theResult___snd__h96547[56:34] } +
	     25'd1 ;
  assign sfdin__h129215 =
	     _theResult____h120985[56] ?
	       _theResult___snd__h129232 :
	       _theResult___snd__h129243 ;
  assign sfdin__h70027 =
	     _theResult____h61926[56] ?
	       _theResult___snd__h70044 :
	       _theResult___snd__h70055 ;
  assign sfdin__h87880 =
	     _theResult____h79650[56] ?
	       _theResult___snd__h87897 :
	       _theResult___snd__h87908 ;
  assign value__h15435 = { 1'b0, sV1_exp__h1201 != 8'd0, sV1_sfd__h1202 } ;
  assign value__h47992 =
	     { 1'b0, requestR[190:180] != 11'd0, requestR[179:128] } ;
  assign value__h50135 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	      !requestR[179]) ?
	       _theResult___fst_sfd__h50592 :
	       requestR[179:128] ;
  assign value__h98839 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0 &&
	      !sV1_sfd__h1202[22]) ?
	       _theResult___fst_sfd__h99094 :
	       sV1_sfd__h1202 ;
  assign x__h121693 = b__h15433 << x__h121726 ;
  assign x__h121726 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3158 ;
  assign x__h139574 =
	     { IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3698,
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 == 23'd0) &&
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 != 23'd0) &&
	       (sV1_exp__h1201 != 8'd0 || sV1_sfd__h1202 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3705,
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 == 23'd0) &&
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 != 23'd0) &&
	       (sV1_exp__h1201 != 8'd0 || sV1_sfd__h1202 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3719,
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 == 23'd0) &&
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 != 23'd0) &&
	       (sV1_exp__h1201 != 8'd0 || sV1_sfd__h1202 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3731,
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 == 23'd0) &&
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 != 23'd0) &&
	       (sV1_exp__h1201 != 8'd0 || sV1_sfd__h1202 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3743 } ;
  assign x__h140497 =
	     requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3764 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   IF_requestR_3_BITS_126_TO_116_755_EQ_2047_756__ETC___d3803)))) ;
  assign x__h14237 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d626 +
	     9'd127 ;
  assign x__h144046 =
	     { requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3809,
	       4'd0 } ;
  assign x__h145045 =
	     requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3764 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   ((requestR[126:116] == 11'd2047 && requestR[115]) ?
			      requestR[191:128] :
			      IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_ETC___d3817))))) ;
  assign x__h14903 =
	     { 2'd0,
	       NOT_requestR_3_BITS_159_TO_128_34_EQ_0_35_36_A_ETC___d791,
	       requestR[159:128] != 32'd0 &&
	       (requestR[159] ||
		requestR_3_BIT_158_98_OR_requestR_3_BIT_157_00_ETC___d780) &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d627 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d628,
	       requestR[159:128] != 32'd0 &&
	       requestR_3_BIT_159_6_OR_requestR_3_BIT_158_98__ETC___d802 } ;
  assign x__h149489 =
	     requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3831 ?
	       64'd0 :
	       res__h151166 ;
  assign x__h15187 = { {32{x__h15190[31]}}, x__h15190 } ;
  assign x__h15190 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d824 ?
	       32'h7FFFFFFF :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d896 ;
  assign x__h152184 =
	     requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3831 ?
	       64'd0 :
	       res__h153861 ;
  assign x__h153880 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0,
	       4'd0 } ;
  assign x__h154061 =
	     requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d3831 ?
	       64'd0 :
	       res__h155738 ;
  assign x__h156188 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       res___1__h156206 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  res___1__h156644 :
		  IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_ETC___d3888) ;
  assign x__h156838 =
	     fpu$server_core_response_get[69] ?
	       res__h156871 :
	       fpu$server_core_response_get[68:5] ;
  assign x__h16109 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837 >>
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d863 |
	     ~(57'h1FFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d863) &
	     {57{IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837[56]}} ;
  assign x__h16523 =
	     { sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0 ||
	       sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 == 23'd0 ||
	       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d907,
	       3'd0,
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 == 23'd0) &&
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 != 23'd0) &&
	       (sV1_exp__h1201 != 8'd0 || sV1_sfd__h1202 != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d918 } ;
  assign x__h16780 = { {32{x__h16783[31]}}, x__h16783 } ;
  assign x__h16783 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d824 ?
	       32'hFFFFFFFF :
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d958 ;
  assign x__h17204 =
	     { sV1_exp__h1201 != 8'd0, sV1_sfd__h1202, 33'd0 } >>
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d927 ;
  assign x__h17282 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d977 :
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d966,
	       3'd0,
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 == 23'd0) &&
	       (sV1_exp__h1201 != 8'd255 || sV1_sfd__h1202 != 23'd0) &&
	       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d971 } ;
  assign x__h17530 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1000 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1046 ;
  assign x__h19569 =
	     { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1048,
	       4'd0 } ;
  assign x__h20164 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1000 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1062 ;
  assign x__h2157 = { 32'hFFFFFFFF, x__h2163 } ;
  assign x__h2163 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign x__h22689 = { 32'hFFFFFFFF, requestR[159:128] } ;
  assign x__h22810 =
	     { {32{requestR_BITS_159_TO_128__q1[31]}},
	       requestR_BITS_159_TO_128__q1 } ;
  assign x__h22948 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1085 ?
	       64'd0 :
	       res__h23817 ;
  assign x__h2303 = { 32'hFFFFFFFF, x__h2309 } ;
  assign x__h2309 =
	     { requestR[127:96] != 32'hFFFFFFFF || !requestR[95],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign x__h2437 = { 32'hFFFFFFFF, x__h2443 } ;
  assign x__h2443 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) !=
	       (requestR[127:96] == 32'hFFFFFFFF && requestR[95]),
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign x__h24431 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1085 ?
	       64'd0 :
	       res__h25300 ;
  assign x__h25319 =
	     { sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0 ||
	       sV2_exp__h1304 == 8'd255 && sV2_sfd__h1305 != 23'd0,
	       4'd0 } ;
  assign x__h25500 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1085 ?
	       64'd0 :
	       res__h26369 ;
  assign x__h2584 = { 32'hFFFFFFFF, x__h2590 } ;
  assign x__h2590 =
	     { requestR[159:128] != 32'd0 &&
	       (NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d273 ?
		  requestR[159] :
		  IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d335),
	       IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d395,
	       (requestR[159:128] == 32'd0 ||
		NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d273) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h8592 } ;
  assign x__h26586 =
	     (sV1_exp__h1201 == 8'd255 && sV1_sfd__h1202 != 23'd0) ?
	       res___1__h26604 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1133 ;
  assign x__h27753 = { requestR[127], requestR[190:128] } ;
  assign x__h27875 = { !requestR[127], requestR[190:128] } ;
  assign x__h27999 = { requestR[191] != requestR[127], requestR[190:128] } ;
  assign x__h28129 =
	     { requestR[159:128] != 32'd0 &&
	       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1297,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h37636,
	       IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d1394 } ;
  assign x__h36900 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1240 +
	     12'd1023 ;
  assign x__h37792 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1241 ||
		!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1243 &&
		!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245 &&
		_theResult___fst_exp__h37627 == 11'd2047 &&
		_theResult___fst_sfd__h37628 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1241 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1243,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1241 &&
	       !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1243 &&
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1411 } ;
  assign x__h38077 =
	     { 1'd0,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h47330,
	       IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d1577 } ;
  assign x__h46595 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1455 +
	     12'd1023 ;
  assign x__h47460 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1456 ||
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1457 &&
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1458 &&
		_theResult___fst_exp__h47321 == 11'd2047 &&
		_theResult___fst_sfd__h47322 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1456 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1457,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1456 &&
	       !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1457 &&
	       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d1594 } ;
  assign x__h47744 = { {32{x__h47747[31]}}, x__h47747 } ;
  assign x__h47747 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'h7FFFFFFF :
	       IF_requestR_3_BITS_190_TO_180_606_EQ_2047_607__ETC___d1687 ;
  assign x__h48666 =
	     IF_requestR_3_BIT_191_196_THEN_NEG_0b0_CONCAT__ETC___d1628 >>
	     NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1654 |
	     ~(86'h3FFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1654) &
	     {86{IF_requestR_3_BIT_191_196_THEN_NEG_0b0_CONCAT__ETC___d1628[85]}} ;
  assign x__h49063 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_3_BITS_190_TO_180_606_EQ_0_617_62_ETC___d1698,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_3_BITS_190_TO_180_606_MIN_ETC___d1709 } ;
  assign x__h49320 = { {32{x__h49323[31]}}, x__h49323 } ;
  assign x__h49323 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'hFFFFFFFF :
	       (requestR[191] ?
		  32'd0 :
		  ((requestR[190:180] == 11'd2047 &&
		    requestR[179:128] == 52'd0) ?
		     32'hFFFFFFFF :
		     IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_AND_ETC___d1747)) ;
  assign x__h49744 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 33'd0 } >>
	     NEG_SEXT_requestR_3_BITS_190_TO_180_606_MINUS__ETC___d1718 ;
  assign x__h49822 =
	     { requestR[191] ?
		 requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d1768 :
		 requestR_3_BITS_190_TO_180_606_EQ_2047_607_AND_ETC___d1757,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_3_BITS_190_TO_180_606_EQ_0_617_62_ETC___d1762 } ;
  assign x__h50066 =
	     (x__h50075 == 8'd255 &&
	      IF_requestR_3_BITS_190_TO_180_606_EQ_2047_607__ETC___d2808[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       res__h97667 ;
  assign x__h50075 =
	     (requestR[190:180] == 11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h97191 ;
  assign x__h80358 = sfd__h54296 << x__h80391 ;
  assign x__h80391 =
	     12'd57 -
	     _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_606_ETC___d2324 ;
  assign x__h8064 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d268 +
	     9'd127 ;
  assign x__h8757 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d476,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d479,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d488 } ;
  assign x__h9045 =
	     { 33'h1FFFFFFFE,
	       IF_requestR_3_BITS_159_TO_128_34_EQ_0_35_OR_NO_ETC___d713,
	       (requestR[159:128] == 32'd0 ||
		!requestR[159] &&
		NOT_requestR_3_BIT_158_98_99_AND_NOT_requestR__ETC___d589 ||
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d627 ||
		_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d628) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h14764 } ;
  assign x__h97673 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
		(requestR[190:180] == 11'd2047 ||
		 requestR[190:180] == 11'd0) &&
		requestR[179:128] == 52'd0) ?
		 requestR[191] :
		 IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2850,
	       x__h50075,
	       IF_requestR_3_BITS_190_TO_180_606_EQ_2047_607__ETC___d2808 } ;
  assign x__h97788 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179] :
		 (requestR[190:180] != 11'd2047 ||
		  requestR[179:128] != 52'd0) &&
		 (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
		 IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2901,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2912,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2928,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2941,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_606_EQ_0_617_THE_ETC___d2954 } ;
  assign x__h98771 =
	     (x__h98780 == 11'd2047 &&
	      IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3624[51]) ?
	       64'h7FF8000000000000 :
	       res__h139472 ;
  assign x__h98780 =
	     (sV1_exp__h1201 == 8'd255) ?
	       11'd2047 :
	       _theResult___fst_exp__h138845 ;
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd254;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd255 : 8'd254;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd254 : 8'd255;
      default: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      23'd8388607;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd0 : 23'd8388607;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd8388607 : 23'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 = 23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd2046;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2047 :
		11'd2046;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2046 :
		11'd2047;
      default: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      52'hFFFFFFFFFFFFF;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 = 52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h0:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 =
	      requestR[194:192];
      3'h1: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd4;
      3'h2: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd3;
      3'h3: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd2;
      3'h4: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd1;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 =
		   3'd0;
    endcase
  end
  always@(guard__h7519 or requestR)
  begin
    case (guard__h7519)
      2'b0, 2'b01, 2'b10:
	  CASE_guard519_0b0_requestR_BIT_159_0b1_request_ETC__q8 =
	      requestR[159];
      2'd3:
	  CASE_guard519_0b0_requestR_BIT_159_0b1_request_ETC__q8 =
	      guard__h7519 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h7519)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
	      (guard__h7519 == 2'b0) ?
		requestR[159] :
		(guard__h7519 == 2'b01 || guard__h7519 == 2'b10 ||
		 guard__h7519 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h8049 or requestR)
  begin
    case (guard__h8049)
      2'b0, 2'b01, 2'b10:
	  CASE_guard049_0b0_requestR_BIT_159_0b1_request_ETC__q10 =
	      requestR[159];
      2'd3:
	  CASE_guard049_0b0_requestR_BIT_159_0b1_request_ETC__q10 =
	      guard__h8049 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h8049)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
	      (guard__h8049 == 2'b0) ?
		requestR[159] :
		(guard__h8049 == 2'b01 || guard__h8049 == 2'b10 ||
		 guard__h8049 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h7519 or _theResult___exp__h7935)
  begin
    case (guard__h7519)
      2'b0: CASE_guard519_0b0_0_0b1_theResult___exp935_0b1_ETC__q12 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard519_0b0_0_0b1_theResult___exp935_0b1_ETC__q12 =
	      _theResult___exp__h7935;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d357 or
	  guard__h7519 or
	  _theResult___exp__h7935 or
	  CASE_guard519_0b0_0_0b1_theResult___exp935_0b1_ETC__q12)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d360 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d357;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d360 =
	      (guard__h7519 == 2'b0 || requestR[159]) ?
		8'd0 :
		_theResult___exp__h7935;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d360 =
	      CASE_guard519_0b0_0_0b1_theResult___exp935_0b1_ETC__q12;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d360 =
		   8'd0;
    endcase
  end
  always@(guard__h7519 or out_exp__h7938 or _theResult___exp__h7935)
  begin
    case (guard__h7519)
      2'b0, 2'b01:
	  CASE_guard519_0b0_0_0b1_0_0b10_out_exp938_0b11_ETC__q13 = 8'd0;
      2'b10:
	  CASE_guard519_0b0_0_0b1_0_0b10_out_exp938_0b11_ETC__q13 =
	      out_exp__h7938;
      2'b11:
	  CASE_guard519_0b0_0_0b1_0_0b10_out_exp938_0b11_ETC__q13 =
	      _theResult___exp__h7935;
    endcase
  end
  always@(guard__h8049 or x__h8064 or _theResult___exp__h8488)
  begin
    case (guard__h8049)
      2'b0:
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_theResu_ETC__q14 =
	      x__h8064[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_theResu_ETC__q14 =
	      _theResult___exp__h8488;
    endcase
  end
  always@(requestR or
	  x__h8064 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d385 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d383 or
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_theResu_ETC__q14)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d389 =
	      x__h8064[7:0];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d389 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d385;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d389 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d383;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d389 =
	      CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_theResu_ETC__q14;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d389 =
		   8'd0;
    endcase
  end
  always@(guard__h8049 or
	  x__h8064 or out_exp__h8491 or _theResult___exp__h8488)
  begin
    case (guard__h8049)
      2'b0, 2'b01:
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_x064_BI_ETC__q15 =
	      x__h8064[7:0];
      2'b10:
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_x064_BI_ETC__q15 =
	      out_exp__h8491;
      2'b11:
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_x064_BI_ETC__q15 =
	      _theResult___exp__h8488;
    endcase
  end
  always@(guard__h7519 or sfd___3__h7509 or _theResult___sfd__h7936)
  begin
    case (guard__h7519)
      2'b0:
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q16 =
	      sfd___3__h7509[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q16 =
	      _theResult___sfd__h7936;
    endcase
  end
  always@(requestR or
	  sfd___3__h7509 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d408 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d406 or
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q16)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d412 =
	      sfd___3__h7509[31:9];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d412 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d408;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d412 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d406;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d412 =
	      CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q16;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d412 =
		   23'd0;
    endcase
  end
  always@(guard__h7519 or
	  sfd___3__h7509 or out_sfd__h7939 or _theResult___sfd__h7936)
  begin
    case (guard__h7519)
      2'b0, 2'b01:
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q17 =
	      sfd___3__h7509[31:9];
      2'b10:
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q17 =
	      out_sfd__h7939;
      2'b11:
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q17 =
	      _theResult___sfd__h7936;
    endcase
  end
  always@(guard__h8049 or sfd___3__h7509 or _theResult___sfd__h8489)
  begin
    case (guard__h8049)
      2'b0:
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q18 =
	      sfd___3__h7509[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q18 =
	      _theResult___sfd__h8489;
    endcase
  end
  always@(requestR or
	  sfd___3__h7509 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d426 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d424 or
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q18)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d430 =
	      sfd___3__h7509[30:8];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d430 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d426;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d430 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d424;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d430 =
	      CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q18;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d430 =
		   23'd0;
    endcase
  end
  always@(guard__h8049 or
	  sfd___3__h7509 or out_sfd__h8492 or _theResult___sfd__h8489)
  begin
    case (guard__h8049)
      2'b0, 2'b01:
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q19 =
	      sfd___3__h7509[30:8];
      2'b10:
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q19 =
	      out_sfd__h8492;
      2'b11:
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q19 =
	      _theResult___sfd__h8489;
    endcase
  end
  always@(guard__h13696 or out_exp__h14112 or _theResult___exp__h14109)
  begin
    case (guard__h13696)
      2'b0, 2'b01:
	  CASE_guard3696_0b0_0_0b1_0_0b10_out_exp4112_0b_ETC__q22 = 8'd0;
      2'b10:
	  CASE_guard3696_0b0_0_0b1_0_0b10_out_exp4112_0b_ETC__q22 =
	      out_exp__h14112;
      2'b11:
	  CASE_guard3696_0b0_0_0b1_0_0b10_out_exp4112_0b_ETC__q22 =
	      _theResult___exp__h14109;
    endcase
  end
  always@(guard__h13696 or _theResult___exp__h14109)
  begin
    case (guard__h13696)
      2'b0: CASE_guard3696_0b0_0_0b1_theResult___exp4109_0_ETC__q23 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard3696_0b0_0_0b1_theResult___exp4109_0_ETC__q23 =
	      _theResult___exp__h14109;
    endcase
  end
  always@(requestR or
	  guard__h13696 or
	  _theResult___exp__h14109 or
	  CASE_guard3696_0b0_0_0b1_theResult___exp4109_0_ETC__q23)
  begin
    case (requestR[194:192])
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard3696_ETC__q24 =
	      (guard__h13696 == 2'b0) ? 8'd0 : _theResult___exp__h14109;
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard3696_ETC__q24 =
	      CASE_guard3696_0b0_0_0b1_theResult___exp4109_0_ETC__q23;
      default: CASE_requestR_BITS_194_TO_192_0x3_IF_guard3696_ETC__q24 = 8'd0;
    endcase
  end
  always@(guard__h14222 or x__h14237 or _theResult___exp__h14661)
  begin
    case (guard__h14222)
      2'b0:
	  CASE_guard4222_0b0_x4237_BITS_7_TO_0_0b1_theRe_ETC__q25 =
	      x__h14237[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard4222_0b0_x4237_BITS_7_TO_0_0b1_theRe_ETC__q25 =
	      _theResult___exp__h14661;
    endcase
  end
  always@(requestR or
	  x__h14237 or
	  guard__h14222 or
	  _theResult___exp__h14661 or
	  CASE_guard4222_0b0_x4237_BITS_7_TO_0_0b1_theRe_ETC__q25)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d707 =
	      x__h14237[7:0];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d707 =
	      (guard__h14222 == 2'b0) ?
		x__h14237[7:0] :
		_theResult___exp__h14661;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d707 =
	      CASE_guard4222_0b0_x4237_BITS_7_TO_0_0b1_theRe_ETC__q25;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d707 =
		   8'd0;
    endcase
  end
  always@(guard__h14222 or
	  x__h14237 or out_exp__h14664 or _theResult___exp__h14661)
  begin
    case (guard__h14222)
      2'b0, 2'b01:
	  CASE_guard4222_0b0_x4237_BITS_7_TO_0_0b1_x4237_ETC__q26 =
	      x__h14237[7:0];
      2'b10:
	  CASE_guard4222_0b0_x4237_BITS_7_TO_0_0b1_x4237_ETC__q26 =
	      out_exp__h14664;
      2'b11:
	  CASE_guard4222_0b0_x4237_BITS_7_TO_0_0b1_x4237_ETC__q26 =
	      _theResult___exp__h14661;
    endcase
  end
  always@(guard__h14222 or sfd___3__h13686 or _theResult___sfd__h14662)
  begin
    case (guard__h14222)
      2'b0:
	  CASE_guard4222_0b0_sfd___33686_BITS_30_TO_8_0b_ETC__q27 =
	      sfd___3__h13686[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard4222_0b0_sfd___33686_BITS_30_TO_8_0b_ETC__q27 =
	      _theResult___sfd__h14662;
    endcase
  end
  always@(requestR or
	  sfd___3__h13686 or
	  guard__h14222 or
	  _theResult___sfd__h14662 or
	  CASE_guard4222_0b0_sfd___33686_BITS_30_TO_8_0b_ETC__q27)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d745 =
	      sfd___3__h13686[30:8];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d745 =
	      (guard__h14222 == 2'b0) ?
		sfd___3__h13686[30:8] :
		_theResult___sfd__h14662;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d745 =
	      CASE_guard4222_0b0_sfd___33686_BITS_30_TO_8_0b_ETC__q27;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d745 =
		   23'd0;
    endcase
  end
  always@(guard__h14222 or
	  sfd___3__h13686 or out_sfd__h14665 or _theResult___sfd__h14662)
  begin
    case (guard__h14222)
      2'b0, 2'b01:
	  CASE_guard4222_0b0_sfd___33686_BITS_30_TO_8_0b_ETC__q28 =
	      sfd___3__h13686[30:8];
      2'b10:
	  CASE_guard4222_0b0_sfd___33686_BITS_30_TO_8_0b_ETC__q28 =
	      out_sfd__h14665;
      2'b11:
	  CASE_guard4222_0b0_sfd___33686_BITS_30_TO_8_0b_ETC__q28 =
	      _theResult___sfd__h14662;
    endcase
  end
  always@(guard__h13696 or sfd___3__h13686 or _theResult___sfd__h14110)
  begin
    case (guard__h13696)
      2'b0:
	  CASE_guard3696_0b0_sfd___33686_BITS_31_TO_9_0b_ETC__q29 =
	      sfd___3__h13686[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard3696_0b0_sfd___33686_BITS_31_TO_9_0b_ETC__q29 =
	      _theResult___sfd__h14110;
    endcase
  end
  always@(requestR or
	  sfd___3__h13686 or
	  guard__h13696 or
	  _theResult___sfd__h14110 or
	  CASE_guard3696_0b0_sfd___33686_BITS_31_TO_9_0b_ETC__q29)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d730 =
	      sfd___3__h13686[31:9];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d730 =
	      (guard__h13696 == 2'b0) ?
		sfd___3__h13686[31:9] :
		_theResult___sfd__h14110;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d730 =
	      CASE_guard3696_0b0_sfd___33686_BITS_31_TO_9_0b_ETC__q29;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d730 =
		   23'd0;
    endcase
  end
  always@(guard__h13696 or
	  sfd___3__h13686 or out_sfd__h14113 or _theResult___sfd__h14110)
  begin
    case (guard__h13696)
      2'b0, 2'b01:
	  CASE_guard3696_0b0_sfd___33686_BITS_31_TO_9_0b_ETC__q30 =
	      sfd___3__h13686[31:9];
      2'b10:
	  CASE_guard3696_0b0_sfd___33686_BITS_31_TO_9_0b_ETC__q30 =
	      out_sfd__h14113;
      2'b11:
	  CASE_guard3696_0b0_sfd___33686_BITS_31_TO_9_0b_ETC__q30 =
	      _theResult___sfd__h14110;
    endcase
  end
  always@(guard__h36155 or requestR)
  begin
    case (guard__h36155)
      2'b0, 2'b01, 2'b10:
	  CASE_guard6155_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      requestR[159];
      2'd3:
	  CASE_guard6155_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      guard__h36155 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h36155)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
	      (guard__h36155 == 2'b0) ?
		requestR[159] :
		(guard__h36155 == 2'b01 || guard__h36155 == 2'b10 ||
		 guard__h36155 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h36885 or requestR)
  begin
    case (guard__h36885)
      2'b0, 2'b01, 2'b10:
	  CASE_guard6885_0b0_requestR_BIT_159_0b1_reques_ETC__q37 =
	      requestR[159];
      2'd3:
	  CASE_guard6885_0b0_requestR_BIT_159_0b1_reques_ETC__q37 =
	      guard__h36885 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h36885)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
	      (guard__h36885 == 2'b0) ?
		requestR[159] :
		(guard__h36885 == 2'b01 || guard__h36885 == 2'b10 ||
		 guard__h36885 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h36885 or x__h36900 or _theResult___exp__h37527)
  begin
    case (guard__h36885)
      2'b0:
	  CASE_guard6885_0b0_x6900_BITS_10_TO_0_0b1_theR_ETC__q39 =
	      x__h36900[10:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6885_0b0_x6900_BITS_10_TO_0_0b1_theR_ETC__q39 =
	      _theResult___exp__h37527;
    endcase
  end
  always@(requestR or
	  x__h36900 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1345 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1343 or
	  CASE_guard6885_0b0_x6900_BITS_10_TO_0_0b1_theR_ETC__q39)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1349 =
	      x__h36900[10:0];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1349 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1345;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1349 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1343;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1349 =
	      CASE_guard6885_0b0_x6900_BITS_10_TO_0_0b1_theR_ETC__q39;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1349 =
		   11'd0;
    endcase
  end
  always@(guard__h36885 or
	  x__h36900 or out_exp__h37530 or _theResult___exp__h37527)
  begin
    case (guard__h36885)
      2'b0, 2'b01:
	  CASE_guard6885_0b0_x6900_BITS_10_TO_0_0b1_x690_ETC__q40 =
	      x__h36900[10:0];
      2'b10:
	  CASE_guard6885_0b0_x6900_BITS_10_TO_0_0b1_x690_ETC__q40 =
	      out_exp__h37530;
      2'b11:
	  CASE_guard6885_0b0_x6900_BITS_10_TO_0_0b1_x690_ETC__q40 =
	      _theResult___exp__h37527;
    endcase
  end
  always@(guard__h36885 or sfd___3__h36145 or _theResult___sfd__h37528)
  begin
    case (guard__h36885)
      2'b0:
	  CASE_guard6885_0b0_sfd___36145_BITS_53_TO_2_0b_ETC__q41 =
	      sfd___3__h36145[53:2];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6885_0b0_sfd___36145_BITS_53_TO_2_0b_ETC__q41 =
	      _theResult___sfd__h37528;
    endcase
  end
  always@(requestR or
	  sfd___3__h36145 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1386 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1384 or
	  CASE_guard6885_0b0_sfd___36145_BITS_53_TO_2_0b_ETC__q41)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1390 =
	      sfd___3__h36145[53:2];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1390 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1386;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1390 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1384;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1390 =
	      CASE_guard6885_0b0_sfd___36145_BITS_53_TO_2_0b_ETC__q41;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1390 =
		   52'd0;
    endcase
  end
  always@(guard__h36885 or
	  sfd___3__h36145 or out_sfd__h37531 or _theResult___sfd__h37528)
  begin
    case (guard__h36885)
      2'b0, 2'b01:
	  CASE_guard6885_0b0_sfd___36145_BITS_53_TO_2_0b_ETC__q42 =
	      sfd___3__h36145[53:2];
      2'b10:
	  CASE_guard6885_0b0_sfd___36145_BITS_53_TO_2_0b_ETC__q42 =
	      out_sfd__h37531;
      2'b11:
	  CASE_guard6885_0b0_sfd___36145_BITS_53_TO_2_0b_ETC__q42 =
	      _theResult___sfd__h37528;
    endcase
  end
  always@(guard__h36155 or _theResult___exp__h36771)
  begin
    case (guard__h36155)
      2'b0: CASE_guard6155_0b0_0_0b1_theResult___exp6771_0_ETC__q43 = 11'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard6155_0b0_0_0b1_theResult___exp6771_0_ETC__q43 =
	      _theResult___exp__h36771;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1317 or
	  guard__h36155 or
	  _theResult___exp__h36771 or
	  CASE_guard6155_0b0_0_0b1_theResult___exp6771_0_ETC__q43)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1320 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1317;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1320 =
	      (guard__h36155 == 2'b0 || requestR[159]) ?
		11'd0 :
		_theResult___exp__h36771;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1320 =
	      CASE_guard6155_0b0_0_0b1_theResult___exp6771_0_ETC__q43;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1320 =
		   11'd0;
    endcase
  end
  always@(guard__h36155 or out_exp__h36774 or _theResult___exp__h36771)
  begin
    case (guard__h36155)
      2'b0, 2'b01:
	  CASE_guard6155_0b0_0_0b1_0_0b10_out_exp6774_0b_ETC__q44 = 11'd0;
      2'b10:
	  CASE_guard6155_0b0_0_0b1_0_0b10_out_exp6774_0b_ETC__q44 =
	      out_exp__h36774;
      2'b11:
	  CASE_guard6155_0b0_0_0b1_0_0b10_out_exp6774_0b_ETC__q44 =
	      _theResult___exp__h36771;
    endcase
  end
  always@(guard__h36155 or sfd___3__h36145 or _theResult___sfd__h36772)
  begin
    case (guard__h36155)
      2'b0:
	  CASE_guard6155_0b0_sfd___36145_BITS_54_TO_3_0b_ETC__q45 =
	      sfd___3__h36145[54:3];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6155_0b0_sfd___36145_BITS_54_TO_3_0b_ETC__q45 =
	      _theResult___sfd__h36772;
    endcase
  end
  always@(requestR or
	  sfd___3__h36145 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1368 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1366 or
	  CASE_guard6155_0b0_sfd___36145_BITS_54_TO_3_0b_ETC__q45)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 =
	      sfd___3__h36145[54:3];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1368;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1366;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 =
	      CASE_guard6155_0b0_sfd___36145_BITS_54_TO_3_0b_ETC__q45;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 =
		   52'd0;
    endcase
  end
  always@(guard__h36155 or
	  sfd___3__h36145 or out_sfd__h36775 or _theResult___sfd__h36772)
  begin
    case (guard__h36155)
      2'b0, 2'b01:
	  CASE_guard6155_0b0_sfd___36145_BITS_54_TO_3_0b_ETC__q46 =
	      sfd___3__h36145[54:3];
      2'b10:
	  CASE_guard6155_0b0_sfd___36145_BITS_54_TO_3_0b_ETC__q46 =
	      out_sfd__h36775;
      2'b11:
	  CASE_guard6155_0b0_sfd___36145_BITS_54_TO_3_0b_ETC__q46 =
	      _theResult___sfd__h36772;
    endcase
  end
  always@(guard__h45851 or out_exp__h46470 or _theResult___exp__h46467)
  begin
    case (guard__h45851)
      2'b0, 2'b01:
	  CASE_guard5851_0b0_0_0b1_0_0b10_out_exp6470_0b_ETC__q49 = 11'd0;
      2'b10:
	  CASE_guard5851_0b0_0_0b1_0_0b10_out_exp6470_0b_ETC__q49 =
	      out_exp__h46470;
      2'b11:
	  CASE_guard5851_0b0_0_0b1_0_0b10_out_exp6470_0b_ETC__q49 =
	      _theResult___exp__h46467;
    endcase
  end
  always@(guard__h45851 or _theResult___exp__h46467)
  begin
    case (guard__h45851)
      2'b0: CASE_guard5851_0b0_0_0b1_theResult___exp6467_0_ETC__q50 = 11'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard5851_0b0_0_0b1_theResult___exp6467_0_ETC__q50 =
	      _theResult___exp__h46467;
    endcase
  end
  always@(requestR or
	  guard__h45851 or
	  _theResult___exp__h46467 or
	  CASE_guard5851_0b0_0_0b1_theResult___exp6467_0_ETC__q50)
  begin
    case (requestR[194:192])
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard5851_ETC__q51 =
	      (guard__h45851 == 2'b0) ? 11'd0 : _theResult___exp__h46467;
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard5851_ETC__q51 =
	      CASE_guard5851_0b0_0_0b1_theResult___exp6467_0_ETC__q50;
      default: CASE_requestR_BITS_194_TO_192_0x3_IF_guard5851_ETC__q51 =
		   11'd0;
    endcase
  end
  always@(guard__h46580 or x__h46595 or _theResult___exp__h47222)
  begin
    case (guard__h46580)
      2'b0:
	  CASE_guard6580_0b0_x6595_BITS_10_TO_0_0b1_theR_ETC__q52 =
	      x__h46595[10:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6580_0b0_x6595_BITS_10_TO_0_0b1_theR_ETC__q52 =
	      _theResult___exp__h47222;
    endcase
  end
  always@(requestR or
	  x__h46595 or
	  guard__h46580 or
	  _theResult___exp__h47222 or
	  CASE_guard6580_0b0_x6595_BITS_10_TO_0_0b1_theR_ETC__q52)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1536 =
	      x__h46595[10:0];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1536 =
	      (guard__h46580 == 2'b0) ?
		x__h46595[10:0] :
		_theResult___exp__h47222;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1536 =
	      CASE_guard6580_0b0_x6595_BITS_10_TO_0_0b1_theR_ETC__q52;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1536 =
		   11'd0;
    endcase
  end
  always@(guard__h46580 or
	  x__h46595 or out_exp__h47225 or _theResult___exp__h47222)
  begin
    case (guard__h46580)
      2'b0, 2'b01:
	  CASE_guard6580_0b0_x6595_BITS_10_TO_0_0b1_x659_ETC__q53 =
	      x__h46595[10:0];
      2'b10:
	  CASE_guard6580_0b0_x6595_BITS_10_TO_0_0b1_x659_ETC__q53 =
	      out_exp__h47225;
      2'b11:
	  CASE_guard6580_0b0_x6595_BITS_10_TO_0_0b1_x659_ETC__q53 =
	      _theResult___exp__h47222;
    endcase
  end
  always@(guard__h46580 or sfd___3__h45841 or _theResult___sfd__h47223)
  begin
    case (guard__h46580)
      2'b0:
	  CASE_guard6580_0b0_sfd___35841_BITS_53_TO_2_0b_ETC__q54 =
	      sfd___3__h45841[53:2];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6580_0b0_sfd___35841_BITS_53_TO_2_0b_ETC__q54 =
	      _theResult___sfd__h47223;
    endcase
  end
  always@(requestR or
	  sfd___3__h45841 or
	  guard__h46580 or
	  _theResult___sfd__h47223 or
	  CASE_guard6580_0b0_sfd___35841_BITS_53_TO_2_0b_ETC__q54)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1573 =
	      sfd___3__h45841[53:2];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1573 =
	      (guard__h46580 == 2'b0) ?
		sfd___3__h45841[53:2] :
		_theResult___sfd__h47223;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1573 =
	      CASE_guard6580_0b0_sfd___35841_BITS_53_TO_2_0b_ETC__q54;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1573 =
		   52'd0;
    endcase
  end
  always@(guard__h46580 or
	  sfd___3__h45841 or out_sfd__h47226 or _theResult___sfd__h47223)
  begin
    case (guard__h46580)
      2'b0, 2'b01:
	  CASE_guard6580_0b0_sfd___35841_BITS_53_TO_2_0b_ETC__q55 =
	      sfd___3__h45841[53:2];
      2'b10:
	  CASE_guard6580_0b0_sfd___35841_BITS_53_TO_2_0b_ETC__q55 =
	      out_sfd__h47226;
      2'b11:
	  CASE_guard6580_0b0_sfd___35841_BITS_53_TO_2_0b_ETC__q55 =
	      _theResult___sfd__h47223;
    endcase
  end
  always@(guard__h45851 or sfd___3__h45841 or _theResult___sfd__h46468)
  begin
    case (guard__h45851)
      2'b0:
	  CASE_guard5851_0b0_sfd___35841_BITS_54_TO_3_0b_ETC__q56 =
	      sfd___3__h45841[54:3];
      2'b01, 2'b10, 2'b11:
	  CASE_guard5851_0b0_sfd___35841_BITS_54_TO_3_0b_ETC__q56 =
	      _theResult___sfd__h46468;
    endcase
  end
  always@(requestR or
	  sfd___3__h45841 or
	  guard__h45851 or
	  _theResult___sfd__h46468 or
	  CASE_guard5851_0b0_sfd___35841_BITS_54_TO_3_0b_ETC__q56)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1558 =
	      sfd___3__h45841[54:3];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1558 =
	      (guard__h45851 == 2'b0) ?
		sfd___3__h45841[54:3] :
		_theResult___sfd__h46468;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1558 =
	      CASE_guard5851_0b0_sfd___35841_BITS_54_TO_3_0b_ETC__q56;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1558 =
		   52'd0;
    endcase
  end
  always@(guard__h45851 or
	  sfd___3__h45841 or out_sfd__h46471 or _theResult___sfd__h46468)
  begin
    case (guard__h45851)
      2'b0, 2'b01:
	  CASE_guard5851_0b0_sfd___35841_BITS_54_TO_3_0b_ETC__q57 =
	      sfd___3__h45841[54:3];
      2'b10:
	  CASE_guard5851_0b0_sfd___35841_BITS_54_TO_3_0b_ETC__q57 =
	      out_sfd__h46471;
      2'b11:
	  CASE_guard5851_0b0_sfd___35841_BITS_54_TO_3_0b_ETC__q57 =
	      _theResult___sfd__h46468;
    endcase
  end
  always@(guard__h61936 or
	  _theResult___fst_exp__h70033 or _theResult___exp__h70559)
  begin
    case (guard__h61936)
      2'b0:
	  CASE_guard1936_0b0_theResult___fst_exp0033_0b1_ETC__q70 =
	      _theResult___fst_exp__h70033;
      2'b01, 2'b10, 2'b11:
	  CASE_guard1936_0b0_theResult___fst_exp0033_0b1_ETC__q70 =
	      _theResult___exp__h70559;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h70033 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2145 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2143 or
	  CASE_guard1936_0b0_theResult___fst_exp0033_0b1_ETC__q70)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2149 =
	      _theResult___fst_exp__h70033;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2149 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2145;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2149 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2143;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2149 =
	      CASE_guard1936_0b0_theResult___fst_exp0033_0b1_ETC__q70;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2149 =
		   8'd0;
    endcase
  end
  always@(guard__h61936 or
	  _theResult___fst_exp__h70033 or
	  out_exp__h70562 or _theResult___exp__h70559)
  begin
    case (guard__h61936)
      2'b0, 2'b01:
	  CASE_guard1936_0b0_theResult___fst_exp0033_0b1_ETC__q71 =
	      _theResult___fst_exp__h70033;
      2'b10:
	  CASE_guard1936_0b0_theResult___fst_exp0033_0b1_ETC__q71 =
	      out_exp__h70562;
      2'b11:
	  CASE_guard1936_0b0_theResult___fst_exp0033_0b1_ETC__q71 =
	      _theResult___exp__h70559;
    endcase
  end
  always@(guard__h70671 or
	  _theResult___fst_exp__h78719 or _theResult___exp__h79171)
  begin
    case (guard__h70671)
      2'b0:
	  CASE_guard0671_0b0_theResult___fst_exp8719_0b1_ETC__q72 =
	      _theResult___fst_exp__h78719;
      2'b01, 2'b10, 2'b11:
	  CASE_guard0671_0b0_theResult___fst_exp8719_0b1_ETC__q72 =
	      _theResult___exp__h79171;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h78719 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2302 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2300 or
	  CASE_guard0671_0b0_theResult___fst_exp8719_0b1_ETC__q72)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2306 =
	      _theResult___fst_exp__h78719;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2306 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2302;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2306 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2300;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2306 =
	      CASE_guard0671_0b0_theResult___fst_exp8719_0b1_ETC__q72;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2306 =
		   8'd0;
    endcase
  end
  always@(guard__h70671 or
	  _theResult___fst_exp__h78719 or
	  out_exp__h79174 or _theResult___exp__h79171)
  begin
    case (guard__h70671)
      2'b0, 2'b01:
	  CASE_guard0671_0b0_theResult___fst_exp8719_0b1_ETC__q73 =
	      _theResult___fst_exp__h78719;
      2'b10:
	  CASE_guard0671_0b0_theResult___fst_exp8719_0b1_ETC__q73 =
	      out_exp__h79174;
      2'b11:
	  CASE_guard0671_0b0_theResult___fst_exp8719_0b1_ETC__q73 =
	      _theResult___exp__h79171;
    endcase
  end
  always@(guard__h79660 or
	  _theResult___fst_exp__h87886 or _theResult___exp__h88412)
  begin
    case (guard__h79660)
      2'b0:
	  CASE_guard9660_0b0_theResult___fst_exp7886_0b1_ETC__q74 =
	      _theResult___fst_exp__h87886;
      2'b01, 2'b10, 2'b11:
	  CASE_guard9660_0b0_theResult___fst_exp7886_0b1_ETC__q74 =
	      _theResult___exp__h88412;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h87886 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2629 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2627 or
	  CASE_guard9660_0b0_theResult___fst_exp7886_0b1_ETC__q74)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2633 =
	      _theResult___fst_exp__h87886;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2633 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2629;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2633 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2627;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2633 =
	      CASE_guard9660_0b0_theResult___fst_exp7886_0b1_ETC__q74;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2633 =
		   8'd0;
    endcase
  end
  always@(guard__h79660 or
	  _theResult___fst_exp__h87886 or
	  out_exp__h88415 or _theResult___exp__h88412)
  begin
    case (guard__h79660)
      2'b0, 2'b01:
	  CASE_guard9660_0b0_theResult___fst_exp7886_0b1_ETC__q75 =
	      _theResult___fst_exp__h87886;
      2'b10:
	  CASE_guard9660_0b0_theResult___fst_exp7886_0b1_ETC__q75 =
	      out_exp__h88415;
      2'b11:
	  CASE_guard9660_0b0_theResult___fst_exp7886_0b1_ETC__q75 =
	      _theResult___exp__h88412;
    endcase
  end
  always@(guard__h88524 or
	  _theResult___fst_exp__h96601 or _theResult___exp__h97078)
  begin
    case (guard__h88524)
      2'b0:
	  CASE_guard8524_0b0_theResult___fst_exp6601_0b1_ETC__q76 =
	      _theResult___fst_exp__h96601;
      2'b01, 2'b10, 2'b11:
	  CASE_guard8524_0b0_theResult___fst_exp6601_0b1_ETC__q76 =
	      _theResult___exp__h97078;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h96601 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2698 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2696 or
	  CASE_guard8524_0b0_theResult___fst_exp6601_0b1_ETC__q76)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2702 =
	      _theResult___fst_exp__h96601;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2702 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2698;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2702 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2696;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2702 =
	      CASE_guard8524_0b0_theResult___fst_exp6601_0b1_ETC__q76;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2702 =
		   8'd0;
    endcase
  end
  always@(guard__h88524 or
	  _theResult___fst_exp__h96601 or
	  out_exp__h97081 or _theResult___exp__h97078)
  begin
    case (guard__h88524)
      2'b0, 2'b01:
	  CASE_guard8524_0b0_theResult___fst_exp6601_0b1_ETC__q77 =
	      _theResult___fst_exp__h96601;
      2'b10:
	  CASE_guard8524_0b0_theResult___fst_exp6601_0b1_ETC__q77 =
	      out_exp__h97081;
      2'b11:
	  CASE_guard8524_0b0_theResult___fst_exp6601_0b1_ETC__q77 =
	      _theResult___exp__h97078;
    endcase
  end
  always@(guard__h61936 or sfdin__h70027 or _theResult___sfd__h70560)
  begin
    case (guard__h61936)
      2'b0:
	  CASE_guard1936_0b0_sfdin0027_BITS_56_TO_34_0b1_ETC__q78 =
	      sfdin__h70027[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard1936_0b0_sfdin0027_BITS_56_TO_34_0b1_ETC__q78 =
	      _theResult___sfd__h70560;
    endcase
  end
  always@(requestR or
	  sfdin__h70027 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2732 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2730 or
	  CASE_guard1936_0b0_sfdin0027_BITS_56_TO_34_0b1_ETC__q78)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2736 =
	      sfdin__h70027[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2736 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2732;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2736 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2730;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2736 =
	      CASE_guard1936_0b0_sfdin0027_BITS_56_TO_34_0b1_ETC__q78;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2736 =
		   23'd0;
    endcase
  end
  always@(guard__h61936 or
	  sfdin__h70027 or out_sfd__h70563 or _theResult___sfd__h70560)
  begin
    case (guard__h61936)
      2'b0, 2'b01:
	  CASE_guard1936_0b0_sfdin0027_BITS_56_TO_34_0b1_ETC__q79 =
	      sfdin__h70027[56:34];
      2'b10:
	  CASE_guard1936_0b0_sfdin0027_BITS_56_TO_34_0b1_ETC__q79 =
	      out_sfd__h70563;
      2'b11:
	  CASE_guard1936_0b0_sfdin0027_BITS_56_TO_34_0b1_ETC__q79 =
	      _theResult___sfd__h70560;
    endcase
  end
  always@(guard__h70671 or
	  _theResult___snd__h78670 or _theResult___sfd__h79172)
  begin
    case (guard__h70671)
      2'b0:
	  CASE_guard0671_0b0_theResult___snd8670_BITS_56_ETC__q80 =
	      _theResult___snd__h78670[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard0671_0b0_theResult___snd8670_BITS_56_ETC__q80 =
	      _theResult___sfd__h79172;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h78670 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2751 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2749 or
	  CASE_guard0671_0b0_theResult___snd8670_BITS_56_ETC__q80)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2755 =
	      _theResult___snd__h78670[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2755 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2751;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2755 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2749;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2755 =
	      CASE_guard0671_0b0_theResult___snd8670_BITS_56_ETC__q80;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2755 =
		   23'd0;
    endcase
  end
  always@(guard__h70671 or
	  _theResult___snd__h78670 or
	  out_sfd__h79175 or _theResult___sfd__h79172)
  begin
    case (guard__h70671)
      2'b0, 2'b01:
	  CASE_guard0671_0b0_theResult___snd8670_BITS_56_ETC__q81 =
	      _theResult___snd__h78670[56:34];
      2'b10:
	  CASE_guard0671_0b0_theResult___snd8670_BITS_56_ETC__q81 =
	      out_sfd__h79175;
      2'b11:
	  CASE_guard0671_0b0_theResult___snd8670_BITS_56_ETC__q81 =
	      _theResult___sfd__h79172;
    endcase
  end
  always@(guard__h79660 or sfdin__h87880 or _theResult___sfd__h88413)
  begin
    case (guard__h79660)
      2'b0:
	  CASE_guard9660_0b0_sfdin7880_BITS_56_TO_34_0b1_ETC__q82 =
	      sfdin__h87880[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard9660_0b0_sfdin7880_BITS_56_TO_34_0b1_ETC__q82 =
	      _theResult___sfd__h88413;
    endcase
  end
  always@(requestR or
	  sfdin__h87880 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2778 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2776 or
	  CASE_guard9660_0b0_sfdin7880_BITS_56_TO_34_0b1_ETC__q82)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2782 =
	      sfdin__h87880[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2782 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2778;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2782 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2776;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2782 =
	      CASE_guard9660_0b0_sfdin7880_BITS_56_TO_34_0b1_ETC__q82;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2782 =
		   23'd0;
    endcase
  end
  always@(guard__h79660 or
	  sfdin__h87880 or out_sfd__h88416 or _theResult___sfd__h88413)
  begin
    case (guard__h79660)
      2'b0, 2'b01:
	  CASE_guard9660_0b0_sfdin7880_BITS_56_TO_34_0b1_ETC__q83 =
	      sfdin__h87880[56:34];
      2'b10:
	  CASE_guard9660_0b0_sfdin7880_BITS_56_TO_34_0b1_ETC__q83 =
	      out_sfd__h88416;
      2'b11:
	  CASE_guard9660_0b0_sfdin7880_BITS_56_TO_34_0b1_ETC__q83 =
	      _theResult___sfd__h88413;
    endcase
  end
  always@(guard__h88524 or
	  _theResult___snd__h96547 or _theResult___sfd__h97079)
  begin
    case (guard__h88524)
      2'b0:
	  CASE_guard8524_0b0_theResult___snd6547_BITS_56_ETC__q84 =
	      _theResult___snd__h96547[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard8524_0b0_theResult___snd6547_BITS_56_ETC__q84 =
	      _theResult___sfd__h97079;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h96547 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2797 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2795 or
	  CASE_guard8524_0b0_theResult___snd6547_BITS_56_ETC__q84)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2801 =
	      _theResult___snd__h96547[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2801 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2797;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2801 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_606_EQ_0_6_ETC___d2795;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2801 =
	      CASE_guard8524_0b0_theResult___snd6547_BITS_56_ETC__q84;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2801 =
		   23'd0;
    endcase
  end
  always@(guard__h88524 or
	  _theResult___snd__h96547 or
	  out_sfd__h97082 or _theResult___sfd__h97079)
  begin
    case (guard__h88524)
      2'b0, 2'b01:
	  CASE_guard8524_0b0_theResult___snd6547_BITS_56_ETC__q85 =
	      _theResult___snd__h96547[56:34];
      2'b10:
	  CASE_guard8524_0b0_theResult___snd6547_BITS_56_ETC__q85 =
	      out_sfd__h97082;
      2'b11:
	  CASE_guard8524_0b0_theResult___snd6547_BITS_56_ETC__q85 =
	      _theResult___sfd__h97079;
    endcase
  end
  always@(guard__h61936 or requestR)
  begin
    case (guard__h61936)
      2'b0, 2'b01, 2'b10:
	  CASE_guard1936_0b0_requestR_BIT_191_0b1_reques_ETC__q86 =
	      requestR[191];
      2'd3:
	  CASE_guard1936_0b0_requestR_BIT_191_0b1_reques_ETC__q86 =
	      guard__h61936 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h61936)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
	      (guard__h61936 == 2'b0) ?
		requestR[191] :
		(guard__h61936 == 2'b01 || guard__h61936 == 2'b10 ||
		 guard__h61936 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h70671 or requestR)
  begin
    case (guard__h70671)
      2'b0, 2'b01, 2'b10:
	  CASE_guard0671_0b0_requestR_BIT_191_0b1_reques_ETC__q88 =
	      requestR[191];
      2'd3:
	  CASE_guard0671_0b0_requestR_BIT_191_0b1_reques_ETC__q88 =
	      guard__h70671 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h70671)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
	      (guard__h70671 == 2'b0) ?
		requestR[191] :
		(guard__h70671 == 2'b01 || guard__h70671 == 2'b10 ||
		 guard__h70671 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h79660 or requestR)
  begin
    case (guard__h79660)
      2'b0, 2'b01, 2'b10:
	  CASE_guard9660_0b0_requestR_BIT_191_0b1_reques_ETC__q90 =
	      requestR[191];
      2'd3:
	  CASE_guard9660_0b0_requestR_BIT_191_0b1_reques_ETC__q90 =
	      guard__h79660 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h79660)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
	      (guard__h79660 == 2'b0) ?
		requestR[191] :
		(guard__h79660 == 2'b01 || guard__h79660 == 2'b10 ||
		 guard__h79660 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h88524 or requestR)
  begin
    case (guard__h88524)
      2'b0, 2'b01, 2'b10:
	  CASE_guard8524_0b0_requestR_BIT_191_0b1_reques_ETC__q92 =
	      requestR[191];
      2'd3:
	  CASE_guard8524_0b0_requestR_BIT_191_0b1_reques_ETC__q92 =
	      guard__h88524 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h88524)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
	      (guard__h88524 == 2'b0) ?
		requestR[191] :
		(guard__h88524 == 2'b01 || guard__h88524 == 2'b10 ||
		 guard__h88524 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h111687 or
	  _theResult___fst_exp__h119648 or _theResult___exp__h120303)
  begin
    case (guard__h111687)
      2'b0:
	  CASE_guard11687_0b0_theResult___fst_exp19648_0_ETC__q102 =
	      _theResult___fst_exp__h119648;
      2'b01, 2'b10, 2'b11:
	  CASE_guard11687_0b0_theResult___fst_exp19648_0_ETC__q102 =
	      _theResult___exp__h120303;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h119648 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3140 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3138 or
	  CASE_guard11687_0b0_theResult___fst_exp19648_0_ETC__q102)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 =
	      _theResult___fst_exp__h119648;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3140;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3138;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 =
	      CASE_guard11687_0b0_theResult___fst_exp19648_0_ETC__q102;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 =
		   11'd0;
    endcase
  end
  always@(guard__h111687 or
	  _theResult___fst_exp__h119648 or
	  out_exp__h120306 or _theResult___exp__h120303)
  begin
    case (guard__h111687)
      2'b0, 2'b01:
	  CASE_guard11687_0b0_theResult___fst_exp19648_0_ETC__q103 =
	      _theResult___fst_exp__h119648;
      2'b10:
	  CASE_guard11687_0b0_theResult___fst_exp19648_0_ETC__q103 =
	      out_exp__h120306;
      2'b11:
	  CASE_guard11687_0b0_theResult___fst_exp19648_0_ETC__q103 =
	      _theResult___exp__h120303;
    endcase
  end
  always@(guard__h120995 or
	  _theResult___fst_exp__h129221 or _theResult___exp__h129950)
  begin
    case (guard__h120995)
      2'b0:
	  CASE_guard20995_0b0_theResult___fst_exp29221_0_ETC__q104 =
	      _theResult___fst_exp__h129221;
      2'b01, 2'b10, 2'b11:
	  CASE_guard20995_0b0_theResult___fst_exp29221_0_ETC__q104 =
	      _theResult___exp__h129950;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h129221 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3465 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3463 or
	  CASE_guard20995_0b0_theResult___fst_exp29221_0_ETC__q104)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 =
	      _theResult___fst_exp__h129221;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3465;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3463;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 =
	      CASE_guard20995_0b0_theResult___fst_exp29221_0_ETC__q104;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 =
		   11'd0;
    endcase
  end
  always@(guard__h120995 or
	  _theResult___fst_exp__h129221 or
	  out_exp__h129953 or _theResult___exp__h129950)
  begin
    case (guard__h120995)
      2'b0, 2'b01:
	  CASE_guard20995_0b0_theResult___fst_exp29221_0_ETC__q105 =
	      _theResult___fst_exp__h129221;
      2'b10:
	  CASE_guard20995_0b0_theResult___fst_exp29221_0_ETC__q105 =
	      out_exp__h129953;
      2'b11:
	  CASE_guard20995_0b0_theResult___fst_exp29221_0_ETC__q105 =
	      _theResult___exp__h129950;
    endcase
  end
  always@(guard__h130062 or
	  _theResult___fst_exp__h138052 or _theResult___exp__h138732)
  begin
    case (guard__h130062)
      2'b0:
	  CASE_guard30062_0b0_theResult___fst_exp38052_0_ETC__q106 =
	      _theResult___fst_exp__h138052;
      2'b01, 2'b10, 2'b11:
	  CASE_guard30062_0b0_theResult___fst_exp38052_0_ETC__q106 =
	      _theResult___exp__h138732;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h138052 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3534 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3532 or
	  CASE_guard30062_0b0_theResult___fst_exp38052_0_ETC__q106)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 =
	      _theResult___fst_exp__h138052;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3534;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3532;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 =
	      CASE_guard30062_0b0_theResult___fst_exp38052_0_ETC__q106;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 =
		   11'd0;
    endcase
  end
  always@(guard__h130062 or
	  _theResult___fst_exp__h138052 or
	  out_exp__h138735 or _theResult___exp__h138732)
  begin
    case (guard__h130062)
      2'b0, 2'b01:
	  CASE_guard30062_0b0_theResult___fst_exp38052_0_ETC__q107 =
	      _theResult___fst_exp__h138052;
      2'b10:
	  CASE_guard30062_0b0_theResult___fst_exp38052_0_ETC__q107 =
	      out_exp__h138735;
      2'b11:
	  CASE_guard30062_0b0_theResult___fst_exp38052_0_ETC__q107 =
	      _theResult___exp__h138732;
    endcase
  end
  always@(guard__h111687 or requestR)
  begin
    case (guard__h111687)
      2'b0, 2'b01, 2'b10:
	  CASE_guard11687_0b0_requestR_BITS_191_TO_160_E_ETC__q108 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard11687_0b0_requestR_BITS_191_TO_160_E_ETC__q108 =
	      guard__h111687 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h111687)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
	      (guard__h111687 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h111687 == 2'b01 || guard__h111687 == 2'b10 ||
		 guard__h111687 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h120995 or requestR)
  begin
    case (guard__h120995)
      2'b0, 2'b01, 2'b10:
	  CASE_guard20995_0b0_requestR_BITS_191_TO_160_E_ETC__q110 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard20995_0b0_requestR_BITS_191_TO_160_E_ETC__q110 =
	      guard__h120995 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h120995)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
	      (guard__h120995 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h120995 == 2'b01 || guard__h120995 == 2'b10 ||
		 guard__h120995 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h130062 or requestR)
  begin
    case (guard__h130062)
      2'b0, 2'b01, 2'b10:
	  CASE_guard30062_0b0_requestR_BITS_191_TO_160_E_ETC__q112 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard30062_0b0_requestR_BITS_191_TO_160_E_ETC__q112 =
	      guard__h130062 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h130062)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
	      (guard__h130062 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h130062 == 2'b01 || guard__h130062 == 2'b10 ||
		 guard__h130062 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h111687 or
	  _theResult___snd__h119599 or _theResult___sfd__h120304)
  begin
    case (guard__h111687)
      2'b0:
	  CASE_guard11687_0b0_theResult___snd19599_BITS__ETC__q114 =
	      _theResult___snd__h119599[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard11687_0b0_theResult___snd19599_BITS__ETC__q114 =
	      _theResult___sfd__h120304;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h119599 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3567 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3565 or
	  CASE_guard11687_0b0_theResult___snd19599_BITS__ETC__q114)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 =
	      _theResult___snd__h119599[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3567;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3565;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 =
	      CASE_guard11687_0b0_theResult___snd19599_BITS__ETC__q114;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 =
		   52'd0;
    endcase
  end
  always@(guard__h111687 or
	  _theResult___snd__h119599 or
	  out_sfd__h120307 or _theResult___sfd__h120304)
  begin
    case (guard__h111687)
      2'b0, 2'b01:
	  CASE_guard11687_0b0_theResult___snd19599_BITS__ETC__q115 =
	      _theResult___snd__h119599[56:5];
      2'b10:
	  CASE_guard11687_0b0_theResult___snd19599_BITS__ETC__q115 =
	      out_sfd__h120307;
      2'b11:
	  CASE_guard11687_0b0_theResult___snd19599_BITS__ETC__q115 =
	      _theResult___sfd__h120304;
    endcase
  end
  always@(guard__h120995 or sfdin__h129215 or _theResult___sfd__h129951)
  begin
    case (guard__h120995)
      2'b0:
	  CASE_guard20995_0b0_sfdin29215_BITS_56_TO_5_0b_ETC__q116 =
	      sfdin__h129215[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard20995_0b0_sfdin29215_BITS_56_TO_5_0b_ETC__q116 =
	      _theResult___sfd__h129951;
    endcase
  end
  always@(requestR or
	  sfdin__h129215 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3594 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3592 or
	  CASE_guard20995_0b0_sfdin29215_BITS_56_TO_5_0b_ETC__q116)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 =
	      sfdin__h129215[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3594;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3592;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 =
	      CASE_guard20995_0b0_sfdin29215_BITS_56_TO_5_0b_ETC__q116;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 =
		   52'd0;
    endcase
  end
  always@(guard__h120995 or
	  sfdin__h129215 or out_sfd__h129954 or _theResult___sfd__h129951)
  begin
    case (guard__h120995)
      2'b0, 2'b01:
	  CASE_guard20995_0b0_sfdin29215_BITS_56_TO_5_0b_ETC__q117 =
	      sfdin__h129215[56:5];
      2'b10:
	  CASE_guard20995_0b0_sfdin29215_BITS_56_TO_5_0b_ETC__q117 =
	      out_sfd__h129954;
      2'b11:
	  CASE_guard20995_0b0_sfdin29215_BITS_56_TO_5_0b_ETC__q117 =
	      _theResult___sfd__h129951;
    endcase
  end
  always@(guard__h130062 or
	  _theResult___snd__h137998 or _theResult___sfd__h138733)
  begin
    case (guard__h130062)
      2'b0:
	  CASE_guard30062_0b0_theResult___snd37998_BITS__ETC__q118 =
	      _theResult___snd__h137998[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard30062_0b0_theResult___snd37998_BITS__ETC__q118 =
	      _theResult___sfd__h138733;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h137998 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3613 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3611 or
	  CASE_guard30062_0b0_theResult___snd37998_BITS__ETC__q118)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 =
	      _theResult___snd__h137998[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3613;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3611;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 =
	      CASE_guard30062_0b0_theResult___snd37998_BITS__ETC__q118;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 =
		   52'd0;
    endcase
  end
  always@(guard__h130062 or
	  _theResult___snd__h137998 or
	  out_sfd__h138736 or _theResult___sfd__h138733)
  begin
    case (guard__h130062)
      2'b0, 2'b01:
	  CASE_guard30062_0b0_theResult___snd37998_BITS__ETC__q119 =
	      _theResult___snd__h137998[56:5];
      2'b10:
	  CASE_guard30062_0b0_theResult___snd37998_BITS__ETC__q119 =
	      out_sfd__h138736;
      2'b11:
	  CASE_guard30062_0b0_theResult___snd37998_BITS__ETC__q119 =
	      _theResult___sfd__h138733;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        stateR <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (stateR$EN) stateR <= `BSV_ASSIGNMENT_DELAY stateR$D_IN;
      end
    if (requestR$EN) requestR <= `BSV_ASSIGNMENT_DELAY requestR$D_IN;
    if (resultR$EN) resultR <= `BSV_ASSIGNMENT_DELAY resultR$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    requestR = 215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    resultR = 70'h2AAAAAAAAAAAAAAAAA;
    stateR = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkFBox_Core

