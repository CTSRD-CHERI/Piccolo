//
// Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
//
// On Tue Jan  8 14:31:50 EST 2019
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// valid                          O     1
// word_fst                       O    64
// word_snd                       O     5
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_opcode                     I     7 reg
// req_f7                         I     7 reg
// req_rm                         I     3 reg
// req_rs2                        I     5 reg
// req_v1                         I    64 reg
// req_v2                         I    64 reg
// req_v3                         I    64 reg
// EN_set_verbosity               I     1
// EN_req                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkRISCV_FBox(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    req_opcode,
		    req_f7,
		    req_rm,
		    req_rs2,
		    req_v1,
		    req_v2,
		    req_v3,
		    EN_req,

		    valid,

		    word_fst,

		    word_snd);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method req
  input  [6 : 0] req_opcode;
  input  [6 : 0] req_f7;
  input  [2 : 0] req_rm;
  input  [4 : 0] req_rs2;
  input  [63 : 0] req_v1;
  input  [63 : 0] req_v2;
  input  [63 : 0] req_v3;
  input  EN_req;

  // value method valid
  output valid;

  // value method word_fst
  output [63 : 0] word_fst;

  // value method word_snd
  output [4 : 0] word_snd;

  // signals for module outputs
  wire [63 : 0] word_fst;
  wire [4 : 0] word_snd;
  wire RDY_set_verbosity, valid;

  // inlined wires
  reg [68 : 0] dw_result$wget;
  wire dw_valid$wget, dw_valid$whas;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register requestR
  reg [214 : 0] requestR;
  wire [214 : 0] requestR$D_IN;
  wire requestR$EN;

  // register resultR
  reg [69 : 0] resultR;
  reg [69 : 0] resultR$D_IN;
  wire resultR$EN;

  // register stateR
  reg [1 : 0] stateR;
  reg [1 : 0] stateR$D_IN;
  wire stateR$EN;

  // ports of submodule fpu
  reg [201 : 0] fpu$request_put;
  wire [69 : 0] fpu$response_get;
  wire fpu$EN_request_put,
       fpu$EN_response_get,
       fpu$RDY_request_put,
       fpu$RDY_response_get;

  // ports of submodule frmFpuF
  wire frmFpuF$CLR, frmFpuF$DEQ, frmFpuF$D_IN, frmFpuF$ENQ;

  // rule scheduling signals
  wire CAN_FIRE_RL_doFADD_D,
       CAN_FIRE_RL_doFADD_S,
       CAN_FIRE_RL_doFCLASS_D,
       CAN_FIRE_RL_doFCLASS_S,
       CAN_FIRE_RL_doFCVT_D_S,
       CAN_FIRE_RL_doFCVT_D_W,
       CAN_FIRE_RL_doFCVT_D_WU,
       CAN_FIRE_RL_doFCVT_S_D,
       CAN_FIRE_RL_doFCVT_S_W,
       CAN_FIRE_RL_doFCVT_S_WU,
       CAN_FIRE_RL_doFCVT_WU_D,
       CAN_FIRE_RL_doFCVT_WU_S,
       CAN_FIRE_RL_doFCVT_W_D,
       CAN_FIRE_RL_doFCVT_W_S,
       CAN_FIRE_RL_doFEQ_D,
       CAN_FIRE_RL_doFEQ_S,
       CAN_FIRE_RL_doFLE_D,
       CAN_FIRE_RL_doFLE_S,
       CAN_FIRE_RL_doFLT_D,
       CAN_FIRE_RL_doFLT_S,
       CAN_FIRE_RL_doFMADD_D,
       CAN_FIRE_RL_doFMADD_S,
       CAN_FIRE_RL_doFMAX_D,
       CAN_FIRE_RL_doFMAX_S,
       CAN_FIRE_RL_doFMIN_D,
       CAN_FIRE_RL_doFMIN_S,
       CAN_FIRE_RL_doFMSUB_D,
       CAN_FIRE_RL_doFMSUB_S,
       CAN_FIRE_RL_doFMUL_D,
       CAN_FIRE_RL_doFMUL_S,
       CAN_FIRE_RL_doFMV_D_X,
       CAN_FIRE_RL_doFMV_W_X,
       CAN_FIRE_RL_doFMV_X_D,
       CAN_FIRE_RL_doFMV_X_W,
       CAN_FIRE_RL_doFNMADD_D,
       CAN_FIRE_RL_doFNMADD_S,
       CAN_FIRE_RL_doFNMSUB_D,
       CAN_FIRE_RL_doFNMSUB_S,
       CAN_FIRE_RL_doFSGNJN_D,
       CAN_FIRE_RL_doFSGNJN_S,
       CAN_FIRE_RL_doFSGNJX_D,
       CAN_FIRE_RL_doFSGNJX_S,
       CAN_FIRE_RL_doFSGNJ_D,
       CAN_FIRE_RL_doFSGNJ_S,
       CAN_FIRE_RL_doFSUB_D,
       CAN_FIRE_RL_doFSUB_S,
       CAN_FIRE_RL_rl_drive_fpu_result,
       CAN_FIRE_RL_rl_get_fpu_result,
       CAN_FIRE_req,
       CAN_FIRE_set_verbosity,
       WILL_FIRE_RL_doFADD_D,
       WILL_FIRE_RL_doFADD_S,
       WILL_FIRE_RL_doFCLASS_D,
       WILL_FIRE_RL_doFCLASS_S,
       WILL_FIRE_RL_doFCVT_D_S,
       WILL_FIRE_RL_doFCVT_D_W,
       WILL_FIRE_RL_doFCVT_D_WU,
       WILL_FIRE_RL_doFCVT_S_D,
       WILL_FIRE_RL_doFCVT_S_W,
       WILL_FIRE_RL_doFCVT_S_WU,
       WILL_FIRE_RL_doFCVT_WU_D,
       WILL_FIRE_RL_doFCVT_WU_S,
       WILL_FIRE_RL_doFCVT_W_D,
       WILL_FIRE_RL_doFCVT_W_S,
       WILL_FIRE_RL_doFEQ_D,
       WILL_FIRE_RL_doFEQ_S,
       WILL_FIRE_RL_doFLE_D,
       WILL_FIRE_RL_doFLE_S,
       WILL_FIRE_RL_doFLT_D,
       WILL_FIRE_RL_doFLT_S,
       WILL_FIRE_RL_doFMADD_D,
       WILL_FIRE_RL_doFMADD_S,
       WILL_FIRE_RL_doFMAX_D,
       WILL_FIRE_RL_doFMAX_S,
       WILL_FIRE_RL_doFMIN_D,
       WILL_FIRE_RL_doFMIN_S,
       WILL_FIRE_RL_doFMSUB_D,
       WILL_FIRE_RL_doFMSUB_S,
       WILL_FIRE_RL_doFMUL_D,
       WILL_FIRE_RL_doFMUL_S,
       WILL_FIRE_RL_doFMV_D_X,
       WILL_FIRE_RL_doFMV_W_X,
       WILL_FIRE_RL_doFMV_X_D,
       WILL_FIRE_RL_doFMV_X_W,
       WILL_FIRE_RL_doFNMADD_D,
       WILL_FIRE_RL_doFNMADD_S,
       WILL_FIRE_RL_doFNMSUB_D,
       WILL_FIRE_RL_doFNMSUB_S,
       WILL_FIRE_RL_doFSGNJN_D,
       WILL_FIRE_RL_doFSGNJN_S,
       WILL_FIRE_RL_doFSGNJX_D,
       WILL_FIRE_RL_doFSGNJX_S,
       WILL_FIRE_RL_doFSGNJ_D,
       WILL_FIRE_RL_doFSGNJ_S,
       WILL_FIRE_RL_doFSUB_D,
       WILL_FIRE_RL_doFSUB_S,
       WILL_FIRE_RL_rl_drive_fpu_result,
       WILL_FIRE_RL_rl_get_fpu_result,
       WILL_FIRE_req,
       WILL_FIRE_set_verbosity;

  // inputs to muxes for submodule ports
  wire [201 : 0] MUX_fpu$request_put_1__VAL_1,
		 MUX_fpu$request_put_1__VAL_10,
		 MUX_fpu$request_put_1__VAL_11,
		 MUX_fpu$request_put_1__VAL_12,
		 MUX_fpu$request_put_1__VAL_13,
		 MUX_fpu$request_put_1__VAL_14,
		 MUX_fpu$request_put_1__VAL_2,
		 MUX_fpu$request_put_1__VAL_3,
		 MUX_fpu$request_put_1__VAL_4,
		 MUX_fpu$request_put_1__VAL_5,
		 MUX_fpu$request_put_1__VAL_6,
		 MUX_fpu$request_put_1__VAL_7,
		 MUX_fpu$request_put_1__VAL_8,
		 MUX_fpu$request_put_1__VAL_9;
  wire [69 : 0] MUX_resultR$write_1__VAL_10,
		MUX_resultR$write_1__VAL_11,
		MUX_resultR$write_1__VAL_12,
		MUX_resultR$write_1__VAL_13,
		MUX_resultR$write_1__VAL_14,
		MUX_resultR$write_1__VAL_15,
		MUX_resultR$write_1__VAL_16,
		MUX_resultR$write_1__VAL_17,
		MUX_resultR$write_1__VAL_18,
		MUX_resultR$write_1__VAL_19,
		MUX_resultR$write_1__VAL_2,
		MUX_resultR$write_1__VAL_20,
		MUX_resultR$write_1__VAL_21,
		MUX_resultR$write_1__VAL_22,
		MUX_resultR$write_1__VAL_23,
		MUX_resultR$write_1__VAL_24,
		MUX_resultR$write_1__VAL_25,
		MUX_resultR$write_1__VAL_26,
		MUX_resultR$write_1__VAL_27,
		MUX_resultR$write_1__VAL_28,
		MUX_resultR$write_1__VAL_29,
		MUX_resultR$write_1__VAL_3,
		MUX_resultR$write_1__VAL_30,
		MUX_resultR$write_1__VAL_31,
		MUX_resultR$write_1__VAL_32,
		MUX_resultR$write_1__VAL_33,
		MUX_resultR$write_1__VAL_34,
		MUX_resultR$write_1__VAL_4,
		MUX_resultR$write_1__VAL_6,
		MUX_resultR$write_1__VAL_7,
		MUX_resultR$write_1__VAL_8,
		MUX_resultR$write_1__VAL_9;
  wire [68 : 0] MUX_dw_result$wset_1__VAL_1,
		MUX_dw_result$wset_1__VAL_10,
		MUX_dw_result$wset_1__VAL_11,
		MUX_dw_result$wset_1__VAL_12,
		MUX_dw_result$wset_1__VAL_13,
		MUX_dw_result$wset_1__VAL_14,
		MUX_dw_result$wset_1__VAL_15,
		MUX_dw_result$wset_1__VAL_16,
		MUX_dw_result$wset_1__VAL_17,
		MUX_dw_result$wset_1__VAL_18,
		MUX_dw_result$wset_1__VAL_19,
		MUX_dw_result$wset_1__VAL_2,
		MUX_dw_result$wset_1__VAL_20,
		MUX_dw_result$wset_1__VAL_21,
		MUX_dw_result$wset_1__VAL_22,
		MUX_dw_result$wset_1__VAL_23,
		MUX_dw_result$wset_1__VAL_24,
		MUX_dw_result$wset_1__VAL_25,
		MUX_dw_result$wset_1__VAL_26,
		MUX_dw_result$wset_1__VAL_27,
		MUX_dw_result$wset_1__VAL_28,
		MUX_dw_result$wset_1__VAL_29,
		MUX_dw_result$wset_1__VAL_3,
		MUX_dw_result$wset_1__VAL_30,
		MUX_dw_result$wset_1__VAL_31,
		MUX_dw_result$wset_1__VAL_32,
		MUX_dw_result$wset_1__VAL_4,
		MUX_dw_result$wset_1__VAL_5,
		MUX_dw_result$wset_1__VAL_6,
		MUX_dw_result$wset_1__VAL_7,
		MUX_dw_result$wset_1__VAL_8,
		MUX_dw_result$wset_1__VAL_9;
  wire MUX_dw_result$wset_1__SEL_1,
       MUX_dw_result$wset_1__SEL_2,
       MUX_dw_result$wset_1__SEL_30;

  // remaining internal signals
  reg [51 : 0] CASE_guard09824_0b0_theResult___snd17736_BITS__ETC__q88,
	       CASE_guard19060_0b0_sfdin27280_BITS_56_TO_5_0b_ETC__q90,
	       CASE_guard28085_0b0_theResult___snd36021_BITS__ETC__q92,
	       CASE_guard4816_0b0_sfd___34806_BITS_54_TO_3_0b_ETC__q41,
	       CASE_guard5236_0b0_sfd___35226_BITS_54_TO_3_0b_ETC__q33,
	       CASE_guard5503_0b0_sfd___34806_BITS_53_TO_2_0b_ETC__q40,
	       CASE_guard5924_0b0_sfd___35226_BITS_53_TO_2_0b_ETC__q31,
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q32,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q34,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin27280_B_ETC__q91,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1438,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1450;
  reg [22 : 0] CASE_guard037_0b0_sfd___3027_BITS_31_TO_9_0b1__ETC__q12,
	       CASE_guard0646_0b0_sfdin8737_BITS_56_TO_34_0b1_ETC__q62,
	       CASE_guard3100_0b0_sfd___33090_BITS_31_TO_9_0b_ETC__q22,
	       CASE_guard3584_0b0_sfd___33090_BITS_30_TO_8_0b_ETC__q20,
	       CASE_guard525_0b0_sfd___3027_BITS_30_TO_8_0b1__ETC__q10,
	       CASE_guard7078_0b0_theResult___snd5101_BITS_56_ETC__q68,
	       CASE_guard8256_0b0_sfdin6476_BITS_56_TO_34_0b1_ETC__q66,
	       CASE_guard9339_0b0_theResult___snd7338_BITS_56_ETC__q64,
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q11,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q13,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin6476_BI_ETC__q67,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin8737_BI_ETC__q63,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d664,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d676;
  reg [10 : 0] CASE_guard09824_0b0_theResult___fst_exp17785_0_ETC__q82,
	       CASE_guard19060_0b0_theResult___fst_exp27286_0_ETC__q84,
	       CASE_guard28085_0b0_theResult___fst_exp36075_0_ETC__q86,
	       CASE_guard4816_0b0_0_0b1_0_0b10_out_exp5432_0b_ETC__q38,
	       CASE_guard5236_0b0_0_0b1_0_0b10_out_exp5852_0b_ETC__q35,
	       CASE_guard5503_0b0_x5518_BITS_10_TO_0_0b1_x551_ETC__q39,
	       CASE_guard5924_0b0_x5939_BITS_10_TO_0_0b1_x593_ETC__q29,
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87,
	       CASE_requestR_BITS_194_TO_192_0x1_x5939_BITS_1_ETC__q30,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1222,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1419;
  reg [7 : 0] CASE_guard037_0b0_0_0b1_0_0b10_out_exp453_0b11_ETC__q16,
	      CASE_guard0646_0b0_theResult___fst_exp8743_0b1_ETC__q54,
	      CASE_guard3100_0b0_0_0b1_0_0b10_out_exp3513_0b_ETC__q21,
	      CASE_guard3584_0b0_x3599_BITS_7_TO_0_0b1_x3599_ETC__q19,
	      CASE_guard525_0b0_x540_BITS_7_TO_0_0b1_x540_BI_ETC__q8,
	      CASE_guard7078_0b0_theResult___fst_exp5155_0b1_ETC__q60,
	      CASE_guard8256_0b0_theResult___fst_exp6482_0b1_ETC__q58,
	      CASE_guard9339_0b0_theResult___fst_exp7387_0b1_ETC__q56,
	      CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61,
	      CASE_requestR_BITS_194_TO_192_0x1_x540_BITS_7__ETC__q9,
	      IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d316,
	      IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d644;
  reg [2 : 0] IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26;
  reg CASE_guard037_0b0_requestR_BIT_159_0b1_request_ETC__q14,
      CASE_guard0646_0b0_requestR_BIT_191_0b1_reques_ETC__q70,
      CASE_guard09824_0b0_requestR_BIT_159_0b1_reque_ETC__q94,
      CASE_guard19060_0b0_requestR_BIT_159_0b1_reque_ETC__q95,
      CASE_guard28085_0b0_requestR_BIT_159_0b1_reque_ETC__q96,
      CASE_guard5236_0b0_requestR_BIT_159_0b1_reques_ETC__q27,
      CASE_guard525_0b0_requestR_BIT_159_0b1_request_ETC__q15,
      CASE_guard5924_0b0_requestR_BIT_159_0b1_reques_ETC__q28,
      CASE_guard7078_0b0_requestR_BIT_191_0b1_reques_ETC__q73,
      CASE_guard8256_0b0_requestR_BIT_191_0b1_reques_ETC__q72,
      CASE_guard9339_0b0_requestR_BIT_191_0b1_reques_ETC__q71,
      IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d1998,
      IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d271;
  wire [85 : 0] IF_requestR_BIT_191_111_THEN_NEG_0b0_CONCAT_NO_ETC___d1502,
		b__h46801,
		x__h47474,
		x__h48495;
  wire [68 : 0] ab__h153941;
  wire [63 : 0] IF_requestR_BITS_126_TO_116_470_EQ_2047_471_AN_ETC___d3518,
		IF_requestR_BITS_158_TO_151_43_EQ_0_51_AND_req_ETC___d1050,
		IF_requestR_BITS_190_TO_180_483_EQ_0_491_AND_r_ETC___d3530,
		IF_requestR_BITS_190_TO_180_483_EQ_0_491_AND_r_ETC___d3603,
		IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_NOT_ETC___d964,
		IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_NOT_ETC___d980,
		res__h141429,
		res__h145569,
		res__h147865,
		res__h150558,
		res__h152433,
		res__h152899,
		res__h153325,
		res__h153336,
		res__h153343,
		res__h153347,
		res__h153516,
		res__h17384,
		res__h17620,
		res__h22953,
		res__h24428,
		res__h25491,
		res__h25724,
		res__h25947,
		res__h25958,
		res__h25965,
		res__h25969,
		x__h138012,
		x__h142152,
		x__h14475,
		x__h146188,
		x__h148881,
		x__h150756,
		x__h152881,
		x__h153484,
		x__h16013,
		x__h16709,
		x__h1674,
		x__h1820,
		x__h19331,
		x__h1954,
		x__h2102,
		x__h21965,
		x__h22088,
		x__h23563,
		x__h24626,
		x__h25706,
		x__h26825,
		x__h26950,
		x__h27077,
		x__h27210,
		x__h37042,
		x__h46593,
		x__h48114,
		x__h48805,
		x__h8449,
		x__h96991;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q44,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BIT_ETC__q77,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q49,
		IF_0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ__ETC__q74,
		IF_0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ__ETC__q80,
		IF_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_ETC__q46,
		IF_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_ETC__q52,
		IF_requestR_BIT_159_2_THEN_NEG_0b0_CONCAT_NOT__ETC___d762,
		_0b0_CONCAT_NOT_requestR_BITS_158_TO_151_43_EQ__ETC___d2886,
		_0b0_CONCAT_NOT_requestR_BITS_190_TO_180_483_EQ_ETC___d2139,
		_theResult____h119050,
		_theResult____h60636,
		_theResult____h78246,
		_theResult___snd__h117736,
		_theResult___snd__h117738,
		_theResult___snd__h117745,
		_theResult___snd__h117751,
		_theResult___snd__h117774,
		_theResult___snd__h127297,
		_theResult___snd__h127308,
		_theResult___snd__h127310,
		_theResult___snd__h127320,
		_theResult___snd__h127326,
		_theResult___snd__h127349,
		_theResult___snd__h136021,
		_theResult___snd__h136035,
		_theResult___snd__h136041,
		_theResult___snd__h136059,
		_theResult___snd__h68754,
		_theResult___snd__h68765,
		_theResult___snd__h68767,
		_theResult___snd__h68777,
		_theResult___snd__h68783,
		_theResult___snd__h68806,
		_theResult___snd__h77338,
		_theResult___snd__h77340,
		_theResult___snd__h77347,
		_theResult___snd__h77353,
		_theResult___snd__h77376,
		_theResult___snd__h86493,
		_theResult___snd__h86504,
		_theResult___snd__h86506,
		_theResult___snd__h86516,
		_theResult___snd__h86522,
		_theResult___snd__h86545,
		_theResult___snd__h95101,
		_theResult___snd__h95115,
		_theResult___snd__h95121,
		_theResult___snd__h95139,
		b__h14683,
		result__h119663,
		result__h78859,
		sfd__h53036,
		sfdin__h127280,
		sfdin__h68737,
		sfdin__h86476,
		x__h119758,
		x__h15356,
		x__h16394,
		x__h78954;
  wire [54 : 0] sfd___3__h35226, sfd___3__h44806, sfd__h27225, sfd__h37054;
  wire [53 : 0] sfd__h117803,
		sfd__h127378,
		sfd__h136094,
		sfd__h35253,
		sfd__h35954,
		sfd__h44833,
		sfd__h45533,
		value__h46803;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3348,
		IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3350,
		IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3324,
		IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3326,
		IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3364,
		IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3366,
		IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1263,
		IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1265,
		IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1278,
		IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1280,
		IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d1287,
		IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d1454,
		_theResult___fst_sfd__h102737,
		_theResult___fst_sfd__h118497,
		_theResult___fst_sfd__h118500,
		_theResult___fst_sfd__h128072,
		_theResult___fst_sfd__h128075,
		_theResult___fst_sfd__h136812,
		_theResult___fst_sfd__h136815,
		_theResult___fst_sfd__h136824,
		_theResult___fst_sfd__h136830,
		_theResult___fst_sfd__h35908,
		_theResult___fst_sfd__h36622,
		_theResult___fst_sfd__h36625,
		_theResult___fst_sfd__h45487,
		_theResult___fst_sfd__h46200,
		_theResult___fst_sfd__h46203,
		_theResult___fst_sfd__h49332,
		_theResult___sfd__h118438,
		_theResult___sfd__h128013,
		_theResult___sfd__h136753,
		_theResult___sfd__h35850,
		_theResult___sfd__h36564,
		_theResult___sfd__h45430,
		_theResult___sfd__h46143,
		_theResult___snd_fst_sfd__h118503,
		_theResult___snd_fst_sfd__h136818,
		_theResult___snd_fst_sfd__h36628,
		_theResult___snd_fst_sfd__h46206,
		_theResult___snd_fst_sfd__h98936,
		out___1_sfd__h97051,
		out_sfd__h118441,
		out_sfd__h128016,
		out_sfd__h136756,
		out_sfd__h35853,
		out_sfd__h36567,
		out_sfd__h45433,
		out_sfd__h46146,
		value__h48875;
  wire [32 : 0] _theResult_____2__h14621,
		_theResult_____2__h46739,
		out1___1__h15110,
		out1___1__h47228;
  wire [31 : 0] IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d817,
		IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d819,
		IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d880,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1557,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1559,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1620,
		IF_requestR_BITS_158_TO_151_43_EQ_255_44_AND_r_ETC___d821,
		IF_requestR_BITS_190_TO_180_483_EQ_2047_484_AN_ETC___d1561,
		IF_requestR_BITS_94_TO_87_09_EQ_0_26_AND_reque_ETC___d959,
		IF_requestR_BITS_94_TO_87_09_EQ_0_26_AND_reque_ETC___d974,
		IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_req_ETC___d960,
		IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_req_ETC___d976,
		IF_requestR_BIT_159_2_OR_requestR_BITS_158_TO__ETC___d882,
		IF_requestR_BIT_159_2_THEN_2147483648_ELSE_214_ETC___d750,
		IF_requestR_BIT_191_111_OR_requestR_BITS_190_T_ETC___d1622,
		IF_requestR_BIT_191_111_THEN_2147483648_ELSE_2_ETC___d1490,
		requestR_BITS_159_TO_128__q1,
		sfd___3__h13090,
		sfd___3__h7027,
		sfd__h2123,
		x__h14478,
		x__h16016,
		x__h1680,
		x__h1826,
		x__h1960,
		x__h2108,
		x__h46596,
		x__h48117,
		x__h48811;
  wire [24 : 0] sfd__h13117,
		sfd__h13614,
		sfd__h68835,
		sfd__h7054,
		sfd__h7555,
		sfd__h77405,
		sfd__h86574,
		sfd__h95174,
		value__h14685;
  wire [23 : 0] NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1495,
		NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1527,
		NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1528,
		NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1593;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2604,
		IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2606,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2644,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2646,
		IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2620,
		IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2622,
		IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2660,
		IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2662,
		IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d357,
		IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d359,
		IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d372,
		IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d374,
		_theResult___fst_sfd__h13568,
		_theResult___fst_sfd__h14078,
		_theResult___fst_sfd__h14081,
		_theResult___fst_sfd__h60619,
		_theResult___fst_sfd__h69326,
		_theResult___fst_sfd__h69329,
		_theResult___fst_sfd__h7509,
		_theResult___fst_sfd__h77896,
		_theResult___fst_sfd__h77899,
		_theResult___fst_sfd__h8020,
		_theResult___fst_sfd__h8023,
		_theResult___fst_sfd__h87065,
		_theResult___fst_sfd__h87068,
		_theResult___fst_sfd__h95689,
		_theResult___fst_sfd__h95692,
		_theResult___fst_sfd__h95701,
		_theResult___fst_sfd__h95707,
		_theResult___fst_sfd__h97308,
		_theResult___sfd__h13511,
		_theResult___sfd__h14021,
		_theResult___sfd__h69267,
		_theResult___sfd__h7451,
		_theResult___sfd__h77837,
		_theResult___sfd__h7962,
		_theResult___sfd__h87006,
		_theResult___sfd__h95630,
		_theResult___snd_fst_sfd__h14084,
		_theResult___snd_fst_sfd__h52990,
		_theResult___snd_fst_sfd__h77902,
		_theResult___snd_fst_sfd__h8026,
		_theResult___snd_fst_sfd__h95695,
		out_sfd__h13514,
		out_sfd__h14024,
		out_sfd__h69270,
		out_sfd__h7454,
		out_sfd__h77840,
		out_sfd__h7965,
		out_sfd__h87009,
		out_sfd__h95633,
		value__h97054;
  wire [19 : 0] NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d755,
		NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d787,
		NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d788,
		NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d853;
  wire [11 : 0] IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3174,
		SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC__q76,
		SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53___d2879,
		SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_493___d2132,
		SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC__q48,
		_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1725,
		_3074_MINUS_SEXT_requestR_BITS_158_TO_151_43_MI_ETC___d2882,
		_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1155,
		_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1348,
		_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2813,
		_3970_MINUS_SEXT_requestR_BITS_190_TO_180_483_M_ETC___d2135,
		x__h119791,
		x__h35939,
		x__h45518,
		x__h78987;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3269,
		IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3271,
		IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3233,
		IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3235,
		IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3297,
		IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3299,
		IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1220,
		IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1243,
		IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1245,
		IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1381,
		SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC__q79,
		_theResult___exp__h118437,
		_theResult___exp__h128012,
		_theResult___exp__h136752,
		_theResult___exp__h35849,
		_theResult___exp__h36563,
		_theResult___exp__h45429,
		_theResult___exp__h46142,
		_theResult___fst_exp__h102736,
		_theResult___fst_exp__h117776,
		_theResult___fst_exp__h117782,
		_theResult___fst_exp__h117785,
		_theResult___fst_exp__h118496,
		_theResult___fst_exp__h118499,
		_theResult___fst_exp__h127286,
		_theResult___fst_exp__h127351,
		_theResult___fst_exp__h127357,
		_theResult___fst_exp__h127360,
		_theResult___fst_exp__h128071,
		_theResult___fst_exp__h128074,
		_theResult___fst_exp__h136027,
		_theResult___fst_exp__h136066,
		_theResult___fst_exp__h136072,
		_theResult___fst_exp__h136075,
		_theResult___fst_exp__h136811,
		_theResult___fst_exp__h136814,
		_theResult___fst_exp__h136823,
		_theResult___fst_exp__h136826,
		_theResult___fst_exp__h35907,
		_theResult___fst_exp__h36621,
		_theResult___fst_exp__h36624,
		_theResult___fst_exp__h45486,
		_theResult___fst_exp__h46199,
		_theResult___fst_exp__h46202,
		_theResult___snd_fst_exp__h118502,
		_theResult___snd_fst_exp__h136817,
		_theResult___snd_fst_exp__h36627,
		_theResult___snd_fst_exp__h36630,
		_theResult___snd_fst_exp__h36633,
		_theResult___snd_fst_exp__h46205,
		_theResult___snd_fst_exp__h46208,
		_theResult___snd_fst_exp__h46211,
		din_inc___2_exp__h136858,
		din_inc___2_exp__h136887,
		din_inc___2_exp__h136908,
		din_inc___2_exp__h36662,
		din_inc___2_exp__h46236,
		out_exp__h118440,
		out_exp__h128015,
		out_exp__h136755,
		out_exp__h35852,
		out_exp__h36566,
		out_exp__h45432,
		out_exp__h46145,
		requestR_BITS_190_TO_180_483_MINUS_1023___d1493;
  wire [8 : 0] IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2425,
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d239,
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d573,
	       x__h13599,
	       x__h7540;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2484,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2486,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2548,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2550,
	       IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2512,
	       IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2514,
	       IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2576,
	       IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2578,
	       IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d314,
	       IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d337,
	       IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d339,
	       IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d348,
	       IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d650,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d605,
	       SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC__q51,
	       _theResult___exp__h13510,
	       _theResult___exp__h14020,
	       _theResult___exp__h69266,
	       _theResult___exp__h7450,
	       _theResult___exp__h77836,
	       _theResult___exp__h7961,
	       _theResult___exp__h87005,
	       _theResult___exp__h95629,
	       _theResult___fst_exp__h13567,
	       _theResult___fst_exp__h14077,
	       _theResult___fst_exp__h14080,
	       _theResult___fst_exp__h60618,
	       _theResult___fst_exp__h68743,
	       _theResult___fst_exp__h68808,
	       _theResult___fst_exp__h68814,
	       _theResult___fst_exp__h68817,
	       _theResult___fst_exp__h69325,
	       _theResult___fst_exp__h69328,
	       _theResult___fst_exp__h7508,
	       _theResult___fst_exp__h77378,
	       _theResult___fst_exp__h77384,
	       _theResult___fst_exp__h77387,
	       _theResult___fst_exp__h77895,
	       _theResult___fst_exp__h77898,
	       _theResult___fst_exp__h8019,
	       _theResult___fst_exp__h8022,
	       _theResult___fst_exp__h86482,
	       _theResult___fst_exp__h86547,
	       _theResult___fst_exp__h86553,
	       _theResult___fst_exp__h86556,
	       _theResult___fst_exp__h87064,
	       _theResult___fst_exp__h87067,
	       _theResult___fst_exp__h95107,
	       _theResult___fst_exp__h95146,
	       _theResult___fst_exp__h95152,
	       _theResult___fst_exp__h95155,
	       _theResult___fst_exp__h95688,
	       _theResult___fst_exp__h95691,
	       _theResult___fst_exp__h95700,
	       _theResult___fst_exp__h95703,
	       _theResult___snd_fst_exp__h14083,
	       _theResult___snd_fst_exp__h14086,
	       _theResult___snd_fst_exp__h14089,
	       _theResult___snd_fst_exp__h77901,
	       _theResult___snd_fst_exp__h8025,
	       _theResult___snd_fst_exp__h8028,
	       _theResult___snd_fst_exp__h8031,
	       _theResult___snd_fst_exp__h95694,
	       din_inc___2_exp__h14114,
	       din_inc___2_exp__h8060,
	       din_inc___2_exp__h95725,
	       din_inc___2_exp__h95746,
	       din_inc___2_exp__h95775,
	       din_inc___2_exp__h95796,
	       out_exp__h13513,
	       out_exp__h14023,
	       out_exp__h69269,
	       out_exp__h7453,
	       out_exp__h77839,
	       out_exp__h7964,
	       out_exp__h87008,
	       out_exp__h95632,
	       requestR_BITS_158_TO_151_43_MINUS_127___d753;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1959,
	       IF_IF_3074_MINUS_SEXT_requestR_BITS_158_TO_151_ETC___d3128,
	       IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2379,
	       IF_IF_requestR_BIT_159_2_THEN_NEG_requestR_BIT_ETC___d1152,
	       IF_IF_requestR_BIT_159_2_THEN_NEG_requestR_BIT_ETC___d236,
	       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_IF_ETC___d2842,
	       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2095,
	       IF_requestR_BIT_159_2_THEN_0_ELSE_IF_requestR__ETC___d1345,
	       IF_requestR_BIT_159_2_THEN_0_ELSE_IF_requestR__ETC___d570;
  wire [4 : 0] _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2688,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BITS_1_ETC___d3406,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2717,
	       _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d3389,
	       _0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2700,
	       x__h137091,
	       x__h14193,
	       x__h147888,
	       x__h150577,
	       x__h15760,
	       x__h16471,
	       x__h18740,
	       x__h24447,
	       x__h36759,
	       x__h46311,
	       x__h47861,
	       x__h48572,
	       x__h8161,
	       x__h96011;
  wire [1 : 0] IF_sfd___3027_BIT_7_THEN_2_ELSE_0__q7,
	       IF_sfd___3027_BIT_8_THEN_2_ELSE_0__q6,
	       IF_sfd___33090_BIT_7_THEN_2_ELSE_0__q18,
	       IF_sfd___33090_BIT_8_THEN_2_ELSE_0__q17,
	       IF_sfd___34806_BIT_1_THEN_2_ELSE_0__q37,
	       IF_sfd___34806_BIT_2_THEN_2_ELSE_0__q36,
	       IF_sfd___35226_BIT_1_THEN_2_ELSE_0__q26,
	       IF_sfd___35226_BIT_2_THEN_2_ELSE_0__q25,
	       IF_sfdin27280_BIT_4_THEN_2_ELSE_0__q78,
	       IF_sfdin6476_BIT_33_THEN_2_ELSE_0__q50,
	       IF_sfdin8737_BIT_33_THEN_2_ELSE_0__q45,
	       IF_theResult___snd17736_BIT_4_THEN_2_ELSE_0__q75,
	       IF_theResult___snd36021_BIT_4_THEN_2_ELSE_0__q81,
	       IF_theResult___snd5101_BIT_33_THEN_2_ELSE_0__q53,
	       IF_theResult___snd7338_BIT_33_THEN_2_ELSE_0__q47,
	       IF_x5356_BIT_24_THEN_2_ELSE_0__q23,
	       IF_x6394_BIT_24_THEN_2_ELSE_0__q24,
	       IF_x7474_BIT_53_THEN_2_ELSE_0__q42,
	       IF_x8495_BIT_53_THEN_2_ELSE_0__q43,
	       guard__h109824,
	       guard__h119060,
	       guard__h128085,
	       guard__h13100,
	       guard__h13584,
	       guard__h14619,
	       guard__h15170,
	       guard__h16176,
	       guard__h35236,
	       guard__h35924,
	       guard__h44816,
	       guard__h45503,
	       guard__h46737,
	       guard__h47288,
	       guard__h48277,
	       guard__h60646,
	       guard__h69339,
	       guard__h7037,
	       guard__h7525,
	       guard__h78256,
	       guard__h87078;
  wire IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_ETC___d2130,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d1201,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d1304,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d294,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d432,
       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THE_ETC___d1471,
       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THE_ETC___d730,
       IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d843,
       IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1583,
       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d1202,
       IF_NOT_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_ETC___d2878,
       IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3209,
       IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3432,
       IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3444,
       IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3456,
       IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2460,
       IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2746,
       IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2759,
       IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2772,
       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_39_ETC___d3410,
       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_39_ETC___d3420,
       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_39_ETC___d3446,
       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_IF_ETC___d3211,
       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_NO_ETC___d3434,
       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_NO_ETC___d3458,
       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2462,
       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2721,
       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2732,
       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2748,
       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2761,
       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2774,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1179,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1199,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1519,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1551,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1614,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1999,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2128,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2417,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2458,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d272,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2877,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d292,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d3166,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d3207,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d779,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d811,
       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d874,
       IF_requestR_BIT_159_2_THEN_NEG_requestR_BITS_1_ETC___d423,
       IF_requestR_BIT_159_2_THEN_NEG_requestR_BITS_1_ETC___d426,
       IF_requestR_BIT_159_2_THEN_NEG_requestR_BITS_1_ETC___d435,
       IF_requestR_BIT_159_2_THEN_NOT_requestR_BITS_1_ETC___d953,
       IF_requestR_BIT_191_111_THEN_NOT_requestR_BITS_ETC___d3511,
       NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d790,
       NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d855,
       NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1530,
       NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1595,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_65_ETC___d2740,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_65_ETC___d2768,
       NOT_IF_requestR_BIT_159_2_THEN_NEG_requestR_BI_ETC___d244,
       NOT_requestR_BITS_158_TO_151_43_EQ_0_51_57_OR__ETC___d832,
       NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d1037,
       NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d900,
       NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d957,
       NOT_requestR_BITS_158_TO_151_43_ULT_requestR_B_ETC___d1014,
       NOT_requestR_BITS_159_TO_128_05_EQ_0_06_07_AND_ETC___d722,
       NOT_requestR_BITS_190_TO_180_483_EQ_0_491_497__ETC___d1572,
       NOT_requestR_BITS_190_TO_180_483_EQ_2047_484_5_ETC___d1641,
       NOT_requestR_BITS_190_TO_180_483_EQ_2047_484_5_ETC___d3515,
       NOT_requestR_BITS_190_TO_180_483_EQ_2047_484_5_ETC___d3580,
       NOT_requestR_BITS_190_TO_180_483_ULT_requestR__ETC___d3556,
       NOT_requestR_BIT_149_63_64_AND_NOT_requestR_BI_ETC___d527,
       NOT_requestR_BIT_158_45_46_AND_NOT_requestR_BI_ETC___d536,
       NOT_requestR_BIT_179_652_001_AND_NOT_requestR__ETC___d2040,
       SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2880,
       SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2881,
       SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2133,
       SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2134,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1961,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BITS_1_ETC___d3130,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2381,
       _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d2844,
       _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d3175,
       _0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2097,
       _0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2426,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1726,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1727,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d2703,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d2728,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d2755,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1156,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1158,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1160,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d240,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d242,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d245,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1349,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1350,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1351,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d574,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d575,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d576,
       _3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2814,
       _3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2816,
       guard__h119658,
       guard__h78854,
       requestR_BITS_126_TO_116_470_EQ_0_484_AND_requ_ETC___d3491,
       requestR_BITS_150_TO_128_45_ULE_requestR_BITS__ETC___d945,
       requestR_BITS_150_TO_128_45_ULT_requestR_BITS__ETC___d950,
       requestR_BITS_158_TO_151_43_EQ_0_51_AND_reques_ETC___d1018,
       requestR_BITS_158_TO_151_43_EQ_0_51_AND_reques_ETC___d929,
       requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d1003,
       requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d918,
       requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d967,
       requestR_BITS_158_TO_151_43_EQ_requestR_BITS_9_ETC___d944,
       requestR_BITS_158_TO_151_43_ULE_requestR_BITS__ETC___d1013,
       requestR_BITS_158_TO_151_43_ULE_requestR_BITS__ETC___d942,
       requestR_BITS_158_TO_151_43_ULT_requestR_BITS__ETC___d949,
       requestR_BITS_179_TO_128_485_ULE_requestR_BITS_ETC___d3503,
       requestR_BITS_179_TO_128_485_ULT_requestR_BITS_ETC___d3508,
       requestR_BITS_190_TO_180_483_EQ_0_491_AND_requ_ETC___d3487,
       requestR_BITS_190_TO_180_483_EQ_0_491_AND_requ_ETC___d3560,
       requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3479,
       requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3543,
       requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3545,
       requestR_BITS_190_TO_180_483_EQ_requestR_BITS__ETC___d3502,
       requestR_BITS_190_TO_180_483_ULE_requestR_BITS_ETC___d3500,
       requestR_BITS_190_TO_180_483_ULE_requestR_BITS_ETC___d3555,
       requestR_BITS_190_TO_180_483_ULT_requestR_BITS_ETC___d3507,
       requestR_BITS_94_TO_87_09_EQ_0_26_AND_requestR_ETC___d933,
       requestR_BIT_158_45_OR_requestR_BIT_157_47_OR__ETC___d711,
       requestR_BIT_159_2_OR_NOT_requestR_BITS_158_TO_ETC___d890,
       requestR_BIT_159_2_OR_requestR_BIT_158_45_OR_r_ETC___d733,
       requestR_BIT_191_111_OR_NOT_requestR_BITS_190__ETC___d1630;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // value method valid
  assign valid = dw_valid$whas && dw_valid$wget ;

  // value method word_fst
  assign word_fst = ab__h153941[68:5] ;

  // value method word_snd
  assign word_snd = ab__h153941[4:0] ;

  // submodule fpu
  mkFPU fpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .request_put(fpu$request_put),
	    .EN_request_put(fpu$EN_request_put),
	    .EN_response_get(fpu$EN_response_get),
	    .RDY_request_put(fpu$RDY_request_put),
	    .response_get(fpu$response_get),
	    .RDY_response_get(fpu$RDY_response_get));

  // submodule frmFpuF
  FIFO2 #(.width(32'd1), .guarded(32'd1)) frmFpuF(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(frmFpuF$D_IN),
						  .ENQ(frmFpuF$ENQ),
						  .DEQ(frmFpuF$DEQ),
						  .CLR(frmFpuF$CLR),
						  .D_OUT(),
						  .FULL_N(),
						  .EMPTY_N());

  // rule RL_doFADD_S
  assign CAN_FIRE_RL_doFADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0 ;
  assign WILL_FIRE_RL_doFADD_S = CAN_FIRE_RL_doFADD_S ;

  // rule RL_doFSUB_S
  assign CAN_FIRE_RL_doFSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h04 ;
  assign WILL_FIRE_RL_doFSUB_S = CAN_FIRE_RL_doFSUB_S ;

  // rule RL_doFMUL_S
  assign CAN_FIRE_RL_doFMUL_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h08 ;
  assign WILL_FIRE_RL_doFMUL_S = CAN_FIRE_RL_doFMUL_S ;

  // rule RL_doFMADD_S
  assign CAN_FIRE_RL_doFMADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMADD_S = CAN_FIRE_RL_doFMADD_S ;

  // rule RL_doFMSUB_S
  assign CAN_FIRE_RL_doFMSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMSUB_S = CAN_FIRE_RL_doFMSUB_S ;

  // rule RL_doFNMADD_S
  assign CAN_FIRE_RL_doFNMADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMADD_S = CAN_FIRE_RL_doFNMADD_S ;

  // rule RL_doFNMSUB_S
  assign CAN_FIRE_RL_doFNMSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMSUB_S = CAN_FIRE_RL_doFNMSUB_S ;

  // rule RL_doFSGNJ_S
  assign CAN_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;
  assign WILL_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;

  // rule RL_doFSGNJN_S
  assign CAN_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;
  assign WILL_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;

  // rule RL_doFSGNJX_S
  assign CAN_FIRE_RL_doFSGNJX_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_S = CAN_FIRE_RL_doFSGNJX_S ;

  // rule RL_doFCVT_S_W
  assign CAN_FIRE_RL_doFCVT_S_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_S_W = CAN_FIRE_RL_doFCVT_S_W ;

  // rule RL_doFCVT_S_WU
  assign CAN_FIRE_RL_doFCVT_S_WU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_WU = CAN_FIRE_RL_doFCVT_S_WU ;

  // rule RL_doFCVT_W_S
  assign CAN_FIRE_RL_doFCVT_W_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_S = CAN_FIRE_RL_doFCVT_W_S ;

  // rule RL_doFCVT_WU_S
  assign CAN_FIRE_RL_doFCVT_WU_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_S = CAN_FIRE_RL_doFCVT_WU_S ;

  // rule RL_doFMIN_S
  assign CAN_FIRE_RL_doFMIN_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_S = CAN_FIRE_RL_doFMIN_S ;

  // rule RL_doFMAX_S
  assign CAN_FIRE_RL_doFMAX_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_S = CAN_FIRE_RL_doFMAX_S ;

  // rule RL_doFMV_W_X
  assign CAN_FIRE_RL_doFMV_W_X =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h78 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_W_X = CAN_FIRE_RL_doFMV_W_X ;

  // rule RL_doFMV_X_W
  assign CAN_FIRE_RL_doFMV_X_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_W = CAN_FIRE_RL_doFMV_X_W ;

  // rule RL_doFEQ_S
  assign CAN_FIRE_RL_doFEQ_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_S = CAN_FIRE_RL_doFEQ_S ;

  // rule RL_doFLT_S
  assign CAN_FIRE_RL_doFLT_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_S = CAN_FIRE_RL_doFLT_S ;

  // rule RL_doFLE_S
  assign CAN_FIRE_RL_doFLE_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_S = CAN_FIRE_RL_doFLE_S ;

  // rule RL_doFCLASS_S
  assign CAN_FIRE_RL_doFCLASS_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_S = CAN_FIRE_RL_doFCLASS_S ;

  // rule RL_doFADD_D
  assign CAN_FIRE_RL_doFADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h01 ;
  assign WILL_FIRE_RL_doFADD_D = CAN_FIRE_RL_doFADD_D ;

  // rule RL_doFSUB_D
  assign CAN_FIRE_RL_doFSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h05 ;
  assign WILL_FIRE_RL_doFSUB_D = CAN_FIRE_RL_doFSUB_D ;

  // rule RL_doFMUL_D
  assign CAN_FIRE_RL_doFMUL_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h09 ;
  assign WILL_FIRE_RL_doFMUL_D = CAN_FIRE_RL_doFMUL_D ;

  // rule RL_doFMADD_D
  assign CAN_FIRE_RL_doFMADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMADD_D = CAN_FIRE_RL_doFMADD_D ;

  // rule RL_doFMSUB_D
  assign CAN_FIRE_RL_doFMSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMSUB_D = CAN_FIRE_RL_doFMSUB_D ;

  // rule RL_doFNMADD_D
  assign CAN_FIRE_RL_doFNMADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMADD_D = CAN_FIRE_RL_doFNMADD_D ;

  // rule RL_doFNMSUB_D
  assign CAN_FIRE_RL_doFNMSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMSUB_D = CAN_FIRE_RL_doFNMSUB_D ;

  // rule RL_doFSGNJ_D
  assign CAN_FIRE_RL_doFSGNJ_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_D = CAN_FIRE_RL_doFSGNJ_D ;

  // rule RL_doFSGNJN_D
  assign CAN_FIRE_RL_doFSGNJN_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_D = CAN_FIRE_RL_doFSGNJN_D ;

  // rule RL_doFSGNJX_D
  assign CAN_FIRE_RL_doFSGNJX_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_D = CAN_FIRE_RL_doFSGNJX_D ;

  // rule RL_doFCVT_D_W
  assign CAN_FIRE_RL_doFCVT_D_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_W = CAN_FIRE_RL_doFCVT_D_W ;

  // rule RL_doFCVT_D_WU
  assign CAN_FIRE_RL_doFCVT_D_WU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_D_WU = CAN_FIRE_RL_doFCVT_D_WU ;

  // rule RL_doFCVT_W_D
  assign CAN_FIRE_RL_doFCVT_W_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_D = CAN_FIRE_RL_doFCVT_W_D ;

  // rule RL_doFCVT_WU_D
  assign CAN_FIRE_RL_doFCVT_WU_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_D = CAN_FIRE_RL_doFCVT_WU_D ;

  // rule RL_doFCVT_S_D
  assign CAN_FIRE_RL_doFCVT_S_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h20 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_D = CAN_FIRE_RL_doFCVT_S_D ;

  // rule RL_doFCVT_D_S
  assign CAN_FIRE_RL_doFCVT_D_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h21 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_S = CAN_FIRE_RL_doFCVT_D_S ;

  // rule RL_doFMIN_D
  assign CAN_FIRE_RL_doFMIN_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_D = CAN_FIRE_RL_doFMIN_D ;

  // rule RL_doFMAX_D
  assign CAN_FIRE_RL_doFMAX_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_D = CAN_FIRE_RL_doFMAX_D ;

  // rule RL_doFEQ_D
  assign CAN_FIRE_RL_doFEQ_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_D = CAN_FIRE_RL_doFEQ_D ;

  // rule RL_doFLT_D
  assign CAN_FIRE_RL_doFLT_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_D = CAN_FIRE_RL_doFLT_D ;

  // rule RL_doFLE_D
  assign CAN_FIRE_RL_doFLE_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_D = CAN_FIRE_RL_doFLE_D ;

  // rule RL_doFMV_D_X
  assign CAN_FIRE_RL_doFMV_D_X =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h79 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_D_X = CAN_FIRE_RL_doFMV_D_X ;

  // rule RL_doFMV_X_D
  assign CAN_FIRE_RL_doFMV_X_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_D = CAN_FIRE_RL_doFMV_X_D ;

  // rule RL_doFCLASS_D
  assign CAN_FIRE_RL_doFCLASS_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_D = CAN_FIRE_RL_doFCLASS_D ;

  // rule RL_rl_get_fpu_result
  assign CAN_FIRE_RL_rl_get_fpu_result =
	     fpu$RDY_response_get && stateR == 2'd1 ;
  assign WILL_FIRE_RL_rl_get_fpu_result = CAN_FIRE_RL_rl_get_fpu_result ;

  // rule RL_rl_drive_fpu_result
  assign CAN_FIRE_RL_rl_drive_fpu_result = stateR == 2'd2 ;
  assign WILL_FIRE_RL_rl_drive_fpu_result = stateR == 2'd2 ;

  // inputs to muxes for submodule ports
  assign MUX_dw_result$wset_1__SEL_1 =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h1 ;
  assign MUX_dw_result$wset_1__SEL_2 =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h0 ;
  assign MUX_dw_result$wset_1__SEL_30 =
	     WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ;
  assign MUX_dw_result$wset_1__VAL_1 = { x__h1820, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_2 = { x__h1674, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_3 = { x__h1954, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_4 = { x__h2102, x__h8161 } ;
  assign MUX_dw_result$wset_1__VAL_5 = { x__h8449, x__h14193 } ;
  assign MUX_dw_result$wset_1__VAL_6 = { x__h14475, x__h15760 } ;
  assign MUX_dw_result$wset_1__VAL_7 = { x__h16013, x__h16471 } ;
  assign MUX_dw_result$wset_1__VAL_8 = { x__h16709, x__h18740 } ;
  assign MUX_dw_result$wset_1__VAL_9 = { x__h19331, x__h18740 } ;
  assign MUX_dw_result$wset_1__VAL_10 = { res__h17620, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_11 = { x__h21965, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_12 = { x__h22088, x__h18740 } ;
  assign MUX_dw_result$wset_1__VAL_13 = { x__h23563, x__h24447 } ;
  assign MUX_dw_result$wset_1__VAL_14 = { x__h24626, x__h24447 } ;
  assign MUX_dw_result$wset_1__VAL_15 = { x__h25706, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_16 = { x__h26825, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_17 = { x__h26950, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_18 = { x__h27077, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_19 = { x__h27210, x__h36759 } ;
  assign MUX_dw_result$wset_1__VAL_20 = { x__h37042, x__h46311 } ;
  assign MUX_dw_result$wset_1__VAL_21 = { x__h46593, x__h47861 } ;
  assign MUX_dw_result$wset_1__VAL_22 = { x__h48114, x__h48572 } ;
  assign MUX_dw_result$wset_1__VAL_23 = { x__h48805, x__h96011 } ;
  assign MUX_dw_result$wset_1__VAL_24 = { x__h96991, x__h137091 } ;
  assign MUX_dw_result$wset_1__VAL_25 = { x__h138012, x__h18740 } ;
  assign MUX_dw_result$wset_1__VAL_26 = { x__h142152, x__h18740 } ;
  assign MUX_dw_result$wset_1__VAL_27 = { x__h146188, x__h147888 } ;
  assign MUX_dw_result$wset_1__VAL_28 = { x__h148881, x__h150577 } ;
  assign MUX_dw_result$wset_1__VAL_29 = { x__h150756, x__h150577 } ;
  assign MUX_dw_result$wset_1__VAL_30 = { requestR[191:128], 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_31 = { x__h152881, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_32 =
	     { x__h153484, fpu$response_get[4:0] } ;
  assign MUX_fpu$request_put_1__VAL_1 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd0 } ;
  assign MUX_fpu$request_put_1__VAL_2 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd1 } ;
  assign MUX_fpu$request_put_1__VAL_3 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd2 } ;
  assign MUX_fpu$request_put_1__VAL_4 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       1'd1,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd5 } ;
  assign MUX_fpu$request_put_1__VAL_5 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       1'd1,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd6 } ;
  assign MUX_fpu$request_put_1__VAL_6 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       1'd1,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd7 } ;
  assign MUX_fpu$request_put_1__VAL_7 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       1'd1,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd8 } ;
  assign MUX_fpu$request_put_1__VAL_8 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd0 } ;
  assign MUX_fpu$request_put_1__VAL_9 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd1 } ;
  assign MUX_fpu$request_put_1__VAL_10 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd2 } ;
  assign MUX_fpu$request_put_1__VAL_11 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd5 } ;
  assign MUX_fpu$request_put_1__VAL_12 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd6 } ;
  assign MUX_fpu$request_put_1__VAL_13 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd7 } ;
  assign MUX_fpu$request_put_1__VAL_14 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26,
	       4'd8 } ;
  assign MUX_resultR$write_1__VAL_2 =
	     { 1'd1, x__h153484, fpu$response_get[4:0] } ;
  assign MUX_resultR$write_1__VAL_3 = { 1'd1, x__h152881, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_4 = { 1'd1, requestR[191:128], 5'd0 } ;
  assign MUX_resultR$write_1__VAL_6 = { 1'd1, x__h150756, x__h150577 } ;
  assign MUX_resultR$write_1__VAL_7 = { 1'd1, x__h148881, x__h150577 } ;
  assign MUX_resultR$write_1__VAL_8 = { 1'd1, x__h146188, x__h147888 } ;
  assign MUX_resultR$write_1__VAL_9 = { 1'd1, x__h142152, x__h18740 } ;
  assign MUX_resultR$write_1__VAL_10 = { 1'd1, x__h138012, x__h18740 } ;
  assign MUX_resultR$write_1__VAL_11 = { 1'd1, x__h96991, x__h137091 } ;
  assign MUX_resultR$write_1__VAL_12 = { 1'd1, x__h48805, x__h96011 } ;
  assign MUX_resultR$write_1__VAL_13 = { 1'd1, x__h48114, x__h48572 } ;
  assign MUX_resultR$write_1__VAL_14 = { 1'd1, x__h46593, x__h47861 } ;
  assign MUX_resultR$write_1__VAL_15 = { 1'd1, x__h37042, x__h46311 } ;
  assign MUX_resultR$write_1__VAL_16 = { 1'd1, x__h27210, x__h36759 } ;
  assign MUX_resultR$write_1__VAL_17 = { 1'd1, x__h27077, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_18 = { 1'd1, x__h26950, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_19 = { 1'd1, x__h26825, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_20 = { 1'd1, x__h25706, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_21 = { 1'd1, x__h24626, x__h24447 } ;
  assign MUX_resultR$write_1__VAL_22 = { 1'd1, x__h23563, x__h24447 } ;
  assign MUX_resultR$write_1__VAL_23 = { 1'd1, x__h22088, x__h18740 } ;
  assign MUX_resultR$write_1__VAL_24 = { 1'd1, x__h21965, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_25 = { 1'd1, res__h17620, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_26 = { 1'd1, x__h19331, x__h18740 } ;
  assign MUX_resultR$write_1__VAL_27 = { 1'd1, x__h16709, x__h18740 } ;
  assign MUX_resultR$write_1__VAL_28 = { 1'd1, x__h16013, x__h16471 } ;
  assign MUX_resultR$write_1__VAL_29 = { 1'd1, x__h14475, x__h15760 } ;
  assign MUX_resultR$write_1__VAL_30 = { 1'd1, x__h8449, x__h14193 } ;
  assign MUX_resultR$write_1__VAL_31 = { 1'd1, x__h2102, x__h8161 } ;
  assign MUX_resultR$write_1__VAL_32 = { 1'd1, x__h1954, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_33 = { 1'd1, x__h1820, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_34 = { 1'd1, x__h1674, 5'd0 } ;

  // inlined wires
  assign dw_valid$wget = !WILL_FIRE_RL_rl_drive_fpu_result || resultR[69] ;
  assign dw_valid$whas =
	     WILL_FIRE_RL_rl_drive_fpu_result ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;
  always@(WILL_FIRE_RL_doFSGNJN_S or
	  MUX_dw_result$wset_1__VAL_1 or
	  WILL_FIRE_RL_doFSGNJ_S or
	  MUX_dw_result$wset_1__VAL_2 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_dw_result$wset_1__VAL_3 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_dw_result$wset_1__VAL_4 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_dw_result$wset_1__VAL_5 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_dw_result$wset_1__VAL_6 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_dw_result$wset_1__VAL_7 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_dw_result$wset_1__VAL_8 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_dw_result$wset_1__VAL_9 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_dw_result$wset_1__VAL_10 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_dw_result$wset_1__VAL_11 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_dw_result$wset_1__VAL_12 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_dw_result$wset_1__VAL_13 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_dw_result$wset_1__VAL_14 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_dw_result$wset_1__VAL_15 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_dw_result$wset_1__VAL_16 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_dw_result$wset_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_dw_result$wset_1__VAL_18 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_dw_result$wset_1__VAL_19 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_dw_result$wset_1__VAL_20 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_dw_result$wset_1__VAL_21 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_dw_result$wset_1__VAL_22 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_dw_result$wset_1__VAL_23 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_dw_result$wset_1__VAL_24 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_dw_result$wset_1__VAL_25 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_dw_result$wset_1__VAL_26 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_dw_result$wset_1__VAL_27 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_dw_result$wset_1__VAL_28 or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_dw_result$wset_1__VAL_29 or
	  MUX_dw_result$wset_1__SEL_30 or
	  MUX_dw_result$wset_1__VAL_30 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_dw_result$wset_1__VAL_31 or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_dw_result$wset_1__VAL_32 or
	  WILL_FIRE_RL_rl_drive_fpu_result or resultR)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFSGNJN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_1;
      WILL_FIRE_RL_doFSGNJ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_2;
      WILL_FIRE_RL_doFSGNJX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_3;
      WILL_FIRE_RL_doFCVT_S_W: dw_result$wget = MUX_dw_result$wset_1__VAL_4;
      WILL_FIRE_RL_doFCVT_S_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_5;
      WILL_FIRE_RL_doFCVT_W_S: dw_result$wget = MUX_dw_result$wset_1__VAL_6;
      WILL_FIRE_RL_doFCVT_WU_S: dw_result$wget = MUX_dw_result$wset_1__VAL_7;
      WILL_FIRE_RL_doFMIN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_8;
      WILL_FIRE_RL_doFMAX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_9;
      WILL_FIRE_RL_doFMV_W_X: dw_result$wget = MUX_dw_result$wset_1__VAL_10;
      WILL_FIRE_RL_doFMV_X_W: dw_result$wget = MUX_dw_result$wset_1__VAL_11;
      WILL_FIRE_RL_doFEQ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_12;
      WILL_FIRE_RL_doFLT_S: dw_result$wget = MUX_dw_result$wset_1__VAL_13;
      WILL_FIRE_RL_doFLE_S: dw_result$wget = MUX_dw_result$wset_1__VAL_14;
      WILL_FIRE_RL_doFCLASS_S: dw_result$wget = MUX_dw_result$wset_1__VAL_15;
      WILL_FIRE_RL_doFSGNJ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_16;
      WILL_FIRE_RL_doFSGNJN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_17;
      WILL_FIRE_RL_doFSGNJX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_18;
      WILL_FIRE_RL_doFCVT_D_W: dw_result$wget = MUX_dw_result$wset_1__VAL_19;
      WILL_FIRE_RL_doFCVT_D_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_20;
      WILL_FIRE_RL_doFCVT_W_D: dw_result$wget = MUX_dw_result$wset_1__VAL_21;
      WILL_FIRE_RL_doFCVT_WU_D: dw_result$wget = MUX_dw_result$wset_1__VAL_22;
      WILL_FIRE_RL_doFCVT_S_D: dw_result$wget = MUX_dw_result$wset_1__VAL_23;
      WILL_FIRE_RL_doFCVT_D_S: dw_result$wget = MUX_dw_result$wset_1__VAL_24;
      WILL_FIRE_RL_doFMIN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_25;
      WILL_FIRE_RL_doFMAX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_26;
      WILL_FIRE_RL_doFEQ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_27;
      WILL_FIRE_RL_doFLT_D: dw_result$wget = MUX_dw_result$wset_1__VAL_28;
      WILL_FIRE_RL_doFLE_D: dw_result$wget = MUX_dw_result$wset_1__VAL_29;
      MUX_dw_result$wset_1__SEL_30:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_30;
      WILL_FIRE_RL_doFCLASS_D: dw_result$wget = MUX_dw_result$wset_1__VAL_31;
      WILL_FIRE_RL_rl_get_fpu_result:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_32;
      WILL_FIRE_RL_rl_drive_fpu_result: dw_result$wget = resultR[68:0];
      default: dw_result$wget =
		   69'h0AAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end

  // register cfg_verbosity
  assign cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cfg_verbosity$EN = EN_set_verbosity ;

  // register requestR
  assign requestR$D_IN =
	     { 1'd1,
	       req_opcode,
	       req_f7,
	       req_rs2,
	       req_rm,
	       req_v1,
	       req_v2,
	       req_v3 } ;
  assign requestR$EN = EN_req ;

  // register resultR
  always@(EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_resultR$write_1__VAL_2 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_resultR$write_1__VAL_3 or
	  WILL_FIRE_RL_doFMV_X_D or
	  MUX_resultR$write_1__VAL_4 or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_resultR$write_1__VAL_6 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_resultR$write_1__VAL_7 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_resultR$write_1__VAL_8 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_resultR$write_1__VAL_9 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_resultR$write_1__VAL_10 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_resultR$write_1__VAL_11 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_resultR$write_1__VAL_12 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_resultR$write_1__VAL_13 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_resultR$write_1__VAL_14 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_resultR$write_1__VAL_15 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_resultR$write_1__VAL_16 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_resultR$write_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_resultR$write_1__VAL_18 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_resultR$write_1__VAL_19 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_resultR$write_1__VAL_20 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_resultR$write_1__VAL_21 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_resultR$write_1__VAL_22 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_resultR$write_1__VAL_23 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_resultR$write_1__VAL_24 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_resultR$write_1__VAL_25 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_resultR$write_1__VAL_26 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_resultR$write_1__VAL_27 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_resultR$write_1__VAL_28 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_resultR$write_1__VAL_29 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_resultR$write_1__VAL_30 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_resultR$write_1__VAL_31 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_resultR$write_1__VAL_32 or
	  WILL_FIRE_RL_doFSGNJN_S or
	  MUX_resultR$write_1__VAL_33 or
	  WILL_FIRE_RL_doFSGNJ_S or MUX_resultR$write_1__VAL_34)
  case (1'b1)
    EN_req: resultR$D_IN = 70'h0AAAAAAAAAAAAAAAAA;
    WILL_FIRE_RL_rl_get_fpu_result: resultR$D_IN = MUX_resultR$write_1__VAL_2;
    WILL_FIRE_RL_doFCLASS_D: resultR$D_IN = MUX_resultR$write_1__VAL_3;
    WILL_FIRE_RL_doFMV_X_D: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFMV_D_X: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFLE_D: resultR$D_IN = MUX_resultR$write_1__VAL_6;
    WILL_FIRE_RL_doFLT_D: resultR$D_IN = MUX_resultR$write_1__VAL_7;
    WILL_FIRE_RL_doFEQ_D: resultR$D_IN = MUX_resultR$write_1__VAL_8;
    WILL_FIRE_RL_doFMAX_D: resultR$D_IN = MUX_resultR$write_1__VAL_9;
    WILL_FIRE_RL_doFMIN_D: resultR$D_IN = MUX_resultR$write_1__VAL_10;
    WILL_FIRE_RL_doFCVT_D_S: resultR$D_IN = MUX_resultR$write_1__VAL_11;
    WILL_FIRE_RL_doFCVT_S_D: resultR$D_IN = MUX_resultR$write_1__VAL_12;
    WILL_FIRE_RL_doFCVT_WU_D: resultR$D_IN = MUX_resultR$write_1__VAL_13;
    WILL_FIRE_RL_doFCVT_W_D: resultR$D_IN = MUX_resultR$write_1__VAL_14;
    WILL_FIRE_RL_doFCVT_D_WU: resultR$D_IN = MUX_resultR$write_1__VAL_15;
    WILL_FIRE_RL_doFCVT_D_W: resultR$D_IN = MUX_resultR$write_1__VAL_16;
    WILL_FIRE_RL_doFSGNJX_D: resultR$D_IN = MUX_resultR$write_1__VAL_17;
    WILL_FIRE_RL_doFSGNJN_D: resultR$D_IN = MUX_resultR$write_1__VAL_18;
    WILL_FIRE_RL_doFSGNJ_D: resultR$D_IN = MUX_resultR$write_1__VAL_19;
    WILL_FIRE_RL_doFCLASS_S: resultR$D_IN = MUX_resultR$write_1__VAL_20;
    WILL_FIRE_RL_doFLE_S: resultR$D_IN = MUX_resultR$write_1__VAL_21;
    WILL_FIRE_RL_doFLT_S: resultR$D_IN = MUX_resultR$write_1__VAL_22;
    WILL_FIRE_RL_doFEQ_S: resultR$D_IN = MUX_resultR$write_1__VAL_23;
    WILL_FIRE_RL_doFMV_X_W: resultR$D_IN = MUX_resultR$write_1__VAL_24;
    WILL_FIRE_RL_doFMV_W_X: resultR$D_IN = MUX_resultR$write_1__VAL_25;
    WILL_FIRE_RL_doFMAX_S: resultR$D_IN = MUX_resultR$write_1__VAL_26;
    WILL_FIRE_RL_doFMIN_S: resultR$D_IN = MUX_resultR$write_1__VAL_27;
    WILL_FIRE_RL_doFCVT_WU_S: resultR$D_IN = MUX_resultR$write_1__VAL_28;
    WILL_FIRE_RL_doFCVT_W_S: resultR$D_IN = MUX_resultR$write_1__VAL_29;
    WILL_FIRE_RL_doFCVT_S_WU: resultR$D_IN = MUX_resultR$write_1__VAL_30;
    WILL_FIRE_RL_doFCVT_S_W: resultR$D_IN = MUX_resultR$write_1__VAL_31;
    WILL_FIRE_RL_doFSGNJX_S: resultR$D_IN = MUX_resultR$write_1__VAL_32;
    WILL_FIRE_RL_doFSGNJN_S: resultR$D_IN = MUX_resultR$write_1__VAL_33;
    WILL_FIRE_RL_doFSGNJ_S: resultR$D_IN = MUX_resultR$write_1__VAL_34;
    default: resultR$D_IN = 70'h2AAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign resultR$EN =
	     EN_req || WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFSGNJ_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_rl_get_fpu_result ;

  // register stateR
  always@(EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  WILL_FIRE_RL_doFCLASS_D or
	  WILL_FIRE_RL_doFMV_X_D or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  WILL_FIRE_RL_doFLT_D or
	  WILL_FIRE_RL_doFEQ_D or
	  WILL_FIRE_RL_doFMAX_D or
	  WILL_FIRE_RL_doFMIN_D or
	  WILL_FIRE_RL_doFCVT_D_S or
	  WILL_FIRE_RL_doFCVT_S_D or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  WILL_FIRE_RL_doFCVT_W_D or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  WILL_FIRE_RL_doFCVT_D_W or
	  WILL_FIRE_RL_doFSGNJX_D or
	  WILL_FIRE_RL_doFSGNJN_D or
	  WILL_FIRE_RL_doFSGNJ_D or
	  WILL_FIRE_RL_doFNMSUB_D or
	  WILL_FIRE_RL_doFNMADD_D or
	  WILL_FIRE_RL_doFMSUB_D or
	  WILL_FIRE_RL_doFMADD_D or
	  WILL_FIRE_RL_doFMUL_D or
	  WILL_FIRE_RL_doFSUB_D or
	  WILL_FIRE_RL_doFADD_D or
	  WILL_FIRE_RL_doFCLASS_S or
	  WILL_FIRE_RL_doFLE_S or
	  WILL_FIRE_RL_doFLT_S or
	  WILL_FIRE_RL_doFEQ_S or
	  WILL_FIRE_RL_doFMV_X_W or
	  WILL_FIRE_RL_doFMV_W_X or
	  WILL_FIRE_RL_doFMAX_S or
	  WILL_FIRE_RL_doFMIN_S or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  WILL_FIRE_RL_doFCVT_W_S or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  WILL_FIRE_RL_doFCVT_S_W or
	  WILL_FIRE_RL_doFSGNJX_S or
	  WILL_FIRE_RL_doFSGNJN_S or
	  WILL_FIRE_RL_doFSGNJ_S or
	  WILL_FIRE_RL_doFNMSUB_S or
	  WILL_FIRE_RL_doFNMADD_S or
	  WILL_FIRE_RL_doFMSUB_S or
	  WILL_FIRE_RL_doFMADD_S or
	  WILL_FIRE_RL_doFMUL_S or
	  WILL_FIRE_RL_doFSUB_S or WILL_FIRE_RL_doFADD_S)
  case (1'b1)
    EN_req: stateR$D_IN = 2'd0;
    WILL_FIRE_RL_rl_get_fpu_result || WILL_FIRE_RL_doFCLASS_D ||
    WILL_FIRE_RL_doFMV_X_D ||
    WILL_FIRE_RL_doFMV_D_X ||
    WILL_FIRE_RL_doFLE_D ||
    WILL_FIRE_RL_doFLT_D ||
    WILL_FIRE_RL_doFEQ_D ||
    WILL_FIRE_RL_doFMAX_D ||
    WILL_FIRE_RL_doFMIN_D ||
    WILL_FIRE_RL_doFCVT_D_S ||
    WILL_FIRE_RL_doFCVT_S_D ||
    WILL_FIRE_RL_doFCVT_WU_D ||
    WILL_FIRE_RL_doFCVT_W_D ||
    WILL_FIRE_RL_doFCVT_D_WU ||
    WILL_FIRE_RL_doFCVT_D_W ||
    WILL_FIRE_RL_doFSGNJX_D ||
    WILL_FIRE_RL_doFSGNJN_D ||
    WILL_FIRE_RL_doFSGNJ_D:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFNMSUB_D || WILL_FIRE_RL_doFNMADD_D ||
    WILL_FIRE_RL_doFMSUB_D ||
    WILL_FIRE_RL_doFMADD_D ||
    WILL_FIRE_RL_doFMUL_D ||
    WILL_FIRE_RL_doFSUB_D ||
    WILL_FIRE_RL_doFADD_D:
	stateR$D_IN = 2'd1;
    WILL_FIRE_RL_doFCLASS_S || WILL_FIRE_RL_doFLE_S || WILL_FIRE_RL_doFLT_S ||
    WILL_FIRE_RL_doFEQ_S ||
    WILL_FIRE_RL_doFMV_X_W ||
    WILL_FIRE_RL_doFMV_W_X ||
    WILL_FIRE_RL_doFMAX_S ||
    WILL_FIRE_RL_doFMIN_S ||
    WILL_FIRE_RL_doFCVT_WU_S ||
    WILL_FIRE_RL_doFCVT_W_S ||
    WILL_FIRE_RL_doFCVT_S_WU ||
    WILL_FIRE_RL_doFCVT_S_W ||
    WILL_FIRE_RL_doFSGNJX_S ||
    WILL_FIRE_RL_doFSGNJN_S ||
    WILL_FIRE_RL_doFSGNJ_S:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFNMSUB_S || WILL_FIRE_RL_doFNMADD_S ||
    WILL_FIRE_RL_doFMSUB_S ||
    WILL_FIRE_RL_doFMADD_S ||
    WILL_FIRE_RL_doFMUL_S ||
    WILL_FIRE_RL_doFSUB_S ||
    WILL_FIRE_RL_doFADD_S:
	stateR$D_IN = 2'd1;
    default: stateR$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign stateR$EN =
	     EN_req || WILL_FIRE_RL_doFNMSUB_D || WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFADD_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;

  // submodule fpu
  always@(WILL_FIRE_RL_doFADD_S or
	  MUX_fpu$request_put_1__VAL_1 or
	  WILL_FIRE_RL_doFSUB_S or
	  MUX_fpu$request_put_1__VAL_2 or
	  WILL_FIRE_RL_doFMUL_S or
	  MUX_fpu$request_put_1__VAL_3 or
	  WILL_FIRE_RL_doFMADD_S or
	  MUX_fpu$request_put_1__VAL_4 or
	  WILL_FIRE_RL_doFMSUB_S or
	  MUX_fpu$request_put_1__VAL_5 or
	  WILL_FIRE_RL_doFNMADD_S or
	  MUX_fpu$request_put_1__VAL_6 or
	  WILL_FIRE_RL_doFNMSUB_S or
	  MUX_fpu$request_put_1__VAL_7 or
	  WILL_FIRE_RL_doFADD_D or
	  MUX_fpu$request_put_1__VAL_8 or
	  WILL_FIRE_RL_doFSUB_D or
	  MUX_fpu$request_put_1__VAL_9 or
	  WILL_FIRE_RL_doFMUL_D or
	  MUX_fpu$request_put_1__VAL_10 or
	  WILL_FIRE_RL_doFMADD_D or
	  MUX_fpu$request_put_1__VAL_11 or
	  WILL_FIRE_RL_doFMSUB_D or
	  MUX_fpu$request_put_1__VAL_12 or
	  WILL_FIRE_RL_doFNMADD_D or
	  MUX_fpu$request_put_1__VAL_13 or
	  WILL_FIRE_RL_doFNMSUB_D or MUX_fpu$request_put_1__VAL_14)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_1;
      WILL_FIRE_RL_doFSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_2;
      WILL_FIRE_RL_doFMUL_S: fpu$request_put = MUX_fpu$request_put_1__VAL_3;
      WILL_FIRE_RL_doFMADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_4;
      WILL_FIRE_RL_doFMSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_5;
      WILL_FIRE_RL_doFNMADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_6;
      WILL_FIRE_RL_doFNMSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_7;
      WILL_FIRE_RL_doFADD_D: fpu$request_put = MUX_fpu$request_put_1__VAL_8;
      WILL_FIRE_RL_doFSUB_D: fpu$request_put = MUX_fpu$request_put_1__VAL_9;
      WILL_FIRE_RL_doFMUL_D: fpu$request_put = MUX_fpu$request_put_1__VAL_10;
      WILL_FIRE_RL_doFMADD_D: fpu$request_put = MUX_fpu$request_put_1__VAL_11;
      WILL_FIRE_RL_doFMSUB_D: fpu$request_put = MUX_fpu$request_put_1__VAL_12;
      WILL_FIRE_RL_doFNMADD_D:
	  fpu$request_put = MUX_fpu$request_put_1__VAL_13;
      WILL_FIRE_RL_doFNMSUB_D:
	  fpu$request_put = MUX_fpu$request_put_1__VAL_14;
      default: fpu$request_put =
		   202'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fpu$EN_request_put =
	     WILL_FIRE_RL_doFADD_S || WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFNMSUB_D ;
  assign fpu$EN_response_get = CAN_FIRE_RL_rl_get_fpu_result ;

  // submodule frmFpuF
  assign frmFpuF$D_IN = 1'b0 ;
  assign frmFpuF$ENQ = 1'b0 ;
  assign frmFpuF$DEQ = 1'b0 ;
  assign frmFpuF$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q44 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1961 ?
	       _theResult___snd__h68806 :
	       _theResult____h60636 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BIT_ETC__q77 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BITS_1_ETC___d3130 ?
	       _theResult___snd__h127349 :
	       _theResult____h119050 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q49 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2381 ?
	       _theResult___snd__h86545 :
	       _theResult____h78246 ;
  assign IF_0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ__ETC__q74 =
	     _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d2844 ?
	       _theResult___snd__h117774 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ__ETC__q80 =
	     _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d3175 ?
	       _theResult___snd__h117774 :
	       _theResult___snd__h136059 ;
  assign IF_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_ETC__q46 =
	     _0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2097 ?
	       _theResult___snd__h77376 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_ETC__q52 =
	     _0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2426 ?
	       _theResult___snd__h77376 :
	       _theResult___snd__h95139 ;
  assign IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_ETC___d2130 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1727 ?
	       ((_theResult___fst_exp__h68743 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1999) :
	       ((_theResult___fst_exp__h77387 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2128) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d1201 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1160 ?
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1179 :
	       ((x__h35939[10:0] == 11'd2047) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1199) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d1304 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1160 ?
	       guard__h35236 != 2'b0 :
	       x__h35939[10:0] != 11'd2047 && guard__h35924 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d294 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d245 ?
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d272 :
	       ((x__h7540[7:0] == 8'd255) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d292) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d432 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d245 ?
	       guard__h7037 != 2'b0 :
	       x__h7540[7:0] != 8'd255 && guard__h7525 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THE_ETC___d1471 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1351 ?
	       guard__h44816 != 2'b0 :
	       x__h45518[10:0] != 11'd2047 && guard__h45503 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THE_ETC___d730 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d576 ?
	       guard__h13100 != 2'b0 :
	       x__h13599[7:0] != 8'd255 && guard__h13584 != 2'b0 ;
  assign IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1959 =
	     (_theResult____h60636[56] ?
		6'd0 :
		(_theResult____h60636[55] ?
		   6'd1 :
		   (_theResult____h60636[54] ?
		      6'd2 :
		      (_theResult____h60636[53] ?
			 6'd3 :
			 (_theResult____h60636[52] ?
			    6'd4 :
			    (_theResult____h60636[51] ?
			       6'd5 :
			       (_theResult____h60636[50] ?
				  6'd6 :
				  (_theResult____h60636[49] ?
				     6'd7 :
				     (_theResult____h60636[48] ?
					6'd8 :
					(_theResult____h60636[47] ?
					   6'd9 :
					   (_theResult____h60636[46] ?
					      6'd10 :
					      (_theResult____h60636[45] ?
						 6'd11 :
						 (_theResult____h60636[44] ?
						    6'd12 :
						    (_theResult____h60636[43] ?
						       6'd13 :
						       (_theResult____h60636[42] ?
							  6'd14 :
							  (_theResult____h60636[41] ?
							     6'd15 :
							     (_theResult____h60636[40] ?
								6'd16 :
								(_theResult____h60636[39] ?
								   6'd17 :
								   (_theResult____h60636[38] ?
								      6'd18 :
								      (_theResult____h60636[37] ?
									 6'd19 :
									 (_theResult____h60636[36] ?
									    6'd20 :
									    (_theResult____h60636[35] ?
									       6'd21 :
									       (_theResult____h60636[34] ?
										  6'd22 :
										  (_theResult____h60636[33] ?
										     6'd23 :
										     (_theResult____h60636[32] ?
											6'd24 :
											(_theResult____h60636[31] ?
											   6'd25 :
											   (_theResult____h60636[30] ?
											      6'd26 :
											      (_theResult____h60636[29] ?
												 6'd27 :
												 (_theResult____h60636[28] ?
												    6'd28 :
												    (_theResult____h60636[27] ?
												       6'd29 :
												       (_theResult____h60636[26] ?
													  6'd30 :
													  (_theResult____h60636[25] ?
													     6'd31 :
													     (_theResult____h60636[24] ?
														6'd32 :
														(_theResult____h60636[23] ?
														   6'd33 :
														   (_theResult____h60636[22] ?
														      6'd34 :
														      (_theResult____h60636[21] ?
															 6'd35 :
															 (_theResult____h60636[20] ?
															    6'd36 :
															    (_theResult____h60636[19] ?
															       6'd37 :
															       (_theResult____h60636[18] ?
																  6'd38 :
																  (_theResult____h60636[17] ?
																     6'd39 :
																     (_theResult____h60636[16] ?
																	6'd40 :
																	(_theResult____h60636[15] ?
																	   6'd41 :
																	   (_theResult____h60636[14] ?
																	      6'd42 :
																	      (_theResult____h60636[13] ?
																		 6'd43 :
																		 (_theResult____h60636[12] ?
																		    6'd44 :
																		    (_theResult____h60636[11] ?
																		       6'd45 :
																		       (_theResult____h60636[10] ?
																			  6'd46 :
																			  (_theResult____h60636[9] ?
																			     6'd47 :
																			     (_theResult____h60636[8] ?
																				6'd48 :
																				(_theResult____h60636[7] ?
																				   6'd49 :
																				   (_theResult____h60636[6] ?
																				      6'd50 :
																				      (_theResult____h60636[5] ?
																					 6'd51 :
																					 (_theResult____h60636[4] ?
																					    6'd52 :
																					    (_theResult____h60636[3] ?
																					       6'd53 :
																					       (_theResult____h60636[2] ?
																						  6'd54 :
																						  (_theResult____h60636[1] ?
																						     6'd55 :
																						     (_theResult____h60636[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_requestR_BITS_158_TO_151_ETC___d3128 =
	     (_theResult____h119050[56] ?
		6'd0 :
		(_theResult____h119050[55] ?
		   6'd1 :
		   (_theResult____h119050[54] ?
		      6'd2 :
		      (_theResult____h119050[53] ?
			 6'd3 :
			 (_theResult____h119050[52] ?
			    6'd4 :
			    (_theResult____h119050[51] ?
			       6'd5 :
			       (_theResult____h119050[50] ?
				  6'd6 :
				  (_theResult____h119050[49] ?
				     6'd7 :
				     (_theResult____h119050[48] ?
					6'd8 :
					(_theResult____h119050[47] ?
					   6'd9 :
					   (_theResult____h119050[46] ?
					      6'd10 :
					      (_theResult____h119050[45] ?
						 6'd11 :
						 (_theResult____h119050[44] ?
						    6'd12 :
						    (_theResult____h119050[43] ?
						       6'd13 :
						       (_theResult____h119050[42] ?
							  6'd14 :
							  (_theResult____h119050[41] ?
							     6'd15 :
							     (_theResult____h119050[40] ?
								6'd16 :
								(_theResult____h119050[39] ?
								   6'd17 :
								   (_theResult____h119050[38] ?
								      6'd18 :
								      (_theResult____h119050[37] ?
									 6'd19 :
									 (_theResult____h119050[36] ?
									    6'd20 :
									    (_theResult____h119050[35] ?
									       6'd21 :
									       (_theResult____h119050[34] ?
										  6'd22 :
										  (_theResult____h119050[33] ?
										     6'd23 :
										     (_theResult____h119050[32] ?
											6'd24 :
											(_theResult____h119050[31] ?
											   6'd25 :
											   (_theResult____h119050[30] ?
											      6'd26 :
											      (_theResult____h119050[29] ?
												 6'd27 :
												 (_theResult____h119050[28] ?
												    6'd28 :
												    (_theResult____h119050[27] ?
												       6'd29 :
												       (_theResult____h119050[26] ?
													  6'd30 :
													  (_theResult____h119050[25] ?
													     6'd31 :
													     (_theResult____h119050[24] ?
														6'd32 :
														(_theResult____h119050[23] ?
														   6'd33 :
														   (_theResult____h119050[22] ?
														      6'd34 :
														      (_theResult____h119050[21] ?
															 6'd35 :
															 (_theResult____h119050[20] ?
															    6'd36 :
															    (_theResult____h119050[19] ?
															       6'd37 :
															       (_theResult____h119050[18] ?
																  6'd38 :
																  (_theResult____h119050[17] ?
																     6'd39 :
																     (_theResult____h119050[16] ?
																	6'd40 :
																	(_theResult____h119050[15] ?
																	   6'd41 :
																	   (_theResult____h119050[14] ?
																	      6'd42 :
																	      (_theResult____h119050[13] ?
																		 6'd43 :
																		 (_theResult____h119050[12] ?
																		    6'd44 :
																		    (_theResult____h119050[11] ?
																		       6'd45 :
																		       (_theResult____h119050[10] ?
																			  6'd46 :
																			  (_theResult____h119050[9] ?
																			     6'd47 :
																			     (_theResult____h119050[8] ?
																				6'd48 :
																				(_theResult____h119050[7] ?
																				   6'd49 :
																				   (_theResult____h119050[6] ?
																				      6'd50 :
																				      (_theResult____h119050[5] ?
																					 6'd51 :
																					 (_theResult____h119050[4] ?
																					    6'd52 :
																					    (_theResult____h119050[3] ?
																					       6'd53 :
																					       (_theResult____h119050[2] ?
																						  6'd54 :
																						  (_theResult____h119050[1] ?
																						     6'd55 :
																						     (_theResult____h119050[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2379 =
	     (_theResult____h78246[56] ?
		6'd0 :
		(_theResult____h78246[55] ?
		   6'd1 :
		   (_theResult____h78246[54] ?
		      6'd2 :
		      (_theResult____h78246[53] ?
			 6'd3 :
			 (_theResult____h78246[52] ?
			    6'd4 :
			    (_theResult____h78246[51] ?
			       6'd5 :
			       (_theResult____h78246[50] ?
				  6'd6 :
				  (_theResult____h78246[49] ?
				     6'd7 :
				     (_theResult____h78246[48] ?
					6'd8 :
					(_theResult____h78246[47] ?
					   6'd9 :
					   (_theResult____h78246[46] ?
					      6'd10 :
					      (_theResult____h78246[45] ?
						 6'd11 :
						 (_theResult____h78246[44] ?
						    6'd12 :
						    (_theResult____h78246[43] ?
						       6'd13 :
						       (_theResult____h78246[42] ?
							  6'd14 :
							  (_theResult____h78246[41] ?
							     6'd15 :
							     (_theResult____h78246[40] ?
								6'd16 :
								(_theResult____h78246[39] ?
								   6'd17 :
								   (_theResult____h78246[38] ?
								      6'd18 :
								      (_theResult____h78246[37] ?
									 6'd19 :
									 (_theResult____h78246[36] ?
									    6'd20 :
									    (_theResult____h78246[35] ?
									       6'd21 :
									       (_theResult____h78246[34] ?
										  6'd22 :
										  (_theResult____h78246[33] ?
										     6'd23 :
										     (_theResult____h78246[32] ?
											6'd24 :
											(_theResult____h78246[31] ?
											   6'd25 :
											   (_theResult____h78246[30] ?
											      6'd26 :
											      (_theResult____h78246[29] ?
												 6'd27 :
												 (_theResult____h78246[28] ?
												    6'd28 :
												    (_theResult____h78246[27] ?
												       6'd29 :
												       (_theResult____h78246[26] ?
													  6'd30 :
													  (_theResult____h78246[25] ?
													     6'd31 :
													     (_theResult____h78246[24] ?
														6'd32 :
														(_theResult____h78246[23] ?
														   6'd33 :
														   (_theResult____h78246[22] ?
														      6'd34 :
														      (_theResult____h78246[21] ?
															 6'd35 :
															 (_theResult____h78246[20] ?
															    6'd36 :
															    (_theResult____h78246[19] ?
															       6'd37 :
															       (_theResult____h78246[18] ?
																  6'd38 :
																  (_theResult____h78246[17] ?
																     6'd39 :
																     (_theResult____h78246[16] ?
																	6'd40 :
																	(_theResult____h78246[15] ?
																	   6'd41 :
																	   (_theResult____h78246[14] ?
																	      6'd42 :
																	      (_theResult____h78246[13] ?
																		 6'd43 :
																		 (_theResult____h78246[12] ?
																		    6'd44 :
																		    (_theResult____h78246[11] ?
																		       6'd45 :
																		       (_theResult____h78246[10] ?
																			  6'd46 :
																			  (_theResult____h78246[9] ?
																			     6'd47 :
																			     (_theResult____h78246[8] ?
																				6'd48 :
																				(_theResult____h78246[7] ?
																				   6'd49 :
																				   (_theResult____h78246[6] ?
																				      6'd50 :
																				      (_theResult____h78246[5] ?
																					 6'd51 :
																					 (_theResult____h78246[4] ?
																					    6'd52 :
																					    (_theResult____h78246[3] ?
																					       6'd53 :
																					       (_theResult____h78246[2] ?
																						  6'd54 :
																						  (_theResult____h78246[1] ?
																						     6'd55 :
																						     (_theResult____h78246[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2484 =
	     (guard__h60646 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h68743 :
	       _theResult___exp__h69266 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2486 =
	     (guard__h60646 == 2'b0) ?
	       _theResult___fst_exp__h68743 :
	       (requestR[191] ?
		  _theResult___exp__h69266 :
		  _theResult___fst_exp__h68743) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2604 =
	     (guard__h60646 == 2'b0 || requestR[191]) ?
	       sfdin__h68737[56:34] :
	       _theResult___sfd__h69267 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2606 =
	     (guard__h60646 == 2'b0) ?
	       sfdin__h68737[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h69267 :
		  sfdin__h68737[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3269 =
	     (guard__h119060 == 2'b0 || requestR[159]) ?
	       _theResult___fst_exp__h127286 :
	       _theResult___exp__h128012 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3271 =
	     (guard__h119060 == 2'b0) ?
	       _theResult___fst_exp__h127286 :
	       (requestR[159] ?
		  _theResult___exp__h128012 :
		  _theResult___fst_exp__h127286) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3348 =
	     (guard__h119060 == 2'b0 || requestR[159]) ?
	       sfdin__h127280[56:5] :
	       _theResult___sfd__h128013 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3350 =
	     (guard__h119060 == 2'b0) ?
	       sfdin__h127280[56:5] :
	       (requestR[159] ?
		  _theResult___sfd__h128013 :
		  sfdin__h127280[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2548 =
	     (guard__h78256 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h86482 :
	       _theResult___exp__h87005 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2550 =
	     (guard__h78256 == 2'b0) ?
	       _theResult___fst_exp__h86482 :
	       (requestR[191] ?
		  _theResult___exp__h87005 :
		  _theResult___fst_exp__h86482) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2644 =
	     (guard__h78256 == 2'b0 || requestR[191]) ?
	       sfdin__h86476[56:34] :
	       _theResult___sfd__h87006 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2646 =
	     (guard__h78256 == 2'b0) ?
	       sfdin__h86476[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h87006 :
		  sfdin__h86476[56:34]) ;
  assign IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3233 =
	     (guard__h109824 == 2'b0 || requestR[159]) ?
	       _theResult___fst_exp__h117785 :
	       _theResult___exp__h118437 ;
  assign IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3235 =
	     (guard__h109824 == 2'b0) ?
	       _theResult___fst_exp__h117785 :
	       (requestR[159] ?
		  _theResult___exp__h118437 :
		  _theResult___fst_exp__h117785) ;
  assign IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3297 =
	     (guard__h128085 == 2'b0 || requestR[159]) ?
	       _theResult___fst_exp__h136075 :
	       _theResult___exp__h136752 ;
  assign IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3299 =
	     (guard__h128085 == 2'b0) ?
	       _theResult___fst_exp__h136075 :
	       (requestR[159] ?
		  _theResult___exp__h136752 :
		  _theResult___fst_exp__h136075) ;
  assign IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3324 =
	     (guard__h109824 == 2'b0 || requestR[159]) ?
	       _theResult___snd__h117736[56:5] :
	       _theResult___sfd__h118438 ;
  assign IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3326 =
	     (guard__h109824 == 2'b0) ?
	       _theResult___snd__h117736[56:5] :
	       (requestR[159] ?
		  _theResult___sfd__h118438 :
		  _theResult___snd__h117736[56:5]) ;
  assign IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3364 =
	     (guard__h128085 == 2'b0 || requestR[159]) ?
	       _theResult___snd__h136021[56:5] :
	       _theResult___sfd__h136753 ;
  assign IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3366 =
	     (guard__h128085 == 2'b0) ?
	       _theResult___snd__h136021[56:5] :
	       (requestR[159] ?
		  _theResult___sfd__h136753 :
		  _theResult___snd__h136021[56:5]) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2512 =
	     (guard__h69339 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h77387 :
	       _theResult___exp__h77836 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2514 =
	     (guard__h69339 == 2'b0) ?
	       _theResult___fst_exp__h77387 :
	       (requestR[191] ?
		  _theResult___exp__h77836 :
		  _theResult___fst_exp__h77387) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2576 =
	     (guard__h87078 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h95155 :
	       _theResult___exp__h95629 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2578 =
	     (guard__h87078 == 2'b0) ?
	       _theResult___fst_exp__h95155 :
	       (requestR[191] ?
		  _theResult___exp__h95629 :
		  _theResult___fst_exp__h95155) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2620 =
	     (guard__h69339 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h77338[56:34] :
	       _theResult___sfd__h77837 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2622 =
	     (guard__h69339 == 2'b0) ?
	       _theResult___snd__h77338[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h77837 :
		  _theResult___snd__h77338[56:34]) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2660 =
	     (guard__h87078 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h95101[56:34] :
	       _theResult___sfd__h95630 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2662 =
	     (guard__h87078 == 2'b0) ?
	       _theResult___snd__h95101[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h95630 :
		  _theResult___snd__h95101[56:34]) ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1220 =
	     (guard__h35236 == 2'b0) ?
	       11'd0 :
	       (requestR[159] ? _theResult___exp__h35849 : 11'd0) ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1243 =
	     (guard__h35924 == 2'b0 || requestR[159]) ?
	       x__h35939[10:0] :
	       _theResult___exp__h36563 ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1245 =
	     (guard__h35924 == 2'b0) ?
	       x__h35939[10:0] :
	       (requestR[159] ? _theResult___exp__h36563 : x__h35939[10:0]) ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1263 =
	     (guard__h35236 == 2'b0 || requestR[159]) ?
	       sfd___3__h35226[54:3] :
	       _theResult___sfd__h35850 ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1265 =
	     (guard__h35236 == 2'b0) ?
	       sfd___3__h35226[54:3] :
	       (requestR[159] ?
		  _theResult___sfd__h35850 :
		  sfd___3__h35226[54:3]) ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1278 =
	     (guard__h35924 == 2'b0 || requestR[159]) ?
	       sfd___3__h35226[53:2] :
	       _theResult___sfd__h36564 ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1280 =
	     (guard__h35924 == 2'b0) ?
	       sfd___3__h35226[53:2] :
	       (requestR[159] ?
		  _theResult___sfd__h36564 :
		  sfd___3__h35226[53:2]) ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d314 =
	     (guard__h7037 == 2'b0) ?
	       8'd0 :
	       (requestR[159] ? _theResult___exp__h7450 : 8'd0) ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d337 =
	     (guard__h7525 == 2'b0 || requestR[159]) ?
	       x__h7540[7:0] :
	       _theResult___exp__h7961 ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d339 =
	     (guard__h7525 == 2'b0) ?
	       x__h7540[7:0] :
	       (requestR[159] ? _theResult___exp__h7961 : x__h7540[7:0]) ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d357 =
	     (guard__h7037 == 2'b0 || requestR[159]) ?
	       sfd___3__h7027[31:9] :
	       _theResult___sfd__h7451 ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d359 =
	     (guard__h7037 == 2'b0) ?
	       sfd___3__h7027[31:9] :
	       (requestR[159] ?
		  _theResult___sfd__h7451 :
		  sfd___3__h7027[31:9]) ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d372 =
	     (guard__h7525 == 2'b0 || requestR[159]) ?
	       sfd___3__h7027[30:8] :
	       _theResult___sfd__h7962 ;
  assign IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d374 =
	     (guard__h7525 == 2'b0) ?
	       sfd___3__h7027[30:8] :
	       (requestR[159] ?
		  _theResult___sfd__h7962 :
		  sfd___3__h7027[30:8]) ;
  assign IF_IF_requestR_BIT_159_2_THEN_NEG_requestR_BIT_ETC___d1152 =
	     sfd__h2123[31] ?
	       6'd0 :
	       (sfd__h2123[30] ?
		  6'd1 :
		  (sfd__h2123[29] ?
		     6'd2 :
		     (sfd__h2123[28] ?
			6'd3 :
			(sfd__h2123[27] ?
			   6'd4 :
			   (sfd__h2123[26] ?
			      6'd5 :
			      (sfd__h2123[25] ?
				 6'd6 :
				 (sfd__h2123[24] ?
				    6'd7 :
				    (sfd__h2123[23] ?
				       6'd8 :
				       (sfd__h2123[22] ?
					  6'd9 :
					  (sfd__h2123[21] ?
					     6'd10 :
					     (sfd__h2123[20] ?
						6'd11 :
						(sfd__h2123[19] ?
						   6'd12 :
						   (sfd__h2123[18] ?
						      6'd13 :
						      (sfd__h2123[17] ?
							 6'd14 :
							 (sfd__h2123[16] ?
							    6'd15 :
							    (sfd__h2123[15] ?
							       6'd16 :
							       (sfd__h2123[14] ?
								  6'd17 :
								  (sfd__h2123[13] ?
								     6'd18 :
								     (sfd__h2123[12] ?
									6'd19 :
									(sfd__h2123[11] ?
									   6'd20 :
									   (sfd__h2123[10] ?
									      6'd21 :
									      (sfd__h2123[9] ?
										 6'd22 :
										 (sfd__h2123[8] ?
										    6'd23 :
										    (sfd__h2123[7] ?
										       6'd24 :
										       (sfd__h2123[6] ?
											  6'd25 :
											  (sfd__h2123[5] ?
											     6'd26 :
											     (sfd__h2123[4] ?
												6'd27 :
												(sfd__h2123[3] ?
												   6'd28 :
												   (sfd__h2123[2] ?
												      6'd29 :
												      (sfd__h2123[1] ?
													 6'd30 :
													 (sfd__h2123[0] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_BIT_159_2_THEN_NEG_requestR_BIT_ETC___d236 =
	     sfd__h2123[31] ?
	       6'd0 :
	       (sfd__h2123[30] ?
		  6'd1 :
		  (sfd__h2123[29] ?
		     6'd2 :
		     (sfd__h2123[28] ?
			6'd3 :
			(sfd__h2123[27] ?
			   6'd4 :
			   (sfd__h2123[26] ?
			      6'd5 :
			      (sfd__h2123[25] ?
				 6'd6 :
				 (sfd__h2123[24] ?
				    6'd7 :
				    (sfd__h2123[23] ?
				       6'd8 :
				       (sfd__h2123[22] ?
					  6'd9 :
					  (sfd__h2123[21] ?
					     6'd10 :
					     (sfd__h2123[20] ?
						6'd11 :
						(sfd__h2123[19] ?
						   6'd12 :
						   (sfd__h2123[18] ?
						      6'd13 :
						      (sfd__h2123[17] ?
							 6'd14 :
							 (sfd__h2123[16] ?
							    6'd15 :
							    (sfd__h2123[15] ?
							       6'd16 :
							       (sfd__h2123[14] ?
								  6'd17 :
								  (sfd__h2123[13] ?
								     6'd18 :
								     (sfd__h2123[12] ?
									6'd19 :
									(sfd__h2123[11] ?
									   6'd20 :
									   (sfd__h2123[10] ?
									      6'd21 :
									      (sfd__h2123[9] ?
										 6'd22 :
										 (sfd__h2123[8] ?
										    6'd23 :
										    (sfd__h2123[7] ?
										       6'd24 :
										       (sfd__h2123[6] ?
											  6'd25 :
											  (sfd__h2123[5] ?
											     6'd26 :
											     (sfd__h2123[4] ?
												6'd27 :
												(sfd__h2123[3] ?
												   6'd28 :
												   (sfd__h2123[2] ?
												      6'd29 :
												      (sfd__h2123[1] ?
													 6'd30 :
													 (sfd__h2123[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d817 =
	     NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d790 ?
	       (IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d811 ?
		  ((x__h15356[56:25] == 32'h7FFFFFFF) ?
		     x__h15356[56:25] :
		     x__h15356[56:25] + 32'd1) :
		  x__h15356[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d819 =
	     (NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d755 ==
	      20'd1048545) ?
	       ((_theResult_____2__h14621[32:31] == 2'b11) ?
		  _theResult_____2__h14621[31:0] :
		  IF_requestR_BIT_159_2_THEN_2147483648_ELSE_214_ETC___d750) :
	       (NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d788[19] ?
		  IF_requestR_BIT_159_2_THEN_2147483648_ELSE_214_ETC___d750 :
		  IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d817) ;
  assign IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d843 =
	     (NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d755 ==
	      20'd1048545) ?
	       _theResult_____2__h14621[32:31] == 2'b11 &&
	       guard__h14619 != 2'd0 :
	       !NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d788[19] &&
	       (!NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d790 ||
		guard__h15170 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d880 =
	     NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d855 ?
	       (IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d874 ?
		  ((x__h16394[56:25] == 32'hFFFFFFFF) ?
		     x__h16394[56:25] :
		     x__h16394[56:25] + 32'd1) :
		  x__h16394[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1557 =
	     NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1530 ?
	       (IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1551 ?
		  ((x__h47474[85:54] == 32'h7FFFFFFF) ?
		     x__h47474[85:54] :
		     x__h47474[85:54] + 32'd1) :
		  x__h47474[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1559 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1495 ==
	      24'd16777185) ?
	       ((_theResult_____2__h46739[32:31] == 2'b11) ?
		  _theResult_____2__h46739[31:0] :
		  IF_requestR_BIT_191_111_THEN_2147483648_ELSE_2_ETC___d1490) :
	       (NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1528[23] ?
		  IF_requestR_BIT_191_111_THEN_2147483648_ELSE_2_ETC___d1490 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1557) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1583 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1495 ==
	      24'd16777185) ?
	       _theResult_____2__h46739[32:31] == 2'b11 &&
	       guard__h46737 != 2'd0 :
	       !NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1528[23] &&
	       (!NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1530 ||
		guard__h47288 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1620 =
	     NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1595 ?
	       (IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1614 ?
		  ((x__h48495[85:54] == 32'hFFFFFFFF) ?
		     x__h48495[85:54] :
		     x__h48495[85:54] + 32'd1) :
		  x__h48495[85:54]) :
	       32'd0 ;
  assign IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d1202 =
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1156 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1158) ?
	       requestR[159] :
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d1201 ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_ETC___d2878 =
	     (!_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2814 ||
	      _3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2816 ||
	      _theResult___fst_exp__h117785 == 11'd2047) ?
	       requestR[159] :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2877 ;
  assign IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3174 =
	     ((SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC__q76[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC__q79[10],
		  SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC__q79 }) -
	     12'd3074 ;
  assign IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3209 =
	     SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2881 ?
	       ((_theResult___fst_exp__h127286 == 11'd2047) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d3166) :
	       ((_theResult___fst_exp__h136075 == 11'd2047) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d3207) ;
  assign IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3432 =
	     SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2881 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BITS_1_ETC___d3406[2] :
	       _theResult___fst_exp__h136814 == 11'd2047 &&
	       _theResult___fst_sfd__h136815 == 52'd0 ;
  assign IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3444 =
	     SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2881 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BITS_1_ETC___d3406[1] :
	       _theResult___fst_exp__h136075 == 11'd0 &&
	       guard__h128085 != 2'b0 ;
  assign IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3456 =
	     SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2881 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BITS_1_ETC___d3406[0] :
	       _theResult___fst_exp__h136075 != 11'd2047 &&
	       guard__h128085 != 2'b0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2425 =
	     ((SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC__q48[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC__q51[7],
		  SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC__q51 }) -
	     9'd386 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2460 =
	     SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2134 ?
	       ((_theResult___fst_exp__h86482 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2417) :
	       ((_theResult___fst_exp__h95155 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2458) ;
  assign IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2746 =
	     SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2134 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2717[2] :
	       _theResult___fst_exp__h95691 == 8'd255 &&
	       _theResult___fst_sfd__h95692 == 23'd0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2759 =
	     SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2134 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2717[1] :
	       _theResult___fst_exp__h95155 == 8'd0 && guard__h87078 != 2'b0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2772 =
	     SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2134 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2717[0] :
	       _theResult___fst_exp__h95155 != 8'd255 &&
	       guard__h87078 != 2'b0 ;
  assign IF_requestR_BITS_126_TO_116_470_EQ_2047_471_AN_ETC___d3518 =
	     (requestR[126:116] == 11'd2047 && requestR[115] ||
	      requestR_BITS_190_TO_180_483_EQ_0_491_AND_requ_ETC___d3487) ?
	       requestR[191:128] :
	       (requestR_BITS_126_TO_116_470_EQ_0_484_AND_requ_ETC___d3491 ?
		  requestR[127:64] :
		  res__h141429) ;
  assign IF_requestR_BITS_158_TO_151_43_EQ_0_51_AND_req_ETC___d1050 =
	     (requestR[158:151] == 8'd0 && requestR[150:128] == 23'd0) ?
	       res__h25958 :
	       ((requestR[158:151] == 8'd0) ? res__h25965 : res__h25969) ;
  assign IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_39_ETC___d3410 =
	     (requestR[158:151] == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2814 &&
	       !_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2816 &&
	       _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d3389[4] :
	       SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2880 &&
	       SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2881 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BITS_1_ETC___d3406[4] ;
  assign IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_39_ETC___d3420 =
	     (requestR[158:151] == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2814 &&
	       !_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2816 &&
	       _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d3389[3] :
	       SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2880 &&
	       SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2881 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BITS_1_ETC___d3406[3] ;
  assign IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_39_ETC___d3446 =
	     (requestR[158:151] == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2814 &&
	       (_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2816 ||
		_0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d3389[1]) :
	       SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2880 &&
	       IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3444 ;
  assign IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_IF_ETC___d2842 =
	     ((requestR[158:151] == 8'd0) ?
		(requestR[150] ?
		   6'd2 :
		   (requestR[149] ?
		      6'd3 :
		      (requestR[148] ?
			 6'd4 :
			 (requestR[147] ?
			    6'd5 :
			    (requestR[146] ?
			       6'd6 :
			       (requestR[145] ?
				  6'd7 :
				  (requestR[144] ?
				     6'd8 :
				     (requestR[143] ?
					6'd9 :
					(requestR[142] ?
					   6'd10 :
					   (requestR[141] ?
					      6'd11 :
					      (requestR[140] ?
						 6'd12 :
						 (requestR[139] ?
						    6'd13 :
						    (requestR[138] ?
						       6'd14 :
						       (requestR[137] ?
							  6'd15 :
							  (requestR[136] ?
							     6'd16 :
							     (requestR[135] ?
								6'd17 :
								(requestR[134] ?
								   6'd18 :
								   (requestR[133] ?
								      6'd19 :
								      (requestR[132] ?
									 6'd20 :
									 (requestR[131] ?
									    6'd21 :
									    (requestR[130] ?
									       6'd22 :
									       (requestR[129] ?
										  6'd23 :
										  (requestR[128] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_IF_ETC___d3211 =
	     (requestR[158:151] == 8'd0) ?
	       IF_NOT_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_ETC___d2878 :
	       (SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2880 ?
		  IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3209 :
		  requestR[159]) ;
  assign IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_NO_ETC___d3434 =
	     (requestR[158:151] == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2814 ||
	       !_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2816 &&
	       _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d3389[2] :
	       !SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2880 ||
	       IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3432 ;
  assign IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_NO_ETC___d3458 =
	     (requestR[158:151] == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2814 ||
	       !_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2816 &&
	       _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d3389[0] :
	       !SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2880 ||
	       IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3456 ;
  assign IF_requestR_BITS_158_TO_151_43_EQ_255_44_AND_r_ETC___d821 =
	     (requestR[158:151] == 8'd255 && requestR[150:128] == 23'd0) ?
	       IF_requestR_BIT_159_2_THEN_2147483648_ELSE_214_ETC___d750 :
	       ((requestR[158:151] == 8'd0 && requestR[150:128] == 23'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d819) ;
  assign IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d1287 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1156 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1158) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h36628 ;
  assign IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d1454 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1349 ||
	      _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1350) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h46206 ;
  assign IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d348 =
	     (requestR[159:128] == 32'd0 ||
	      !sfd__h2123[31] && !sfd__h2123[30] && !sfd__h2123[29] &&
	      !sfd__h2123[28] &&
	      !sfd__h2123[27] &&
	      !sfd__h2123[26] &&
	      !sfd__h2123[25] &&
	      !sfd__h2123[24] &&
	      !sfd__h2123[23] &&
	      !sfd__h2123[22] &&
	      !sfd__h2123[21] &&
	      !sfd__h2123[20] &&
	      !sfd__h2123[19] &&
	      !sfd__h2123[18] &&
	      !sfd__h2123[17] &&
	      !sfd__h2123[16] &&
	      !sfd__h2123[15] &&
	      !sfd__h2123[14] &&
	      !sfd__h2123[13] &&
	      !sfd__h2123[12] &&
	      !sfd__h2123[11] &&
	      !sfd__h2123[10] &&
	      !sfd__h2123[9] &&
	      !sfd__h2123[8] &&
	      !sfd__h2123[7] &&
	      !sfd__h2123[6] &&
	      !sfd__h2123[5] &&
	      !sfd__h2123[4] &&
	      !sfd__h2123[3] &&
	      !sfd__h2123[2] &&
	      !sfd__h2123[1] &&
	      !sfd__h2123[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8031 ;
  assign IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d650 =
	     (requestR[159:128] == 32'd0 ||
	      !requestR[159] &&
	      NOT_requestR_BIT_158_45_46_AND_NOT_requestR_BI_ETC___d536) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14089 ;
  assign IF_requestR_BITS_190_TO_180_483_EQ_0_491_AND_r_ETC___d3530 =
	     requestR_BITS_190_TO_180_483_EQ_0_491_AND_requ_ETC___d3487 ?
	       requestR[127:64] :
	       (requestR_BITS_126_TO_116_470_EQ_0_484_AND_requ_ETC___d3491 ?
		  requestR[191:128] :
		  res__h145569) ;
  assign IF_requestR_BITS_190_TO_180_483_EQ_0_491_AND_r_ETC___d3603 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       res__h153336 :
	       ((requestR[190:180] == 11'd0) ? res__h153343 : res__h153347) ;
  assign IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2095 =
	     ((requestR[190:180] == 11'd0) ?
		(requestR[179] ?
		   6'd2 :
		   (requestR[178] ?
		      6'd3 :
		      (requestR[177] ?
			 6'd4 :
			 (requestR[176] ?
			    6'd5 :
			    (requestR[175] ?
			       6'd6 :
			       (requestR[174] ?
				  6'd7 :
				  (requestR[173] ?
				     6'd8 :
				     (requestR[172] ?
					6'd9 :
					(requestR[171] ?
					   6'd10 :
					   (requestR[170] ?
					      6'd11 :
					      (requestR[169] ?
						 6'd12 :
						 (requestR[168] ?
						    6'd13 :
						    (requestR[167] ?
						       6'd14 :
						       (requestR[166] ?
							  6'd15 :
							  (requestR[165] ?
							     6'd16 :
							     (requestR[164] ?
								6'd17 :
								(requestR[163] ?
								   6'd18 :
								   (requestR[162] ?
								      6'd19 :
								      (requestR[161] ?
									 6'd20 :
									 (requestR[160] ?
									    6'd21 :
									    (requestR[159] ?
									       6'd22 :
									       (requestR[158] ?
										  6'd23 :
										  (requestR[157] ?
										     6'd24 :
										     (requestR[156] ?
											6'd25 :
											(requestR[155] ?
											   6'd26 :
											   (requestR[154] ?
											      6'd27 :
											      (requestR[153] ?
												 6'd28 :
												 (requestR[152] ?
												    6'd29 :
												    (requestR[151] ?
												       6'd30 :
												       (requestR[150] ?
													  6'd31 :
													  (requestR[149] ?
													     6'd32 :
													     (requestR[148] ?
														6'd33 :
														(requestR[147] ?
														   6'd34 :
														   (requestR[146] ?
														      6'd35 :
														      (requestR[145] ?
															 6'd36 :
															 (requestR[144] ?
															    6'd37 :
															    (requestR[143] ?
															       6'd38 :
															       (requestR[142] ?
																  6'd39 :
																  (requestR[141] ?
																     6'd40 :
																     (requestR[140] ?
																	6'd41 :
																	(requestR[139] ?
																	   6'd42 :
																	   (requestR[138] ?
																	      6'd43 :
																	      (requestR[137] ?
																		 6'd44 :
																		 (requestR[136] ?
																		    6'd45 :
																		    (requestR[135] ?
																		       6'd46 :
																		       (requestR[134] ?
																			  6'd47 :
																			  (requestR[133] ?
																			     6'd48 :
																			     (requestR[132] ?
																				6'd49 :
																				(requestR[131] ?
																				   6'd50 :
																				   (requestR[130] ?
																				      6'd51 :
																				      (requestR[129] ?
																					 6'd52 :
																					 (requestR[128] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2462 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1726 ?
		  IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_ETC___d2130 :
		  requestR[191]) :
	       (SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2133 ?
		  IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2460 :
		  requestR[191]) ;
  assign IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2721 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d2703 :
	       SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2133 &&
	       SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2134 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2717[4] ;
  assign IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2732 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d2728 :
	       SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2133 &&
	       SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2134 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2717[3] ;
  assign IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2748 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_65_ETC___d2740 :
	       !SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2133 ||
	       IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2746 ;
  assign IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2761 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d2755 :
	       SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2133 &&
	       IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2759 ;
  assign IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2774 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_65_ETC___d2768 :
	       !SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2133 ||
	       IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2772 ;
  assign IF_requestR_BITS_190_TO_180_483_EQ_2047_484_AN_ETC___d1561 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_BIT_191_111_THEN_2147483648_ELSE_2_ETC___d1490 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1559) ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1179 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5236_0b0_requestR_BIT_159_0b1_reques_ETC__q27 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d271 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1199 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5924_0b0_requestR_BIT_159_0b1_reques_ETC__q28 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d271 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1519 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h46737 == 2'b10) ?
		  IF_requestR_BIT_191_111_THEN_NEG_0b0_CONCAT_NO_ETC___d1502[53] :
		  guard__h46737 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h46737 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BIT_191_111_THEN_NEG_0b0_CONCAT_NO_ETC___d1502[85] &&
		  guard__h46737 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1551 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h47288 == 2'b10) ?
		  x__h47474[54] :
		  guard__h47288 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h47288 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h47474[85] &&
		  guard__h47288 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1614 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h48277 == 2'b10) ?
		  x__h48495[54] :
		  guard__h48277 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h48277 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1999 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0646_0b0_requestR_BIT_191_0b1_reques_ETC__q70 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d1998 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2128 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9339_0b0_requestR_BIT_191_0b1_reques_ETC__q71 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d1998 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2417 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8256_0b0_requestR_BIT_191_0b1_reques_ETC__q72 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d1998 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2458 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard7078_0b0_requestR_BIT_191_0b1_reques_ETC__q73 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d1998 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d272 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard037_0b0_requestR_BIT_159_0b1_request_ETC__q14 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d271 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d2877 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard09824_0b0_requestR_BIT_159_0b1_reque_ETC__q94 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d271 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d292 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard525_0b0_requestR_BIT_159_0b1_request_ETC__q15 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d271 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d3166 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19060_0b0_requestR_BIT_159_0b1_reque_ETC__q95 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d271 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d3207 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard28085_0b0_requestR_BIT_159_0b1_reque_ETC__q96 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d271 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d779 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h14619 == 2'b10) ?
		  IF_requestR_BIT_159_2_THEN_NEG_0b0_CONCAT_NOT__ETC___d762[24] :
		  guard__h14619 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h14619 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BIT_159_2_THEN_NEG_0b0_CONCAT_NOT__ETC___d762[56] &&
		  guard__h14619 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d811 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h15170 == 2'b10) ?
		  x__h15356[25] :
		  guard__h15170 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h15170 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h15356[56] &&
		  guard__h15170 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d874 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h16176 == 2'b10) ?
		  x__h16394[25] :
		  guard__h16176 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h16176 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1381 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h44816 == 2'b0) ? 11'd0 : _theResult___exp__h45429) :
	       11'd0 ;
  assign IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d605 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h13100 == 2'b0) ? 8'd0 : _theResult___exp__h13510) :
	       8'd0 ;
  assign IF_requestR_BITS_94_TO_87_09_EQ_0_26_AND_reque_ETC___d959 =
	     requestR_BITS_94_TO_87_09_EQ_0_26_AND_requestR_ETC___d933 ?
	       requestR[95:64] :
	       (NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d957 ?
		  requestR[159:128] :
		  requestR[95:64]) ;
  assign IF_requestR_BITS_94_TO_87_09_EQ_0_26_AND_reque_ETC___d974 =
	     requestR_BITS_94_TO_87_09_EQ_0_26_AND_requestR_ETC___d933 ?
	       requestR[159:128] :
	       (NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d957 ?
		  requestR[95:64] :
		  requestR[159:128]) ;
  assign IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_NOT_ETC___d964 =
	     (requestR[94:87] == 8'd255 && requestR[86:64] != 23'd0 &&
	      !requestR[86]) ?
	       res__h17620 :
	       ((requestR[158:151] == 8'd255 && requestR[150] &&
		 requestR[94:87] == 8'd255 &&
		 requestR[86]) ?
		  64'hFFFFFFFF7FC00000 :
		  { 32'hFFFFFFFF,
		    (requestR[158:151] == 8'd255 && requestR[150]) ?
		      requestR[95:64] :
		      IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_req_ETC___d960 }) ;
  assign IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_NOT_ETC___d980 =
	     (requestR[94:87] == 8'd255 && requestR[86:64] != 23'd0 &&
	      !requestR[86]) ?
	       res__h17620 :
	       ((requestR[158:151] == 8'd255 && requestR[150] &&
		 requestR[94:87] == 8'd255 &&
		 requestR[86]) ?
		  64'hFFFFFFFF7FC00000 :
		  { 32'hFFFFFFFF,
		    (requestR[158:151] == 8'd255 && requestR[150]) ?
		      requestR[95:64] :
		      IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_req_ETC___d976 }) ;
  assign IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_req_ETC___d960 =
	     (requestR[94:87] == 8'd255 && requestR[86] ||
	      requestR_BITS_158_TO_151_43_EQ_0_51_AND_reques_ETC___d929) ?
	       requestR[159:128] :
	       IF_requestR_BITS_94_TO_87_09_EQ_0_26_AND_reque_ETC___d959 ;
  assign IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_req_ETC___d976 =
	     (requestR[94:87] == 8'd255 && requestR[86]) ?
	       requestR[159:128] :
	       (requestR_BITS_158_TO_151_43_EQ_0_51_AND_reques_ETC___d929 ?
		  requestR[95:64] :
		  IF_requestR_BITS_94_TO_87_09_EQ_0_26_AND_reque_ETC___d974) ;
  assign IF_requestR_BIT_159_2_OR_requestR_BITS_158_TO__ETC___d882 =
	     (requestR[159] ||
	      requestR[158:151] == 8'd0 && requestR[150:128] == 23'd0) ?
	       32'h0 :
	       (NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d853[19] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d880) ;
  assign IF_requestR_BIT_159_2_THEN_0_ELSE_IF_requestR__ETC___d1345 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_159_2_THEN_0_ELSE_IF_requestR__ETC___d570 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_159_2_THEN_2147483648_ELSE_214_ETC___d750 =
	     requestR[159] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_requestR_BIT_159_2_THEN_NEG_0b0_CONCAT_NOT__ETC___d762 =
	     requestR[159] ? -b__h14683 : b__h14683 ;
  assign IF_requestR_BIT_159_2_THEN_NEG_requestR_BITS_1_ETC___d423 =
	     (sfd__h2123[31] || sfd__h2123[30] || sfd__h2123[29] ||
	      sfd__h2123[28] ||
	      sfd__h2123[27] ||
	      sfd__h2123[26] ||
	      sfd__h2123[25] ||
	      sfd__h2123[24] ||
	      sfd__h2123[23] ||
	      sfd__h2123[22] ||
	      sfd__h2123[21] ||
	      sfd__h2123[20] ||
	      sfd__h2123[19] ||
	      sfd__h2123[18] ||
	      sfd__h2123[17] ||
	      sfd__h2123[16] ||
	      sfd__h2123[15] ||
	      sfd__h2123[14] ||
	      sfd__h2123[13] ||
	      sfd__h2123[12] ||
	      sfd__h2123[11] ||
	      sfd__h2123[10] ||
	      sfd__h2123[9] ||
	      sfd__h2123[8] ||
	      sfd__h2123[7] ||
	      sfd__h2123[6] ||
	      sfd__h2123[5] ||
	      sfd__h2123[4] ||
	      sfd__h2123[3] ||
	      sfd__h2123[2] ||
	      sfd__h2123[1] ||
	      sfd__h2123[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d240 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d242 &&
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d245 &&
	      _theResult___fst_exp__h8022 == 8'd255 &&
	      _theResult___fst_sfd__h8023 == 23'd0) ;
  assign IF_requestR_BIT_159_2_THEN_NEG_requestR_BITS_1_ETC___d426 =
	     (sfd__h2123[31] || sfd__h2123[30] || sfd__h2123[29] ||
	      sfd__h2123[28] ||
	      sfd__h2123[27] ||
	      sfd__h2123[26] ||
	      sfd__h2123[25] ||
	      sfd__h2123[24] ||
	      sfd__h2123[23] ||
	      sfd__h2123[22] ||
	      sfd__h2123[21] ||
	      sfd__h2123[20] ||
	      sfd__h2123[19] ||
	      sfd__h2123[18] ||
	      sfd__h2123[17] ||
	      sfd__h2123[16] ||
	      sfd__h2123[15] ||
	      sfd__h2123[14] ||
	      sfd__h2123[13] ||
	      sfd__h2123[12] ||
	      sfd__h2123[11] ||
	      sfd__h2123[10] ||
	      sfd__h2123[9] ||
	      sfd__h2123[8] ||
	      sfd__h2123[7] ||
	      sfd__h2123[6] ||
	      sfd__h2123[5] ||
	      sfd__h2123[4] ||
	      sfd__h2123[3] ||
	      sfd__h2123[2] ||
	      sfd__h2123[1] ||
	      sfd__h2123[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d240 &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d242 ;
  assign IF_requestR_BIT_159_2_THEN_NEG_requestR_BITS_1_ETC___d435 =
	     (sfd__h2123[31] || sfd__h2123[30] || sfd__h2123[29] ||
	      sfd__h2123[28] ||
	      sfd__h2123[27] ||
	      sfd__h2123[26] ||
	      sfd__h2123[25] ||
	      sfd__h2123[24] ||
	      sfd__h2123[23] ||
	      sfd__h2123[22] ||
	      sfd__h2123[21] ||
	      sfd__h2123[20] ||
	      sfd__h2123[19] ||
	      sfd__h2123[18] ||
	      sfd__h2123[17] ||
	      sfd__h2123[16] ||
	      sfd__h2123[15] ||
	      sfd__h2123[14] ||
	      sfd__h2123[13] ||
	      sfd__h2123[12] ||
	      sfd__h2123[11] ||
	      sfd__h2123[10] ||
	      sfd__h2123[9] ||
	      sfd__h2123[8] ||
	      sfd__h2123[7] ||
	      sfd__h2123[6] ||
	      sfd__h2123[5] ||
	      sfd__h2123[4] ||
	      sfd__h2123[3] ||
	      sfd__h2123[2] ||
	      sfd__h2123[1] ||
	      sfd__h2123[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d240 &&
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d242 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d432 ;
  assign IF_requestR_BIT_159_2_THEN_NOT_requestR_BITS_1_ETC___d953 =
	     requestR[159] ?
	       !requestR_BITS_158_TO_151_43_ULE_requestR_BITS__ETC___d942 ||
	       requestR_BITS_158_TO_151_43_EQ_requestR_BITS_9_ETC___d944 &&
	       !requestR_BITS_150_TO_128_45_ULE_requestR_BITS__ETC___d945 :
	       requestR_BITS_158_TO_151_43_ULT_requestR_BITS__ETC___d949 ||
	       requestR_BITS_158_TO_151_43_EQ_requestR_BITS_9_ETC___d944 &&
	       requestR_BITS_150_TO_128_45_ULT_requestR_BITS__ETC___d950 ;
  assign IF_requestR_BIT_191_111_OR_requestR_BITS_190_T_ETC___d1622 =
	     (requestR[191] ||
	      requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       32'h0 :
	       (NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1593[23] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1620) ;
  assign IF_requestR_BIT_191_111_THEN_2147483648_ELSE_2_ETC___d1490 =
	     requestR[191] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_requestR_BIT_191_111_THEN_NEG_0b0_CONCAT_NO_ETC___d1502 =
	     requestR[191] ? -b__h46801 : b__h46801 ;
  assign IF_requestR_BIT_191_111_THEN_NOT_requestR_BITS_ETC___d3511 =
	     requestR[191] ?
	       !requestR_BITS_190_TO_180_483_ULE_requestR_BITS_ETC___d3500 ||
	       requestR_BITS_190_TO_180_483_EQ_requestR_BITS__ETC___d3502 &&
	       !requestR_BITS_179_TO_128_485_ULE_requestR_BITS_ETC___d3503 :
	       requestR_BITS_190_TO_180_483_ULT_requestR_BITS_ETC___d3507 ||
	       requestR_BITS_190_TO_180_483_EQ_requestR_BITS__ETC___d3502 &&
	       requestR_BITS_179_TO_128_485_ULT_requestR_BITS_ETC___d3508 ;
  assign IF_sfd___3027_BIT_7_THEN_2_ELSE_0__q7 =
	     sfd___3__h7027[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3027_BIT_8_THEN_2_ELSE_0__q6 =
	     sfd___3__h7027[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___33090_BIT_7_THEN_2_ELSE_0__q18 =
	     sfd___3__h13090[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___33090_BIT_8_THEN_2_ELSE_0__q17 =
	     sfd___3__h13090[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___34806_BIT_1_THEN_2_ELSE_0__q37 =
	     sfd___3__h44806[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___34806_BIT_2_THEN_2_ELSE_0__q36 =
	     sfd___3__h44806[2] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35226_BIT_1_THEN_2_ELSE_0__q26 =
	     sfd___3__h35226[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35226_BIT_2_THEN_2_ELSE_0__q25 =
	     sfd___3__h35226[2] ? 2'd2 : 2'd0 ;
  assign IF_sfdin27280_BIT_4_THEN_2_ELSE_0__q78 =
	     sfdin__h127280[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin6476_BIT_33_THEN_2_ELSE_0__q50 =
	     sfdin__h86476[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin8737_BIT_33_THEN_2_ELSE_0__q45 =
	     sfdin__h68737[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd17736_BIT_4_THEN_2_ELSE_0__q75 =
	     _theResult___snd__h117736[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd36021_BIT_4_THEN_2_ELSE_0__q81 =
	     _theResult___snd__h136021[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd5101_BIT_33_THEN_2_ELSE_0__q53 =
	     _theResult___snd__h95101[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd7338_BIT_33_THEN_2_ELSE_0__q47 =
	     _theResult___snd__h77338[33] ? 2'd2 : 2'd0 ;
  assign IF_x5356_BIT_24_THEN_2_ELSE_0__q23 = x__h15356[24] ? 2'd2 : 2'd0 ;
  assign IF_x6394_BIT_24_THEN_2_ELSE_0__q24 = x__h16394[24] ? 2'd2 : 2'd0 ;
  assign IF_x7474_BIT_53_THEN_2_ELSE_0__q42 = x__h47474[53] ? 2'd2 : 2'd0 ;
  assign IF_x8495_BIT_53_THEN_2_ELSE_0__q43 = x__h48495[53] ? 2'd2 : 2'd0 ;
  assign NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d755 =
	     -{ {12{requestR_BITS_158_TO_151_43_MINUS_127___d753[7]}},
		requestR_BITS_158_TO_151_43_MINUS_127___d753 } ;
  assign NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d787 =
	     NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d755 +
	     20'd32 ;
  assign NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d788 =
	     NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d787 -
	     20'd2 ;
  assign NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d790 =
	     (NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d788 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d853 =
	     NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d787 -
	     20'd1 ;
  assign NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d855 =
	     (NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d853 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1495 =
	     -{ {13{requestR_BITS_190_TO_180_483_MINUS_1023___d1493[10]}},
		requestR_BITS_190_TO_180_483_MINUS_1023___d1493 } ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1527 =
	     NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1495 +
	     24'd32 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1528 =
	     NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1527 -
	     24'd2 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1530 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1528 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1593 =
	     NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1527 -
	     24'd1 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1595 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1593 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_65_ETC___d2740 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1726 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1727 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2688[2] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2700[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_65_ETC___d2768 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1726 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1727 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2688[0] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2700[0]) ;
  assign NOT_IF_requestR_BIT_159_2_THEN_NEG_requestR_BI_ETC___d244 =
	     !sfd__h2123[31] && !sfd__h2123[30] && !sfd__h2123[29] &&
	     !sfd__h2123[28] &&
	     !sfd__h2123[27] &&
	     !sfd__h2123[26] &&
	     !sfd__h2123[25] &&
	     !sfd__h2123[24] &&
	     !sfd__h2123[23] &&
	     !sfd__h2123[22] &&
	     !sfd__h2123[21] &&
	     !sfd__h2123[20] &&
	     !sfd__h2123[19] &&
	     !sfd__h2123[18] &&
	     !sfd__h2123[17] &&
	     !sfd__h2123[16] &&
	     !sfd__h2123[15] &&
	     !sfd__h2123[14] &&
	     !sfd__h2123[13] &&
	     !sfd__h2123[12] &&
	     !sfd__h2123[11] &&
	     !sfd__h2123[10] &&
	     !sfd__h2123[9] &&
	     !sfd__h2123[8] &&
	     !sfd__h2123[7] &&
	     !sfd__h2123[6] &&
	     !sfd__h2123[5] &&
	     !sfd__h2123[4] &&
	     !sfd__h2123[3] &&
	     !sfd__h2123[2] &&
	     !sfd__h2123[1] &&
	     !sfd__h2123[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d240 ||
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d242 ;
  assign NOT_requestR_BITS_158_TO_151_43_EQ_0_51_57_OR__ETC___d832 =
	     (requestR[158:151] != 8'd0 || requestR[150:128] != 23'd0) &&
	     ((NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d755 ==
	       20'd1048545) ?
		_theResult_____2__h14621[32:31] != 2'b11 :
		NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d788[19] ||
		NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d790 &&
		IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d811 &&
		x__h15356[56:25] == 32'h7FFFFFFF) ;
  assign NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d1037 =
	     (requestR[158:151] != 8'd255 || requestR[150:128] == 23'd0) &&
	     (requestR[94:87] != 8'd255 || requestR[86:64] == 23'd0) &&
	     (requestR[159] && !requestR[95] ||
	      (requestR[159] || !requestR[95]) &&
	      IF_requestR_BIT_159_2_THEN_NOT_requestR_BITS_1_ETC___d953 ||
	      requestR_BITS_158_TO_151_43_EQ_0_51_AND_reques_ETC___d1018) ;
  assign NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d900 =
	     (requestR[158:151] != 8'd255 || requestR[150:128] == 23'd0) &&
	     (requestR[158:151] != 8'd255 || requestR[150:128] != 23'd0) &&
	     !requestR[159] &&
	     (requestR[158:151] != 8'd0 || requestR[150:128] != 23'd0) &&
	     !NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d853[19] &&
	     (!NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d855 ||
	      guard__h16176 != 2'd0) ;
  assign NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d957 =
	     (requestR[158:151] != 8'd255 || requestR[150:128] == 23'd0) &&
	     (requestR[94:87] != 8'd255 || requestR[86:64] == 23'd0) &&
	     (requestR[158:151] != 8'd0 || requestR[150:128] != 23'd0 ||
	      requestR[94:87] != 8'd0 ||
	      requestR[86:64] != 23'd0) &&
	     (requestR[159] && !requestR[95] ||
	      (requestR[159] || !requestR[95]) &&
	      IF_requestR_BIT_159_2_THEN_NOT_requestR_BITS_1_ETC___d953) ;
  assign NOT_requestR_BITS_158_TO_151_43_ULT_requestR_B_ETC___d1014 =
	     !requestR_BITS_158_TO_151_43_ULT_requestR_BITS__ETC___d949 &&
	     (!requestR_BITS_158_TO_151_43_EQ_requestR_BITS_9_ETC___d944 ||
	      !requestR_BITS_150_TO_128_45_ULT_requestR_BITS__ETC___d950) &&
	     requestR_BITS_158_TO_151_43_ULE_requestR_BITS__ETC___d942 &&
	     (!requestR_BITS_158_TO_151_43_EQ_requestR_BITS_9_ETC___d944 ||
	      requestR_BITS_150_TO_128_45_ULE_requestR_BITS__ETC___d945) ;
  assign NOT_requestR_BITS_159_TO_128_05_EQ_0_06_07_AND_ETC___d722 =
	     requestR[159:128] != 32'd0 &&
	     (requestR[159] ||
	      requestR_BIT_158_45_OR_requestR_BIT_157_47_OR__ETC___d711) &&
	     (!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d574 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d575 &&
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d576 &&
	      _theResult___fst_exp__h14080 == 8'd255 &&
	      _theResult___fst_sfd__h14081 == 23'd0) ;
  assign NOT_requestR_BITS_190_TO_180_483_EQ_0_491_497__ETC___d1572 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1495 ==
	       24'd16777185) ?
		_theResult_____2__h46739[32:31] != 2'b11 :
		NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1528[23] ||
		NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1530 &&
		IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1551 &&
		x__h47474[85:54] == 32'h7FFFFFFF) ;
  assign NOT_requestR_BITS_190_TO_180_483_EQ_2047_484_5_ETC___d1641 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[190:180] != 11'd2047 || requestR[179:128] != 52'd0) &&
	     !requestR[191] &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1593[23] &&
	     (!NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1595 ||
	      guard__h48277 != 2'd0) ;
  assign NOT_requestR_BITS_190_TO_180_483_EQ_2047_484_5_ETC___d3515 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0 ||
	      requestR[126:116] != 11'd0 ||
	      requestR[115:64] != 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_BIT_191_111_THEN_NOT_requestR_BITS_ETC___d3511) ;
  assign NOT_requestR_BITS_190_TO_180_483_EQ_2047_484_5_ETC___d3580 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_BIT_191_111_THEN_NOT_requestR_BITS_ETC___d3511 ||
	      requestR_BITS_190_TO_180_483_EQ_0_491_AND_requ_ETC___d3560) ;
  assign NOT_requestR_BITS_190_TO_180_483_ULT_requestR__ETC___d3556 =
	     !requestR_BITS_190_TO_180_483_ULT_requestR_BITS_ETC___d3507 &&
	     (!requestR_BITS_190_TO_180_483_EQ_requestR_BITS__ETC___d3502 ||
	      !requestR_BITS_179_TO_128_485_ULT_requestR_BITS_ETC___d3508) &&
	     requestR_BITS_190_TO_180_483_ULE_requestR_BITS_ETC___d3500 &&
	     (!requestR_BITS_190_TO_180_483_EQ_requestR_BITS__ETC___d3502 ||
	      requestR_BITS_179_TO_128_485_ULE_requestR_BITS_ETC___d3503) ;
  assign NOT_requestR_BIT_149_63_64_AND_NOT_requestR_BI_ETC___d527 =
	     !requestR[149] && !requestR[148] && !requestR[147] &&
	     !requestR[146] &&
	     !requestR[145] &&
	     !requestR[144] &&
	     !requestR[143] &&
	     !requestR[142] &&
	     !requestR[141] &&
	     !requestR[140] &&
	     !requestR[139] &&
	     !requestR[138] &&
	     !requestR[137] &&
	     !requestR[136] &&
	     !requestR[135] &&
	     !requestR[134] &&
	     !requestR[133] &&
	     !requestR[132] &&
	     !requestR[131] &&
	     !requestR[130] &&
	     !requestR[129] &&
	     !requestR[128] ;
  assign NOT_requestR_BIT_158_45_46_AND_NOT_requestR_BI_ETC___d536 =
	     !requestR[158] && !requestR[157] && !requestR[156] &&
	     !requestR[155] &&
	     !requestR[154] &&
	     !requestR[153] &&
	     !requestR[152] &&
	     !requestR[151] &&
	     !requestR[150] &&
	     NOT_requestR_BIT_149_63_64_AND_NOT_requestR_BI_ETC___d527 ;
  assign NOT_requestR_BIT_179_652_001_AND_NOT_requestR__ETC___d2040 =
	     !requestR[179] && !requestR[178] && !requestR[177] &&
	     !requestR[176] &&
	     !requestR[175] &&
	     !requestR[174] &&
	     !requestR[173] &&
	     !requestR[172] &&
	     !requestR[171] &&
	     !requestR[170] &&
	     !requestR[169] &&
	     !requestR[168] &&
	     !requestR[167] &&
	     !requestR[166] &&
	     !requestR[165] &&
	     !requestR[164] &&
	     !requestR[163] &&
	     !requestR[162] &&
	     !requestR[161] &&
	     !requestR[160] &&
	     !requestR[159] &&
	     NOT_requestR_BIT_158_45_46_AND_NOT_requestR_BI_ETC___d536 ;
  assign SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2880 =
	     (SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53___d2879 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2881 =
	     (SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53___d2879 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC__q76 =
	     SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53___d2879 +
	     12'd1023 ;
  assign SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC__q79 =
	     SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC__q76[10:0] -
	     11'd1023 ;
  assign SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53___d2879 =
	     { {4{requestR_BITS_158_TO_151_43_MINUS_127___d753[7]}},
	       requestR_BITS_158_TO_151_43_MINUS_127___d753 } ;
  assign SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_493___d2132 =
	     { requestR_BITS_190_TO_180_483_MINUS_1023___d1493[10],
	       requestR_BITS_190_TO_180_483_MINUS_1023___d1493 } ;
  assign SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2133 =
	     (SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_493___d2132 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2134 =
	     (SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_493___d2132 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC__q48 =
	     SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_493___d2132 +
	     12'd127 ;
  assign SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC__q51 =
	     SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC__q48[7:0] -
	     8'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1961 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1959 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2688 =
	     { 3'd0,
	       _theResult___fst_exp__h68743 == 8'd0 &&
	       (sfdin__h68737[56:34] == 23'd0 || guard__h60646 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h69328 == 8'd255 &&
	       _theResult___fst_sfd__h69329 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h68743 != 8'd255 &&
	       guard__h60646 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BITS_1_ETC___d3130 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_requestR_BITS_158_TO_151_ETC___d3128 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BITS_1_ETC___d3406 =
	     { 3'd0,
	       _theResult___fst_exp__h127286 == 11'd0 &&
	       (sfdin__h127280[56:5] == 52'd0 || guard__h119060 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h128074 == 11'd2047 &&
	       _theResult___fst_sfd__h128075 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h127286 != 11'd2047 &&
	       guard__h119060 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2381 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2379 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2717 =
	     { 3'd0,
	       _theResult___fst_exp__h86482 == 8'd0 &&
	       (sfdin__h86476[56:34] == 23'd0 || guard__h78256 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h87067 == 8'd255 &&
	       _theResult___fst_sfd__h87068 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h86482 != 8'd255 &&
	       guard__h78256 != 2'b0 } ;
  assign _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d2844 =
	     ({ 6'd0,
		IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_IF_ETC___d2842 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d3175 =
	     ({ 6'd0,
		IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_IF_ETC___d2842 } ^
	      12'h800) <=
	     (IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3174 ^
	      12'h800) ;
  assign _0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d3389 =
	     { 3'd0,
	       _theResult___fst_exp__h117785 == 11'd0 &&
	       guard__h109824 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h118499 == 11'd2047 &&
	       _theResult___fst_sfd__h118500 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h117785 != 11'd2047 &&
	       guard__h109824 != 2'b0 } ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2097 =
	     ({ 3'd0,
		IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2095 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2426 =
	     ({ 3'd0,
		IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2095 } ^
	      9'h100) <=
	     (IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2425 ^
	      9'h100) ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2700 =
	     { 3'd0,
	       _theResult___fst_exp__h77387 == 8'd0 && guard__h69339 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h77898 == 8'd255 &&
	       _theResult___fst_sfd__h77899 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h77387 != 8'd255 &&
	       guard__h69339 != 2'b0 } ;
  assign _0b0_CONCAT_NOT_requestR_BITS_158_TO_151_43_EQ__ETC___d2886 =
	     b__h14683 >>
	     _3074_MINUS_SEXT_requestR_BITS_158_TO_151_43_MI_ETC___d2882 ;
  assign _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_483_EQ_ETC___d2139 =
	     sfd__h53036 >>
	     _3970_MINUS_SEXT_requestR_BITS_190_TO_180_483_M_ETC___d2135 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1725 =
	     12'd3074 -
	     { 6'd0,
	       requestR[179] ?
		 6'd0 :
		 (requestR[178] ?
		    6'd1 :
		    (requestR[177] ?
		       6'd2 :
		       (requestR[176] ?
			  6'd3 :
			  (requestR[175] ?
			     6'd4 :
			     (requestR[174] ?
				6'd5 :
				(requestR[173] ?
				   6'd6 :
				   (requestR[172] ?
				      6'd7 :
				      (requestR[171] ?
					 6'd8 :
					 (requestR[170] ?
					    6'd9 :
					    (requestR[169] ?
					       6'd10 :
					       (requestR[168] ?
						  6'd11 :
						  (requestR[167] ?
						     6'd12 :
						     (requestR[166] ?
							6'd13 :
							(requestR[165] ?
							   6'd14 :
							   (requestR[164] ?
							      6'd15 :
							      (requestR[163] ?
								 6'd16 :
								 (requestR[162] ?
								    6'd17 :
								    (requestR[161] ?
								       6'd18 :
								       (requestR[160] ?
									  6'd19 :
									  (requestR[159] ?
									     6'd20 :
									     (requestR[158] ?
										6'd21 :
										(requestR[157] ?
										   6'd22 :
										   (requestR[156] ?
										      6'd23 :
										      (requestR[155] ?
											 6'd24 :
											 (requestR[154] ?
											    6'd25 :
											    (requestR[153] ?
											       6'd26 :
											       (requestR[152] ?
												  6'd27 :
												  (requestR[151] ?
												     6'd28 :
												     (requestR[150] ?
													6'd29 :
													(requestR[149] ?
													   6'd30 :
													   (requestR[148] ?
													      6'd31 :
													      (requestR[147] ?
														 6'd32 :
														 (requestR[146] ?
														    6'd33 :
														    (requestR[145] ?
														       6'd34 :
														       (requestR[144] ?
															  6'd35 :
															  (requestR[143] ?
															     6'd36 :
															     (requestR[142] ?
																6'd37 :
																(requestR[141] ?
																   6'd38 :
																   (requestR[140] ?
																      6'd39 :
																      (requestR[139] ?
																	 6'd40 :
																	 (requestR[138] ?
																	    6'd41 :
																	    (requestR[137] ?
																	       6'd42 :
																	       (requestR[136] ?
																		  6'd43 :
																		  (requestR[135] ?
																		     6'd44 :
																		     (requestR[134] ?
																			6'd45 :
																			(requestR[133] ?
																			   6'd46 :
																			   (requestR[132] ?
																			      6'd47 :
																			      (requestR[131] ?
																				 6'd48 :
																				 (requestR[130] ?
																				    6'd49 :
																				    (requestR[129] ?
																				       6'd50 :
																				       (requestR[128] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1726 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1725 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1727 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1725 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d2703 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1726 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1727 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2688[4] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2700[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d2728 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1726 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1727 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2688[3] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2700[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d2755 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1726 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1727 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2688[1] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2700[1]) ;
  assign _3074_MINUS_SEXT_requestR_BITS_158_TO_151_43_MI_ETC___d2882 =
	     12'd3074 -
	     SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53___d2879 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1155 =
	     (12'd32 -
	      { 6'd0,
		IF_IF_requestR_BIT_159_2_THEN_NEG_requestR_BIT_ETC___d1152 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1156 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1155 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1158 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1155 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1160 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1155 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d239 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_requestR_BIT_159_2_THEN_NEG_requestR_BIT_ETC___d236 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d240 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d239 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d242 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d239 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d245 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d239 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1348 =
	     (12'd32 -
	      { 6'd0,
		IF_requestR_BIT_159_2_THEN_0_ELSE_IF_requestR__ETC___d1345 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1349 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1348 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1350 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1348 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1351 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1348 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d573 =
	     (9'd32 -
	      { 3'd0,
		IF_requestR_BIT_159_2_THEN_0_ELSE_IF_requestR__ETC___d570 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d574 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d573 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d575 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d573 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d576 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d573 ^
	      9'h100) <
	     9'd130 ;
  assign _3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2813 =
	     12'd3970 -
	     { 7'd0,
	       requestR[150] ?
		 5'd0 :
		 (requestR[149] ?
		    5'd1 :
		    (requestR[148] ?
		       5'd2 :
		       (requestR[147] ?
			  5'd3 :
			  (requestR[146] ?
			     5'd4 :
			     (requestR[145] ?
				5'd5 :
				(requestR[144] ?
				   5'd6 :
				   (requestR[143] ?
				      5'd7 :
				      (requestR[142] ?
					 5'd8 :
					 (requestR[141] ?
					    5'd9 :
					    (requestR[140] ?
					       5'd10 :
					       (requestR[139] ?
						  5'd11 :
						  (requestR[138] ?
						     5'd12 :
						     (requestR[137] ?
							5'd13 :
							(requestR[136] ?
							   5'd14 :
							   (requestR[135] ?
							      5'd15 :
							      (requestR[134] ?
								 5'd16 :
								 (requestR[133] ?
								    5'd17 :
								    (requestR[132] ?
								       5'd18 :
								       (requestR[131] ?
									  5'd19 :
									  (requestR[130] ?
									     5'd20 :
									     (requestR[129] ?
										5'd21 :
										(requestR[128] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2814 =
	     (_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2813 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2816 =
	     (_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2813 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_requestR_BITS_190_TO_180_483_M_ETC___d2135 =
	     12'd3970 -
	     SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_493___d2132 ;
  assign _theResult_____2__h14621 =
	     IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d779 ?
	       out1___1__h15110 :
	       IF_requestR_BIT_159_2_THEN_NEG_0b0_CONCAT_NOT__ETC___d762[56:24] ;
  assign _theResult_____2__h46739 =
	     IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1519 ?
	       out1___1__h47228 :
	       IF_requestR_BIT_191_111_THEN_NEG_0b0_CONCAT_NO_ETC___d1502[85:53] ;
  assign _theResult____h119050 =
	     ((_3074_MINUS_SEXT_requestR_BITS_158_TO_151_43_MI_ETC___d2882 ^
	       12'h800) <
	      12'd2105) ?
	       result__h119663 :
	       ((value__h14685 == 25'd0) ? b__h14683 : 57'd1) ;
  assign _theResult____h60636 =
	     (value__h46803 == 54'd0) ? sfd__h53036 : 57'd1 ;
  assign _theResult____h78246 =
	     ((_3970_MINUS_SEXT_requestR_BITS_190_TO_180_483_M_ETC___d2135 ^
	       12'h800) <
	      12'd2105) ?
	       result__h78859 :
	       _theResult____h60636 ;
  assign _theResult___exp__h118437 =
	     sfd__h117803[53] ?
	       ((_theResult___fst_exp__h117785 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h136858) :
	       ((_theResult___fst_exp__h117785 == 11'd0 &&
		 sfd__h117803[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h117785) ;
  assign _theResult___exp__h128012 =
	     sfd__h127378[53] ?
	       ((_theResult___fst_exp__h127286 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h136887) :
	       ((_theResult___fst_exp__h127286 == 11'd0 &&
		 sfd__h127378[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h127286) ;
  assign _theResult___exp__h13510 =
	     (sfd__h13117[24] || sfd__h13117[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h136752 =
	     sfd__h136094[53] ?
	       ((_theResult___fst_exp__h136075 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h136908) :
	       ((_theResult___fst_exp__h136075 == 11'd0 &&
		 sfd__h136094[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h136075) ;
  assign _theResult___exp__h14020 =
	     sfd__h13614[24] ?
	       ((x__h13599[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h14114) :
	       ((x__h13599[7:0] == 8'd0 && sfd__h13614[24:23] == 2'b01) ?
		  8'd1 :
		  x__h13599[7:0]) ;
  assign _theResult___exp__h35849 =
	     (sfd__h35253[53] || sfd__h35253[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h36563 =
	     sfd__h35954[53] ?
	       ((x__h35939[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h36662) :
	       ((x__h35939[10:0] == 11'd0 && sfd__h35954[53:52] == 2'b01) ?
		  11'd1 :
		  x__h35939[10:0]) ;
  assign _theResult___exp__h45429 =
	     (sfd__h44833[53] || sfd__h44833[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h46142 =
	     sfd__h45533[53] ?
	       ((x__h45518[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h46236) :
	       ((x__h45518[10:0] == 11'd0 && sfd__h45533[53:52] == 2'b01) ?
		  11'd1 :
		  x__h45518[10:0]) ;
  assign _theResult___exp__h69266 =
	     sfd__h68835[24] ?
	       ((_theResult___fst_exp__h68743 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h95725) :
	       ((_theResult___fst_exp__h68743 == 8'd0 &&
		 sfd__h68835[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h68743) ;
  assign _theResult___exp__h7450 =
	     (sfd__h7054[24] || sfd__h7054[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h77836 =
	     sfd__h77405[24] ?
	       ((_theResult___fst_exp__h77387 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h95746) :
	       ((_theResult___fst_exp__h77387 == 8'd0 &&
		 sfd__h77405[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h77387) ;
  assign _theResult___exp__h7961 =
	     sfd__h7555[24] ?
	       ((x__h7540[7:0] == 8'd254) ? 8'd255 : din_inc___2_exp__h8060) :
	       ((x__h7540[7:0] == 8'd0 && sfd__h7555[24:23] == 2'b01) ?
		  8'd1 :
		  x__h7540[7:0]) ;
  assign _theResult___exp__h87005 =
	     sfd__h86574[24] ?
	       ((_theResult___fst_exp__h86482 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h95775) :
	       ((_theResult___fst_exp__h86482 == 8'd0 &&
		 sfd__h86574[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h86482) ;
  assign _theResult___exp__h95629 =
	     sfd__h95174[24] ?
	       ((_theResult___fst_exp__h95155 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h95796) :
	       ((_theResult___fst_exp__h95155 == 8'd0 &&
		 sfd__h95174[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h95155) ;
  assign _theResult___fst_exp__h102736 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       11'd2047 :
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 ;
  assign _theResult___fst_exp__h117776 =
	     11'd897 -
	     { 5'd0,
	       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_IF_ETC___d2842 } ;
  assign _theResult___fst_exp__h117782 =
	     (requestR[158:151] == 8'd0 && !requestR[150] &&
	      NOT_requestR_BIT_149_63_64_AND_NOT_requestR_BI_ETC___d527 ||
	      !_0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d2844) ?
	       11'd0 :
	       _theResult___fst_exp__h117776 ;
  assign _theResult___fst_exp__h117785 =
	     (requestR[158:151] == 8'd0) ?
	       _theResult___fst_exp__h117782 :
	       11'd897 ;
  assign _theResult___fst_exp__h118496 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard09824_0b0_theResult___fst_exp17785_0_ETC__q82 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83 ;
  assign _theResult___fst_exp__h118499 =
	     (_theResult___fst_exp__h117785 == 11'd2047) ?
	       _theResult___fst_exp__h117785 :
	       _theResult___fst_exp__h118496 ;
  assign _theResult___fst_exp__h127286 =
	     _theResult____h119050[56] ?
	       11'd2 :
	       _theResult___fst_exp__h127360 ;
  assign _theResult___fst_exp__h127351 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_requestR_BITS_158_TO_151_ETC___d3128 } ;
  assign _theResult___fst_exp__h127357 =
	     (!_theResult____h119050[56] && !_theResult____h119050[55] &&
	      !_theResult____h119050[54] &&
	      !_theResult____h119050[53] &&
	      !_theResult____h119050[52] &&
	      !_theResult____h119050[51] &&
	      !_theResult____h119050[50] &&
	      !_theResult____h119050[49] &&
	      !_theResult____h119050[48] &&
	      !_theResult____h119050[47] &&
	      !_theResult____h119050[46] &&
	      !_theResult____h119050[45] &&
	      !_theResult____h119050[44] &&
	      !_theResult____h119050[43] &&
	      !_theResult____h119050[42] &&
	      !_theResult____h119050[41] &&
	      !_theResult____h119050[40] &&
	      !_theResult____h119050[39] &&
	      !_theResult____h119050[38] &&
	      !_theResult____h119050[37] &&
	      !_theResult____h119050[36] &&
	      !_theResult____h119050[35] &&
	      !_theResult____h119050[34] &&
	      !_theResult____h119050[33] &&
	      !_theResult____h119050[32] &&
	      !_theResult____h119050[31] &&
	      !_theResult____h119050[30] &&
	      !_theResult____h119050[29] &&
	      !_theResult____h119050[28] &&
	      !_theResult____h119050[27] &&
	      !_theResult____h119050[26] &&
	      !_theResult____h119050[25] &&
	      !_theResult____h119050[24] &&
	      !_theResult____h119050[23] &&
	      !_theResult____h119050[22] &&
	      !_theResult____h119050[21] &&
	      !_theResult____h119050[20] &&
	      !_theResult____h119050[19] &&
	      !_theResult____h119050[18] &&
	      !_theResult____h119050[17] &&
	      !_theResult____h119050[16] &&
	      !_theResult____h119050[15] &&
	      !_theResult____h119050[14] &&
	      !_theResult____h119050[13] &&
	      !_theResult____h119050[12] &&
	      !_theResult____h119050[11] &&
	      !_theResult____h119050[10] &&
	      !_theResult____h119050[9] &&
	      !_theResult____h119050[8] &&
	      !_theResult____h119050[7] &&
	      !_theResult____h119050[6] &&
	      !_theResult____h119050[5] &&
	      !_theResult____h119050[4] &&
	      !_theResult____h119050[3] &&
	      !_theResult____h119050[2] &&
	      !_theResult____h119050[1] &&
	      !_theResult____h119050[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BITS_1_ETC___d3130) ?
	       11'd0 :
	       _theResult___fst_exp__h127351 ;
  assign _theResult___fst_exp__h127360 =
	     (!_theResult____h119050[56] && _theResult____h119050[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h127357 ;
  assign _theResult___fst_exp__h128071 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19060_0b0_theResult___fst_exp27286_0_ETC__q84 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 ;
  assign _theResult___fst_exp__h128074 =
	     (_theResult___fst_exp__h127286 == 11'd2047) ?
	       _theResult___fst_exp__h127286 :
	       _theResult___fst_exp__h128071 ;
  assign _theResult___fst_exp__h13567 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3100_0b0_0_0b1_0_0b10_out_exp3513_0b_ETC__q21 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d605 ;
  assign _theResult___fst_exp__h136027 =
	     (SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC__q76[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC__q76[10:0] ;
  assign _theResult___fst_exp__h136066 =
	     SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC__q76[10:0] -
	     { 5'd0,
	       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_IF_ETC___d2842 } ;
  assign _theResult___fst_exp__h136072 =
	     (requestR[158:151] == 8'd0 && !requestR[150] &&
	      NOT_requestR_BIT_149_63_64_AND_NOT_requestR_BI_ETC___d527 ||
	      !_0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ_0_5_ETC___d3175) ?
	       11'd0 :
	       _theResult___fst_exp__h136066 ;
  assign _theResult___fst_exp__h136075 =
	     (requestR[158:151] == 8'd0) ?
	       _theResult___fst_exp__h136072 :
	       _theResult___fst_exp__h136027 ;
  assign _theResult___fst_exp__h136811 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard28085_0b0_theResult___fst_exp36075_0_ETC__q86 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 ;
  assign _theResult___fst_exp__h136814 =
	     (_theResult___fst_exp__h136075 == 11'd2047) ?
	       _theResult___fst_exp__h136075 :
	       _theResult___fst_exp__h136811 ;
  assign _theResult___fst_exp__h136823 =
	     (requestR[158:151] == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2814 ?
		  _theResult___snd_fst_exp__h118502 :
		  _theResult___fst_exp__h102736) :
	       (SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2880 ?
		  _theResult___snd_fst_exp__h136817 :
		  _theResult___fst_exp__h102736) ;
  assign _theResult___fst_exp__h136826 =
	     (requestR[158:151] == 8'd0 && requestR[150:128] == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h136823 ;
  assign _theResult___fst_exp__h14077 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3584_0b0_x3599_BITS_7_TO_0_0b1_x3599_ETC__q19 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d644 ;
  assign _theResult___fst_exp__h14080 =
	     (x__h13599[7:0] == 8'd255) ?
	       x__h13599[7:0] :
	       _theResult___fst_exp__h14077 ;
  assign _theResult___fst_exp__h35907 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5236_0b0_0_0b1_0_0b10_out_exp5852_0b_ETC__q35 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1222 ;
  assign _theResult___fst_exp__h36621 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5924_0b0_x5939_BITS_10_TO_0_0b1_x593_ETC__q29 :
	       CASE_requestR_BITS_194_TO_192_0x1_x5939_BITS_1_ETC__q30 ;
  assign _theResult___fst_exp__h36624 =
	     (x__h35939[10:0] == 11'd2047) ?
	       x__h35939[10:0] :
	       _theResult___fst_exp__h36621 ;
  assign _theResult___fst_exp__h45486 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4816_0b0_0_0b1_0_0b10_out_exp5432_0b_ETC__q38 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1381 ;
  assign _theResult___fst_exp__h46199 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5503_0b0_x5518_BITS_10_TO_0_0b1_x551_ETC__q39 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1419 ;
  assign _theResult___fst_exp__h46202 =
	     (x__h45518[10:0] == 11'd2047) ?
	       x__h45518[10:0] :
	       _theResult___fst_exp__h46199 ;
  assign _theResult___fst_exp__h60618 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       8'd255 :
	       CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 ;
  assign _theResult___fst_exp__h68743 =
	     _theResult____h60636[56] ? 8'd2 : _theResult___fst_exp__h68817 ;
  assign _theResult___fst_exp__h68808 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1959 } ;
  assign _theResult___fst_exp__h68814 =
	     (!_theResult____h60636[56] && !_theResult____h60636[55] &&
	      !_theResult____h60636[54] &&
	      !_theResult____h60636[53] &&
	      !_theResult____h60636[52] &&
	      !_theResult____h60636[51] &&
	      !_theResult____h60636[50] &&
	      !_theResult____h60636[49] &&
	      !_theResult____h60636[48] &&
	      !_theResult____h60636[47] &&
	      !_theResult____h60636[46] &&
	      !_theResult____h60636[45] &&
	      !_theResult____h60636[44] &&
	      !_theResult____h60636[43] &&
	      !_theResult____h60636[42] &&
	      !_theResult____h60636[41] &&
	      !_theResult____h60636[40] &&
	      !_theResult____h60636[39] &&
	      !_theResult____h60636[38] &&
	      !_theResult____h60636[37] &&
	      !_theResult____h60636[36] &&
	      !_theResult____h60636[35] &&
	      !_theResult____h60636[34] &&
	      !_theResult____h60636[33] &&
	      !_theResult____h60636[32] &&
	      !_theResult____h60636[31] &&
	      !_theResult____h60636[30] &&
	      !_theResult____h60636[29] &&
	      !_theResult____h60636[28] &&
	      !_theResult____h60636[27] &&
	      !_theResult____h60636[26] &&
	      !_theResult____h60636[25] &&
	      !_theResult____h60636[24] &&
	      !_theResult____h60636[23] &&
	      !_theResult____h60636[22] &&
	      !_theResult____h60636[21] &&
	      !_theResult____h60636[20] &&
	      !_theResult____h60636[19] &&
	      !_theResult____h60636[18] &&
	      !_theResult____h60636[17] &&
	      !_theResult____h60636[16] &&
	      !_theResult____h60636[15] &&
	      !_theResult____h60636[14] &&
	      !_theResult____h60636[13] &&
	      !_theResult____h60636[12] &&
	      !_theResult____h60636[11] &&
	      !_theResult____h60636[10] &&
	      !_theResult____h60636[9] &&
	      !_theResult____h60636[8] &&
	      !_theResult____h60636[7] &&
	      !_theResult____h60636[6] &&
	      !_theResult____h60636[5] &&
	      !_theResult____h60636[4] &&
	      !_theResult____h60636[3] &&
	      !_theResult____h60636[2] &&
	      !_theResult____h60636[1] &&
	      !_theResult____h60636[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1961) ?
	       8'd0 :
	       _theResult___fst_exp__h68808 ;
  assign _theResult___fst_exp__h68817 =
	     (!_theResult____h60636[56] && _theResult____h60636[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h68814 ;
  assign _theResult___fst_exp__h69325 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0646_0b0_theResult___fst_exp8743_0b1_ETC__q54 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55 ;
  assign _theResult___fst_exp__h69328 =
	     (_theResult___fst_exp__h68743 == 8'd255) ?
	       _theResult___fst_exp__h68743 :
	       _theResult___fst_exp__h69325 ;
  assign _theResult___fst_exp__h7508 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard037_0b0_0_0b1_0_0b10_out_exp453_0b11_ETC__q16 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d316 ;
  assign _theResult___fst_exp__h77378 =
	     8'd129 -
	     { 2'd0,
	       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2095 } ;
  assign _theResult___fst_exp__h77384 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_652_001_AND_NOT_requestR__ETC___d2040 ||
	      !_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2097) ?
	       8'd0 :
	       _theResult___fst_exp__h77378 ;
  assign _theResult___fst_exp__h77387 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h77384 :
	       8'd129 ;
  assign _theResult___fst_exp__h77895 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9339_0b0_theResult___fst_exp7387_0b1_ETC__q56 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57 ;
  assign _theResult___fst_exp__h77898 =
	     (_theResult___fst_exp__h77387 == 8'd255) ?
	       _theResult___fst_exp__h77387 :
	       _theResult___fst_exp__h77895 ;
  assign _theResult___fst_exp__h8019 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard525_0b0_x540_BITS_7_TO_0_0b1_x540_BI_ETC__q8 :
	       CASE_requestR_BITS_194_TO_192_0x1_x540_BITS_7__ETC__q9 ;
  assign _theResult___fst_exp__h8022 =
	     (x__h7540[7:0] == 8'd255) ?
	       x__h7540[7:0] :
	       _theResult___fst_exp__h8019 ;
  assign _theResult___fst_exp__h86482 =
	     _theResult____h78246[56] ? 8'd2 : _theResult___fst_exp__h86556 ;
  assign _theResult___fst_exp__h86547 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2379 } ;
  assign _theResult___fst_exp__h86553 =
	     (!_theResult____h78246[56] && !_theResult____h78246[55] &&
	      !_theResult____h78246[54] &&
	      !_theResult____h78246[53] &&
	      !_theResult____h78246[52] &&
	      !_theResult____h78246[51] &&
	      !_theResult____h78246[50] &&
	      !_theResult____h78246[49] &&
	      !_theResult____h78246[48] &&
	      !_theResult____h78246[47] &&
	      !_theResult____h78246[46] &&
	      !_theResult____h78246[45] &&
	      !_theResult____h78246[44] &&
	      !_theResult____h78246[43] &&
	      !_theResult____h78246[42] &&
	      !_theResult____h78246[41] &&
	      !_theResult____h78246[40] &&
	      !_theResult____h78246[39] &&
	      !_theResult____h78246[38] &&
	      !_theResult____h78246[37] &&
	      !_theResult____h78246[36] &&
	      !_theResult____h78246[35] &&
	      !_theResult____h78246[34] &&
	      !_theResult____h78246[33] &&
	      !_theResult____h78246[32] &&
	      !_theResult____h78246[31] &&
	      !_theResult____h78246[30] &&
	      !_theResult____h78246[29] &&
	      !_theResult____h78246[28] &&
	      !_theResult____h78246[27] &&
	      !_theResult____h78246[26] &&
	      !_theResult____h78246[25] &&
	      !_theResult____h78246[24] &&
	      !_theResult____h78246[23] &&
	      !_theResult____h78246[22] &&
	      !_theResult____h78246[21] &&
	      !_theResult____h78246[20] &&
	      !_theResult____h78246[19] &&
	      !_theResult____h78246[18] &&
	      !_theResult____h78246[17] &&
	      !_theResult____h78246[16] &&
	      !_theResult____h78246[15] &&
	      !_theResult____h78246[14] &&
	      !_theResult____h78246[13] &&
	      !_theResult____h78246[12] &&
	      !_theResult____h78246[11] &&
	      !_theResult____h78246[10] &&
	      !_theResult____h78246[9] &&
	      !_theResult____h78246[8] &&
	      !_theResult____h78246[7] &&
	      !_theResult____h78246[6] &&
	      !_theResult____h78246[5] &&
	      !_theResult____h78246[4] &&
	      !_theResult____h78246[3] &&
	      !_theResult____h78246[2] &&
	      !_theResult____h78246[1] &&
	      !_theResult____h78246[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2381) ?
	       8'd0 :
	       _theResult___fst_exp__h86547 ;
  assign _theResult___fst_exp__h86556 =
	     (!_theResult____h78246[56] && _theResult____h78246[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h86553 ;
  assign _theResult___fst_exp__h87064 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8256_0b0_theResult___fst_exp6482_0b1_ETC__q58 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59 ;
  assign _theResult___fst_exp__h87067 =
	     (_theResult___fst_exp__h86482 == 8'd255) ?
	       _theResult___fst_exp__h86482 :
	       _theResult___fst_exp__h87064 ;
  assign _theResult___fst_exp__h95107 =
	     (SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC__q48[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC__q48[7:0] ;
  assign _theResult___fst_exp__h95146 =
	     SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC__q48[7:0] -
	     { 2'd0,
	       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2095 } ;
  assign _theResult___fst_exp__h95152 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_652_001_AND_NOT_requestR__ETC___d2040 ||
	      !_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_0__ETC___d2426) ?
	       8'd0 :
	       _theResult___fst_exp__h95146 ;
  assign _theResult___fst_exp__h95155 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h95152 :
	       _theResult___fst_exp__h95107 ;
  assign _theResult___fst_exp__h95688 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard7078_0b0_theResult___fst_exp5155_0b1_ETC__q60 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 ;
  assign _theResult___fst_exp__h95691 =
	     (_theResult___fst_exp__h95155 == 8'd255) ?
	       _theResult___fst_exp__h95155 :
	       _theResult___fst_exp__h95688 ;
  assign _theResult___fst_exp__h95700 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1726 ?
		  _theResult___snd_fst_exp__h77901 :
		  _theResult___fst_exp__h60618) :
	       (SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2133 ?
		  _theResult___snd_fst_exp__h95694 :
		  _theResult___fst_exp__h60618) ;
  assign _theResult___fst_exp__h95703 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h95700 ;
  assign _theResult___fst_sfd__h102737 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       52'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 ;
  assign _theResult___fst_sfd__h118497 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard09824_0b0_theResult___snd17736_BITS__ETC__q88 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 ;
  assign _theResult___fst_sfd__h118500 =
	     (_theResult___fst_exp__h117785 == 11'd2047) ?
	       _theResult___snd__h117736[56:5] :
	       _theResult___fst_sfd__h118497 ;
  assign _theResult___fst_sfd__h128072 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19060_0b0_sfdin27280_BITS_56_TO_5_0b_ETC__q90 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin27280_B_ETC__q91 ;
  assign _theResult___fst_sfd__h128075 =
	     (_theResult___fst_exp__h127286 == 11'd2047) ?
	       sfdin__h127280[56:5] :
	       _theResult___fst_sfd__h128072 ;
  assign _theResult___fst_sfd__h13568 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3100_0b0_sfd___33090_BITS_31_TO_9_0b_ETC__q22 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d664 ;
  assign _theResult___fst_sfd__h136812 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard28085_0b0_theResult___snd36021_BITS__ETC__q92 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 ;
  assign _theResult___fst_sfd__h136815 =
	     (_theResult___fst_exp__h136075 == 11'd2047) ?
	       _theResult___snd__h136021[56:5] :
	       _theResult___fst_sfd__h136812 ;
  assign _theResult___fst_sfd__h136824 =
	     (requestR[158:151] == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2814 ?
		  _theResult___snd_fst_sfd__h118503 :
		  _theResult___fst_sfd__h102737) :
	       (SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2880 ?
		  _theResult___snd_fst_sfd__h136818 :
		  _theResult___fst_sfd__h102737) ;
  assign _theResult___fst_sfd__h136830 =
	     ((requestR[158:151] == 8'd255 || requestR[158:151] == 8'd0) &&
	      requestR[150:128] == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h136824 ;
  assign _theResult___fst_sfd__h14078 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3584_0b0_sfd___33090_BITS_30_TO_8_0b_ETC__q20 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d676 ;
  assign _theResult___fst_sfd__h14081 =
	     (x__h13599[7:0] == 8'd255) ?
	       sfd___3__h13090[30:8] :
	       _theResult___fst_sfd__h14078 ;
  assign _theResult___fst_sfd__h35908 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5236_0b0_sfd___35226_BITS_54_TO_3_0b_ETC__q33 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q34 ;
  assign _theResult___fst_sfd__h36622 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5924_0b0_sfd___35226_BITS_53_TO_2_0b_ETC__q31 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q32 ;
  assign _theResult___fst_sfd__h36625 =
	     (x__h35939[10:0] == 11'd2047) ?
	       sfd___3__h35226[53:2] :
	       _theResult___fst_sfd__h36622 ;
  assign _theResult___fst_sfd__h45487 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4816_0b0_sfd___34806_BITS_54_TO_3_0b_ETC__q41 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1438 ;
  assign _theResult___fst_sfd__h46200 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5503_0b0_sfd___34806_BITS_53_TO_2_0b_ETC__q40 :
	       IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1450 ;
  assign _theResult___fst_sfd__h46203 =
	     (x__h45518[10:0] == 11'd2047) ?
	       sfd___3__h44806[53:2] :
	       _theResult___fst_sfd__h46200 ;
  assign _theResult___fst_sfd__h49332 = { 1'd1, requestR[178:128] } ;
  assign _theResult___fst_sfd__h60619 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       23'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 ;
  assign _theResult___fst_sfd__h69326 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0646_0b0_sfdin8737_BITS_56_TO_34_0b1_ETC__q62 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin8737_BI_ETC__q63 ;
  assign _theResult___fst_sfd__h69329 =
	     (_theResult___fst_exp__h68743 == 8'd255) ?
	       sfdin__h68737[56:34] :
	       _theResult___fst_sfd__h69326 ;
  assign _theResult___fst_sfd__h7509 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard037_0b0_sfd___3027_BITS_31_TO_9_0b1__ETC__q12 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q13 ;
  assign _theResult___fst_sfd__h77896 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9339_0b0_theResult___snd7338_BITS_56_ETC__q64 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 ;
  assign _theResult___fst_sfd__h77899 =
	     (_theResult___fst_exp__h77387 == 8'd255) ?
	       _theResult___snd__h77338[56:34] :
	       _theResult___fst_sfd__h77896 ;
  assign _theResult___fst_sfd__h8020 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard525_0b0_sfd___3027_BITS_30_TO_8_0b1__ETC__q10 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q11 ;
  assign _theResult___fst_sfd__h8023 =
	     (x__h7540[7:0] == 8'd255) ?
	       sfd___3__h7027[30:8] :
	       _theResult___fst_sfd__h8020 ;
  assign _theResult___fst_sfd__h87065 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8256_0b0_sfdin6476_BITS_56_TO_34_0b1_ETC__q66 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin6476_BI_ETC__q67 ;
  assign _theResult___fst_sfd__h87068 =
	     (_theResult___fst_exp__h86482 == 8'd255) ?
	       sfdin__h86476[56:34] :
	       _theResult___fst_sfd__h87065 ;
  assign _theResult___fst_sfd__h95689 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard7078_0b0_theResult___snd5101_BITS_56_ETC__q68 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 ;
  assign _theResult___fst_sfd__h95692 =
	     (_theResult___fst_exp__h95155 == 8'd255) ?
	       _theResult___snd__h95101[56:34] :
	       _theResult___fst_sfd__h95689 ;
  assign _theResult___fst_sfd__h95701 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1726 ?
		  _theResult___snd_fst_sfd__h77902 :
		  _theResult___fst_sfd__h60619) :
	       (SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2133 ?
		  _theResult___snd_fst_sfd__h95695 :
		  _theResult___fst_sfd__h60619) ;
  assign _theResult___fst_sfd__h95707 =
	     ((requestR[190:180] == 11'd2047 || requestR[190:180] == 11'd0) &&
	      requestR[179:128] == 52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h95701 ;
  assign _theResult___fst_sfd__h97308 = { 1'd1, requestR[149:128] } ;
  assign _theResult___sfd__h118438 =
	     sfd__h117803[53] ?
	       ((_theResult___fst_exp__h117785 == 11'd2046) ?
		  52'd0 :
		  sfd__h117803[52:1]) :
	       sfd__h117803[51:0] ;
  assign _theResult___sfd__h128013 =
	     sfd__h127378[53] ?
	       ((_theResult___fst_exp__h127286 == 11'd2046) ?
		  52'd0 :
		  sfd__h127378[52:1]) :
	       sfd__h127378[51:0] ;
  assign _theResult___sfd__h13511 =
	     sfd__h13117[24] ? sfd__h13117[23:1] : sfd__h13117[22:0] ;
  assign _theResult___sfd__h136753 =
	     sfd__h136094[53] ?
	       ((_theResult___fst_exp__h136075 == 11'd2046) ?
		  52'd0 :
		  sfd__h136094[52:1]) :
	       sfd__h136094[51:0] ;
  assign _theResult___sfd__h14021 =
	     sfd__h13614[24] ?
	       ((x__h13599[7:0] == 8'd254) ? 23'd0 : sfd__h13614[23:1]) :
	       sfd__h13614[22:0] ;
  assign _theResult___sfd__h35850 =
	     sfd__h35253[53] ? sfd__h35253[52:1] : sfd__h35253[51:0] ;
  assign _theResult___sfd__h36564 =
	     sfd__h35954[53] ?
	       ((x__h35939[10:0] == 11'd2046) ? 52'd0 : sfd__h35954[52:1]) :
	       sfd__h35954[51:0] ;
  assign _theResult___sfd__h45430 =
	     sfd__h44833[53] ? sfd__h44833[52:1] : sfd__h44833[51:0] ;
  assign _theResult___sfd__h46143 =
	     sfd__h45533[53] ?
	       ((x__h45518[10:0] == 11'd2046) ? 52'd0 : sfd__h45533[52:1]) :
	       sfd__h45533[51:0] ;
  assign _theResult___sfd__h69267 =
	     sfd__h68835[24] ?
	       ((_theResult___fst_exp__h68743 == 8'd254) ?
		  23'd0 :
		  sfd__h68835[23:1]) :
	       sfd__h68835[22:0] ;
  assign _theResult___sfd__h7451 =
	     sfd__h7054[24] ? sfd__h7054[23:1] : sfd__h7054[22:0] ;
  assign _theResult___sfd__h77837 =
	     sfd__h77405[24] ?
	       ((_theResult___fst_exp__h77387 == 8'd254) ?
		  23'd0 :
		  sfd__h77405[23:1]) :
	       sfd__h77405[22:0] ;
  assign _theResult___sfd__h7962 =
	     sfd__h7555[24] ?
	       ((x__h7540[7:0] == 8'd254) ? 23'd0 : sfd__h7555[23:1]) :
	       sfd__h7555[22:0] ;
  assign _theResult___sfd__h87006 =
	     sfd__h86574[24] ?
	       ((_theResult___fst_exp__h86482 == 8'd254) ?
		  23'd0 :
		  sfd__h86574[23:1]) :
	       sfd__h86574[22:0] ;
  assign _theResult___sfd__h95630 =
	     sfd__h95174[24] ?
	       ((_theResult___fst_exp__h95155 == 8'd254) ?
		  23'd0 :
		  sfd__h95174[23:1]) :
	       sfd__h95174[22:0] ;
  assign _theResult___snd__h117736 =
	     (requestR[158:151] == 8'd0) ?
	       _theResult___snd__h117745 :
	       _theResult___snd__h117738 ;
  assign _theResult___snd__h117738 = { requestR[150:128], 34'd0 } ;
  assign _theResult___snd__h117745 =
	     (requestR[158:151] == 8'd0 && !requestR[150] &&
	      NOT_requestR_BIT_149_63_64_AND_NOT_requestR_BI_ETC___d527) ?
	       b__h14683 :
	       _theResult___snd__h117751 ;
  assign _theResult___snd__h117751 =
	     { IF_0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ__ETC__q74[54:0],
	       2'd0 } ;
  assign _theResult___snd__h117774 =
	     b__h14683 <<
	     IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_IF_ETC___d2842 ;
  assign _theResult___snd__h127297 = { _theResult____h119050[55:0], 1'd0 } ;
  assign _theResult___snd__h127308 =
	     (!_theResult____h119050[56] && _theResult____h119050[55]) ?
	       _theResult___snd__h127310 :
	       _theResult___snd__h127320 ;
  assign _theResult___snd__h127310 = { _theResult____h119050[54:0], 2'd0 } ;
  assign _theResult___snd__h127320 =
	     (!_theResult____h119050[56] && !_theResult____h119050[55] &&
	      !_theResult____h119050[54] &&
	      !_theResult____h119050[53] &&
	      !_theResult____h119050[52] &&
	      !_theResult____h119050[51] &&
	      !_theResult____h119050[50] &&
	      !_theResult____h119050[49] &&
	      !_theResult____h119050[48] &&
	      !_theResult____h119050[47] &&
	      !_theResult____h119050[46] &&
	      !_theResult____h119050[45] &&
	      !_theResult____h119050[44] &&
	      !_theResult____h119050[43] &&
	      !_theResult____h119050[42] &&
	      !_theResult____h119050[41] &&
	      !_theResult____h119050[40] &&
	      !_theResult____h119050[39] &&
	      !_theResult____h119050[38] &&
	      !_theResult____h119050[37] &&
	      !_theResult____h119050[36] &&
	      !_theResult____h119050[35] &&
	      !_theResult____h119050[34] &&
	      !_theResult____h119050[33] &&
	      !_theResult____h119050[32] &&
	      !_theResult____h119050[31] &&
	      !_theResult____h119050[30] &&
	      !_theResult____h119050[29] &&
	      !_theResult____h119050[28] &&
	      !_theResult____h119050[27] &&
	      !_theResult____h119050[26] &&
	      !_theResult____h119050[25] &&
	      !_theResult____h119050[24] &&
	      !_theResult____h119050[23] &&
	      !_theResult____h119050[22] &&
	      !_theResult____h119050[21] &&
	      !_theResult____h119050[20] &&
	      !_theResult____h119050[19] &&
	      !_theResult____h119050[18] &&
	      !_theResult____h119050[17] &&
	      !_theResult____h119050[16] &&
	      !_theResult____h119050[15] &&
	      !_theResult____h119050[14] &&
	      !_theResult____h119050[13] &&
	      !_theResult____h119050[12] &&
	      !_theResult____h119050[11] &&
	      !_theResult____h119050[10] &&
	      !_theResult____h119050[9] &&
	      !_theResult____h119050[8] &&
	      !_theResult____h119050[7] &&
	      !_theResult____h119050[6] &&
	      !_theResult____h119050[5] &&
	      !_theResult____h119050[4] &&
	      !_theResult____h119050[3] &&
	      !_theResult____h119050[2] &&
	      !_theResult____h119050[1] &&
	      !_theResult____h119050[0]) ?
	       _theResult____h119050 :
	       _theResult___snd__h127326 ;
  assign _theResult___snd__h127326 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_requestR_BIT_ETC__q77[54:0],
	       2'd0 } ;
  assign _theResult___snd__h127349 =
	     _theResult____h119050 <<
	     IF_IF_3074_MINUS_SEXT_requestR_BITS_158_TO_151_ETC___d3128 ;
  assign _theResult___snd__h136021 =
	     (requestR[158:151] == 8'd0) ?
	       _theResult___snd__h136035 :
	       _theResult___snd__h117738 ;
  assign _theResult___snd__h136035 =
	     (requestR[158:151] == 8'd0 && !requestR[150] &&
	      NOT_requestR_BIT_149_63_64_AND_NOT_requestR_BI_ETC___d527) ?
	       b__h14683 :
	       _theResult___snd__h136041 ;
  assign _theResult___snd__h136041 =
	     { IF_0_CONCAT_IF_requestR_BITS_158_TO_151_43_EQ__ETC__q80[54:0],
	       2'd0 } ;
  assign _theResult___snd__h136059 =
	     b__h14683 <<
	     IF_SEXT_requestR_BITS_158_TO_151_43_MINUS_127__ETC___d3174 ;
  assign _theResult___snd__h68754 = { _theResult____h60636[55:0], 1'd0 } ;
  assign _theResult___snd__h68765 =
	     (!_theResult____h60636[56] && _theResult____h60636[55]) ?
	       _theResult___snd__h68767 :
	       _theResult___snd__h68777 ;
  assign _theResult___snd__h68767 = { _theResult____h60636[54:0], 2'd0 } ;
  assign _theResult___snd__h68777 =
	     (!_theResult____h60636[56] && !_theResult____h60636[55] &&
	      !_theResult____h60636[54] &&
	      !_theResult____h60636[53] &&
	      !_theResult____h60636[52] &&
	      !_theResult____h60636[51] &&
	      !_theResult____h60636[50] &&
	      !_theResult____h60636[49] &&
	      !_theResult____h60636[48] &&
	      !_theResult____h60636[47] &&
	      !_theResult____h60636[46] &&
	      !_theResult____h60636[45] &&
	      !_theResult____h60636[44] &&
	      !_theResult____h60636[43] &&
	      !_theResult____h60636[42] &&
	      !_theResult____h60636[41] &&
	      !_theResult____h60636[40] &&
	      !_theResult____h60636[39] &&
	      !_theResult____h60636[38] &&
	      !_theResult____h60636[37] &&
	      !_theResult____h60636[36] &&
	      !_theResult____h60636[35] &&
	      !_theResult____h60636[34] &&
	      !_theResult____h60636[33] &&
	      !_theResult____h60636[32] &&
	      !_theResult____h60636[31] &&
	      !_theResult____h60636[30] &&
	      !_theResult____h60636[29] &&
	      !_theResult____h60636[28] &&
	      !_theResult____h60636[27] &&
	      !_theResult____h60636[26] &&
	      !_theResult____h60636[25] &&
	      !_theResult____h60636[24] &&
	      !_theResult____h60636[23] &&
	      !_theResult____h60636[22] &&
	      !_theResult____h60636[21] &&
	      !_theResult____h60636[20] &&
	      !_theResult____h60636[19] &&
	      !_theResult____h60636[18] &&
	      !_theResult____h60636[17] &&
	      !_theResult____h60636[16] &&
	      !_theResult____h60636[15] &&
	      !_theResult____h60636[14] &&
	      !_theResult____h60636[13] &&
	      !_theResult____h60636[12] &&
	      !_theResult____h60636[11] &&
	      !_theResult____h60636[10] &&
	      !_theResult____h60636[9] &&
	      !_theResult____h60636[8] &&
	      !_theResult____h60636[7] &&
	      !_theResult____h60636[6] &&
	      !_theResult____h60636[5] &&
	      !_theResult____h60636[4] &&
	      !_theResult____h60636[3] &&
	      !_theResult____h60636[2] &&
	      !_theResult____h60636[1] &&
	      !_theResult____h60636[0]) ?
	       _theResult____h60636 :
	       _theResult___snd__h68783 ;
  assign _theResult___snd__h68783 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q44[54:0],
	       2'd0 } ;
  assign _theResult___snd__h68806 =
	     _theResult____h60636 <<
	     IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1959 ;
  assign _theResult___snd__h77338 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h77347 :
	       _theResult___snd__h77340 ;
  assign _theResult___snd__h77340 = { requestR[179:128], 5'd0 } ;
  assign _theResult___snd__h77347 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_652_001_AND_NOT_requestR__ETC___d2040) ?
	       sfd__h53036 :
	       _theResult___snd__h77353 ;
  assign _theResult___snd__h77353 =
	     { IF_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_ETC__q46[54:0],
	       2'd0 } ;
  assign _theResult___snd__h77376 =
	     sfd__h53036 <<
	     IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2095 ;
  assign _theResult___snd__h86493 = { _theResult____h78246[55:0], 1'd0 } ;
  assign _theResult___snd__h86504 =
	     (!_theResult____h78246[56] && _theResult____h78246[55]) ?
	       _theResult___snd__h86506 :
	       _theResult___snd__h86516 ;
  assign _theResult___snd__h86506 = { _theResult____h78246[54:0], 2'd0 } ;
  assign _theResult___snd__h86516 =
	     (!_theResult____h78246[56] && !_theResult____h78246[55] &&
	      !_theResult____h78246[54] &&
	      !_theResult____h78246[53] &&
	      !_theResult____h78246[52] &&
	      !_theResult____h78246[51] &&
	      !_theResult____h78246[50] &&
	      !_theResult____h78246[49] &&
	      !_theResult____h78246[48] &&
	      !_theResult____h78246[47] &&
	      !_theResult____h78246[46] &&
	      !_theResult____h78246[45] &&
	      !_theResult____h78246[44] &&
	      !_theResult____h78246[43] &&
	      !_theResult____h78246[42] &&
	      !_theResult____h78246[41] &&
	      !_theResult____h78246[40] &&
	      !_theResult____h78246[39] &&
	      !_theResult____h78246[38] &&
	      !_theResult____h78246[37] &&
	      !_theResult____h78246[36] &&
	      !_theResult____h78246[35] &&
	      !_theResult____h78246[34] &&
	      !_theResult____h78246[33] &&
	      !_theResult____h78246[32] &&
	      !_theResult____h78246[31] &&
	      !_theResult____h78246[30] &&
	      !_theResult____h78246[29] &&
	      !_theResult____h78246[28] &&
	      !_theResult____h78246[27] &&
	      !_theResult____h78246[26] &&
	      !_theResult____h78246[25] &&
	      !_theResult____h78246[24] &&
	      !_theResult____h78246[23] &&
	      !_theResult____h78246[22] &&
	      !_theResult____h78246[21] &&
	      !_theResult____h78246[20] &&
	      !_theResult____h78246[19] &&
	      !_theResult____h78246[18] &&
	      !_theResult____h78246[17] &&
	      !_theResult____h78246[16] &&
	      !_theResult____h78246[15] &&
	      !_theResult____h78246[14] &&
	      !_theResult____h78246[13] &&
	      !_theResult____h78246[12] &&
	      !_theResult____h78246[11] &&
	      !_theResult____h78246[10] &&
	      !_theResult____h78246[9] &&
	      !_theResult____h78246[8] &&
	      !_theResult____h78246[7] &&
	      !_theResult____h78246[6] &&
	      !_theResult____h78246[5] &&
	      !_theResult____h78246[4] &&
	      !_theResult____h78246[3] &&
	      !_theResult____h78246[2] &&
	      !_theResult____h78246[1] &&
	      !_theResult____h78246[0]) ?
	       _theResult____h78246 :
	       _theResult___snd__h86522 ;
  assign _theResult___snd__h86522 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q49[54:0],
	       2'd0 } ;
  assign _theResult___snd__h86545 =
	     _theResult____h78246 <<
	     IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2379 ;
  assign _theResult___snd__h95101 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h95115 :
	       _theResult___snd__h77340 ;
  assign _theResult___snd__h95115 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_652_001_AND_NOT_requestR__ETC___d2040) ?
	       sfd__h53036 :
	       _theResult___snd__h95121 ;
  assign _theResult___snd__h95121 =
	     { IF_0_CONCAT_IF_requestR_BITS_190_TO_180_483_EQ_ETC__q52[54:0],
	       2'd0 } ;
  assign _theResult___snd__h95139 =
	     sfd__h53036 <<
	     IF_SEXT_requestR_BITS_190_TO_180_483_MINUS_102_ETC___d2425 ;
  assign _theResult___snd_fst_exp__h118502 =
	     _3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2816 ?
	       11'd0 :
	       _theResult___fst_exp__h118499 ;
  assign _theResult___snd_fst_exp__h136817 =
	     SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2881 ?
	       _theResult___fst_exp__h128074 :
	       _theResult___fst_exp__h136814 ;
  assign _theResult___snd_fst_exp__h14083 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d576 ?
	       _theResult___fst_exp__h13567 :
	       _theResult___fst_exp__h14080 ;
  assign _theResult___snd_fst_exp__h14086 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d575 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14083 ;
  assign _theResult___snd_fst_exp__h14089 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d574 ?
	       _theResult___snd_fst_exp__h14086 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h36627 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1160 ?
	       _theResult___fst_exp__h35907 :
	       _theResult___fst_exp__h36624 ;
  assign _theResult___snd_fst_exp__h36630 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1158 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h36627 ;
  assign _theResult___snd_fst_exp__h36633 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1156 ?
	       _theResult___snd_fst_exp__h36630 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h46205 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1351 ?
	       _theResult___fst_exp__h45486 :
	       _theResult___fst_exp__h46202 ;
  assign _theResult___snd_fst_exp__h46208 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1350 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h46205 ;
  assign _theResult___snd_fst_exp__h46211 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1349 ?
	       _theResult___snd_fst_exp__h46208 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h77901 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1727 ?
	       _theResult___fst_exp__h69328 :
	       _theResult___fst_exp__h77898 ;
  assign _theResult___snd_fst_exp__h8025 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d245 ?
	       _theResult___fst_exp__h7508 :
	       _theResult___fst_exp__h8022 ;
  assign _theResult___snd_fst_exp__h8028 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d242 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8025 ;
  assign _theResult___snd_fst_exp__h8031 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d240 ?
	       _theResult___snd_fst_exp__h8028 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h95694 =
	     SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2134 ?
	       _theResult___fst_exp__h87067 :
	       _theResult___fst_exp__h95691 ;
  assign _theResult___snd_fst_sfd__h118503 =
	     _3970_MINUS_0_CONCAT_IF_requestR_BIT_150_61_THE_ETC___d2816 ?
	       52'd0 :
	       _theResult___fst_sfd__h118500 ;
  assign _theResult___snd_fst_sfd__h136818 =
	     SEXT_requestR_BITS_158_TO_151_43_MINUS_127_53__ETC___d2881 ?
	       _theResult___fst_sfd__h128075 :
	       _theResult___fst_sfd__h136815 ;
  assign _theResult___snd_fst_sfd__h14084 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d576 ?
	       _theResult___fst_sfd__h13568 :
	       _theResult___fst_sfd__h14081 ;
  assign _theResult___snd_fst_sfd__h36628 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1160 ?
	       _theResult___fst_sfd__h35908 :
	       _theResult___fst_sfd__h36625 ;
  assign _theResult___snd_fst_sfd__h46206 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1351 ?
	       _theResult___fst_sfd__h45487 :
	       _theResult___fst_sfd__h46203 ;
  assign _theResult___snd_fst_sfd__h52990 =
	     (value__h48875[51:29] == 23'd0) ?
	       23'd2097152 :
	       value__h48875[51:29] ;
  assign _theResult___snd_fst_sfd__h77902 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_652_TH_ETC___d1727 ?
	       _theResult___fst_sfd__h69329 :
	       _theResult___fst_sfd__h77899 ;
  assign _theResult___snd_fst_sfd__h8026 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d245 ?
	       _theResult___fst_sfd__h7509 :
	       _theResult___fst_sfd__h8023 ;
  assign _theResult___snd_fst_sfd__h95695 =
	     SEXT_requestR_BITS_190_TO_180_483_MINUS_1023_4_ETC___d2134 ?
	       _theResult___fst_sfd__h87068 :
	       _theResult___fst_sfd__h95692 ;
  assign _theResult___snd_fst_sfd__h98936 =
	     (value__h97054 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h97051 ;
  assign ab__h153941 = dw_result$wget ;
  assign b__h14683 = { value__h14685, 32'd0 } ;
  assign b__h46801 = { value__h46803, 32'd0 } ;
  assign din_inc___2_exp__h136858 = _theResult___fst_exp__h117785 + 11'd1 ;
  assign din_inc___2_exp__h136887 = _theResult___fst_exp__h127286 + 11'd1 ;
  assign din_inc___2_exp__h136908 = _theResult___fst_exp__h136075 + 11'd1 ;
  assign din_inc___2_exp__h14114 = x__h13599[7:0] + 8'd1 ;
  assign din_inc___2_exp__h36662 = x__h35939[10:0] + 11'd1 ;
  assign din_inc___2_exp__h46236 = x__h45518[10:0] + 11'd1 ;
  assign din_inc___2_exp__h8060 = x__h7540[7:0] + 8'd1 ;
  assign din_inc___2_exp__h95725 = _theResult___fst_exp__h68743 + 8'd1 ;
  assign din_inc___2_exp__h95746 = _theResult___fst_exp__h77387 + 8'd1 ;
  assign din_inc___2_exp__h95775 = _theResult___fst_exp__h86482 + 8'd1 ;
  assign din_inc___2_exp__h95796 = _theResult___fst_exp__h95155 + 8'd1 ;
  assign guard__h109824 =
	     { IF_theResult___snd17736_BIT_4_THEN_2_ELSE_0__q75[1],
	       { _theResult___snd__h117736[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h119060 =
	     { IF_sfdin27280_BIT_4_THEN_2_ELSE_0__q78[1],
	       { sfdin__h127280[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h119658 = x__h119758 != 57'd0 ;
  assign guard__h128085 =
	     { IF_theResult___snd36021_BIT_4_THEN_2_ELSE_0__q81[1],
	       { _theResult___snd__h136021[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h13100 =
	     { IF_sfd___33090_BIT_8_THEN_2_ELSE_0__q17[1],
	       { sfd___3__h13090[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h13584 =
	     { IF_sfd___33090_BIT_7_THEN_2_ELSE_0__q18[1],
	       { sfd___3__h13090[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h14619 =
	     { IF_requestR_BIT_159_2_THEN_NEG_0b0_CONCAT_NOT__ETC___d762[23],
	       { IF_requestR_BIT_159_2_THEN_NEG_0b0_CONCAT_NOT__ETC___d762[22:0],
		 33'd0 } !=
	       56'd0 } ;
  assign guard__h15170 =
	     { IF_x5356_BIT_24_THEN_2_ELSE_0__q23[1],
	       { x__h15356[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h16176 =
	     { IF_x6394_BIT_24_THEN_2_ELSE_0__q24[1],
	       { x__h16394[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h35236 =
	     { IF_sfd___35226_BIT_2_THEN_2_ELSE_0__q25[1],
	       { sfd___3__h35226[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h35924 =
	     { IF_sfd___35226_BIT_1_THEN_2_ELSE_0__q26[1],
	       { sfd___3__h35226[0], 53'd0 } != 54'd0 } ;
  assign guard__h44816 =
	     { IF_sfd___34806_BIT_2_THEN_2_ELSE_0__q36[1],
	       { sfd___3__h44806[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h45503 =
	     { IF_sfd___34806_BIT_1_THEN_2_ELSE_0__q37[1],
	       { sfd___3__h44806[0], 53'd0 } != 54'd0 } ;
  assign guard__h46737 =
	     { IF_requestR_BIT_191_111_THEN_NEG_0b0_CONCAT_NO_ETC___d1502[52],
	       { IF_requestR_BIT_191_111_THEN_NEG_0b0_CONCAT_NO_ETC___d1502[51:0],
		 33'd0 } !=
	       85'd0 } ;
  assign guard__h47288 =
	     { IF_x7474_BIT_53_THEN_2_ELSE_0__q42[1],
	       { x__h47474[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h48277 =
	     { IF_x8495_BIT_53_THEN_2_ELSE_0__q43[1],
	       { x__h48495[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h60646 =
	     { IF_sfdin8737_BIT_33_THEN_2_ELSE_0__q45[1],
	       { sfdin__h68737[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h69339 =
	     { IF_theResult___snd7338_BIT_33_THEN_2_ELSE_0__q47[1],
	       { _theResult___snd__h77338[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h7037 =
	     { IF_sfd___3027_BIT_8_THEN_2_ELSE_0__q6[1],
	       { sfd___3__h7027[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h7525 =
	     { IF_sfd___3027_BIT_7_THEN_2_ELSE_0__q7[1],
	       { sfd___3__h7027[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h78256 =
	     { IF_sfdin6476_BIT_33_THEN_2_ELSE_0__q50[1],
	       { sfdin__h86476[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h78854 = x__h78954 != 57'd0 ;
  assign guard__h87078 =
	     { IF_theResult___snd5101_BIT_33_THEN_2_ELSE_0__q53[1],
	       { _theResult___snd__h95101[32:0], 23'd0 } != 56'd0 } ;
  assign out1___1__h15110 =
	     IF_requestR_BIT_159_2_THEN_NEG_0b0_CONCAT_NOT__ETC___d762[56:24] +
	     33'd1 ;
  assign out1___1__h47228 =
	     IF_requestR_BIT_191_111_THEN_NEG_0b0_CONCAT_NO_ETC___d1502[85:53] +
	     33'd1 ;
  assign out___1_sfd__h97051 = { value__h97054, 29'd0 } ;
  assign out_exp__h118440 =
	     _theResult___snd__h117736[5] ?
	       _theResult___exp__h118437 :
	       _theResult___fst_exp__h117785 ;
  assign out_exp__h128015 =
	     sfdin__h127280[5] ?
	       _theResult___exp__h128012 :
	       _theResult___fst_exp__h127286 ;
  assign out_exp__h13513 =
	     sfd___3__h13090[9] ? _theResult___exp__h13510 : 8'd0 ;
  assign out_exp__h136755 =
	     _theResult___snd__h136021[5] ?
	       _theResult___exp__h136752 :
	       _theResult___fst_exp__h136075 ;
  assign out_exp__h14023 =
	     sfd___3__h13090[8] ? _theResult___exp__h14020 : x__h13599[7:0] ;
  assign out_exp__h35852 =
	     sfd___3__h35226[3] ? _theResult___exp__h35849 : 11'd0 ;
  assign out_exp__h36566 =
	     sfd___3__h35226[2] ? _theResult___exp__h36563 : x__h35939[10:0] ;
  assign out_exp__h45432 =
	     sfd___3__h44806[3] ? _theResult___exp__h45429 : 11'd0 ;
  assign out_exp__h46145 =
	     sfd___3__h44806[2] ? _theResult___exp__h46142 : x__h45518[10:0] ;
  assign out_exp__h69269 =
	     sfdin__h68737[34] ?
	       _theResult___exp__h69266 :
	       _theResult___fst_exp__h68743 ;
  assign out_exp__h7453 = sfd___3__h7027[9] ? _theResult___exp__h7450 : 8'd0 ;
  assign out_exp__h77839 =
	     _theResult___snd__h77338[34] ?
	       _theResult___exp__h77836 :
	       _theResult___fst_exp__h77387 ;
  assign out_exp__h7964 =
	     sfd___3__h7027[8] ? _theResult___exp__h7961 : x__h7540[7:0] ;
  assign out_exp__h87008 =
	     sfdin__h86476[34] ?
	       _theResult___exp__h87005 :
	       _theResult___fst_exp__h86482 ;
  assign out_exp__h95632 =
	     _theResult___snd__h95101[34] ?
	       _theResult___exp__h95629 :
	       _theResult___fst_exp__h95155 ;
  assign out_sfd__h118441 =
	     _theResult___snd__h117736[5] ?
	       _theResult___sfd__h118438 :
	       _theResult___snd__h117736[56:5] ;
  assign out_sfd__h128016 =
	     sfdin__h127280[5] ?
	       _theResult___sfd__h128013 :
	       sfdin__h127280[56:5] ;
  assign out_sfd__h13514 =
	     sfd___3__h13090[9] ?
	       _theResult___sfd__h13511 :
	       sfd___3__h13090[31:9] ;
  assign out_sfd__h136756 =
	     _theResult___snd__h136021[5] ?
	       _theResult___sfd__h136753 :
	       _theResult___snd__h136021[56:5] ;
  assign out_sfd__h14024 =
	     sfd___3__h13090[8] ?
	       _theResult___sfd__h14021 :
	       sfd___3__h13090[30:8] ;
  assign out_sfd__h35853 =
	     sfd___3__h35226[3] ?
	       _theResult___sfd__h35850 :
	       sfd___3__h35226[54:3] ;
  assign out_sfd__h36567 =
	     sfd___3__h35226[2] ?
	       _theResult___sfd__h36564 :
	       sfd___3__h35226[53:2] ;
  assign out_sfd__h45433 =
	     sfd___3__h44806[3] ?
	       _theResult___sfd__h45430 :
	       sfd___3__h44806[54:3] ;
  assign out_sfd__h46146 =
	     sfd___3__h44806[2] ?
	       _theResult___sfd__h46143 :
	       sfd___3__h44806[53:2] ;
  assign out_sfd__h69270 =
	     sfdin__h68737[34] ?
	       _theResult___sfd__h69267 :
	       sfdin__h68737[56:34] ;
  assign out_sfd__h7454 =
	     sfd___3__h7027[9] ?
	       _theResult___sfd__h7451 :
	       sfd___3__h7027[31:9] ;
  assign out_sfd__h77840 =
	     _theResult___snd__h77338[34] ?
	       _theResult___sfd__h77837 :
	       _theResult___snd__h77338[56:34] ;
  assign out_sfd__h7965 =
	     sfd___3__h7027[8] ?
	       _theResult___sfd__h7962 :
	       sfd___3__h7027[30:8] ;
  assign out_sfd__h87009 =
	     sfdin__h86476[34] ?
	       _theResult___sfd__h87006 :
	       sfdin__h86476[56:34] ;
  assign out_sfd__h95633 =
	     _theResult___snd__h95101[34] ?
	       _theResult___sfd__h95630 :
	       _theResult___snd__h95101[56:34] ;
  assign requestR_BITS_126_TO_116_470_EQ_0_484_AND_requ_ETC___d3491 =
	     requestR[126:116] == 11'd0 && requestR[115:64] == 52'd0 &&
	     requestR[127] &&
	     requestR[190:180] == 11'd0 &&
	     requestR[179:128] == 52'd0 &&
	     !requestR[191] ;
  assign requestR_BITS_150_TO_128_45_ULE_requestR_BITS__ETC___d945 =
	     requestR[150:128] <= requestR[86:64] ;
  assign requestR_BITS_150_TO_128_45_ULT_requestR_BITS__ETC___d950 =
	     requestR[150:128] < requestR[86:64] ;
  assign requestR_BITS_158_TO_151_43_EQ_0_51_AND_reques_ETC___d1018 =
	     requestR[158:151] == 8'd0 && requestR[150:128] == 23'd0 &&
	     requestR[94:87] == 8'd0 &&
	     requestR[86:64] == 23'd0 ||
	     (!requestR[159] || requestR[95]) &&
	     (requestR[159] || !requestR[95]) &&
	     (requestR[159] ?
		requestR_BITS_158_TO_151_43_ULE_requestR_BITS__ETC___d1013 :
		NOT_requestR_BITS_158_TO_151_43_ULT_requestR_B_ETC___d1014) ;
  assign requestR_BITS_158_TO_151_43_EQ_0_51_AND_reques_ETC___d929 =
	     requestR[158:151] == 8'd0 && requestR[150:128] == 23'd0 &&
	     requestR[159] &&
	     requestR[94:87] == 8'd0 &&
	     requestR[86:64] == 23'd0 &&
	     !requestR[95] ;
  assign requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d1003 =
	     requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d967 ||
	     requestR[158:151] == 8'd255 && requestR[150] ||
	     requestR[94:87] == 8'd255 && requestR[86] ;
  assign requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d918 =
	     requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0 &&
	     !requestR[150] &&
	     requestR[94:87] == 8'd255 &&
	     requestR[86:64] != 23'd0 &&
	     !requestR[86] ;
  assign requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d967 =
	     requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0 &&
	     !requestR[150] ||
	     requestR[94:87] == 8'd255 && requestR[86:64] != 23'd0 &&
	     !requestR[86] ;
  assign requestR_BITS_158_TO_151_43_EQ_requestR_BITS_9_ETC___d944 =
	     requestR[158:151] == requestR[94:87] ;
  assign requestR_BITS_158_TO_151_43_MINUS_127___d753 =
	     requestR[158:151] - 8'd127 ;
  assign requestR_BITS_158_TO_151_43_ULE_requestR_BITS__ETC___d1013 =
	     requestR_BITS_158_TO_151_43_ULE_requestR_BITS__ETC___d942 &&
	     (!requestR_BITS_158_TO_151_43_EQ_requestR_BITS_9_ETC___d944 ||
	      requestR_BITS_150_TO_128_45_ULE_requestR_BITS__ETC___d945) &&
	     !requestR_BITS_158_TO_151_43_ULT_requestR_BITS__ETC___d949 &&
	     (!requestR_BITS_158_TO_151_43_EQ_requestR_BITS_9_ETC___d944 ||
	      !requestR_BITS_150_TO_128_45_ULT_requestR_BITS__ETC___d950) ;
  assign requestR_BITS_158_TO_151_43_ULE_requestR_BITS__ETC___d942 =
	     requestR[158:151] <= requestR[94:87] ;
  assign requestR_BITS_158_TO_151_43_ULT_requestR_BITS__ETC___d949 =
	     requestR[158:151] < requestR[94:87] ;
  assign requestR_BITS_159_TO_128__q1 = requestR[159:128] ;
  assign requestR_BITS_179_TO_128_485_ULE_requestR_BITS_ETC___d3503 =
	     requestR[179:128] <= requestR[115:64] ;
  assign requestR_BITS_179_TO_128_485_ULT_requestR_BITS_ETC___d3508 =
	     requestR[179:128] < requestR[115:64] ;
  assign requestR_BITS_190_TO_180_483_EQ_0_491_AND_requ_ETC___d3487 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[191] &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 &&
	     !requestR[127] ;
  assign requestR_BITS_190_TO_180_483_EQ_0_491_AND_requ_ETC___d3560 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 ||
	     (!requestR[191] || requestR[127]) &&
	     (requestR[191] || !requestR[127]) &&
	     (requestR[191] ?
		requestR_BITS_190_TO_180_483_ULE_requestR_BITS_ETC___d3555 :
		NOT_requestR_BITS_190_TO_180_483_ULT_requestR__ETC___d3556) ;
  assign requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3479 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] &&
	     requestR[126:116] == 11'd2047 &&
	     requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3543 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3545 =
	     requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3543 ||
	     requestR[190:180] == 11'd2047 && requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115] ;
  assign requestR_BITS_190_TO_180_483_EQ_requestR_BITS__ETC___d3502 =
	     requestR[190:180] == requestR[126:116] ;
  assign requestR_BITS_190_TO_180_483_MINUS_1023___d1493 =
	     requestR[190:180] - 11'd1023 ;
  assign requestR_BITS_190_TO_180_483_ULE_requestR_BITS_ETC___d3500 =
	     requestR[190:180] <= requestR[126:116] ;
  assign requestR_BITS_190_TO_180_483_ULE_requestR_BITS_ETC___d3555 =
	     requestR_BITS_190_TO_180_483_ULE_requestR_BITS_ETC___d3500 &&
	     (!requestR_BITS_190_TO_180_483_EQ_requestR_BITS__ETC___d3502 ||
	      requestR_BITS_179_TO_128_485_ULE_requestR_BITS_ETC___d3503) &&
	     !requestR_BITS_190_TO_180_483_ULT_requestR_BITS_ETC___d3507 &&
	     (!requestR_BITS_190_TO_180_483_EQ_requestR_BITS__ETC___d3502 ||
	      !requestR_BITS_179_TO_128_485_ULT_requestR_BITS_ETC___d3508) ;
  assign requestR_BITS_190_TO_180_483_ULT_requestR_BITS_ETC___d3507 =
	     requestR[190:180] < requestR[126:116] ;
  assign requestR_BITS_94_TO_87_09_EQ_0_26_AND_requestR_ETC___d933 =
	     requestR[94:87] == 8'd0 && requestR[86:64] == 23'd0 &&
	     requestR[95] &&
	     requestR[158:151] == 8'd0 &&
	     requestR[150:128] == 23'd0 &&
	     !requestR[159] ;
  assign requestR_BIT_158_45_OR_requestR_BIT_157_47_OR__ETC___d711 =
	     requestR[158] || requestR[157] || requestR[156] ||
	     requestR[155] ||
	     requestR[154] ||
	     requestR[153] ||
	     requestR[152] ||
	     requestR[151] ||
	     requestR[150] ||
	     requestR[149] ||
	     requestR[148] ||
	     requestR[147] ||
	     requestR[146] ||
	     requestR[145] ||
	     requestR[144] ||
	     requestR[143] ||
	     requestR[142] ||
	     requestR[141] ||
	     requestR[140] ||
	     requestR[139] ||
	     requestR[138] ||
	     requestR[137] ||
	     requestR[136] ||
	     requestR[135] ||
	     requestR[134] ||
	     requestR[133] ||
	     requestR[132] ||
	     requestR[131] ||
	     requestR[130] ||
	     requestR[129] ||
	     requestR[128] ;
  assign requestR_BIT_159_2_OR_NOT_requestR_BITS_158_TO_ETC___d890 =
	     requestR[159] ||
	     (requestR[158:151] != 8'd0 || requestR[150:128] != 23'd0) &&
	     (NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d853[19] ||
	      NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d855 &&
	      IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d874 &&
	      x__h16394[56:25] == 32'hFFFFFFFF) ;
  assign requestR_BIT_159_2_OR_requestR_BIT_158_45_OR_r_ETC___d733 =
	     (requestR[159] ||
	      requestR_BIT_158_45_OR_requestR_BIT_157_47_OR__ETC___d711) &&
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d574 &&
	     !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d575 &&
	     IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THE_ETC___d730 ;
  assign requestR_BIT_191_111_OR_NOT_requestR_BITS_190__ETC___d1630 =
	     requestR[191] ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1593[23] ||
	      NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1595 &&
	      IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_OR_NOT__ETC___d1614 &&
	      x__h48495[85:54] == 32'hFFFFFFFF) ;
  assign res__h141429 =
	     NOT_requestR_BITS_190_TO_180_483_EQ_2047_484_5_ETC___d3515 ?
	       requestR[191:128] :
	       requestR[127:64] ;
  assign res__h145569 =
	     NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d957 ?
	       requestR[127:64] :
	       requestR[191:128] ;
  assign res__h147865 =
	     ((requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	      (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	      requestR_BITS_190_TO_180_483_EQ_0_491_AND_requ_ETC___d3560) ?
	       64'd1 :
	       64'd0 ;
  assign res__h150558 =
	     NOT_requestR_BITS_190_TO_180_483_EQ_2047_484_5_ETC___d3515 ?
	       64'd1 :
	       64'd0 ;
  assign res__h152433 =
	     NOT_requestR_BITS_190_TO_180_483_EQ_2047_484_5_ETC___d3580 ?
	       64'd1 :
	       64'd0 ;
  assign res__h152899 =
	     (requestR[190:180] == 11'd2047 && requestR[179]) ?
	       64'd9 :
	       64'd8 ;
  assign res__h153325 = requestR[191] ? 64'd0 : 64'd7 ;
  assign res__h153336 = requestR[191] ? 64'd3 : 64'd4 ;
  assign res__h153343 = requestR[191] ? 64'd2 : 64'd5 ;
  assign res__h153347 = requestR[191] ? 64'd1 : 64'd6 ;
  assign res__h153516 = { 32'hFFFFFFFF, fpu$response_get[36:5] } ;
  assign res__h17384 = { 32'hFFFFFFFF, requestR[95:64] } ;
  assign res__h17620 = { 32'hFFFFFFFF, requestR[159:128] } ;
  assign res__h22953 =
	     ((requestR[158:151] != 8'd255 || requestR[150:128] == 23'd0) &&
	      (requestR[94:87] != 8'd255 || requestR[86:64] == 23'd0) &&
	      requestR_BITS_158_TO_151_43_EQ_0_51_AND_reques_ETC___d1018) ?
	       64'd1 :
	       64'd0 ;
  assign res__h24428 =
	     NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d957 ?
	       64'd1 :
	       64'd0 ;
  assign res__h25491 =
	     NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d1037 ?
	       64'd1 :
	       64'd0 ;
  assign res__h25724 =
	     (requestR[158:151] == 8'd255 && requestR[150]) ? 64'd9 : 64'd8 ;
  assign res__h25947 = requestR[159] ? 64'd0 : 64'd7 ;
  assign res__h25958 = requestR[159] ? 64'd3 : 64'd4 ;
  assign res__h25965 = requestR[159] ? 64'd2 : 64'd5 ;
  assign res__h25969 = requestR[159] ? 64'd1 : 64'd6 ;
  assign result__h119663 =
	     { _0b0_CONCAT_NOT_requestR_BITS_158_TO_151_43_EQ__ETC___d2886[56:1],
	       _0b0_CONCAT_NOT_requestR_BITS_158_TO_151_43_EQ__ETC___d2886[0] |
	       guard__h119658 } ;
  assign result__h78859 =
	     { _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_483_EQ_ETC___d2139[56:1],
	       _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_483_EQ_ETC___d2139[0] |
	       guard__h78854 } ;
  assign sfd___3__h13090 =
	     requestR[159:128] <<
	     IF_requestR_BIT_159_2_THEN_0_ELSE_IF_requestR__ETC___d570 ;
  assign sfd___3__h35226 =
	     sfd__h27225 <<
	     IF_IF_requestR_BIT_159_2_THEN_NEG_requestR_BIT_ETC___d1152 ;
  assign sfd___3__h44806 =
	     sfd__h37054 <<
	     IF_requestR_BIT_159_2_THEN_0_ELSE_IF_requestR__ETC___d1345 ;
  assign sfd___3__h7027 =
	     sfd__h2123 <<
	     IF_IF_requestR_BIT_159_2_THEN_NEG_requestR_BIT_ETC___d236 ;
  assign sfd__h117803 =
	     { 1'b0,
	       _theResult___fst_exp__h117785 != 11'd0,
	       _theResult___snd__h117736[56:5] } +
	     54'd1 ;
  assign sfd__h127378 =
	     { 1'b0,
	       _theResult___fst_exp__h127286 != 11'd0,
	       sfdin__h127280[56:5] } +
	     54'd1 ;
  assign sfd__h13117 = { 2'd0, sfd___3__h13090[31:9] } + 25'd1 ;
  assign sfd__h136094 =
	     { 1'b0,
	       _theResult___fst_exp__h136075 != 11'd0,
	       _theResult___snd__h136021[56:5] } +
	     54'd1 ;
  assign sfd__h13614 =
	     { 1'b0, x__h13599[7:0] != 8'd0, sfd___3__h13090[30:8] } + 25'd1 ;
  assign sfd__h2123 = requestR[159] ? -requestR[159:128] : requestR[159:128] ;
  assign sfd__h27225 = { sfd__h2123, 23'd0 } ;
  assign sfd__h35253 = { 2'd0, sfd___3__h35226[54:3] } + 54'd1 ;
  assign sfd__h35954 =
	     { 1'b0, x__h35939[10:0] != 11'd0, sfd___3__h35226[53:2] } +
	     54'd1 ;
  assign sfd__h37054 = { requestR[159:128], 23'd0 } ;
  assign sfd__h44833 = { 2'd0, sfd___3__h44806[54:3] } + 54'd1 ;
  assign sfd__h45533 =
	     { 1'b0, x__h45518[10:0] != 11'd0, sfd___3__h44806[53:2] } +
	     54'd1 ;
  assign sfd__h53036 = { value__h46803, 3'd0 } ;
  assign sfd__h68835 =
	     { 1'b0,
	       _theResult___fst_exp__h68743 != 8'd0,
	       sfdin__h68737[56:34] } +
	     25'd1 ;
  assign sfd__h7054 = { 2'd0, sfd___3__h7027[31:9] } + 25'd1 ;
  assign sfd__h7555 =
	     { 1'b0, x__h7540[7:0] != 8'd0, sfd___3__h7027[30:8] } + 25'd1 ;
  assign sfd__h77405 =
	     { 1'b0,
	       _theResult___fst_exp__h77387 != 8'd0,
	       _theResult___snd__h77338[56:34] } +
	     25'd1 ;
  assign sfd__h86574 =
	     { 1'b0,
	       _theResult___fst_exp__h86482 != 8'd0,
	       sfdin__h86476[56:34] } +
	     25'd1 ;
  assign sfd__h95174 =
	     { 1'b0,
	       _theResult___fst_exp__h95155 != 8'd0,
	       _theResult___snd__h95101[56:34] } +
	     25'd1 ;
  assign sfdin__h127280 =
	     _theResult____h119050[56] ?
	       _theResult___snd__h127297 :
	       _theResult___snd__h127308 ;
  assign sfdin__h68737 =
	     _theResult____h60636[56] ?
	       _theResult___snd__h68754 :
	       _theResult___snd__h68765 ;
  assign sfdin__h86476 =
	     _theResult____h78246[56] ?
	       _theResult___snd__h86493 :
	       _theResult___snd__h86504 ;
  assign value__h14685 =
	     { 1'b0, requestR[158:151] != 8'd0, requestR[150:128] } ;
  assign value__h46803 =
	     { 1'b0, requestR[190:180] != 11'd0, requestR[179:128] } ;
  assign value__h48875 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	      !requestR[179]) ?
	       _theResult___fst_sfd__h49332 :
	       requestR[179:128] ;
  assign value__h97054 =
	     (requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0 &&
	      !requestR[150]) ?
	       _theResult___fst_sfd__h97308 :
	       requestR[150:128] ;
  assign x__h119758 = b__h14683 << x__h119791 ;
  assign x__h119791 =
	     12'd57 -
	     _3074_MINUS_SEXT_requestR_BITS_158_TO_151_43_MI_ETC___d2882 ;
  assign x__h13599 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d573 +
	     9'd127 ;
  assign x__h137091 =
	     { (requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0) ?
		 requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0 &&
		 !requestR[150] :
		 (requestR[158:151] != 8'd255 ||
		  requestR[150:128] != 23'd0) &&
		 (requestR[158:151] != 8'd0 || requestR[150:128] != 23'd0) &&
		 IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_39_ETC___d3410,
	       (requestR[158:151] != 8'd255 || requestR[150:128] == 23'd0) &&
	       (requestR[158:151] != 8'd255 || requestR[150:128] != 23'd0) &&
	       (requestR[158:151] != 8'd0 || requestR[150:128] != 23'd0) &&
	       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_39_ETC___d3420,
	       (requestR[158:151] != 8'd255 || requestR[150:128] == 23'd0) &&
	       (requestR[158:151] != 8'd255 || requestR[150:128] != 23'd0) &&
	       (requestR[158:151] != 8'd0 || requestR[150:128] != 23'd0) &&
	       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_NO_ETC___d3434,
	       (requestR[158:151] != 8'd255 || requestR[150:128] == 23'd0) &&
	       (requestR[158:151] != 8'd255 || requestR[150:128] != 23'd0) &&
	       (requestR[158:151] != 8'd0 || requestR[150:128] != 23'd0) &&
	       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_39_ETC___d3446,
	       (requestR[158:151] != 8'd255 || requestR[150:128] == 23'd0) &&
	       (requestR[158:151] != 8'd255 || requestR[150:128] != 23'd0) &&
	       (requestR[158:151] != 8'd0 || requestR[150:128] != 23'd0) &&
	       IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_NO_ETC___d3458 } ;
  assign x__h138012 =
	     requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3479 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   IF_requestR_BITS_126_TO_116_470_EQ_2047_471_AN_ETC___d3518)))) ;
  assign x__h14193 =
	     { 2'd0,
	       NOT_requestR_BITS_159_TO_128_05_EQ_0_06_07_AND_ETC___d722,
	       requestR[159:128] != 32'd0 &&
	       (requestR[159] ||
		requestR_BIT_158_45_OR_requestR_BIT_157_47_OR__ETC___d711) &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d574 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d575,
	       requestR[159:128] != 32'd0 &&
	       requestR_BIT_159_2_OR_requestR_BIT_158_45_OR_r_ETC___d733 } ;
  assign x__h142152 =
	     requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3479 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   ((requestR[126:116] == 11'd2047 && requestR[115]) ?
			      requestR[191:128] :
			      IF_requestR_BITS_190_TO_180_483_EQ_0_491_AND_r_ETC___d3530))))) ;
  assign x__h14475 = { {32{x__h14478[31]}}, x__h14478 } ;
  assign x__h14478 =
	     (requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0) ?
	       32'h80000000 :
	       IF_requestR_BITS_158_TO_151_43_EQ_255_44_AND_r_ETC___d821 ;
  assign x__h146188 =
	     requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3545 ?
	       64'd0 :
	       res__h147865 ;
  assign x__h147888 =
	     { requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3543,
	       4'd0 } ;
  assign x__h148881 =
	     requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3545 ?
	       64'd0 :
	       res__h150558 ;
  assign x__h150577 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0,
	       4'd0 } ;
  assign x__h150756 =
	     requestR_BITS_190_TO_180_483_EQ_2047_484_AND_N_ETC___d3545 ?
	       64'd0 :
	       res__h152433 ;
  assign x__h152881 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       res__h152899 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  res__h153325 :
		  IF_requestR_BITS_190_TO_180_483_EQ_0_491_AND_r_ETC___d3603) ;
  assign x__h153484 =
	     fpu$response_get[69] ? res__h153516 : fpu$response_get[68:5] ;
  assign x__h15356 =
	     IF_requestR_BIT_159_2_THEN_NEG_0b0_CONCAT_NOT__ETC___d762 >>
	     NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d788 |
	     ~(57'h1FFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d788) &
	     {57{IF_requestR_BIT_159_2_THEN_NEG_0b0_CONCAT_NOT__ETC___d762[56]}} ;
  assign x__h15760 =
	     { requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0 ||
	       requestR[158:151] == 8'd255 && requestR[150:128] == 23'd0 ||
	       NOT_requestR_BITS_158_TO_151_43_EQ_0_51_57_OR__ETC___d832,
	       3'd0,
	       (requestR[158:151] != 8'd255 || requestR[150:128] == 23'd0) &&
	       (requestR[158:151] != 8'd255 || requestR[150:128] != 23'd0) &&
	       (requestR[158:151] != 8'd0 || requestR[150:128] != 23'd0) &&
	       IF_NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS__ETC___d843 } ;
  assign x__h16013 = { 32'd0, x__h16016 } ;
  assign x__h16016 =
	     (requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0) ?
	       32'h0 :
	       ((requestR[158:151] == 8'd255 && requestR[150:128] == 23'd0) ?
		  32'hFFFFFFFF :
		  IF_requestR_BIT_159_2_OR_requestR_BITS_158_TO__ETC___d882) ;
  assign x__h16394 =
	     { requestR[158:151] != 8'd0, requestR[150:128], 33'd0 } >>
	     NEG_SEXT_requestR_BITS_158_TO_151_43_MINUS_127_ETC___d853 ;
  assign x__h16471 =
	     { requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0 ||
	       requestR[158:151] == 8'd255 && requestR[150:128] == 23'd0 ||
	       requestR_BIT_159_2_OR_NOT_requestR_BITS_158_TO_ETC___d890,
	       3'd0,
	       NOT_requestR_BITS_158_TO_151_43_EQ_255_44_35_O_ETC___d900 } ;
  assign x__h16709 =
	     requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d918 ?
	       64'hFFFFFFFF7FC00000 :
	       ((requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0 &&
		 !requestR[150]) ?
		  res__h17384 :
		  IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_NOT_ETC___d964) ;
  assign x__h1674 = { 32'hFFFFFFFF, x__h1680 } ;
  assign x__h1680 = { requestR[95], requestR[158:128] } ;
  assign x__h1820 = { 32'hFFFFFFFF, x__h1826 } ;
  assign x__h1826 = { !requestR[95], requestR[158:128] } ;
  assign x__h18740 =
	     { requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d967,
	       4'd0 } ;
  assign x__h19331 =
	     requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d918 ?
	       64'hFFFFFFFF7FC00000 :
	       ((requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0 &&
		 !requestR[150]) ?
		  res__h17384 :
		  IF_requestR_BITS_94_TO_87_09_EQ_255_10_AND_NOT_ETC___d980) ;
  assign x__h1954 = { 32'hFFFFFFFF, x__h1960 } ;
  assign x__h1960 = { requestR[159] != requestR[95], requestR[158:128] } ;
  assign x__h2102 = { 32'hFFFFFFFF, x__h2108 } ;
  assign x__h2108 =
	     { requestR[159:128] != 32'd0 &&
	       (NOT_IF_requestR_BIT_159_2_THEN_NEG_requestR_BI_ETC___d244 ?
		  requestR[159] :
		  IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d294),
	       IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d348,
	       (requestR[159:128] == 32'd0 ||
		NOT_IF_requestR_BIT_159_2_THEN_NEG_requestR_BI_ETC___d244) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h8026 } ;
  assign x__h21965 =
	     { {32{requestR_BITS_159_TO_128__q1[31]}},
	       requestR_BITS_159_TO_128__q1 } ;
  assign x__h22088 =
	     requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d1003 ?
	       64'd0 :
	       res__h22953 ;
  assign x__h23563 =
	     requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d1003 ?
	       64'd0 :
	       res__h24428 ;
  assign x__h24447 =
	     { requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0 ||
	       requestR[94:87] == 8'd255 && requestR[86:64] != 23'd0,
	       4'd0 } ;
  assign x__h24626 =
	     requestR_BITS_158_TO_151_43_EQ_255_44_AND_NOT__ETC___d1003 ?
	       64'd0 :
	       res__h25491 ;
  assign x__h25706 =
	     (requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0) ?
	       res__h25724 :
	       ((requestR[158:151] == 8'd255 && requestR[150:128] == 23'd0) ?
		  res__h25947 :
		  IF_requestR_BITS_158_TO_151_43_EQ_0_51_AND_req_ETC___d1050) ;
  assign x__h26825 = { requestR[127], requestR[190:128] } ;
  assign x__h26950 = { !requestR[127], requestR[190:128] } ;
  assign x__h27077 = { requestR[191] != requestR[127], requestR[190:128] } ;
  assign x__h27210 =
	     { requestR[159:128] != 32'd0 &&
	       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d1202,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h36633,
	       IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d1287 } ;
  assign x__h35939 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1155 +
	     12'd1023 ;
  assign x__h36759 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1156 ||
		!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1158 &&
		!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1160 &&
		_theResult___fst_exp__h36624 == 11'd2047 &&
		_theResult___fst_sfd__h36625 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1156 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1158,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1156 &&
	       !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d1158 &&
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2__ETC___d1304 } ;
  assign x__h37042 =
	     { 1'd0,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h46211,
	       IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d1454 } ;
  assign x__h45518 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1348 +
	     12'd1023 ;
  assign x__h46311 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1349 ||
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1350 &&
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1351 &&
		_theResult___fst_exp__h46202 == 11'd2047 &&
		_theResult___fst_sfd__h46203 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1349 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1350,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1349 &&
	       !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d1350 &&
	       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THE_ETC___d1471 } ;
  assign x__h46593 = { {32{x__h46596[31]}}, x__h46596 } ;
  assign x__h46596 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       32'h80000000 :
	       IF_requestR_BITS_190_TO_180_483_EQ_2047_484_AN_ETC___d1561 ;
  assign x__h47474 =
	     IF_requestR_BIT_191_111_THEN_NEG_0b0_CONCAT_NO_ETC___d1502 >>
	     NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1528 |
	     ~(86'h3FFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1528) &
	     {86{IF_requestR_BIT_191_111_THEN_NEG_0b0_CONCAT_NO_ETC___d1502[85]}} ;
  assign x__h47861 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_BITS_190_TO_180_483_EQ_0_491_497__ETC___d1572,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_ETC___d1583 } ;
  assign x__h48114 = { 32'd0, x__h48117 } ;
  assign x__h48117 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       32'h0 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  32'hFFFFFFFF :
		  IF_requestR_BIT_191_111_OR_requestR_BITS_190_T_ETC___d1622) ;
  assign x__h48495 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 33'd0 } >>
	     NEG_SEXT_requestR_BITS_190_TO_180_483_MINUS_10_ETC___d1593 ;
  assign x__h48572 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       requestR_BIT_191_111_OR_NOT_requestR_BITS_190__ETC___d1630,
	       3'd0,
	       NOT_requestR_BITS_190_TO_180_483_EQ_2047_484_5_ETC___d1641 } ;
  assign x__h48805 = { 32'hFFFFFFFF, x__h48811 } ;
  assign x__h48811 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
		(requestR[190:180] == 11'd2047 ||
		 requestR[190:180] == 11'd0) &&
		requestR[179:128] == 52'd0) ?
		 requestR[191] :
		 IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2462,
	       (requestR[190:180] == 11'd2047) ?
		 8'd255 :
		 _theResult___fst_exp__h95703,
	       (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 _theResult___snd_fst_sfd__h52990 :
		 _theResult___fst_sfd__h95707 } ;
  assign x__h7540 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_2_THE_ETC___d239 +
	     9'd127 ;
  assign x__h78954 = sfd__h53036 << x__h78987 ;
  assign x__h78987 =
	     12'd57 -
	     _3970_MINUS_SEXT_requestR_BITS_190_TO_180_483_M_ETC___d2135 ;
  assign x__h8161 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_2_THEN_NEG_requestR_BITS_1_ETC___d423,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_2_THEN_NEG_requestR_BITS_1_ETC___d426,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_2_THEN_NEG_requestR_BITS_1_ETC___d435 } ;
  assign x__h8449 =
	     { 33'h1FFFFFFFE,
	       IF_requestR_BITS_159_TO_128_05_EQ_0_06_OR_NOT__ETC___d650,
	       (requestR[159:128] == 32'd0 ||
		!requestR[159] &&
		NOT_requestR_BIT_158_45_46_AND_NOT_requestR_BI_ETC___d536 ||
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d574 ||
		_32_MINUS_0_CONCAT_IF_requestR_BIT_159_2_THEN_0_ETC___d575) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h14084 } ;
  assign x__h96011 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179] :
		 (requestR[190:180] != 11'd2047 ||
		  requestR[179:128] != 52'd0) &&
		 (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
		 IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2721,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2732,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2748,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2761,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_483_EQ_0_491_THEN__ETC___d2774 } ;
  assign x__h96991 =
	     { (requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0 ||
		(requestR[158:151] == 8'd255 || requestR[158:151] == 8'd0) &&
		requestR[150:128] == 23'd0) ?
		 requestR[159] :
		 IF_requestR_BITS_158_TO_151_43_EQ_0_51_THEN_IF_ETC___d3211,
	       (requestR[158:151] == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h136826,
	       (requestR[158:151] == 8'd255 && requestR[150:128] != 23'd0) ?
		 _theResult___snd_fst_sfd__h98936 :
		 _theResult___fst_sfd__h136830 } ;
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd254;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd255 : 8'd254;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd254 : 8'd255;
      default: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      23'd8388607;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd0 : 23'd8388607;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd8388607 : 23'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 = 23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd2046;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      requestR[159] ? 11'd2047 : 11'd2046;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      requestR[159] ? 11'd2046 : 11'd2047;
      default: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      52'hFFFFFFFFFFFFF;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      requestR[159] ? 52'd0 : 52'hFFFFFFFFFFFFF;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      requestR[159] ? 52'hFFFFFFFFFFFFF : 52'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 = 52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h0:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26 =
	      requestR[194:192];
      3'h1: IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26 = 3'd4;
      3'h2: IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26 = 3'd3;
      3'h3: IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26 = 3'd2;
      default: IF_requestR_BITS_194_TO_192_8_EQ_0x0_9_THEN_re_ETC___d26 =
		   3'd0;
    endcase
  end
  always@(guard__h7525 or
	  x__h7540 or out_exp__h7964 or _theResult___exp__h7961)
  begin
    case (guard__h7525)
      2'b0, 2'b01:
	  CASE_guard525_0b0_x540_BITS_7_TO_0_0b1_x540_BI_ETC__q8 =
	      x__h7540[7:0];
      2'b10:
	  CASE_guard525_0b0_x540_BITS_7_TO_0_0b1_x540_BI_ETC__q8 =
	      out_exp__h7964;
      2'b11:
	  CASE_guard525_0b0_x540_BITS_7_TO_0_0b1_x540_BI_ETC__q8 =
	      _theResult___exp__h7961;
    endcase
  end
  always@(requestR or
	  x__h7540 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d339 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d337)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x540_BITS_7__ETC__q9 =
	      x__h7540[7:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x540_BITS_7__ETC__q9 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d339;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x540_BITS_7__ETC__q9 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d337;
      default: CASE_requestR_BITS_194_TO_192_0x1_x540_BITS_7__ETC__q9 = 8'd0;
    endcase
  end
  always@(guard__h7525 or
	  sfd___3__h7027 or out_sfd__h7965 or _theResult___sfd__h7962)
  begin
    case (guard__h7525)
      2'b0, 2'b01:
	  CASE_guard525_0b0_sfd___3027_BITS_30_TO_8_0b1__ETC__q10 =
	      sfd___3__h7027[30:8];
      2'b10:
	  CASE_guard525_0b0_sfd___3027_BITS_30_TO_8_0b1__ETC__q10 =
	      out_sfd__h7965;
      2'b11:
	  CASE_guard525_0b0_sfd___3027_BITS_30_TO_8_0b1__ETC__q10 =
	      _theResult___sfd__h7962;
    endcase
  end
  always@(requestR or
	  sfd___3__h7027 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d374 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d372)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q11 =
	      sfd___3__h7027[30:8];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q11 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d374;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q11 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d372;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q11 =
		   23'd0;
    endcase
  end
  always@(guard__h7037 or
	  sfd___3__h7027 or out_sfd__h7454 or _theResult___sfd__h7451)
  begin
    case (guard__h7037)
      2'b0, 2'b01:
	  CASE_guard037_0b0_sfd___3027_BITS_31_TO_9_0b1__ETC__q12 =
	      sfd___3__h7027[31:9];
      2'b10:
	  CASE_guard037_0b0_sfd___3027_BITS_31_TO_9_0b1__ETC__q12 =
	      out_sfd__h7454;
      2'b11:
	  CASE_guard037_0b0_sfd___3027_BITS_31_TO_9_0b1__ETC__q12 =
	      _theResult___sfd__h7451;
    endcase
  end
  always@(requestR or
	  sfd___3__h7027 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d359 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d357)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q13 =
	      sfd___3__h7027[31:9];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q13 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d359;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q13 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d357;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___3027_B_ETC__q13 =
		   23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d271 =
	      requestR[159];
      default: IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d271 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h7037 or requestR)
  begin
    case (guard__h7037)
      2'b0, 2'b01, 2'b10:
	  CASE_guard037_0b0_requestR_BIT_159_0b1_request_ETC__q14 =
	      requestR[159];
      2'd3:
	  CASE_guard037_0b0_requestR_BIT_159_0b1_request_ETC__q14 =
	      guard__h7037 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h7525 or requestR)
  begin
    case (guard__h7525)
      2'b0, 2'b01, 2'b10:
	  CASE_guard525_0b0_requestR_BIT_159_0b1_request_ETC__q15 =
	      requestR[159];
      2'd3:
	  CASE_guard525_0b0_requestR_BIT_159_0b1_request_ETC__q15 =
	      guard__h7525 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d314 or
	  guard__h7037 or _theResult___exp__h7450)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d316 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d314;
      3'h3:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d316 =
	      (guard__h7037 == 2'b0 || requestR[159]) ?
		8'd0 :
		_theResult___exp__h7450;
      default: IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d316 =
		   8'd0;
    endcase
  end
  always@(guard__h7037 or out_exp__h7453 or _theResult___exp__h7450)
  begin
    case (guard__h7037)
      2'b0, 2'b01:
	  CASE_guard037_0b0_0_0b1_0_0b10_out_exp453_0b11_ETC__q16 = 8'd0;
      2'b10:
	  CASE_guard037_0b0_0_0b1_0_0b10_out_exp453_0b11_ETC__q16 =
	      out_exp__h7453;
      2'b11:
	  CASE_guard037_0b0_0_0b1_0_0b10_out_exp453_0b11_ETC__q16 =
	      _theResult___exp__h7450;
    endcase
  end
  always@(requestR or x__h13599 or guard__h13584 or _theResult___exp__h14020)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d644 =
	      x__h13599[7:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d644 =
	      (guard__h13584 == 2'b0) ?
		x__h13599[7:0] :
		_theResult___exp__h14020;
      default: IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d644 =
		   8'd0;
    endcase
  end
  always@(guard__h13584 or
	  x__h13599 or out_exp__h14023 or _theResult___exp__h14020)
  begin
    case (guard__h13584)
      2'b0, 2'b01:
	  CASE_guard3584_0b0_x3599_BITS_7_TO_0_0b1_x3599_ETC__q19 =
	      x__h13599[7:0];
      2'b10:
	  CASE_guard3584_0b0_x3599_BITS_7_TO_0_0b1_x3599_ETC__q19 =
	      out_exp__h14023;
      2'b11:
	  CASE_guard3584_0b0_x3599_BITS_7_TO_0_0b1_x3599_ETC__q19 =
	      _theResult___exp__h14020;
    endcase
  end
  always@(requestR or
	  sfd___3__h13090 or guard__h13584 or _theResult___sfd__h14021)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d676 =
	      sfd___3__h13090[30:8];
      3'h3:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d676 =
	      (guard__h13584 == 2'b0) ?
		sfd___3__h13090[30:8] :
		_theResult___sfd__h14021;
      default: IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d676 =
		   23'd0;
    endcase
  end
  always@(guard__h13584 or
	  sfd___3__h13090 or out_sfd__h14024 or _theResult___sfd__h14021)
  begin
    case (guard__h13584)
      2'b0, 2'b01:
	  CASE_guard3584_0b0_sfd___33090_BITS_30_TO_8_0b_ETC__q20 =
	      sfd___3__h13090[30:8];
      2'b10:
	  CASE_guard3584_0b0_sfd___33090_BITS_30_TO_8_0b_ETC__q20 =
	      out_sfd__h14024;
      2'b11:
	  CASE_guard3584_0b0_sfd___33090_BITS_30_TO_8_0b_ETC__q20 =
	      _theResult___sfd__h14021;
    endcase
  end
  always@(guard__h13100 or out_exp__h13513 or _theResult___exp__h13510)
  begin
    case (guard__h13100)
      2'b0, 2'b01:
	  CASE_guard3100_0b0_0_0b1_0_0b10_out_exp3513_0b_ETC__q21 = 8'd0;
      2'b10:
	  CASE_guard3100_0b0_0_0b1_0_0b10_out_exp3513_0b_ETC__q21 =
	      out_exp__h13513;
      2'b11:
	  CASE_guard3100_0b0_0_0b1_0_0b10_out_exp3513_0b_ETC__q21 =
	      _theResult___exp__h13510;
    endcase
  end
  always@(requestR or
	  sfd___3__h13090 or guard__h13100 or _theResult___sfd__h13511)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d664 =
	      sfd___3__h13090[31:9];
      3'h3:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d664 =
	      (guard__h13100 == 2'b0) ?
		sfd___3__h13090[31:9] :
		_theResult___sfd__h13511;
      default: IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d664 =
		   23'd0;
    endcase
  end
  always@(guard__h13100 or
	  sfd___3__h13090 or out_sfd__h13514 or _theResult___sfd__h13511)
  begin
    case (guard__h13100)
      2'b0, 2'b01:
	  CASE_guard3100_0b0_sfd___33090_BITS_31_TO_9_0b_ETC__q22 =
	      sfd___3__h13090[31:9];
      2'b10:
	  CASE_guard3100_0b0_sfd___33090_BITS_31_TO_9_0b_ETC__q22 =
	      out_sfd__h13514;
      2'b11:
	  CASE_guard3100_0b0_sfd___33090_BITS_31_TO_9_0b_ETC__q22 =
	      _theResult___sfd__h13511;
    endcase
  end
  always@(guard__h35236 or requestR)
  begin
    case (guard__h35236)
      2'b0, 2'b01, 2'b10:
	  CASE_guard5236_0b0_requestR_BIT_159_0b1_reques_ETC__q27 =
	      requestR[159];
      2'd3:
	  CASE_guard5236_0b0_requestR_BIT_159_0b1_reques_ETC__q27 =
	      guard__h35236 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h35924 or requestR)
  begin
    case (guard__h35924)
      2'b0, 2'b01, 2'b10:
	  CASE_guard5924_0b0_requestR_BIT_159_0b1_reques_ETC__q28 =
	      requestR[159];
      2'd3:
	  CASE_guard5924_0b0_requestR_BIT_159_0b1_reques_ETC__q28 =
	      guard__h35924 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h35924 or
	  x__h35939 or out_exp__h36566 or _theResult___exp__h36563)
  begin
    case (guard__h35924)
      2'b0, 2'b01:
	  CASE_guard5924_0b0_x5939_BITS_10_TO_0_0b1_x593_ETC__q29 =
	      x__h35939[10:0];
      2'b10:
	  CASE_guard5924_0b0_x5939_BITS_10_TO_0_0b1_x593_ETC__q29 =
	      out_exp__h36566;
      2'b11:
	  CASE_guard5924_0b0_x5939_BITS_10_TO_0_0b1_x593_ETC__q29 =
	      _theResult___exp__h36563;
    endcase
  end
  always@(requestR or
	  x__h35939 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1245 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1243)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x5939_BITS_1_ETC__q30 =
	      x__h35939[10:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x5939_BITS_1_ETC__q30 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1245;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x5939_BITS_1_ETC__q30 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1243;
      default: CASE_requestR_BITS_194_TO_192_0x1_x5939_BITS_1_ETC__q30 =
		   11'd0;
    endcase
  end
  always@(guard__h35924 or
	  sfd___3__h35226 or out_sfd__h36567 or _theResult___sfd__h36564)
  begin
    case (guard__h35924)
      2'b0, 2'b01:
	  CASE_guard5924_0b0_sfd___35226_BITS_53_TO_2_0b_ETC__q31 =
	      sfd___3__h35226[53:2];
      2'b10:
	  CASE_guard5924_0b0_sfd___35226_BITS_53_TO_2_0b_ETC__q31 =
	      out_sfd__h36567;
      2'b11:
	  CASE_guard5924_0b0_sfd___35226_BITS_53_TO_2_0b_ETC__q31 =
	      _theResult___sfd__h36564;
    endcase
  end
  always@(requestR or
	  sfd___3__h35226 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1280 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1278)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q32 =
	      sfd___3__h35226[53:2];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q32 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1280;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q32 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1278;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q32 =
		   52'd0;
    endcase
  end
  always@(guard__h35236 or
	  sfd___3__h35226 or out_sfd__h35853 or _theResult___sfd__h35850)
  begin
    case (guard__h35236)
      2'b0, 2'b01:
	  CASE_guard5236_0b0_sfd___35226_BITS_54_TO_3_0b_ETC__q33 =
	      sfd___3__h35226[54:3];
      2'b10:
	  CASE_guard5236_0b0_sfd___35226_BITS_54_TO_3_0b_ETC__q33 =
	      out_sfd__h35853;
      2'b11:
	  CASE_guard5236_0b0_sfd___35226_BITS_54_TO_3_0b_ETC__q33 =
	      _theResult___sfd__h35850;
    endcase
  end
  always@(requestR or
	  sfd___3__h35226 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1265 or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1263)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q34 =
	      sfd___3__h35226[54:3];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q34 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1265;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q34 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1263;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___35226__ETC__q34 =
		   52'd0;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1220 or
	  guard__h35236 or _theResult___exp__h35849)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1222 =
	      IF_IF_IF_requestR_BIT_159_2_THEN_NEG_requestR__ETC___d1220;
      3'h3:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1222 =
	      (guard__h35236 == 2'b0 || requestR[159]) ?
		11'd0 :
		_theResult___exp__h35849;
      default: IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1222 =
		   11'd0;
    endcase
  end
  always@(guard__h35236 or out_exp__h35852 or _theResult___exp__h35849)
  begin
    case (guard__h35236)
      2'b0, 2'b01:
	  CASE_guard5236_0b0_0_0b1_0_0b10_out_exp5852_0b_ETC__q35 = 11'd0;
      2'b10:
	  CASE_guard5236_0b0_0_0b1_0_0b10_out_exp5852_0b_ETC__q35 =
	      out_exp__h35852;
      2'b11:
	  CASE_guard5236_0b0_0_0b1_0_0b10_out_exp5852_0b_ETC__q35 =
	      _theResult___exp__h35849;
    endcase
  end
  always@(guard__h44816 or out_exp__h45432 or _theResult___exp__h45429)
  begin
    case (guard__h44816)
      2'b0, 2'b01:
	  CASE_guard4816_0b0_0_0b1_0_0b10_out_exp5432_0b_ETC__q38 = 11'd0;
      2'b10:
	  CASE_guard4816_0b0_0_0b1_0_0b10_out_exp5432_0b_ETC__q38 =
	      out_exp__h45432;
      2'b11:
	  CASE_guard4816_0b0_0_0b1_0_0b10_out_exp5432_0b_ETC__q38 =
	      _theResult___exp__h45429;
    endcase
  end
  always@(requestR or x__h45518 or guard__h45503 or _theResult___exp__h46142)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1419 =
	      x__h45518[10:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1419 =
	      (guard__h45503 == 2'b0) ?
		x__h45518[10:0] :
		_theResult___exp__h46142;
      default: IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1419 =
		   11'd0;
    endcase
  end
  always@(guard__h45503 or
	  x__h45518 or out_exp__h46145 or _theResult___exp__h46142)
  begin
    case (guard__h45503)
      2'b0, 2'b01:
	  CASE_guard5503_0b0_x5518_BITS_10_TO_0_0b1_x551_ETC__q39 =
	      x__h45518[10:0];
      2'b10:
	  CASE_guard5503_0b0_x5518_BITS_10_TO_0_0b1_x551_ETC__q39 =
	      out_exp__h46145;
      2'b11:
	  CASE_guard5503_0b0_x5518_BITS_10_TO_0_0b1_x551_ETC__q39 =
	      _theResult___exp__h46142;
    endcase
  end
  always@(requestR or
	  sfd___3__h44806 or guard__h45503 or _theResult___sfd__h46143)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1450 =
	      sfd___3__h44806[53:2];
      3'h3:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1450 =
	      (guard__h45503 == 2'b0) ?
		sfd___3__h44806[53:2] :
		_theResult___sfd__h46143;
      default: IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1450 =
		   52'd0;
    endcase
  end
  always@(guard__h45503 or
	  sfd___3__h44806 or out_sfd__h46146 or _theResult___sfd__h46143)
  begin
    case (guard__h45503)
      2'b0, 2'b01:
	  CASE_guard5503_0b0_sfd___34806_BITS_53_TO_2_0b_ETC__q40 =
	      sfd___3__h44806[53:2];
      2'b10:
	  CASE_guard5503_0b0_sfd___34806_BITS_53_TO_2_0b_ETC__q40 =
	      out_sfd__h46146;
      2'b11:
	  CASE_guard5503_0b0_sfd___34806_BITS_53_TO_2_0b_ETC__q40 =
	      _theResult___sfd__h46143;
    endcase
  end
  always@(requestR or
	  sfd___3__h44806 or guard__h44816 or _theResult___sfd__h45430)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1438 =
	      sfd___3__h44806[54:3];
      3'h3:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1438 =
	      (guard__h44816 == 2'b0) ?
		sfd___3__h44806[54:3] :
		_theResult___sfd__h45430;
      default: IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_THEN_IF_ETC___d1438 =
		   52'd0;
    endcase
  end
  always@(guard__h44816 or
	  sfd___3__h44806 or out_sfd__h45433 or _theResult___sfd__h45430)
  begin
    case (guard__h44816)
      2'b0, 2'b01:
	  CASE_guard4816_0b0_sfd___34806_BITS_54_TO_3_0b_ETC__q41 =
	      sfd___3__h44806[54:3];
      2'b10:
	  CASE_guard4816_0b0_sfd___34806_BITS_54_TO_3_0b_ETC__q41 =
	      out_sfd__h45433;
      2'b11:
	  CASE_guard4816_0b0_sfd___34806_BITS_54_TO_3_0b_ETC__q41 =
	      _theResult___sfd__h45430;
    endcase
  end
  always@(guard__h60646 or
	  _theResult___fst_exp__h68743 or
	  out_exp__h69269 or _theResult___exp__h69266)
  begin
    case (guard__h60646)
      2'b0, 2'b01:
	  CASE_guard0646_0b0_theResult___fst_exp8743_0b1_ETC__q54 =
	      _theResult___fst_exp__h68743;
      2'b10:
	  CASE_guard0646_0b0_theResult___fst_exp8743_0b1_ETC__q54 =
	      out_exp__h69269;
      2'b11:
	  CASE_guard0646_0b0_theResult___fst_exp8743_0b1_ETC__q54 =
	      _theResult___exp__h69266;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h68743 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2486 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2484)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55 =
	      _theResult___fst_exp__h68743;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2486;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2484;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q55 = 8'd0;
    endcase
  end
  always@(guard__h69339 or
	  _theResult___fst_exp__h77387 or
	  out_exp__h77839 or _theResult___exp__h77836)
  begin
    case (guard__h69339)
      2'b0, 2'b01:
	  CASE_guard9339_0b0_theResult___fst_exp7387_0b1_ETC__q56 =
	      _theResult___fst_exp__h77387;
      2'b10:
	  CASE_guard9339_0b0_theResult___fst_exp7387_0b1_ETC__q56 =
	      out_exp__h77839;
      2'b11:
	  CASE_guard9339_0b0_theResult___fst_exp7387_0b1_ETC__q56 =
	      _theResult___exp__h77836;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h77387 or
	  IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2514 or
	  IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2512)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57 =
	      _theResult___fst_exp__h77387;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57 =
	      IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2514;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57 =
	      IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2512;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q57 = 8'd0;
    endcase
  end
  always@(guard__h78256 or
	  _theResult___fst_exp__h86482 or
	  out_exp__h87008 or _theResult___exp__h87005)
  begin
    case (guard__h78256)
      2'b0, 2'b01:
	  CASE_guard8256_0b0_theResult___fst_exp6482_0b1_ETC__q58 =
	      _theResult___fst_exp__h86482;
      2'b10:
	  CASE_guard8256_0b0_theResult___fst_exp6482_0b1_ETC__q58 =
	      out_exp__h87008;
      2'b11:
	  CASE_guard8256_0b0_theResult___fst_exp6482_0b1_ETC__q58 =
	      _theResult___exp__h87005;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h86482 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2550 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2548)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59 =
	      _theResult___fst_exp__h86482;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2550;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2548;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q59 = 8'd0;
    endcase
  end
  always@(guard__h87078 or
	  _theResult___fst_exp__h95155 or
	  out_exp__h95632 or _theResult___exp__h95629)
  begin
    case (guard__h87078)
      2'b0, 2'b01:
	  CASE_guard7078_0b0_theResult___fst_exp5155_0b1_ETC__q60 =
	      _theResult___fst_exp__h95155;
      2'b10:
	  CASE_guard7078_0b0_theResult___fst_exp5155_0b1_ETC__q60 =
	      out_exp__h95632;
      2'b11:
	  CASE_guard7078_0b0_theResult___fst_exp5155_0b1_ETC__q60 =
	      _theResult___exp__h95629;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h95155 or
	  IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2578 or
	  IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2576)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 =
	      _theResult___fst_exp__h95155;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 =
	      IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2578;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 =
	      IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2576;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 = 8'd0;
    endcase
  end
  always@(guard__h60646 or
	  sfdin__h68737 or out_sfd__h69270 or _theResult___sfd__h69267)
  begin
    case (guard__h60646)
      2'b0, 2'b01:
	  CASE_guard0646_0b0_sfdin8737_BITS_56_TO_34_0b1_ETC__q62 =
	      sfdin__h68737[56:34];
      2'b10:
	  CASE_guard0646_0b0_sfdin8737_BITS_56_TO_34_0b1_ETC__q62 =
	      out_sfd__h69270;
      2'b11:
	  CASE_guard0646_0b0_sfdin8737_BITS_56_TO_34_0b1_ETC__q62 =
	      _theResult___sfd__h69267;
    endcase
  end
  always@(requestR or
	  sfdin__h68737 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2606 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2604)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin8737_BI_ETC__q63 =
	      sfdin__h68737[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin8737_BI_ETC__q63 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2606;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin8737_BI_ETC__q63 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2604;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin8737_BI_ETC__q63 =
		   23'd0;
    endcase
  end
  always@(guard__h69339 or
	  _theResult___snd__h77338 or
	  out_sfd__h77840 or _theResult___sfd__h77837)
  begin
    case (guard__h69339)
      2'b0, 2'b01:
	  CASE_guard9339_0b0_theResult___snd7338_BITS_56_ETC__q64 =
	      _theResult___snd__h77338[56:34];
      2'b10:
	  CASE_guard9339_0b0_theResult___snd7338_BITS_56_ETC__q64 =
	      out_sfd__h77840;
      2'b11:
	  CASE_guard9339_0b0_theResult___snd7338_BITS_56_ETC__q64 =
	      _theResult___sfd__h77837;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h77338 or
	  IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2622 or
	  IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2620)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
	      _theResult___snd__h77338[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
	      IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2622;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
	      IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2620;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
		   23'd0;
    endcase
  end
  always@(guard__h78256 or
	  sfdin__h86476 or out_sfd__h87009 or _theResult___sfd__h87006)
  begin
    case (guard__h78256)
      2'b0, 2'b01:
	  CASE_guard8256_0b0_sfdin6476_BITS_56_TO_34_0b1_ETC__q66 =
	      sfdin__h86476[56:34];
      2'b10:
	  CASE_guard8256_0b0_sfdin6476_BITS_56_TO_34_0b1_ETC__q66 =
	      out_sfd__h87009;
      2'b11:
	  CASE_guard8256_0b0_sfdin6476_BITS_56_TO_34_0b1_ETC__q66 =
	      _theResult___sfd__h87006;
    endcase
  end
  always@(requestR or
	  sfdin__h86476 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2646 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2644)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin6476_BI_ETC__q67 =
	      sfdin__h86476[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin6476_BI_ETC__q67 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2646;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin6476_BI_ETC__q67 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2644;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin6476_BI_ETC__q67 =
		   23'd0;
    endcase
  end
  always@(guard__h87078 or
	  _theResult___snd__h95101 or
	  out_sfd__h95633 or _theResult___sfd__h95630)
  begin
    case (guard__h87078)
      2'b0, 2'b01:
	  CASE_guard7078_0b0_theResult___snd5101_BITS_56_ETC__q68 =
	      _theResult___snd__h95101[56:34];
      2'b10:
	  CASE_guard7078_0b0_theResult___snd5101_BITS_56_ETC__q68 =
	      out_sfd__h95633;
      2'b11:
	  CASE_guard7078_0b0_theResult___snd5101_BITS_56_ETC__q68 =
	      _theResult___sfd__h95630;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h95101 or
	  IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2662 or
	  IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2660)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
	      _theResult___snd__h95101[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
	      IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2662;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
	      IF_IF_IF_requestR_BITS_190_TO_180_483_EQ_0_491_ETC___d2660;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
		   23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d1998 =
	      requestR[191];
      default: IF_requestR_BITS_194_TO_192_8_EQ_0x3_2_OR_requ_ETC___d1998 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h60646 or requestR)
  begin
    case (guard__h60646)
      2'b0, 2'b01, 2'b10:
	  CASE_guard0646_0b0_requestR_BIT_191_0b1_reques_ETC__q70 =
	      requestR[191];
      2'd3:
	  CASE_guard0646_0b0_requestR_BIT_191_0b1_reques_ETC__q70 =
	      guard__h60646 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h69339 or requestR)
  begin
    case (guard__h69339)
      2'b0, 2'b01, 2'b10:
	  CASE_guard9339_0b0_requestR_BIT_191_0b1_reques_ETC__q71 =
	      requestR[191];
      2'd3:
	  CASE_guard9339_0b0_requestR_BIT_191_0b1_reques_ETC__q71 =
	      guard__h69339 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h78256 or requestR)
  begin
    case (guard__h78256)
      2'b0, 2'b01, 2'b10:
	  CASE_guard8256_0b0_requestR_BIT_191_0b1_reques_ETC__q72 =
	      requestR[191];
      2'd3:
	  CASE_guard8256_0b0_requestR_BIT_191_0b1_reques_ETC__q72 =
	      guard__h78256 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h87078 or requestR)
  begin
    case (guard__h87078)
      2'b0, 2'b01, 2'b10:
	  CASE_guard7078_0b0_requestR_BIT_191_0b1_reques_ETC__q73 =
	      requestR[191];
      2'd3:
	  CASE_guard7078_0b0_requestR_BIT_191_0b1_reques_ETC__q73 =
	      guard__h87078 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h109824 or
	  _theResult___fst_exp__h117785 or
	  out_exp__h118440 or _theResult___exp__h118437)
  begin
    case (guard__h109824)
      2'b0, 2'b01:
	  CASE_guard09824_0b0_theResult___fst_exp17785_0_ETC__q82 =
	      _theResult___fst_exp__h117785;
      2'b10:
	  CASE_guard09824_0b0_theResult___fst_exp17785_0_ETC__q82 =
	      out_exp__h118440;
      2'b11:
	  CASE_guard09824_0b0_theResult___fst_exp17785_0_ETC__q82 =
	      _theResult___exp__h118437;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h117785 or
	  IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3235 or
	  IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3233)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83 =
	      _theResult___fst_exp__h117785;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83 =
	      IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3235;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83 =
	      IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3233;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q83 =
		   11'd0;
    endcase
  end
  always@(guard__h119060 or
	  _theResult___fst_exp__h127286 or
	  out_exp__h128015 or _theResult___exp__h128012)
  begin
    case (guard__h119060)
      2'b0, 2'b01:
	  CASE_guard19060_0b0_theResult___fst_exp27286_0_ETC__q84 =
	      _theResult___fst_exp__h127286;
      2'b10:
	  CASE_guard19060_0b0_theResult___fst_exp27286_0_ETC__q84 =
	      out_exp__h128015;
      2'b11:
	  CASE_guard19060_0b0_theResult___fst_exp27286_0_ETC__q84 =
	      _theResult___exp__h128012;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h127286 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3271 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3269)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 =
	      _theResult___fst_exp__h127286;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3271;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3269;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 =
		   11'd0;
    endcase
  end
  always@(guard__h128085 or
	  _theResult___fst_exp__h136075 or
	  out_exp__h136755 or _theResult___exp__h136752)
  begin
    case (guard__h128085)
      2'b0, 2'b01:
	  CASE_guard28085_0b0_theResult___fst_exp36075_0_ETC__q86 =
	      _theResult___fst_exp__h136075;
      2'b10:
	  CASE_guard28085_0b0_theResult___fst_exp36075_0_ETC__q86 =
	      out_exp__h136755;
      2'b11:
	  CASE_guard28085_0b0_theResult___fst_exp36075_0_ETC__q86 =
	      _theResult___exp__h136752;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h136075 or
	  IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3299 or
	  IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3297)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
	      _theResult___fst_exp__h136075;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
	      IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3299;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
	      IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3297;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
		   11'd0;
    endcase
  end
  always@(guard__h109824 or
	  _theResult___snd__h117736 or
	  out_sfd__h118441 or _theResult___sfd__h118438)
  begin
    case (guard__h109824)
      2'b0, 2'b01:
	  CASE_guard09824_0b0_theResult___snd17736_BITS__ETC__q88 =
	      _theResult___snd__h117736[56:5];
      2'b10:
	  CASE_guard09824_0b0_theResult___snd17736_BITS__ETC__q88 =
	      out_sfd__h118441;
      2'b11:
	  CASE_guard09824_0b0_theResult___snd17736_BITS__ETC__q88 =
	      _theResult___sfd__h118438;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h117736 or
	  IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3326 or
	  IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3324)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      _theResult___snd__h117736[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3326;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3324;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
		   52'd0;
    endcase
  end
  always@(guard__h119060 or
	  sfdin__h127280 or out_sfd__h128016 or _theResult___sfd__h128013)
  begin
    case (guard__h119060)
      2'b0, 2'b01:
	  CASE_guard19060_0b0_sfdin27280_BITS_56_TO_5_0b_ETC__q90 =
	      sfdin__h127280[56:5];
      2'b10:
	  CASE_guard19060_0b0_sfdin27280_BITS_56_TO_5_0b_ETC__q90 =
	      out_sfd__h128016;
      2'b11:
	  CASE_guard19060_0b0_sfdin27280_BITS_56_TO_5_0b_ETC__q90 =
	      _theResult___sfd__h128013;
    endcase
  end
  always@(requestR or
	  sfdin__h127280 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3350 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3348)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin27280_B_ETC__q91 =
	      sfdin__h127280[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin27280_B_ETC__q91 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3350;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin27280_B_ETC__q91 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_requestR_BITS_158__ETC___d3348;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin27280_B_ETC__q91 =
		   52'd0;
    endcase
  end
  always@(guard__h128085 or
	  _theResult___snd__h136021 or
	  out_sfd__h136756 or _theResult___sfd__h136753)
  begin
    case (guard__h128085)
      2'b0, 2'b01:
	  CASE_guard28085_0b0_theResult___snd36021_BITS__ETC__q92 =
	      _theResult___snd__h136021[56:5];
      2'b10:
	  CASE_guard28085_0b0_theResult___snd36021_BITS__ETC__q92 =
	      out_sfd__h136756;
      2'b11:
	  CASE_guard28085_0b0_theResult___snd36021_BITS__ETC__q92 =
	      _theResult___sfd__h136753;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h136021 or
	  IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3366 or
	  IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3364)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      _theResult___snd__h136021[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3366;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      IF_IF_IF_requestR_BITS_158_TO_151_43_EQ_0_51_T_ETC___d3364;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
		   52'd0;
    endcase
  end
  always@(guard__h109824 or requestR)
  begin
    case (guard__h109824)
      2'b0, 2'b01, 2'b10:
	  CASE_guard09824_0b0_requestR_BIT_159_0b1_reque_ETC__q94 =
	      requestR[159];
      2'd3:
	  CASE_guard09824_0b0_requestR_BIT_159_0b1_reque_ETC__q94 =
	      guard__h109824 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h119060 or requestR)
  begin
    case (guard__h119060)
      2'b0, 2'b01, 2'b10:
	  CASE_guard19060_0b0_requestR_BIT_159_0b1_reque_ETC__q95 =
	      requestR[159];
      2'd3:
	  CASE_guard19060_0b0_requestR_BIT_159_0b1_reque_ETC__q95 =
	      guard__h119060 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h128085 or requestR)
  begin
    case (guard__h128085)
      2'b0, 2'b01, 2'b10:
	  CASE_guard28085_0b0_requestR_BIT_159_0b1_reque_ETC__q96 =
	      requestR[159];
      2'd3:
	  CASE_guard28085_0b0_requestR_BIT_159_0b1_reque_ETC__q96 =
	      guard__h128085 == 2'b11 && requestR[159];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	requestR <= `BSV_ASSIGNMENT_DELAY
	    215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	resultR <= `BSV_ASSIGNMENT_DELAY 70'h0AAAAAAAAAAAAAAAAA;
	stateR <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (requestR$EN) requestR <= `BSV_ASSIGNMENT_DELAY requestR$D_IN;
	if (resultR$EN) resultR <= `BSV_ASSIGNMENT_DELAY resultR$D_IN;
	if (stateR$EN) stateR <= `BSV_ASSIGNMENT_DELAY stateR$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_verbosity = 4'hA;
    requestR = 215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    resultR = 70'h2AAAAAAAAAAAAAAAAA;
    stateR = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkRISCV_FBox

