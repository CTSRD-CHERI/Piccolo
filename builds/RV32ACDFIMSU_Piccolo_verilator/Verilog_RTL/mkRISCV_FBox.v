//
// Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
//
// On Fri Jan 18 12:35:25 EST 2019
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// valid                          O     1
// word_fst                       O    64
// word_snd                       O     5
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_opcode                     I     7 reg
// req_f7                         I     7 reg
// req_rm                         I     3 reg
// req_rs2                        I     5 reg
// req_v1                         I    64 reg
// req_v2                         I    64 reg
// req_v3                         I    64 reg
// EN_set_verbosity               I     1
// EN_req                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkRISCV_FBox(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    req_opcode,
		    req_f7,
		    req_rm,
		    req_rs2,
		    req_v1,
		    req_v2,
		    req_v3,
		    EN_req,

		    valid,

		    word_fst,

		    word_snd);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method req
  input  [6 : 0] req_opcode;
  input  [6 : 0] req_f7;
  input  [2 : 0] req_rm;
  input  [4 : 0] req_rs2;
  input  [63 : 0] req_v1;
  input  [63 : 0] req_v2;
  input  [63 : 0] req_v3;
  input  EN_req;

  // value method valid
  output valid;

  // value method word_fst
  output [63 : 0] word_fst;

  // value method word_snd
  output [4 : 0] word_snd;

  // signals for module outputs
  wire [63 : 0] word_fst;
  wire [4 : 0] word_snd;
  wire RDY_set_verbosity, valid;

  // inlined wires
  reg [68 : 0] dw_result$wget;
  wire dw_valid$wget, dw_valid$whas;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register requestR
  reg [214 : 0] requestR;
  wire [214 : 0] requestR$D_IN;
  wire requestR$EN;

  // register resultR
  reg [69 : 0] resultR;
  reg [69 : 0] resultR$D_IN;
  wire resultR$EN;

  // register stateR
  reg [1 : 0] stateR;
  reg [1 : 0] stateR$D_IN;
  wire stateR$EN;

  // ports of submodule fpu
  reg [201 : 0] fpu$request_put;
  wire [69 : 0] fpu$response_get;
  wire fpu$EN_request_put,
       fpu$EN_response_get,
       fpu$RDY_request_put,
       fpu$RDY_response_get;

  // ports of submodule frmFpuF
  wire frmFpuF$CLR, frmFpuF$DEQ, frmFpuF$D_IN, frmFpuF$ENQ;

  // rule scheduling signals
  wire CAN_FIRE_RL_doFADD_D,
       CAN_FIRE_RL_doFADD_S,
       CAN_FIRE_RL_doFCLASS_D,
       CAN_FIRE_RL_doFCLASS_S,
       CAN_FIRE_RL_doFCVT_D_S,
       CAN_FIRE_RL_doFCVT_D_W,
       CAN_FIRE_RL_doFCVT_D_WU,
       CAN_FIRE_RL_doFCVT_S_D,
       CAN_FIRE_RL_doFCVT_S_W,
       CAN_FIRE_RL_doFCVT_S_WU,
       CAN_FIRE_RL_doFCVT_WU_D,
       CAN_FIRE_RL_doFCVT_WU_S,
       CAN_FIRE_RL_doFCVT_W_D,
       CAN_FIRE_RL_doFCVT_W_S,
       CAN_FIRE_RL_doFEQ_D,
       CAN_FIRE_RL_doFEQ_S,
       CAN_FIRE_RL_doFLE_D,
       CAN_FIRE_RL_doFLE_S,
       CAN_FIRE_RL_doFLT_D,
       CAN_FIRE_RL_doFLT_S,
       CAN_FIRE_RL_doFMADD_D,
       CAN_FIRE_RL_doFMADD_S,
       CAN_FIRE_RL_doFMAX_D,
       CAN_FIRE_RL_doFMAX_S,
       CAN_FIRE_RL_doFMIN_D,
       CAN_FIRE_RL_doFMIN_S,
       CAN_FIRE_RL_doFMSUB_D,
       CAN_FIRE_RL_doFMSUB_S,
       CAN_FIRE_RL_doFMUL_D,
       CAN_FIRE_RL_doFMUL_S,
       CAN_FIRE_RL_doFMV_D_X,
       CAN_FIRE_RL_doFMV_W_X,
       CAN_FIRE_RL_doFMV_X_D,
       CAN_FIRE_RL_doFMV_X_W,
       CAN_FIRE_RL_doFNMADD_D,
       CAN_FIRE_RL_doFNMADD_S,
       CAN_FIRE_RL_doFNMSUB_D,
       CAN_FIRE_RL_doFNMSUB_S,
       CAN_FIRE_RL_doFSGNJN_D,
       CAN_FIRE_RL_doFSGNJN_S,
       CAN_FIRE_RL_doFSGNJX_D,
       CAN_FIRE_RL_doFSGNJX_S,
       CAN_FIRE_RL_doFSGNJ_D,
       CAN_FIRE_RL_doFSGNJ_S,
       CAN_FIRE_RL_doFSUB_D,
       CAN_FIRE_RL_doFSUB_S,
       CAN_FIRE_RL_rl_drive_fpu_result,
       CAN_FIRE_RL_rl_get_fpu_result,
       CAN_FIRE_req,
       CAN_FIRE_set_verbosity,
       WILL_FIRE_RL_doFADD_D,
       WILL_FIRE_RL_doFADD_S,
       WILL_FIRE_RL_doFCLASS_D,
       WILL_FIRE_RL_doFCLASS_S,
       WILL_FIRE_RL_doFCVT_D_S,
       WILL_FIRE_RL_doFCVT_D_W,
       WILL_FIRE_RL_doFCVT_D_WU,
       WILL_FIRE_RL_doFCVT_S_D,
       WILL_FIRE_RL_doFCVT_S_W,
       WILL_FIRE_RL_doFCVT_S_WU,
       WILL_FIRE_RL_doFCVT_WU_D,
       WILL_FIRE_RL_doFCVT_WU_S,
       WILL_FIRE_RL_doFCVT_W_D,
       WILL_FIRE_RL_doFCVT_W_S,
       WILL_FIRE_RL_doFEQ_D,
       WILL_FIRE_RL_doFEQ_S,
       WILL_FIRE_RL_doFLE_D,
       WILL_FIRE_RL_doFLE_S,
       WILL_FIRE_RL_doFLT_D,
       WILL_FIRE_RL_doFLT_S,
       WILL_FIRE_RL_doFMADD_D,
       WILL_FIRE_RL_doFMADD_S,
       WILL_FIRE_RL_doFMAX_D,
       WILL_FIRE_RL_doFMAX_S,
       WILL_FIRE_RL_doFMIN_D,
       WILL_FIRE_RL_doFMIN_S,
       WILL_FIRE_RL_doFMSUB_D,
       WILL_FIRE_RL_doFMSUB_S,
       WILL_FIRE_RL_doFMUL_D,
       WILL_FIRE_RL_doFMUL_S,
       WILL_FIRE_RL_doFMV_D_X,
       WILL_FIRE_RL_doFMV_W_X,
       WILL_FIRE_RL_doFMV_X_D,
       WILL_FIRE_RL_doFMV_X_W,
       WILL_FIRE_RL_doFNMADD_D,
       WILL_FIRE_RL_doFNMADD_S,
       WILL_FIRE_RL_doFNMSUB_D,
       WILL_FIRE_RL_doFNMSUB_S,
       WILL_FIRE_RL_doFSGNJN_D,
       WILL_FIRE_RL_doFSGNJN_S,
       WILL_FIRE_RL_doFSGNJX_D,
       WILL_FIRE_RL_doFSGNJX_S,
       WILL_FIRE_RL_doFSGNJ_D,
       WILL_FIRE_RL_doFSGNJ_S,
       WILL_FIRE_RL_doFSUB_D,
       WILL_FIRE_RL_doFSUB_S,
       WILL_FIRE_RL_rl_drive_fpu_result,
       WILL_FIRE_RL_rl_get_fpu_result,
       WILL_FIRE_req,
       WILL_FIRE_set_verbosity;

  // inputs to muxes for submodule ports
  wire [201 : 0] MUX_fpu$request_put_1__VAL_1,
		 MUX_fpu$request_put_1__VAL_10,
		 MUX_fpu$request_put_1__VAL_11,
		 MUX_fpu$request_put_1__VAL_12,
		 MUX_fpu$request_put_1__VAL_13,
		 MUX_fpu$request_put_1__VAL_14,
		 MUX_fpu$request_put_1__VAL_2,
		 MUX_fpu$request_put_1__VAL_3,
		 MUX_fpu$request_put_1__VAL_4,
		 MUX_fpu$request_put_1__VAL_5,
		 MUX_fpu$request_put_1__VAL_6,
		 MUX_fpu$request_put_1__VAL_7,
		 MUX_fpu$request_put_1__VAL_8,
		 MUX_fpu$request_put_1__VAL_9;
  wire [69 : 0] MUX_resultR$write_1__VAL_10,
		MUX_resultR$write_1__VAL_11,
		MUX_resultR$write_1__VAL_12,
		MUX_resultR$write_1__VAL_13,
		MUX_resultR$write_1__VAL_14,
		MUX_resultR$write_1__VAL_15,
		MUX_resultR$write_1__VAL_16,
		MUX_resultR$write_1__VAL_17,
		MUX_resultR$write_1__VAL_18,
		MUX_resultR$write_1__VAL_19,
		MUX_resultR$write_1__VAL_2,
		MUX_resultR$write_1__VAL_20,
		MUX_resultR$write_1__VAL_21,
		MUX_resultR$write_1__VAL_22,
		MUX_resultR$write_1__VAL_23,
		MUX_resultR$write_1__VAL_24,
		MUX_resultR$write_1__VAL_25,
		MUX_resultR$write_1__VAL_26,
		MUX_resultR$write_1__VAL_27,
		MUX_resultR$write_1__VAL_28,
		MUX_resultR$write_1__VAL_29,
		MUX_resultR$write_1__VAL_3,
		MUX_resultR$write_1__VAL_30,
		MUX_resultR$write_1__VAL_31,
		MUX_resultR$write_1__VAL_32,
		MUX_resultR$write_1__VAL_33,
		MUX_resultR$write_1__VAL_34,
		MUX_resultR$write_1__VAL_4,
		MUX_resultR$write_1__VAL_6,
		MUX_resultR$write_1__VAL_7,
		MUX_resultR$write_1__VAL_8,
		MUX_resultR$write_1__VAL_9;
  wire [68 : 0] MUX_dw_result$wset_1__VAL_1,
		MUX_dw_result$wset_1__VAL_10,
		MUX_dw_result$wset_1__VAL_11,
		MUX_dw_result$wset_1__VAL_12,
		MUX_dw_result$wset_1__VAL_13,
		MUX_dw_result$wset_1__VAL_14,
		MUX_dw_result$wset_1__VAL_15,
		MUX_dw_result$wset_1__VAL_16,
		MUX_dw_result$wset_1__VAL_17,
		MUX_dw_result$wset_1__VAL_18,
		MUX_dw_result$wset_1__VAL_19,
		MUX_dw_result$wset_1__VAL_2,
		MUX_dw_result$wset_1__VAL_20,
		MUX_dw_result$wset_1__VAL_21,
		MUX_dw_result$wset_1__VAL_22,
		MUX_dw_result$wset_1__VAL_23,
		MUX_dw_result$wset_1__VAL_24,
		MUX_dw_result$wset_1__VAL_25,
		MUX_dw_result$wset_1__VAL_26,
		MUX_dw_result$wset_1__VAL_27,
		MUX_dw_result$wset_1__VAL_28,
		MUX_dw_result$wset_1__VAL_29,
		MUX_dw_result$wset_1__VAL_3,
		MUX_dw_result$wset_1__VAL_30,
		MUX_dw_result$wset_1__VAL_31,
		MUX_dw_result$wset_1__VAL_32,
		MUX_dw_result$wset_1__VAL_4,
		MUX_dw_result$wset_1__VAL_5,
		MUX_dw_result$wset_1__VAL_6,
		MUX_dw_result$wset_1__VAL_7,
		MUX_dw_result$wset_1__VAL_8,
		MUX_dw_result$wset_1__VAL_9;
  wire MUX_dw_result$wset_1__SEL_1,
       MUX_dw_result$wset_1__SEL_2,
       MUX_dw_result$wset_1__SEL_30;

  // remaining internal signals
  reg [51 : 0] CASE_guard10480_0b0_theResult___snd18392_BITS__ETC__q88,
	       CASE_guard19716_0b0_sfdin27936_BITS_56_TO_5_0b_ETC__q90,
	       CASE_guard28741_0b0_theResult___snd36677_BITS__ETC__q92,
	       CASE_guard5115_0b0_sfd___35105_BITS_54_TO_3_0b_ETC__q41,
	       CASE_guard5533_0b0_sfd___35523_BITS_54_TO_3_0b_ETC__q33,
	       CASE_guard5802_0b0_sfd___35105_BITS_53_TO_2_0b_ETC__q40,
	       CASE_guard6221_0b0_sfd___35523_BITS_53_TO_2_0b_ETC__q31,
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q32,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q34,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin27936_B_ETC__q91,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1471,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1483;
  reg [22 : 0] CASE_guard1047_0b0_sfdin9138_BITS_56_TO_34_0b1_ETC__q62,
	       CASE_guard134_0b0_sfd___3124_BITS_31_TO_9_0b1__ETC__q12,
	       CASE_guard3197_0b0_sfd___33187_BITS_31_TO_9_0b_ETC__q22,
	       CASE_guard3681_0b0_sfd___33187_BITS_30_TO_8_0b_ETC__q20,
	       CASE_guard622_0b0_sfd___3124_BITS_30_TO_8_0b1__ETC__q10,
	       CASE_guard7479_0b0_theResult___snd5502_BITS_56_ETC__q68,
	       CASE_guard8657_0b0_sfdin6877_BITS_56_TO_34_0b1_ETC__q66,
	       CASE_guard9740_0b0_theResult___snd7739_BITS_56_ETC__q64,
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin6877_BI_ETC__q67,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin9138_BI_ETC__q63,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d681,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d693;
  reg [10 : 0] CASE_guard10480_0b0_theResult___fst_exp18441_0_ETC__q76,
	       CASE_guard19716_0b0_theResult___fst_exp27942_0_ETC__q81,
	       CASE_guard28741_0b0_theResult___fst_exp36731_0_ETC__q86,
	       CASE_guard5115_0b0_0_0b1_0_0b10_out_exp5731_0b_ETC__q38,
	       CASE_guard5533_0b0_0_0b1_0_0b10_out_exp6149_0b_ETC__q35,
	       CASE_guard5802_0b0_x5817_BITS_10_TO_0_0b1_x581_ETC__q39,
	       CASE_guard6221_0b0_x6236_BITS_10_TO_0_0b1_x623_ETC__q29,
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q77,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q82,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87,
	       CASE_requestR_BITS_194_TO_192_0x1_x6236_BITS_1_ETC__q30,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1255,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1452;
  reg [7 : 0] CASE_guard1047_0b0_theResult___fst_exp9144_0b1_ETC__q46,
	      CASE_guard134_0b0_0_0b1_0_0b10_out_exp550_0b11_ETC__q16,
	      CASE_guard3197_0b0_0_0b1_0_0b10_out_exp3610_0b_ETC__q21,
	      CASE_guard3681_0b0_x3696_BITS_7_TO_0_0b1_x3696_ETC__q19,
	      CASE_guard622_0b0_x637_BITS_7_TO_0_0b1_x637_BI_ETC__q8,
	      CASE_guard7479_0b0_theResult___fst_exp5556_0b1_ETC__q60,
	      CASE_guard8657_0b0_theResult___fst_exp6883_0b1_ETC__q55,
	      CASE_guard9740_0b0_theResult___fst_exp7788_0b1_ETC__q50,
	      CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q47,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q51,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q56,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61,
	      CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d333,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d661;
  reg [2 : 0] IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38;
  reg CASE_guard1047_0b0_requestR_BIT_191_0b1_reques_ETC__q70,
      CASE_guard10480_0b0_requestR_BITS_191_TO_160_E_ETC__q94,
      CASE_guard134_0b0_requestR_BIT_159_0b1_request_ETC__q14,
      CASE_guard19716_0b0_requestR_BITS_191_TO_160_E_ETC__q95,
      CASE_guard28741_0b0_requestR_BITS_191_TO_160_E_ETC__q96,
      CASE_guard5533_0b0_requestR_BIT_159_0b1_reques_ETC__q27,
      CASE_guard6221_0b0_requestR_BIT_159_0b1_reques_ETC__q28,
      CASE_guard622_0b0_requestR_BIT_159_0b1_request_ETC__q15,
      CASE_guard7479_0b0_requestR_BIT_191_0b1_reques_ETC__q73,
      CASE_guard8657_0b0_requestR_BIT_191_0b1_reques_ETC__q72,
      CASE_guard9740_0b0_requestR_BIT_191_0b1_reques_ETC__q71,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2690,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d3473;
  wire [85 : 0] IF_requestR_BIT_191_144_THEN_NEG_0b0_CONCAT_NO_ETC___d1538,
		b__h47137,
		x__h47810,
		x__h48885;
  wire [68 : 0] ab__h155880;
  wire [64 : 0] _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66;
  wire [63 : 0] IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1009,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d993,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1008,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1010,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1080,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1081,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d992,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d994,
		IF_requestR_BITS_126_TO_116_584_EQ_2047_585_AN_ETC___d3632,
		IF_requestR_BITS_190_TO_180_516_EQ_0_527_AND_r_ETC___d3646,
		IF_requestR_BITS_190_TO_180_516_EQ_0_527_AND_r_ETC___d3717,
		res___1__h154789,
		res___1__h155227,
		res___1__h155237,
		res___1__h155256,
		res___1__h25982,
		res___1__h26218,
		res___1__h26228,
		res___1__h26247,
		res__h138073,
		res__h142497,
		res__h147045,
		res__h149749,
		res__h152444,
		res__h154321,
		res__h155272,
		res__h155453,
		res__h17586,
		res__h17823,
		res__h23195,
		res__h24678,
		res__h25747,
		res__h26263,
		res__h96536,
		x__h139080,
		x__h143628,
		x__h14574,
		x__h148072,
		x__h150767,
		x__h152644,
		x__h154771,
		x__h155421,
		x__h16161,
		x__h16908,
		x__h1771,
		x__h1917,
		x__h19542,
		x__h2051,
		x__h2199,
		x__h22067,
		x__h22188,
		x__h22326,
		x__h23809,
		x__h24878,
		x__h25964,
		x__h27131,
		x__h27253,
		x__h27377,
		x__h27507,
		x__h37341,
		x__h46894,
		x__h48464,
		x__h49207,
		x__h8546,
		x__h97618;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q44,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q79,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q53,
		IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q74,
		IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q84,
		IF_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_ETC__q48,
		IF_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_ETC__q58,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d785,
		_0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d3019,
		_0b0_CONCAT_NOT_requestR_BITS_190_TO_180_516_EQ_ETC___d2224,
		_theResult____h119706,
		_theResult____h61037,
		_theResult____h78647,
		_theResult___snd__h118392,
		_theResult___snd__h118394,
		_theResult___snd__h118401,
		_theResult___snd__h118407,
		_theResult___snd__h118430,
		_theResult___snd__h127953,
		_theResult___snd__h127964,
		_theResult___snd__h127966,
		_theResult___snd__h127976,
		_theResult___snd__h127982,
		_theResult___snd__h128005,
		_theResult___snd__h136677,
		_theResult___snd__h136691,
		_theResult___snd__h136697,
		_theResult___snd__h136715,
		_theResult___snd__h69155,
		_theResult___snd__h69166,
		_theResult___snd__h69168,
		_theResult___snd__h69178,
		_theResult___snd__h69184,
		_theResult___snd__h69207,
		_theResult___snd__h77739,
		_theResult___snd__h77741,
		_theResult___snd__h77748,
		_theResult___snd__h77754,
		_theResult___snd__h77777,
		_theResult___snd__h86894,
		_theResult___snd__h86905,
		_theResult___snd__h86907,
		_theResult___snd__h86917,
		_theResult___snd__h86923,
		_theResult___snd__h86946,
		_theResult___snd__h95502,
		_theResult___snd__h95516,
		_theResult___snd__h95522,
		_theResult___snd__h95540,
		b__h14817,
		result__h120319,
		result__h79260,
		sfd__h53437,
		sfdin__h127936,
		sfdin__h69138,
		sfdin__h86877,
		x__h120414,
		x__h15490,
		x__h16582,
		x__h79355;
  wire [54 : 0] sfd___3__h35523, sfd___3__h45105, sfd__h27522, sfd__h37353;
  wire [53 : 0] sfd__h118459,
		sfd__h128034,
		sfd__h136750,
		sfd__h35550,
		sfd__h36251,
		sfd__h45132,
		sfd__h45832,
		value__h47139;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3434,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3436,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3410,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3412,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3450,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3452,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1296,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1298,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1311,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1313,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3462,
		IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1320,
		IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1487,
		_theResult___fst_sfd__h103393,
		_theResult___fst_sfd__h119153,
		_theResult___fst_sfd__h119156,
		_theResult___fst_sfd__h128728,
		_theResult___fst_sfd__h128731,
		_theResult___fst_sfd__h137468,
		_theResult___fst_sfd__h137471,
		_theResult___fst_sfd__h137480,
		_theResult___fst_sfd__h137486,
		_theResult___fst_sfd__h36205,
		_theResult___fst_sfd__h36919,
		_theResult___fst_sfd__h36922,
		_theResult___fst_sfd__h45786,
		_theResult___fst_sfd__h46499,
		_theResult___fst_sfd__h46502,
		_theResult___fst_sfd__h49733,
		_theResult___sfd__h119094,
		_theResult___sfd__h128669,
		_theResult___sfd__h137409,
		_theResult___sfd__h36147,
		_theResult___sfd__h36861,
		_theResult___sfd__h45729,
		_theResult___sfd__h46442,
		_theResult___snd_fst_sfd__h119159,
		_theResult___snd_fst_sfd__h137474,
		_theResult___snd_fst_sfd__h36925,
		_theResult___snd_fst_sfd__h46505,
		_theResult___snd_fst_sfd__h99569,
		out___1_sfd__h97683,
		out_sfd__h119097,
		out_sfd__h128672,
		out_sfd__h137412,
		out_sfd__h36150,
		out_sfd__h36864,
		out_sfd__h45732,
		out_sfd__h46445,
		value__h49276;
  wire [32 : 0] _theResult_____2__h14755,
		_theResult_____2__h47075,
		out1___1__h15244,
		out1___1__h47564;
  wire [31 : 0] IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1003,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1005,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d989,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1006,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d844,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d904,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d990,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d840,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d842,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d902,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1593,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1595,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1655,
		IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1002,
		IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d987,
		IF_requestR_BITS_190_TO_180_516_EQ_0_527_AND_r_ETC___d1657,
		IF_requestR_BITS_190_TO_180_516_EQ_2047_517_AN_ETC___d1597,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d773,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d906,
		IF_requestR_BIT_191_144_THEN_2147483648_ELSE_2_ETC___d1526,
		requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
		requestR_BITS_159_TO_128__q1,
		sfd___3__h13187,
		sfd___3__h7124,
		sfd__h2220,
		x__h14577,
		x__h16164,
		x__h1777,
		x__h1923,
		x__h2057,
		x__h2205,
		x__h46897,
		x__h48467,
		x__h96542;
  wire [30 : 0] IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19;
  wire [24 : 0] sfd__h13214,
		sfd__h13711,
		sfd__h69236,
		sfd__h7151,
		sfd__h7652,
		sfd__h77806,
		sfd__h86975,
		sfd__h95575,
		value__h14819;
  wire [23 : 0] NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1531,
		NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1563,
		NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1564,
		NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1628;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2614,
		IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2616,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2654,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2656,
		IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2630,
		IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2632,
		IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2670,
		IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2672,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d374,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d376,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d389,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d391,
		IF_requestR_BITS_190_TO_180_516_EQ_2047_517_AN_ETC___d2682,
		_theResult___fst_sfd__h13665,
		_theResult___fst_sfd__h14175,
		_theResult___fst_sfd__h14178,
		_theResult___fst_sfd__h61020,
		_theResult___fst_sfd__h69727,
		_theResult___fst_sfd__h69730,
		_theResult___fst_sfd__h7606,
		_theResult___fst_sfd__h78297,
		_theResult___fst_sfd__h78300,
		_theResult___fst_sfd__h8117,
		_theResult___fst_sfd__h8120,
		_theResult___fst_sfd__h87466,
		_theResult___fst_sfd__h87469,
		_theResult___fst_sfd__h96090,
		_theResult___fst_sfd__h96093,
		_theResult___fst_sfd__h96102,
		_theResult___fst_sfd__h96108,
		_theResult___fst_sfd__h97941,
		_theResult___sfd__h13608,
		_theResult___sfd__h14118,
		_theResult___sfd__h69668,
		_theResult___sfd__h7548,
		_theResult___sfd__h78238,
		_theResult___sfd__h8059,
		_theResult___sfd__h87407,
		_theResult___sfd__h96031,
		_theResult___snd_fst_sfd__h14181,
		_theResult___snd_fst_sfd__h53391,
		_theResult___snd_fst_sfd__h78303,
		_theResult___snd_fst_sfd__h8123,
		_theResult___snd_fst_sfd__h96096,
		out_sfd__h13611,
		out_sfd__h14121,
		out_sfd__h69671,
		out_sfd__h7551,
		out_sfd__h78241,
		out_sfd__h8062,
		out_sfd__h87410,
		out_sfd__h96034,
		sV1_sfd__h816,
		sV2_sfd__h919,
		value__h97686;
  wire [19 : 0] NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d778,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d810,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d811,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d875;
  wire [11 : 0] IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3330,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3012,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q78,
		SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_529___d2217,
		SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC__q52,
		_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1760,
		_3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d3015,
		_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188,
		_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1381,
		_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2874,
		_3970_MINUS_SEXT_requestR_BITS_190_TO_180_516_M_ETC___d2220,
		x__h120447,
		x__h36236,
		x__h45817,
		x__h79388;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3316,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3318,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d2996,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d2998,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3380,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3382,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1253,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1276,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1278,
		IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1414,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q83,
		_theResult___exp__h119093,
		_theResult___exp__h128668,
		_theResult___exp__h137408,
		_theResult___exp__h36146,
		_theResult___exp__h36860,
		_theResult___exp__h45728,
		_theResult___exp__h46441,
		_theResult___fst_exp__h103392,
		_theResult___fst_exp__h118432,
		_theResult___fst_exp__h118438,
		_theResult___fst_exp__h118441,
		_theResult___fst_exp__h119152,
		_theResult___fst_exp__h119155,
		_theResult___fst_exp__h127942,
		_theResult___fst_exp__h128007,
		_theResult___fst_exp__h128013,
		_theResult___fst_exp__h128016,
		_theResult___fst_exp__h128727,
		_theResult___fst_exp__h128730,
		_theResult___fst_exp__h136683,
		_theResult___fst_exp__h136722,
		_theResult___fst_exp__h136728,
		_theResult___fst_exp__h136731,
		_theResult___fst_exp__h137467,
		_theResult___fst_exp__h137470,
		_theResult___fst_exp__h137479,
		_theResult___fst_exp__h137482,
		_theResult___fst_exp__h36204,
		_theResult___fst_exp__h36918,
		_theResult___fst_exp__h36921,
		_theResult___fst_exp__h45785,
		_theResult___fst_exp__h46498,
		_theResult___fst_exp__h46501,
		_theResult___snd_fst_exp__h119158,
		_theResult___snd_fst_exp__h137473,
		_theResult___snd_fst_exp__h36924,
		_theResult___snd_fst_exp__h36927,
		_theResult___snd_fst_exp__h36930,
		_theResult___snd_fst_exp__h46504,
		_theResult___snd_fst_exp__h46507,
		_theResult___snd_fst_exp__h46510,
		din_inc___2_exp__h137503,
		din_inc___2_exp__h137527,
		din_inc___2_exp__h137546,
		din_inc___2_exp__h36959,
		din_inc___2_exp__h46535,
		out_exp__h119096,
		out_exp__h128671,
		out_exp__h137411,
		out_exp__h36149,
		out_exp__h36863,
		out_exp__h45731,
		out_exp__h46444,
		requestR_BITS_190_TO_180_516_MINUS_1023___d1529,
		x__h97627;
  wire [8 : 0] IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2533,
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256,
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590,
	       x__h13696,
	       x__h7637;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2049,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2051,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2519,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2521,
	       IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2201,
	       IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2203,
	       IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2583,
	       IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2585,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d331,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d354,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d356,
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d365,
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d667,
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d776,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d622,
	       SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC__q57,
	       _theResult___exp__h13607,
	       _theResult___exp__h14117,
	       _theResult___exp__h69667,
	       _theResult___exp__h7547,
	       _theResult___exp__h78237,
	       _theResult___exp__h8058,
	       _theResult___exp__h87406,
	       _theResult___exp__h96030,
	       _theResult___fst_exp__h13664,
	       _theResult___fst_exp__h14174,
	       _theResult___fst_exp__h14177,
	       _theResult___fst_exp__h61019,
	       _theResult___fst_exp__h69144,
	       _theResult___fst_exp__h69209,
	       _theResult___fst_exp__h69215,
	       _theResult___fst_exp__h69218,
	       _theResult___fst_exp__h69726,
	       _theResult___fst_exp__h69729,
	       _theResult___fst_exp__h7605,
	       _theResult___fst_exp__h77779,
	       _theResult___fst_exp__h77785,
	       _theResult___fst_exp__h77788,
	       _theResult___fst_exp__h78296,
	       _theResult___fst_exp__h78299,
	       _theResult___fst_exp__h8116,
	       _theResult___fst_exp__h8119,
	       _theResult___fst_exp__h86883,
	       _theResult___fst_exp__h86948,
	       _theResult___fst_exp__h86954,
	       _theResult___fst_exp__h86957,
	       _theResult___fst_exp__h87465,
	       _theResult___fst_exp__h87468,
	       _theResult___fst_exp__h95508,
	       _theResult___fst_exp__h95547,
	       _theResult___fst_exp__h95553,
	       _theResult___fst_exp__h95556,
	       _theResult___fst_exp__h96089,
	       _theResult___fst_exp__h96092,
	       _theResult___fst_exp__h96101,
	       _theResult___fst_exp__h96104,
	       _theResult___snd_fst_exp__h14180,
	       _theResult___snd_fst_exp__h14183,
	       _theResult___snd_fst_exp__h14186,
	       _theResult___snd_fst_exp__h78302,
	       _theResult___snd_fst_exp__h8122,
	       _theResult___snd_fst_exp__h8125,
	       _theResult___snd_fst_exp__h8128,
	       _theResult___snd_fst_exp__h96095,
	       din_inc___2_exp__h14211,
	       din_inc___2_exp__h8157,
	       din_inc___2_exp__h96122,
	       din_inc___2_exp__h96141,
	       din_inc___2_exp__h96165,
	       din_inc___2_exp__h96184,
	       out_exp__h13610,
	       out_exp__h14120,
	       out_exp__h69670,
	       out_exp__h7550,
	       out_exp__h78240,
	       out_exp__h8061,
	       out_exp__h87409,
	       out_exp__h96033,
	       sV1_exp__h815,
	       sV2_exp__h918,
	       x__h49216;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1994,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d3261,
	       IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2464,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2946,
	       IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1185,
	       IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d253,
	       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2151,
	       IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1378,
	       IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d587;
  wire [4 : 0] _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2730,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3520,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2759,
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3503,
	       _0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2742,
	       x__h138157,
	       x__h142629,
	       x__h14290,
	       x__h152463,
	       x__h15904,
	       x__h16660,
	       x__h18947,
	       x__h24697,
	       x__h37056,
	       x__h46610,
	       x__h48207,
	       x__h48963,
	       x__h8258,
	       x__h96635;
  wire [1 : 0] IF_sfd___3124_BIT_7_THEN_2_ELSE_0__q7,
	       IF_sfd___3124_BIT_8_THEN_2_ELSE_0__q6,
	       IF_sfd___33187_BIT_7_THEN_2_ELSE_0__q18,
	       IF_sfd___33187_BIT_8_THEN_2_ELSE_0__q17,
	       IF_sfd___35105_BIT_1_THEN_2_ELSE_0__q37,
	       IF_sfd___35105_BIT_2_THEN_2_ELSE_0__q36,
	       IF_sfd___35523_BIT_1_THEN_2_ELSE_0__q26,
	       IF_sfd___35523_BIT_2_THEN_2_ELSE_0__q25,
	       IF_sfdin27936_BIT_4_THEN_2_ELSE_0__q80,
	       IF_sfdin6877_BIT_33_THEN_2_ELSE_0__q54,
	       IF_sfdin9138_BIT_33_THEN_2_ELSE_0__q45,
	       IF_theResult___snd18392_BIT_4_THEN_2_ELSE_0__q75,
	       IF_theResult___snd36677_BIT_4_THEN_2_ELSE_0__q85,
	       IF_theResult___snd5502_BIT_33_THEN_2_ELSE_0__q59,
	       IF_theResult___snd7739_BIT_33_THEN_2_ELSE_0__q49,
	       IF_x5490_BIT_24_THEN_2_ELSE_0__q23,
	       IF_x6582_BIT_24_THEN_2_ELSE_0__q24,
	       IF_x7810_BIT_53_THEN_2_ELSE_0__q42,
	       IF_x8885_BIT_53_THEN_2_ELSE_0__q43,
	       guard__h110480,
	       guard__h119716,
	       guard__h128741,
	       guard__h13197,
	       guard__h13681,
	       guard__h14753,
	       guard__h15304,
	       guard__h16364,
	       guard__h35533,
	       guard__h36221,
	       guard__h45115,
	       guard__h45802,
	       guard__h47073,
	       guard__h47624,
	       guard__h48667,
	       guard__h61047,
	       guard__h69740,
	       guard__h7134,
	       guard__h7622,
	       guard__h78657,
	       guard__h87479;
  wire IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_ETC___d2698,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1234,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1337,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d311,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d449,
       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1504,
       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d747,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3489,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3524,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3527,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3534,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3548,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3560,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3572,
       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d866,
       IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1619,
       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d1235,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d3475,
       IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d982,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3487,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3546,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3558,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3570,
       IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2710,
       IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2788,
       IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2801,
       IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2814,
       IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d962,
       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2712,
       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2763,
       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2774,
       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2790,
       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2803,
       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2816,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1033,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1044,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1048,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d772,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d914,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d925,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d948,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d958,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d971,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d972,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d973,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d976,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d978,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d996,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1212,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1232,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1555,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1587,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1649,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2691,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2696,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2703,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2708,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d289,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d309,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3474,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3479,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3484,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d802,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d834,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d896,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d440,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d443,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d452,
       IF_requestR_BIT_191_144_THEN_NOT_requestR_BITS_ETC___d3625,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d813,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d877,
       NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1566,
       NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1630,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2782,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2810,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1043,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1049,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1067,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2919,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d855,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d919,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d985,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d986,
       NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d261,
       NOT_requestR_BITS_159_TO_128_22_EQ_0_23_24_AND_ETC___d739,
       NOT_requestR_BITS_190_TO_180_516_EQ_0_527_533__ETC___d1608,
       NOT_requestR_BITS_190_TO_180_516_EQ_0_527_533__ETC___d1672,
       NOT_requestR_BITS_190_TO_180_516_EQ_2047_517_6_ETC___d3629,
       NOT_requestR_BITS_190_TO_180_516_EQ_2047_517_6_ETC___d3694,
       NOT_requestR_BITS_190_TO_180_516_ULT_requestR__ETC___d3671,
       NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d1047,
       NOT_requestR_BIT_158_62_63_AND_NOT_requestR_BI_ETC___d553,
       NOT_requestR_BIT_179_687_057_AND_NOT_requestR__ETC___d2096,
       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3013,
       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3014,
       SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2218,
       SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2219,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1996,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3263,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2466,
       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d2948,
       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3331,
       _0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2153,
       _0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2534,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1761,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1762,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d2745,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d2770,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d2797,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1189,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1191,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1193,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1382,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1383,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1384,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2875,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2876,
       guard__h120314,
       guard__h79255,
       requestR_BITS_126_TO_116_584_EQ_0_598_AND_requ_ETC___d3605,
       requestR_BITS_179_TO_128_518_ULE_requestR_BITS_ETC___d3617,
       requestR_BITS_179_TO_128_518_ULT_requestR_BITS_ETC___d3622,
       requestR_BITS_190_TO_180_516_EQ_0_527_AND_requ_ETC___d3601,
       requestR_BITS_190_TO_180_516_EQ_0_527_AND_requ_ETC___d3675,
       requestR_BITS_190_TO_180_516_EQ_2047_517_AND_0_ETC___d1667,
       requestR_BITS_190_TO_180_516_EQ_2047_517_AND_0_ETC___d1678,
       requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3593,
       requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3638,
       requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3660,
       requestR_BITS_190_TO_180_516_EQ_requestR_BITS__ETC___d3616,
       requestR_BITS_190_TO_180_516_ULE_requestR_BITS_ETC___d3614,
       requestR_BITS_190_TO_180_516_ULE_requestR_BITS_ETC___d3670,
       requestR_BITS_190_TO_180_516_ULT_requestR_BITS_ETC___d3621,
       requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d984,
       requestR_BIT_158_62_OR_requestR_BIT_157_64_OR__ETC___d728,
       requestR_BIT_159_6_OR_requestR_BIT_158_62_OR_r_ETC___d750;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // value method valid
  assign valid = dw_valid$whas && dw_valid$wget ;

  // value method word_fst
  assign word_fst = ab__h155880[68:5] ;

  // value method word_snd
  assign word_snd = ab__h155880[4:0] ;

  // submodule fpu
  mkFPU fpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .request_put(fpu$request_put),
	    .EN_request_put(fpu$EN_request_put),
	    .EN_response_get(fpu$EN_response_get),
	    .RDY_request_put(fpu$RDY_request_put),
	    .response_get(fpu$response_get),
	    .RDY_response_get(fpu$RDY_response_get));

  // submodule frmFpuF
  FIFO2 #(.width(32'd1), .guarded(32'd1)) frmFpuF(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(frmFpuF$D_IN),
						  .ENQ(frmFpuF$ENQ),
						  .DEQ(frmFpuF$DEQ),
						  .CLR(frmFpuF$CLR),
						  .D_OUT(),
						  .FULL_N(),
						  .EMPTY_N());

  // rule RL_doFADD_S
  assign CAN_FIRE_RL_doFADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0 ;
  assign WILL_FIRE_RL_doFADD_S = CAN_FIRE_RL_doFADD_S ;

  // rule RL_doFSUB_S
  assign CAN_FIRE_RL_doFSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h04 ;
  assign WILL_FIRE_RL_doFSUB_S = CAN_FIRE_RL_doFSUB_S ;

  // rule RL_doFMUL_S
  assign CAN_FIRE_RL_doFMUL_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h08 ;
  assign WILL_FIRE_RL_doFMUL_S = CAN_FIRE_RL_doFMUL_S ;

  // rule RL_doFMADD_S
  assign CAN_FIRE_RL_doFMADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMADD_S = CAN_FIRE_RL_doFMADD_S ;

  // rule RL_doFMSUB_S
  assign CAN_FIRE_RL_doFMSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMSUB_S = CAN_FIRE_RL_doFMSUB_S ;

  // rule RL_doFNMADD_S
  assign CAN_FIRE_RL_doFNMADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMADD_S = CAN_FIRE_RL_doFNMADD_S ;

  // rule RL_doFNMSUB_S
  assign CAN_FIRE_RL_doFNMSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMSUB_S = CAN_FIRE_RL_doFNMSUB_S ;

  // rule RL_doFSGNJ_S
  assign CAN_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;
  assign WILL_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;

  // rule RL_doFSGNJN_S
  assign CAN_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;
  assign WILL_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;

  // rule RL_doFSGNJX_S
  assign CAN_FIRE_RL_doFSGNJX_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_S = CAN_FIRE_RL_doFSGNJX_S ;

  // rule RL_doFCVT_S_W
  assign CAN_FIRE_RL_doFCVT_S_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_S_W = CAN_FIRE_RL_doFCVT_S_W ;

  // rule RL_doFCVT_S_WU
  assign CAN_FIRE_RL_doFCVT_S_WU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_WU = CAN_FIRE_RL_doFCVT_S_WU ;

  // rule RL_doFCVT_W_S
  assign CAN_FIRE_RL_doFCVT_W_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_S = CAN_FIRE_RL_doFCVT_W_S ;

  // rule RL_doFCVT_WU_S
  assign CAN_FIRE_RL_doFCVT_WU_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_S = CAN_FIRE_RL_doFCVT_WU_S ;

  // rule RL_doFMIN_S
  assign CAN_FIRE_RL_doFMIN_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_S = CAN_FIRE_RL_doFMIN_S ;

  // rule RL_doFMAX_S
  assign CAN_FIRE_RL_doFMAX_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_S = CAN_FIRE_RL_doFMAX_S ;

  // rule RL_doFMV_W_X
  assign CAN_FIRE_RL_doFMV_W_X =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h78 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_W_X = CAN_FIRE_RL_doFMV_W_X ;

  // rule RL_doFMV_X_W
  assign CAN_FIRE_RL_doFMV_X_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_W = CAN_FIRE_RL_doFMV_X_W ;

  // rule RL_doFEQ_S
  assign CAN_FIRE_RL_doFEQ_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_S = CAN_FIRE_RL_doFEQ_S ;

  // rule RL_doFLT_S
  assign CAN_FIRE_RL_doFLT_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_S = CAN_FIRE_RL_doFLT_S ;

  // rule RL_doFLE_S
  assign CAN_FIRE_RL_doFLE_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_S = CAN_FIRE_RL_doFLE_S ;

  // rule RL_doFCLASS_S
  assign CAN_FIRE_RL_doFCLASS_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_S = CAN_FIRE_RL_doFCLASS_S ;

  // rule RL_doFADD_D
  assign CAN_FIRE_RL_doFADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h01 ;
  assign WILL_FIRE_RL_doFADD_D = CAN_FIRE_RL_doFADD_D ;

  // rule RL_doFSUB_D
  assign CAN_FIRE_RL_doFSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h05 ;
  assign WILL_FIRE_RL_doFSUB_D = CAN_FIRE_RL_doFSUB_D ;

  // rule RL_doFMUL_D
  assign CAN_FIRE_RL_doFMUL_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h09 ;
  assign WILL_FIRE_RL_doFMUL_D = CAN_FIRE_RL_doFMUL_D ;

  // rule RL_doFMADD_D
  assign CAN_FIRE_RL_doFMADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMADD_D = CAN_FIRE_RL_doFMADD_D ;

  // rule RL_doFMSUB_D
  assign CAN_FIRE_RL_doFMSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMSUB_D = CAN_FIRE_RL_doFMSUB_D ;

  // rule RL_doFNMADD_D
  assign CAN_FIRE_RL_doFNMADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMADD_D = CAN_FIRE_RL_doFNMADD_D ;

  // rule RL_doFNMSUB_D
  assign CAN_FIRE_RL_doFNMSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMSUB_D = CAN_FIRE_RL_doFNMSUB_D ;

  // rule RL_doFSGNJ_D
  assign CAN_FIRE_RL_doFSGNJ_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_D = CAN_FIRE_RL_doFSGNJ_D ;

  // rule RL_doFSGNJN_D
  assign CAN_FIRE_RL_doFSGNJN_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_D = CAN_FIRE_RL_doFSGNJN_D ;

  // rule RL_doFSGNJX_D
  assign CAN_FIRE_RL_doFSGNJX_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_D = CAN_FIRE_RL_doFSGNJX_D ;

  // rule RL_doFCVT_D_W
  assign CAN_FIRE_RL_doFCVT_D_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_W = CAN_FIRE_RL_doFCVT_D_W ;

  // rule RL_doFCVT_D_WU
  assign CAN_FIRE_RL_doFCVT_D_WU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_D_WU = CAN_FIRE_RL_doFCVT_D_WU ;

  // rule RL_doFCVT_W_D
  assign CAN_FIRE_RL_doFCVT_W_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_D = CAN_FIRE_RL_doFCVT_W_D ;

  // rule RL_doFCVT_WU_D
  assign CAN_FIRE_RL_doFCVT_WU_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_D = CAN_FIRE_RL_doFCVT_WU_D ;

  // rule RL_doFCVT_S_D
  assign CAN_FIRE_RL_doFCVT_S_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h20 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_D = CAN_FIRE_RL_doFCVT_S_D ;

  // rule RL_doFCVT_D_S
  assign CAN_FIRE_RL_doFCVT_D_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h21 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_S = CAN_FIRE_RL_doFCVT_D_S ;

  // rule RL_doFMIN_D
  assign CAN_FIRE_RL_doFMIN_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_D = CAN_FIRE_RL_doFMIN_D ;

  // rule RL_doFMAX_D
  assign CAN_FIRE_RL_doFMAX_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_D = CAN_FIRE_RL_doFMAX_D ;

  // rule RL_doFEQ_D
  assign CAN_FIRE_RL_doFEQ_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_D = CAN_FIRE_RL_doFEQ_D ;

  // rule RL_doFLT_D
  assign CAN_FIRE_RL_doFLT_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_D = CAN_FIRE_RL_doFLT_D ;

  // rule RL_doFLE_D
  assign CAN_FIRE_RL_doFLE_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_D = CAN_FIRE_RL_doFLE_D ;

  // rule RL_doFMV_D_X
  assign CAN_FIRE_RL_doFMV_D_X =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h79 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_D_X = CAN_FIRE_RL_doFMV_D_X ;

  // rule RL_doFMV_X_D
  assign CAN_FIRE_RL_doFMV_X_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_D = CAN_FIRE_RL_doFMV_X_D ;

  // rule RL_doFCLASS_D
  assign CAN_FIRE_RL_doFCLASS_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_D = CAN_FIRE_RL_doFCLASS_D ;

  // rule RL_rl_get_fpu_result
  assign CAN_FIRE_RL_rl_get_fpu_result =
	     fpu$RDY_response_get && stateR == 2'd1 ;
  assign WILL_FIRE_RL_rl_get_fpu_result = CAN_FIRE_RL_rl_get_fpu_result ;

  // rule RL_rl_drive_fpu_result
  assign CAN_FIRE_RL_rl_drive_fpu_result = stateR == 2'd2 ;
  assign WILL_FIRE_RL_rl_drive_fpu_result = stateR == 2'd2 ;

  // inputs to muxes for submodule ports
  assign MUX_dw_result$wset_1__SEL_1 =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h1 ;
  assign MUX_dw_result$wset_1__SEL_2 =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h0 ;
  assign MUX_dw_result$wset_1__SEL_30 =
	     WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ;
  assign MUX_dw_result$wset_1__VAL_1 = { x__h1917, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_2 = { x__h1771, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_3 = { x__h2051, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_4 = { x__h2199, x__h8258 } ;
  assign MUX_dw_result$wset_1__VAL_5 = { x__h8546, x__h14290 } ;
  assign MUX_dw_result$wset_1__VAL_6 = { x__h14574, x__h15904 } ;
  assign MUX_dw_result$wset_1__VAL_7 = { x__h16161, x__h16660 } ;
  assign MUX_dw_result$wset_1__VAL_8 = { x__h16908, x__h18947 } ;
  assign MUX_dw_result$wset_1__VAL_9 = { x__h19542, x__h18947 } ;
  assign MUX_dw_result$wset_1__VAL_10 = { x__h22067, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_11 = { x__h22188, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_12 = { x__h22326, x__h18947 } ;
  assign MUX_dw_result$wset_1__VAL_13 = { x__h23809, x__h24697 } ;
  assign MUX_dw_result$wset_1__VAL_14 = { x__h24878, x__h24697 } ;
  assign MUX_dw_result$wset_1__VAL_15 = { x__h25964, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_16 = { x__h27131, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_17 = { x__h27253, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_18 = { x__h27377, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_19 = { x__h27507, x__h37056 } ;
  assign MUX_dw_result$wset_1__VAL_20 = { x__h37341, x__h46610 } ;
  assign MUX_dw_result$wset_1__VAL_21 = { x__h46894, x__h48207 } ;
  assign MUX_dw_result$wset_1__VAL_22 = { x__h48464, x__h48963 } ;
  assign MUX_dw_result$wset_1__VAL_23 = { x__h49207, x__h96635 } ;
  assign MUX_dw_result$wset_1__VAL_24 = { x__h97618, x__h138157 } ;
  assign MUX_dw_result$wset_1__VAL_25 = { x__h139080, x__h142629 } ;
  assign MUX_dw_result$wset_1__VAL_26 = { x__h143628, x__h142629 } ;
  assign MUX_dw_result$wset_1__VAL_27 = { x__h148072, x__h142629 } ;
  assign MUX_dw_result$wset_1__VAL_28 = { x__h150767, x__h152463 } ;
  assign MUX_dw_result$wset_1__VAL_29 = { x__h152644, x__h152463 } ;
  assign MUX_dw_result$wset_1__VAL_30 = { requestR[191:128], 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_31 = { x__h154771, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_32 =
	     { x__h155421, fpu$response_get[4:0] } ;
  assign MUX_fpu$request_put_1__VAL_1 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd0 } ;
  assign MUX_fpu$request_put_1__VAL_2 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd1 } ;
  assign MUX_fpu$request_put_1__VAL_3 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd2 } ;
  assign MUX_fpu$request_put_1__VAL_4 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd5 } ;
  assign MUX_fpu$request_put_1__VAL_5 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd6 } ;
  assign MUX_fpu$request_put_1__VAL_6 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd7 } ;
  assign MUX_fpu$request_put_1__VAL_7 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd8 } ;
  assign MUX_fpu$request_put_1__VAL_8 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd0 } ;
  assign MUX_fpu$request_put_1__VAL_9 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd1 } ;
  assign MUX_fpu$request_put_1__VAL_10 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd2 } ;
  assign MUX_fpu$request_put_1__VAL_11 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd5 } ;
  assign MUX_fpu$request_put_1__VAL_12 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd6 } ;
  assign MUX_fpu$request_put_1__VAL_13 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd7 } ;
  assign MUX_fpu$request_put_1__VAL_14 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd8 } ;
  assign MUX_resultR$write_1__VAL_2 =
	     { 1'd1, x__h155421, fpu$response_get[4:0] } ;
  assign MUX_resultR$write_1__VAL_3 = { 1'd1, x__h154771, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_4 = { 1'd1, requestR[191:128], 5'd0 } ;
  assign MUX_resultR$write_1__VAL_6 = { 1'd1, x__h152644, x__h152463 } ;
  assign MUX_resultR$write_1__VAL_7 = { 1'd1, x__h150767, x__h152463 } ;
  assign MUX_resultR$write_1__VAL_8 = { 1'd1, x__h148072, x__h142629 } ;
  assign MUX_resultR$write_1__VAL_9 = { 1'd1, x__h143628, x__h142629 } ;
  assign MUX_resultR$write_1__VAL_10 = { 1'd1, x__h139080, x__h142629 } ;
  assign MUX_resultR$write_1__VAL_11 = { 1'd1, x__h97618, x__h138157 } ;
  assign MUX_resultR$write_1__VAL_12 = { 1'd1, x__h49207, x__h96635 } ;
  assign MUX_resultR$write_1__VAL_13 = { 1'd1, x__h48464, x__h48963 } ;
  assign MUX_resultR$write_1__VAL_14 = { 1'd1, x__h46894, x__h48207 } ;
  assign MUX_resultR$write_1__VAL_15 = { 1'd1, x__h37341, x__h46610 } ;
  assign MUX_resultR$write_1__VAL_16 = { 1'd1, x__h27507, x__h37056 } ;
  assign MUX_resultR$write_1__VAL_17 = { 1'd1, x__h27377, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_18 = { 1'd1, x__h27253, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_19 = { 1'd1, x__h27131, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_20 = { 1'd1, x__h25964, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_21 = { 1'd1, x__h24878, x__h24697 } ;
  assign MUX_resultR$write_1__VAL_22 = { 1'd1, x__h23809, x__h24697 } ;
  assign MUX_resultR$write_1__VAL_23 = { 1'd1, x__h22326, x__h18947 } ;
  assign MUX_resultR$write_1__VAL_24 = { 1'd1, x__h22188, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_25 = { 1'd1, x__h22067, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_26 = { 1'd1, x__h19542, x__h18947 } ;
  assign MUX_resultR$write_1__VAL_27 = { 1'd1, x__h16908, x__h18947 } ;
  assign MUX_resultR$write_1__VAL_28 = { 1'd1, x__h16161, x__h16660 } ;
  assign MUX_resultR$write_1__VAL_29 = { 1'd1, x__h14574, x__h15904 } ;
  assign MUX_resultR$write_1__VAL_30 = { 1'd1, x__h8546, x__h14290 } ;
  assign MUX_resultR$write_1__VAL_31 = { 1'd1, x__h2199, x__h8258 } ;
  assign MUX_resultR$write_1__VAL_32 = { 1'd1, x__h2051, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_33 = { 1'd1, x__h1917, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_34 = { 1'd1, x__h1771, 5'd0 } ;

  // inlined wires
  assign dw_valid$wget = !WILL_FIRE_RL_rl_drive_fpu_result || resultR[69] ;
  assign dw_valid$whas =
	     WILL_FIRE_RL_rl_drive_fpu_result ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;
  always@(WILL_FIRE_RL_doFSGNJN_S or
	  MUX_dw_result$wset_1__VAL_1 or
	  WILL_FIRE_RL_doFSGNJ_S or
	  MUX_dw_result$wset_1__VAL_2 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_dw_result$wset_1__VAL_3 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_dw_result$wset_1__VAL_4 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_dw_result$wset_1__VAL_5 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_dw_result$wset_1__VAL_6 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_dw_result$wset_1__VAL_7 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_dw_result$wset_1__VAL_8 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_dw_result$wset_1__VAL_9 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_dw_result$wset_1__VAL_10 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_dw_result$wset_1__VAL_11 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_dw_result$wset_1__VAL_12 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_dw_result$wset_1__VAL_13 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_dw_result$wset_1__VAL_14 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_dw_result$wset_1__VAL_15 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_dw_result$wset_1__VAL_16 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_dw_result$wset_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_dw_result$wset_1__VAL_18 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_dw_result$wset_1__VAL_19 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_dw_result$wset_1__VAL_20 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_dw_result$wset_1__VAL_21 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_dw_result$wset_1__VAL_22 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_dw_result$wset_1__VAL_23 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_dw_result$wset_1__VAL_24 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_dw_result$wset_1__VAL_25 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_dw_result$wset_1__VAL_26 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_dw_result$wset_1__VAL_27 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_dw_result$wset_1__VAL_28 or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_dw_result$wset_1__VAL_29 or
	  MUX_dw_result$wset_1__SEL_30 or
	  MUX_dw_result$wset_1__VAL_30 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_dw_result$wset_1__VAL_31 or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_dw_result$wset_1__VAL_32 or
	  WILL_FIRE_RL_rl_drive_fpu_result or resultR)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFSGNJN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_1;
      WILL_FIRE_RL_doFSGNJ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_2;
      WILL_FIRE_RL_doFSGNJX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_3;
      WILL_FIRE_RL_doFCVT_S_W: dw_result$wget = MUX_dw_result$wset_1__VAL_4;
      WILL_FIRE_RL_doFCVT_S_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_5;
      WILL_FIRE_RL_doFCVT_W_S: dw_result$wget = MUX_dw_result$wset_1__VAL_6;
      WILL_FIRE_RL_doFCVT_WU_S: dw_result$wget = MUX_dw_result$wset_1__VAL_7;
      WILL_FIRE_RL_doFMIN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_8;
      WILL_FIRE_RL_doFMAX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_9;
      WILL_FIRE_RL_doFMV_W_X: dw_result$wget = MUX_dw_result$wset_1__VAL_10;
      WILL_FIRE_RL_doFMV_X_W: dw_result$wget = MUX_dw_result$wset_1__VAL_11;
      WILL_FIRE_RL_doFEQ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_12;
      WILL_FIRE_RL_doFLT_S: dw_result$wget = MUX_dw_result$wset_1__VAL_13;
      WILL_FIRE_RL_doFLE_S: dw_result$wget = MUX_dw_result$wset_1__VAL_14;
      WILL_FIRE_RL_doFCLASS_S: dw_result$wget = MUX_dw_result$wset_1__VAL_15;
      WILL_FIRE_RL_doFSGNJ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_16;
      WILL_FIRE_RL_doFSGNJN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_17;
      WILL_FIRE_RL_doFSGNJX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_18;
      WILL_FIRE_RL_doFCVT_D_W: dw_result$wget = MUX_dw_result$wset_1__VAL_19;
      WILL_FIRE_RL_doFCVT_D_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_20;
      WILL_FIRE_RL_doFCVT_W_D: dw_result$wget = MUX_dw_result$wset_1__VAL_21;
      WILL_FIRE_RL_doFCVT_WU_D: dw_result$wget = MUX_dw_result$wset_1__VAL_22;
      WILL_FIRE_RL_doFCVT_S_D: dw_result$wget = MUX_dw_result$wset_1__VAL_23;
      WILL_FIRE_RL_doFCVT_D_S: dw_result$wget = MUX_dw_result$wset_1__VAL_24;
      WILL_FIRE_RL_doFMIN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_25;
      WILL_FIRE_RL_doFMAX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_26;
      WILL_FIRE_RL_doFEQ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_27;
      WILL_FIRE_RL_doFLT_D: dw_result$wget = MUX_dw_result$wset_1__VAL_28;
      WILL_FIRE_RL_doFLE_D: dw_result$wget = MUX_dw_result$wset_1__VAL_29;
      MUX_dw_result$wset_1__SEL_30:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_30;
      WILL_FIRE_RL_doFCLASS_D: dw_result$wget = MUX_dw_result$wset_1__VAL_31;
      WILL_FIRE_RL_rl_get_fpu_result:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_32;
      WILL_FIRE_RL_rl_drive_fpu_result: dw_result$wget = resultR[68:0];
      default: dw_result$wget =
		   69'h0AAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end

  // register cfg_verbosity
  assign cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cfg_verbosity$EN = EN_set_verbosity ;

  // register requestR
  assign requestR$D_IN =
	     { 1'd1,
	       req_opcode,
	       req_f7,
	       req_rs2,
	       req_rm,
	       req_v1,
	       req_v2,
	       req_v3 } ;
  assign requestR$EN = EN_req ;

  // register resultR
  always@(EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_resultR$write_1__VAL_2 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_resultR$write_1__VAL_3 or
	  WILL_FIRE_RL_doFMV_X_D or
	  MUX_resultR$write_1__VAL_4 or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_resultR$write_1__VAL_6 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_resultR$write_1__VAL_7 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_resultR$write_1__VAL_8 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_resultR$write_1__VAL_9 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_resultR$write_1__VAL_10 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_resultR$write_1__VAL_11 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_resultR$write_1__VAL_12 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_resultR$write_1__VAL_13 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_resultR$write_1__VAL_14 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_resultR$write_1__VAL_15 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_resultR$write_1__VAL_16 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_resultR$write_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_resultR$write_1__VAL_18 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_resultR$write_1__VAL_19 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_resultR$write_1__VAL_20 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_resultR$write_1__VAL_21 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_resultR$write_1__VAL_22 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_resultR$write_1__VAL_23 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_resultR$write_1__VAL_24 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_resultR$write_1__VAL_25 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_resultR$write_1__VAL_26 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_resultR$write_1__VAL_27 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_resultR$write_1__VAL_28 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_resultR$write_1__VAL_29 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_resultR$write_1__VAL_30 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_resultR$write_1__VAL_31 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_resultR$write_1__VAL_32 or
	  WILL_FIRE_RL_doFSGNJN_S or
	  MUX_resultR$write_1__VAL_33 or
	  WILL_FIRE_RL_doFSGNJ_S or MUX_resultR$write_1__VAL_34)
  case (1'b1)
    EN_req: resultR$D_IN = 70'h0AAAAAAAAAAAAAAAAA;
    WILL_FIRE_RL_rl_get_fpu_result: resultR$D_IN = MUX_resultR$write_1__VAL_2;
    WILL_FIRE_RL_doFCLASS_D: resultR$D_IN = MUX_resultR$write_1__VAL_3;
    WILL_FIRE_RL_doFMV_X_D: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFMV_D_X: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFLE_D: resultR$D_IN = MUX_resultR$write_1__VAL_6;
    WILL_FIRE_RL_doFLT_D: resultR$D_IN = MUX_resultR$write_1__VAL_7;
    WILL_FIRE_RL_doFEQ_D: resultR$D_IN = MUX_resultR$write_1__VAL_8;
    WILL_FIRE_RL_doFMAX_D: resultR$D_IN = MUX_resultR$write_1__VAL_9;
    WILL_FIRE_RL_doFMIN_D: resultR$D_IN = MUX_resultR$write_1__VAL_10;
    WILL_FIRE_RL_doFCVT_D_S: resultR$D_IN = MUX_resultR$write_1__VAL_11;
    WILL_FIRE_RL_doFCVT_S_D: resultR$D_IN = MUX_resultR$write_1__VAL_12;
    WILL_FIRE_RL_doFCVT_WU_D: resultR$D_IN = MUX_resultR$write_1__VAL_13;
    WILL_FIRE_RL_doFCVT_W_D: resultR$D_IN = MUX_resultR$write_1__VAL_14;
    WILL_FIRE_RL_doFCVT_D_WU: resultR$D_IN = MUX_resultR$write_1__VAL_15;
    WILL_FIRE_RL_doFCVT_D_W: resultR$D_IN = MUX_resultR$write_1__VAL_16;
    WILL_FIRE_RL_doFSGNJX_D: resultR$D_IN = MUX_resultR$write_1__VAL_17;
    WILL_FIRE_RL_doFSGNJN_D: resultR$D_IN = MUX_resultR$write_1__VAL_18;
    WILL_FIRE_RL_doFSGNJ_D: resultR$D_IN = MUX_resultR$write_1__VAL_19;
    WILL_FIRE_RL_doFCLASS_S: resultR$D_IN = MUX_resultR$write_1__VAL_20;
    WILL_FIRE_RL_doFLE_S: resultR$D_IN = MUX_resultR$write_1__VAL_21;
    WILL_FIRE_RL_doFLT_S: resultR$D_IN = MUX_resultR$write_1__VAL_22;
    WILL_FIRE_RL_doFEQ_S: resultR$D_IN = MUX_resultR$write_1__VAL_23;
    WILL_FIRE_RL_doFMV_X_W: resultR$D_IN = MUX_resultR$write_1__VAL_24;
    WILL_FIRE_RL_doFMV_W_X: resultR$D_IN = MUX_resultR$write_1__VAL_25;
    WILL_FIRE_RL_doFMAX_S: resultR$D_IN = MUX_resultR$write_1__VAL_26;
    WILL_FIRE_RL_doFMIN_S: resultR$D_IN = MUX_resultR$write_1__VAL_27;
    WILL_FIRE_RL_doFCVT_WU_S: resultR$D_IN = MUX_resultR$write_1__VAL_28;
    WILL_FIRE_RL_doFCVT_W_S: resultR$D_IN = MUX_resultR$write_1__VAL_29;
    WILL_FIRE_RL_doFCVT_S_WU: resultR$D_IN = MUX_resultR$write_1__VAL_30;
    WILL_FIRE_RL_doFCVT_S_W: resultR$D_IN = MUX_resultR$write_1__VAL_31;
    WILL_FIRE_RL_doFSGNJX_S: resultR$D_IN = MUX_resultR$write_1__VAL_32;
    WILL_FIRE_RL_doFSGNJN_S: resultR$D_IN = MUX_resultR$write_1__VAL_33;
    WILL_FIRE_RL_doFSGNJ_S: resultR$D_IN = MUX_resultR$write_1__VAL_34;
    default: resultR$D_IN = 70'h2AAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign resultR$EN =
	     EN_req || WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFSGNJ_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_rl_get_fpu_result ;

  // register stateR
  always@(EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  WILL_FIRE_RL_doFCLASS_D or
	  WILL_FIRE_RL_doFMV_X_D or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  WILL_FIRE_RL_doFLT_D or
	  WILL_FIRE_RL_doFEQ_D or
	  WILL_FIRE_RL_doFMAX_D or
	  WILL_FIRE_RL_doFMIN_D or
	  WILL_FIRE_RL_doFCVT_D_S or
	  WILL_FIRE_RL_doFCVT_S_D or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  WILL_FIRE_RL_doFCVT_W_D or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  WILL_FIRE_RL_doFCVT_D_W or
	  WILL_FIRE_RL_doFSGNJX_D or
	  WILL_FIRE_RL_doFSGNJN_D or
	  WILL_FIRE_RL_doFSGNJ_D or
	  WILL_FIRE_RL_doFNMSUB_D or
	  WILL_FIRE_RL_doFNMADD_D or
	  WILL_FIRE_RL_doFMSUB_D or
	  WILL_FIRE_RL_doFMADD_D or
	  WILL_FIRE_RL_doFMUL_D or
	  WILL_FIRE_RL_doFSUB_D or
	  WILL_FIRE_RL_doFADD_D or
	  WILL_FIRE_RL_doFCLASS_S or
	  WILL_FIRE_RL_doFLE_S or
	  WILL_FIRE_RL_doFLT_S or
	  WILL_FIRE_RL_doFEQ_S or
	  WILL_FIRE_RL_doFMV_X_W or
	  WILL_FIRE_RL_doFMV_W_X or
	  WILL_FIRE_RL_doFMAX_S or
	  WILL_FIRE_RL_doFMIN_S or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  WILL_FIRE_RL_doFCVT_W_S or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  WILL_FIRE_RL_doFCVT_S_W or
	  WILL_FIRE_RL_doFSGNJX_S or
	  WILL_FIRE_RL_doFSGNJN_S or
	  WILL_FIRE_RL_doFSGNJ_S or
	  WILL_FIRE_RL_doFNMSUB_S or
	  WILL_FIRE_RL_doFNMADD_S or
	  WILL_FIRE_RL_doFMSUB_S or
	  WILL_FIRE_RL_doFMADD_S or
	  WILL_FIRE_RL_doFMUL_S or
	  WILL_FIRE_RL_doFSUB_S or WILL_FIRE_RL_doFADD_S)
  case (1'b1)
    EN_req: stateR$D_IN = 2'd0;
    WILL_FIRE_RL_rl_get_fpu_result || WILL_FIRE_RL_doFCLASS_D ||
    WILL_FIRE_RL_doFMV_X_D ||
    WILL_FIRE_RL_doFMV_D_X ||
    WILL_FIRE_RL_doFLE_D ||
    WILL_FIRE_RL_doFLT_D ||
    WILL_FIRE_RL_doFEQ_D ||
    WILL_FIRE_RL_doFMAX_D ||
    WILL_FIRE_RL_doFMIN_D ||
    WILL_FIRE_RL_doFCVT_D_S ||
    WILL_FIRE_RL_doFCVT_S_D ||
    WILL_FIRE_RL_doFCVT_WU_D ||
    WILL_FIRE_RL_doFCVT_W_D ||
    WILL_FIRE_RL_doFCVT_D_WU ||
    WILL_FIRE_RL_doFCVT_D_W ||
    WILL_FIRE_RL_doFSGNJX_D ||
    WILL_FIRE_RL_doFSGNJN_D ||
    WILL_FIRE_RL_doFSGNJ_D:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFNMSUB_D || WILL_FIRE_RL_doFNMADD_D ||
    WILL_FIRE_RL_doFMSUB_D ||
    WILL_FIRE_RL_doFMADD_D ||
    WILL_FIRE_RL_doFMUL_D ||
    WILL_FIRE_RL_doFSUB_D ||
    WILL_FIRE_RL_doFADD_D:
	stateR$D_IN = 2'd1;
    WILL_FIRE_RL_doFCLASS_S || WILL_FIRE_RL_doFLE_S || WILL_FIRE_RL_doFLT_S ||
    WILL_FIRE_RL_doFEQ_S ||
    WILL_FIRE_RL_doFMV_X_W ||
    WILL_FIRE_RL_doFMV_W_X ||
    WILL_FIRE_RL_doFMAX_S ||
    WILL_FIRE_RL_doFMIN_S ||
    WILL_FIRE_RL_doFCVT_WU_S ||
    WILL_FIRE_RL_doFCVT_W_S ||
    WILL_FIRE_RL_doFCVT_S_WU ||
    WILL_FIRE_RL_doFCVT_S_W ||
    WILL_FIRE_RL_doFSGNJX_S ||
    WILL_FIRE_RL_doFSGNJN_S ||
    WILL_FIRE_RL_doFSGNJ_S:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFNMSUB_S || WILL_FIRE_RL_doFNMADD_S ||
    WILL_FIRE_RL_doFMSUB_S ||
    WILL_FIRE_RL_doFMADD_S ||
    WILL_FIRE_RL_doFMUL_S ||
    WILL_FIRE_RL_doFSUB_S ||
    WILL_FIRE_RL_doFADD_S:
	stateR$D_IN = 2'd1;
    default: stateR$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign stateR$EN =
	     EN_req || WILL_FIRE_RL_doFNMSUB_D || WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFADD_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;

  // submodule fpu
  always@(WILL_FIRE_RL_doFADD_S or
	  MUX_fpu$request_put_1__VAL_1 or
	  WILL_FIRE_RL_doFSUB_S or
	  MUX_fpu$request_put_1__VAL_2 or
	  WILL_FIRE_RL_doFMUL_S or
	  MUX_fpu$request_put_1__VAL_3 or
	  WILL_FIRE_RL_doFMADD_S or
	  MUX_fpu$request_put_1__VAL_4 or
	  WILL_FIRE_RL_doFMSUB_S or
	  MUX_fpu$request_put_1__VAL_5 or
	  WILL_FIRE_RL_doFNMADD_S or
	  MUX_fpu$request_put_1__VAL_6 or
	  WILL_FIRE_RL_doFNMSUB_S or
	  MUX_fpu$request_put_1__VAL_7 or
	  WILL_FIRE_RL_doFADD_D or
	  MUX_fpu$request_put_1__VAL_8 or
	  WILL_FIRE_RL_doFSUB_D or
	  MUX_fpu$request_put_1__VAL_9 or
	  WILL_FIRE_RL_doFMUL_D or
	  MUX_fpu$request_put_1__VAL_10 or
	  WILL_FIRE_RL_doFMADD_D or
	  MUX_fpu$request_put_1__VAL_11 or
	  WILL_FIRE_RL_doFMSUB_D or
	  MUX_fpu$request_put_1__VAL_12 or
	  WILL_FIRE_RL_doFNMADD_D or
	  MUX_fpu$request_put_1__VAL_13 or
	  WILL_FIRE_RL_doFNMSUB_D or MUX_fpu$request_put_1__VAL_14)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_1;
      WILL_FIRE_RL_doFSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_2;
      WILL_FIRE_RL_doFMUL_S: fpu$request_put = MUX_fpu$request_put_1__VAL_3;
      WILL_FIRE_RL_doFMADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_4;
      WILL_FIRE_RL_doFMSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_5;
      WILL_FIRE_RL_doFNMADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_6;
      WILL_FIRE_RL_doFNMSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_7;
      WILL_FIRE_RL_doFADD_D: fpu$request_put = MUX_fpu$request_put_1__VAL_8;
      WILL_FIRE_RL_doFSUB_D: fpu$request_put = MUX_fpu$request_put_1__VAL_9;
      WILL_FIRE_RL_doFMUL_D: fpu$request_put = MUX_fpu$request_put_1__VAL_10;
      WILL_FIRE_RL_doFMADD_D: fpu$request_put = MUX_fpu$request_put_1__VAL_11;
      WILL_FIRE_RL_doFMSUB_D: fpu$request_put = MUX_fpu$request_put_1__VAL_12;
      WILL_FIRE_RL_doFNMADD_D:
	  fpu$request_put = MUX_fpu$request_put_1__VAL_13;
      WILL_FIRE_RL_doFNMSUB_D:
	  fpu$request_put = MUX_fpu$request_put_1__VAL_14;
      default: fpu$request_put =
		   202'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fpu$EN_request_put =
	     WILL_FIRE_RL_doFADD_S || WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFNMSUB_D ;
  assign fpu$EN_response_get = CAN_FIRE_RL_rl_get_fpu_result ;

  // submodule frmFpuF
  assign frmFpuF$D_IN = 1'b0 ;
  assign frmFpuF$ENQ = 1'b0 ;
  assign frmFpuF$DEQ = 1'b0 ;
  assign frmFpuF$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q44 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1996 ?
	       _theResult___snd__h69207 :
	       _theResult____h61037 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q79 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3263 ?
	       _theResult___snd__h128005 :
	       _theResult____h119706 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q53 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2466 ?
	       _theResult___snd__h86946 :
	       _theResult____h78647 ;
  assign IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q74 =
	     _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d2948 ?
	       _theResult___snd__h118430 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q84 =
	     _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3331 ?
	       _theResult___snd__h118430 :
	       _theResult___snd__h136715 ;
  assign IF_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_ETC__q48 =
	     _0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2153 ?
	       _theResult___snd__h77777 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_ETC__q58 =
	     _0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2534 ?
	       _theResult___snd__h77777 :
	       _theResult___snd__h95540 ;
  assign IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_ETC___d2698 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1762 ?
	       ((_theResult___fst_exp__h69144 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2691) :
	       ((_theResult___fst_exp__h77788 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2696) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1234 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1193 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1212 :
	       ((x__h36236[10:0] == 11'd2047) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1232) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1337 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1193 ?
	       guard__h35533 != 2'b0 :
	       x__h36236[10:0] != 11'd2047 && guard__h36221 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d311 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d289 :
	       ((x__h7637[7:0] == 8'd255) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d309) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d449 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 ?
	       guard__h7134 != 2'b0 :
	       x__h7637[7:0] != 8'd255 && guard__h7622 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1504 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1384 ?
	       guard__h45115 != 2'b0 :
	       x__h45817[10:0] != 11'd2047 && guard__h45802 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d747 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593 ?
	       guard__h13197 != 2'b0 :
	       x__h13696[7:0] != 8'd255 && guard__h13681 != 2'b0 ;
  assign IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1994 =
	     (_theResult____h61037[56] ?
		6'd0 :
		(_theResult____h61037[55] ?
		   6'd1 :
		   (_theResult____h61037[54] ?
		      6'd2 :
		      (_theResult____h61037[53] ?
			 6'd3 :
			 (_theResult____h61037[52] ?
			    6'd4 :
			    (_theResult____h61037[51] ?
			       6'd5 :
			       (_theResult____h61037[50] ?
				  6'd6 :
				  (_theResult____h61037[49] ?
				     6'd7 :
				     (_theResult____h61037[48] ?
					6'd8 :
					(_theResult____h61037[47] ?
					   6'd9 :
					   (_theResult____h61037[46] ?
					      6'd10 :
					      (_theResult____h61037[45] ?
						 6'd11 :
						 (_theResult____h61037[44] ?
						    6'd12 :
						    (_theResult____h61037[43] ?
						       6'd13 :
						       (_theResult____h61037[42] ?
							  6'd14 :
							  (_theResult____h61037[41] ?
							     6'd15 :
							     (_theResult____h61037[40] ?
								6'd16 :
								(_theResult____h61037[39] ?
								   6'd17 :
								   (_theResult____h61037[38] ?
								      6'd18 :
								      (_theResult____h61037[37] ?
									 6'd19 :
									 (_theResult____h61037[36] ?
									    6'd20 :
									    (_theResult____h61037[35] ?
									       6'd21 :
									       (_theResult____h61037[34] ?
										  6'd22 :
										  (_theResult____h61037[33] ?
										     6'd23 :
										     (_theResult____h61037[32] ?
											6'd24 :
											(_theResult____h61037[31] ?
											   6'd25 :
											   (_theResult____h61037[30] ?
											      6'd26 :
											      (_theResult____h61037[29] ?
												 6'd27 :
												 (_theResult____h61037[28] ?
												    6'd28 :
												    (_theResult____h61037[27] ?
												       6'd29 :
												       (_theResult____h61037[26] ?
													  6'd30 :
													  (_theResult____h61037[25] ?
													     6'd31 :
													     (_theResult____h61037[24] ?
														6'd32 :
														(_theResult____h61037[23] ?
														   6'd33 :
														   (_theResult____h61037[22] ?
														      6'd34 :
														      (_theResult____h61037[21] ?
															 6'd35 :
															 (_theResult____h61037[20] ?
															    6'd36 :
															    (_theResult____h61037[19] ?
															       6'd37 :
															       (_theResult____h61037[18] ?
																  6'd38 :
																  (_theResult____h61037[17] ?
																     6'd39 :
																     (_theResult____h61037[16] ?
																	6'd40 :
																	(_theResult____h61037[15] ?
																	   6'd41 :
																	   (_theResult____h61037[14] ?
																	      6'd42 :
																	      (_theResult____h61037[13] ?
																		 6'd43 :
																		 (_theResult____h61037[12] ?
																		    6'd44 :
																		    (_theResult____h61037[11] ?
																		       6'd45 :
																		       (_theResult____h61037[10] ?
																			  6'd46 :
																			  (_theResult____h61037[9] ?
																			     6'd47 :
																			     (_theResult____h61037[8] ?
																				6'd48 :
																				(_theResult____h61037[7] ?
																				   6'd49 :
																				   (_theResult____h61037[6] ?
																				      6'd50 :
																				      (_theResult____h61037[5] ?
																					 6'd51 :
																					 (_theResult____h61037[4] ?
																					    6'd52 :
																					    (_theResult____h61037[3] ?
																					       6'd53 :
																					       (_theResult____h61037[2] ?
																						  6'd54 :
																						  (_theResult____h61037[1] ?
																						     6'd55 :
																						     (_theResult____h61037[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d3261 =
	     (_theResult____h119706[56] ?
		6'd0 :
		(_theResult____h119706[55] ?
		   6'd1 :
		   (_theResult____h119706[54] ?
		      6'd2 :
		      (_theResult____h119706[53] ?
			 6'd3 :
			 (_theResult____h119706[52] ?
			    6'd4 :
			    (_theResult____h119706[51] ?
			       6'd5 :
			       (_theResult____h119706[50] ?
				  6'd6 :
				  (_theResult____h119706[49] ?
				     6'd7 :
				     (_theResult____h119706[48] ?
					6'd8 :
					(_theResult____h119706[47] ?
					   6'd9 :
					   (_theResult____h119706[46] ?
					      6'd10 :
					      (_theResult____h119706[45] ?
						 6'd11 :
						 (_theResult____h119706[44] ?
						    6'd12 :
						    (_theResult____h119706[43] ?
						       6'd13 :
						       (_theResult____h119706[42] ?
							  6'd14 :
							  (_theResult____h119706[41] ?
							     6'd15 :
							     (_theResult____h119706[40] ?
								6'd16 :
								(_theResult____h119706[39] ?
								   6'd17 :
								   (_theResult____h119706[38] ?
								      6'd18 :
								      (_theResult____h119706[37] ?
									 6'd19 :
									 (_theResult____h119706[36] ?
									    6'd20 :
									    (_theResult____h119706[35] ?
									       6'd21 :
									       (_theResult____h119706[34] ?
										  6'd22 :
										  (_theResult____h119706[33] ?
										     6'd23 :
										     (_theResult____h119706[32] ?
											6'd24 :
											(_theResult____h119706[31] ?
											   6'd25 :
											   (_theResult____h119706[30] ?
											      6'd26 :
											      (_theResult____h119706[29] ?
												 6'd27 :
												 (_theResult____h119706[28] ?
												    6'd28 :
												    (_theResult____h119706[27] ?
												       6'd29 :
												       (_theResult____h119706[26] ?
													  6'd30 :
													  (_theResult____h119706[25] ?
													     6'd31 :
													     (_theResult____h119706[24] ?
														6'd32 :
														(_theResult____h119706[23] ?
														   6'd33 :
														   (_theResult____h119706[22] ?
														      6'd34 :
														      (_theResult____h119706[21] ?
															 6'd35 :
															 (_theResult____h119706[20] ?
															    6'd36 :
															    (_theResult____h119706[19] ?
															       6'd37 :
															       (_theResult____h119706[18] ?
																  6'd38 :
																  (_theResult____h119706[17] ?
																     6'd39 :
																     (_theResult____h119706[16] ?
																	6'd40 :
																	(_theResult____h119706[15] ?
																	   6'd41 :
																	   (_theResult____h119706[14] ?
																	      6'd42 :
																	      (_theResult____h119706[13] ?
																		 6'd43 :
																		 (_theResult____h119706[12] ?
																		    6'd44 :
																		    (_theResult____h119706[11] ?
																		       6'd45 :
																		       (_theResult____h119706[10] ?
																			  6'd46 :
																			  (_theResult____h119706[9] ?
																			     6'd47 :
																			     (_theResult____h119706[8] ?
																				6'd48 :
																				(_theResult____h119706[7] ?
																				   6'd49 :
																				   (_theResult____h119706[6] ?
																				      6'd50 :
																				      (_theResult____h119706[5] ?
																					 6'd51 :
																					 (_theResult____h119706[4] ?
																					    6'd52 :
																					    (_theResult____h119706[3] ?
																					       6'd53 :
																					       (_theResult____h119706[2] ?
																						  6'd54 :
																						  (_theResult____h119706[1] ?
																						     6'd55 :
																						     (_theResult____h119706[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2464 =
	     (_theResult____h78647[56] ?
		6'd0 :
		(_theResult____h78647[55] ?
		   6'd1 :
		   (_theResult____h78647[54] ?
		      6'd2 :
		      (_theResult____h78647[53] ?
			 6'd3 :
			 (_theResult____h78647[52] ?
			    6'd4 :
			    (_theResult____h78647[51] ?
			       6'd5 :
			       (_theResult____h78647[50] ?
				  6'd6 :
				  (_theResult____h78647[49] ?
				     6'd7 :
				     (_theResult____h78647[48] ?
					6'd8 :
					(_theResult____h78647[47] ?
					   6'd9 :
					   (_theResult____h78647[46] ?
					      6'd10 :
					      (_theResult____h78647[45] ?
						 6'd11 :
						 (_theResult____h78647[44] ?
						    6'd12 :
						    (_theResult____h78647[43] ?
						       6'd13 :
						       (_theResult____h78647[42] ?
							  6'd14 :
							  (_theResult____h78647[41] ?
							     6'd15 :
							     (_theResult____h78647[40] ?
								6'd16 :
								(_theResult____h78647[39] ?
								   6'd17 :
								   (_theResult____h78647[38] ?
								      6'd18 :
								      (_theResult____h78647[37] ?
									 6'd19 :
									 (_theResult____h78647[36] ?
									    6'd20 :
									    (_theResult____h78647[35] ?
									       6'd21 :
									       (_theResult____h78647[34] ?
										  6'd22 :
										  (_theResult____h78647[33] ?
										     6'd23 :
										     (_theResult____h78647[32] ?
											6'd24 :
											(_theResult____h78647[31] ?
											   6'd25 :
											   (_theResult____h78647[30] ?
											      6'd26 :
											      (_theResult____h78647[29] ?
												 6'd27 :
												 (_theResult____h78647[28] ?
												    6'd28 :
												    (_theResult____h78647[27] ?
												       6'd29 :
												       (_theResult____h78647[26] ?
													  6'd30 :
													  (_theResult____h78647[25] ?
													     6'd31 :
													     (_theResult____h78647[24] ?
														6'd32 :
														(_theResult____h78647[23] ?
														   6'd33 :
														   (_theResult____h78647[22] ?
														      6'd34 :
														      (_theResult____h78647[21] ?
															 6'd35 :
															 (_theResult____h78647[20] ?
															    6'd36 :
															    (_theResult____h78647[19] ?
															       6'd37 :
															       (_theResult____h78647[18] ?
																  6'd38 :
																  (_theResult____h78647[17] ?
																     6'd39 :
																     (_theResult____h78647[16] ?
																	6'd40 :
																	(_theResult____h78647[15] ?
																	   6'd41 :
																	   (_theResult____h78647[14] ?
																	      6'd42 :
																	      (_theResult____h78647[13] ?
																		 6'd43 :
																		 (_theResult____h78647[12] ?
																		    6'd44 :
																		    (_theResult____h78647[11] ?
																		       6'd45 :
																		       (_theResult____h78647[10] ?
																			  6'd46 :
																			  (_theResult____h78647[9] ?
																			     6'd47 :
																			     (_theResult____h78647[8] ?
																				6'd48 :
																				(_theResult____h78647[7] ?
																				   6'd49 :
																				   (_theResult____h78647[6] ?
																				      6'd50 :
																				      (_theResult____h78647[5] ?
																					 6'd51 :
																					 (_theResult____h78647[4] ?
																					    6'd52 :
																					    (_theResult____h78647[3] ?
																					       6'd53 :
																					       (_theResult____h78647[2] ?
																						  6'd54 :
																						  (_theResult____h78647[1] ?
																						     6'd55 :
																						     (_theResult____h78647[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2049 =
	     (guard__h61047 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h69144 :
	       _theResult___exp__h69667 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2051 =
	     (guard__h61047 == 2'b0) ?
	       _theResult___fst_exp__h69144 :
	       (requestR[191] ?
		  _theResult___exp__h69667 :
		  _theResult___fst_exp__h69144) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2614 =
	     (guard__h61047 == 2'b0 || requestR[191]) ?
	       sfdin__h69138[56:34] :
	       _theResult___sfd__h69668 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2616 =
	     (guard__h61047 == 2'b0) ?
	       sfdin__h69138[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h69668 :
		  sfdin__h69138[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3316 =
	     (guard__h119716 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h127942 :
	       _theResult___exp__h128668 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3318 =
	     (guard__h119716 == 2'b0) ?
	       _theResult___fst_exp__h127942 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h128668 :
		  _theResult___fst_exp__h127942) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3434 =
	     (guard__h119716 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       sfdin__h127936[56:5] :
	       _theResult___sfd__h128669 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3436 =
	     (guard__h119716 == 2'b0) ?
	       sfdin__h127936[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h128669 :
		  sfdin__h127936[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2519 =
	     (guard__h78657 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h86883 :
	       _theResult___exp__h87406 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2521 =
	     (guard__h78657 == 2'b0) ?
	       _theResult___fst_exp__h86883 :
	       (requestR[191] ?
		  _theResult___exp__h87406 :
		  _theResult___fst_exp__h86883) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2654 =
	     (guard__h78657 == 2'b0 || requestR[191]) ?
	       sfdin__h86877[56:34] :
	       _theResult___sfd__h87407 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2656 =
	     (guard__h78657 == 2'b0) ?
	       sfdin__h86877[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h87407 :
		  sfdin__h86877[56:34]) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d2996 =
	     (guard__h110480 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h118441 :
	       _theResult___exp__h119093 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d2998 =
	     (guard__h110480 == 2'b0) ?
	       _theResult___fst_exp__h118441 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h119093 :
		  _theResult___fst_exp__h118441) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3380 =
	     (guard__h128741 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h136731 :
	       _theResult___exp__h137408 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3382 =
	     (guard__h128741 == 2'b0) ?
	       _theResult___fst_exp__h136731 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h137408 :
		  _theResult___fst_exp__h136731) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3410 =
	     (guard__h110480 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h118392[56:5] :
	       _theResult___sfd__h119094 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3412 =
	     (guard__h110480 == 2'b0) ?
	       _theResult___snd__h118392[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h119094 :
		  _theResult___snd__h118392[56:5]) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3450 =
	     (guard__h128741 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h136677[56:5] :
	       _theResult___sfd__h137409 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3452 =
	     (guard__h128741 == 2'b0) ?
	       _theResult___snd__h136677[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h137409 :
		  _theResult___snd__h136677[56:5]) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2201 =
	     (guard__h69740 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h77788 :
	       _theResult___exp__h78237 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2203 =
	     (guard__h69740 == 2'b0) ?
	       _theResult___fst_exp__h77788 :
	       (requestR[191] ?
		  _theResult___exp__h78237 :
		  _theResult___fst_exp__h77788) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2583 =
	     (guard__h87479 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h95556 :
	       _theResult___exp__h96030 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2585 =
	     (guard__h87479 == 2'b0) ?
	       _theResult___fst_exp__h95556 :
	       (requestR[191] ?
		  _theResult___exp__h96030 :
		  _theResult___fst_exp__h95556) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2630 =
	     (guard__h69740 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h77739[56:34] :
	       _theResult___sfd__h78238 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2632 =
	     (guard__h69740 == 2'b0) ?
	       _theResult___snd__h77739[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h78238 :
		  _theResult___snd__h77739[56:34]) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2670 =
	     (guard__h87479 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h95502[56:34] :
	       _theResult___sfd__h96031 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2672 =
	     (guard__h87479 == 2'b0) ?
	       _theResult___snd__h95502[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h96031 :
		  _theResult___snd__h95502[56:34]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1253 =
	     (guard__h35533 == 2'b0) ?
	       11'd0 :
	       (requestR[159] ? _theResult___exp__h36146 : 11'd0) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1276 =
	     (guard__h36221 == 2'b0 || requestR[159]) ?
	       x__h36236[10:0] :
	       _theResult___exp__h36860 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1278 =
	     (guard__h36221 == 2'b0) ?
	       x__h36236[10:0] :
	       (requestR[159] ? _theResult___exp__h36860 : x__h36236[10:0]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1296 =
	     (guard__h35533 == 2'b0 || requestR[159]) ?
	       sfd___3__h35523[54:3] :
	       _theResult___sfd__h36147 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1298 =
	     (guard__h35533 == 2'b0) ?
	       sfd___3__h35523[54:3] :
	       (requestR[159] ?
		  _theResult___sfd__h36147 :
		  sfd___3__h35523[54:3]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1311 =
	     (guard__h36221 == 2'b0 || requestR[159]) ?
	       sfd___3__h35523[53:2] :
	       _theResult___sfd__h36861 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1313 =
	     (guard__h36221 == 2'b0) ?
	       sfd___3__h35523[53:2] :
	       (requestR[159] ?
		  _theResult___sfd__h36861 :
		  sfd___3__h35523[53:2]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d331 =
	     (guard__h7134 == 2'b0) ?
	       8'd0 :
	       (requestR[159] ? _theResult___exp__h7547 : 8'd0) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d354 =
	     (guard__h7622 == 2'b0 || requestR[159]) ?
	       x__h7637[7:0] :
	       _theResult___exp__h8058 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d356 =
	     (guard__h7622 == 2'b0) ?
	       x__h7637[7:0] :
	       (requestR[159] ? _theResult___exp__h8058 : x__h7637[7:0]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d374 =
	     (guard__h7134 == 2'b0 || requestR[159]) ?
	       sfd___3__h7124[31:9] :
	       _theResult___sfd__h7548 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d376 =
	     (guard__h7134 == 2'b0) ?
	       sfd___3__h7124[31:9] :
	       (requestR[159] ?
		  _theResult___sfd__h7548 :
		  sfd___3__h7124[31:9]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d389 =
	     (guard__h7622 == 2'b0 || requestR[159]) ?
	       sfd___3__h7124[30:8] :
	       _theResult___sfd__h8059 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d391 =
	     (guard__h7622 == 2'b0) ?
	       sfd___3__h7124[30:8] :
	       (requestR[159] ?
		  _theResult___sfd__h8059 :
		  sfd___3__h7124[30:8]) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1003 =
	     IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d962 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1002 ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1005 =
	     (sV2_exp__h918 == 8'd255 && sV2_sfd__h919[22]) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       (IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d958 ?
		  requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
		  IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1003) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1009 =
	     (sV2_exp__h918 == 8'd255 && sV2_sfd__h919 != 23'd0 &&
	      !sV2_sfd__h919[22]) ?
	       res__h17823 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1008 ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d989 =
	     (sV2_exp__h918 == 8'd255 && sV2_sfd__h919[22] ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d958) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       (IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d962 ?
		  requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
		  IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d987) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d993 =
	     (sV2_exp__h918 == 8'd255 && sV2_sfd__h919 != 23'd0 &&
	      !sV2_sfd__h919[22]) ?
	       res__h17823 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d992 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1006 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22]) ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1005 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1008 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22] &&
	      sV2_exp__h918 == 8'd255 &&
	      sV2_sfd__h919[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1006 } ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1010 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	      !sV1_sfd__h816[22]) ?
	       res__h17586 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1009 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1080 =
	     (sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0) ?
	       res___1__h26228 :
	       ((sV1_exp__h815 == 8'd0) ? res___1__h26247 : res__h26263) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1081 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 == 23'd0) ?
	       res___1__h26218 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1080 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2946 =
	     ((sV1_exp__h815 == 8'd0) ?
		(sV1_sfd__h816[22] ?
		   6'd2 :
		   (sV1_sfd__h816[21] ?
		      6'd3 :
		      (sV1_sfd__h816[20] ?
			 6'd4 :
			 (sV1_sfd__h816[19] ?
			    6'd5 :
			    (sV1_sfd__h816[18] ?
			       6'd6 :
			       (sV1_sfd__h816[17] ?
				  6'd7 :
				  (sV1_sfd__h816[16] ?
				     6'd8 :
				     (sV1_sfd__h816[15] ?
					6'd9 :
					(sV1_sfd__h816[14] ?
					   6'd10 :
					   (sV1_sfd__h816[13] ?
					      6'd11 :
					      (sV1_sfd__h816[12] ?
						 6'd12 :
						 (sV1_sfd__h816[11] ?
						    6'd13 :
						    (sV1_sfd__h816[10] ?
						       6'd14 :
						       (sV1_sfd__h816[9] ?
							  6'd15 :
							  (sV1_sfd__h816[8] ?
							     6'd16 :
							     (sV1_sfd__h816[7] ?
								6'd17 :
								(sV1_sfd__h816[6] ?
								   6'd18 :
								   (sV1_sfd__h816[5] ?
								      6'd19 :
								      (sV1_sfd__h816[4] ?
									 6'd20 :
									 (sV1_sfd__h816[3] ?
									    6'd21 :
									    (sV1_sfd__h816[2] ?
									       6'd22 :
									       (sV1_sfd__h816[1] ?
										  6'd23 :
										  (sV1_sfd__h816[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3462 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0) ?
	       _theResult___snd_fst_sfd__h99569 :
	       _theResult___fst_sfd__h137486 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3489 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 ||
	      (sV1_exp__h815 == 8'd255 || sV1_exp__h815 == 8'd0) &&
	      sV1_sfd__h816 == 23'd0) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((sV1_exp__h815 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d3475 :
		  IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3487) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3524 =
	     (sV1_exp__h815 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2875 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2876 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3503[4] :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3013 &&
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3014 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3520[4] ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3527 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0) ?
	       sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	       !sV1_sfd__h816[22] :
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3524 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3534 =
	     (sV1_exp__h815 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2875 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2876 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3503[3] :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3013 &&
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3014 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3520[3] ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3548 =
	     (sV1_exp__h815 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2875 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2876 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3503[2] :
	       !SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3013 ||
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3546 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3560 =
	     (sV1_exp__h815 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2875 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2876 ||
		_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3503[1]) :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3013 &&
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3558 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3572 =
	     (sV1_exp__h815 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2875 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2876 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3503[0] :
	       !SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3013 ||
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3570 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d844 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 == 23'd0) ?
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d773 :
	       ((sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d842) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d904 =
	     (sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0) ?
	       32'd0 :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d875[19] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d902) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d990 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22]) ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d989 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d992 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22] &&
	      sV2_exp__h918 == 8'd255 &&
	      sV2_sfd__h919[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d990 } ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d994 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	      !sV1_sfd__h816[22]) ?
	       res__h17586 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d993 ;
  assign IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1185 =
	     sfd__h2220[31] ?
	       6'd0 :
	       (sfd__h2220[30] ?
		  6'd1 :
		  (sfd__h2220[29] ?
		     6'd2 :
		     (sfd__h2220[28] ?
			6'd3 :
			(sfd__h2220[27] ?
			   6'd4 :
			   (sfd__h2220[26] ?
			      6'd5 :
			      (sfd__h2220[25] ?
				 6'd6 :
				 (sfd__h2220[24] ?
				    6'd7 :
				    (sfd__h2220[23] ?
				       6'd8 :
				       (sfd__h2220[22] ?
					  6'd9 :
					  (sfd__h2220[21] ?
					     6'd10 :
					     (sfd__h2220[20] ?
						6'd11 :
						(sfd__h2220[19] ?
						   6'd12 :
						   (sfd__h2220[18] ?
						      6'd13 :
						      (sfd__h2220[17] ?
							 6'd14 :
							 (sfd__h2220[16] ?
							    6'd15 :
							    (sfd__h2220[15] ?
							       6'd16 :
							       (sfd__h2220[14] ?
								  6'd17 :
								  (sfd__h2220[13] ?
								     6'd18 :
								     (sfd__h2220[12] ?
									6'd19 :
									(sfd__h2220[11] ?
									   6'd20 :
									   (sfd__h2220[10] ?
									      6'd21 :
									      (sfd__h2220[9] ?
										 6'd22 :
										 (sfd__h2220[8] ?
										    6'd23 :
										    (sfd__h2220[7] ?
										       6'd24 :
										       (sfd__h2220[6] ?
											  6'd25 :
											  (sfd__h2220[5] ?
											     6'd26 :
											     (sfd__h2220[4] ?
												6'd27 :
												(sfd__h2220[3] ?
												   6'd28 :
												   (sfd__h2220[2] ?
												      6'd29 :
												      (sfd__h2220[1] ?
													 6'd30 :
													 (sfd__h2220[0] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d253 =
	     sfd__h2220[31] ?
	       6'd0 :
	       (sfd__h2220[30] ?
		  6'd1 :
		  (sfd__h2220[29] ?
		     6'd2 :
		     (sfd__h2220[28] ?
			6'd3 :
			(sfd__h2220[27] ?
			   6'd4 :
			   (sfd__h2220[26] ?
			      6'd5 :
			      (sfd__h2220[25] ?
				 6'd6 :
				 (sfd__h2220[24] ?
				    6'd7 :
				    (sfd__h2220[23] ?
				       6'd8 :
				       (sfd__h2220[22] ?
					  6'd9 :
					  (sfd__h2220[21] ?
					     6'd10 :
					     (sfd__h2220[20] ?
						6'd11 :
						(sfd__h2220[19] ?
						   6'd12 :
						   (sfd__h2220[18] ?
						      6'd13 :
						      (sfd__h2220[17] ?
							 6'd14 :
							 (sfd__h2220[16] ?
							    6'd15 :
							    (sfd__h2220[15] ?
							       6'd16 :
							       (sfd__h2220[14] ?
								  6'd17 :
								  (sfd__h2220[13] ?
								     6'd18 :
								     (sfd__h2220[12] ?
									6'd19 :
									(sfd__h2220[11] ?
									   6'd20 :
									   (sfd__h2220[10] ?
									      6'd21 :
									      (sfd__h2220[9] ?
										 6'd22 :
										 (sfd__h2220[8] ?
										    6'd23 :
										    (sfd__h2220[7] ?
										       6'd24 :
										       (sfd__h2220[6] ?
											  6'd25 :
											  (sfd__h2220[5] ?
											     6'd26 :
											     (sfd__h2220[4] ?
												6'd27 :
												(sfd__h2220[3] ?
												   6'd28 :
												   (sfd__h2220[2] ?
												      6'd29 :
												      (sfd__h2220[1] ?
													 6'd30 :
													 (sfd__h2220[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d840 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d813 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d834 ?
		  ((x__h15490[56:25] == 32'h7FFFFFFF) ?
		     x__h15490[56:25] :
		     x__h15490[56:25] + 32'd1) :
		  x__h15490[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d842 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d778 ==
	      20'd1048545) ?
	       ((_theResult_____2__h14755[32:31] == 2'b11) ?
		  _theResult_____2__h14755[31:0] :
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d773) :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d811[19] ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d773 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d840) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d866 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d778 ==
	      20'd1048545) ?
	       _theResult_____2__h14755[32:31] == 2'b11 &&
	       guard__h14753 != 2'd0 :
	       !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d811[19] &&
	       (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d813 ||
		guard__h15304 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d902 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d877 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d896 ?
		  ((x__h16582[56:25] == 32'hFFFFFFFF) ?
		     x__h16582[56:25] :
		     x__h16582[56:25] + 32'd1) :
		  x__h16582[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1593 =
	     NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1566 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1587 ?
		  ((x__h47810[85:54] == 32'h7FFFFFFF) ?
		     x__h47810[85:54] :
		     x__h47810[85:54] + 32'd1) :
		  x__h47810[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1595 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1531 ==
	      24'd16777185) ?
	       ((_theResult_____2__h47075[32:31] == 2'b11) ?
		  _theResult_____2__h47075[31:0] :
		  IF_requestR_BIT_191_144_THEN_2147483648_ELSE_2_ETC___d1526) :
	       (NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1564[23] ?
		  IF_requestR_BIT_191_144_THEN_2147483648_ELSE_2_ETC___d1526 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1593) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1619 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1531 ==
	      24'd16777185) ?
	       _theResult_____2__h47075[32:31] == 2'b11 &&
	       guard__h47073 != 2'd0 :
	       !NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1564[23] &&
	       (!NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1566 ||
		guard__h47624 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1655 =
	     NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1630 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1649 ?
		  ((x__h48885[85:54] == 32'hFFFFFFFF) ?
		     x__h48885[85:54] :
		     x__h48885[85:54] + 32'd1) :
		  x__h48885[85:54]) :
	       32'd0 ;
  assign IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d1235 =
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1189 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1191) ?
	       requestR[159] :
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1234 ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d3475 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2875 ||
	      _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2876 ||
	      _theResult___fst_exp__h118441 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3474 ;
  assign IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1002 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d986 ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d987 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d986 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 ;
  assign IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d982 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d971 ||
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d972 &&
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d973 :
	       !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d976 ||
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d972 &&
	       !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d978 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3330 =
	     ((SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q78[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q83[10],
		  SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q83 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3487 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3013 ?
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3014 ?
		  ((_theResult___fst_exp__h127942 == 11'd2047) ?
		     requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3479) :
		  ((_theResult___fst_exp__h136731 == 11'd2047) ?
		     requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3484)) :
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3546 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3014 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3520[2] :
	       _theResult___fst_exp__h137470 == 11'd2047 &&
	       _theResult___fst_sfd__h137471 == 52'd0 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3558 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3014 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3520[1] :
	       _theResult___fst_exp__h136731 == 11'd0 &&
	       guard__h128741 != 2'b0 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3570 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3014 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3520[0] :
	       _theResult___fst_exp__h136731 != 11'd2047 &&
	       guard__h128741 != 2'b0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2533 =
	     ((SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC__q52[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC__q57[7],
		  SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC__q57 }) -
	     9'd386 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2710 =
	     SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2219 ?
	       ((_theResult___fst_exp__h86883 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2703) :
	       ((_theResult___fst_exp__h95556 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2708) ;
  assign IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2788 =
	     SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2219 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2759[2] :
	       _theResult___fst_exp__h96092 == 8'd255 &&
	       _theResult___fst_sfd__h96093 == 23'd0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2801 =
	     SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2219 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2759[1] :
	       _theResult___fst_exp__h95556 == 8'd0 && guard__h87479 != 2'b0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2814 =
	     SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2219 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2759[0] :
	       _theResult___fst_exp__h95556 != 8'd255 &&
	       guard__h87479 != 2'b0 ;
  assign IF_requestR_BITS_126_TO_116_584_EQ_2047_585_AN_ETC___d3632 =
	     (requestR[126:116] == 11'd2047 && requestR[115] ||
	      requestR_BITS_190_TO_180_516_EQ_0_527_AND_requ_ETC___d3601) ?
	       requestR[191:128] :
	       (requestR_BITS_126_TO_116_584_EQ_0_598_AND_requ_ETC___d3605 ?
		  requestR[127:64] :
		  res__h142497) ;
  assign IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d962 =
	     sV2_exp__h918 == 8'd0 && sV2_sfd__h919 == 23'd0 &&
	     requestR[127:96] == 32'hFFFFFFFF &&
	     requestR[95] &&
	     sV1_exp__h815 == 8'd0 &&
	     sV1_sfd__h816 == 23'd0 &&
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ;
  assign IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1320 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1189 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1191) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h36925 ;
  assign IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1487 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1382 ||
	      _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1383) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h46505 ;
  assign IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d365 =
	     (requestR[159:128] == 32'd0 ||
	      !sfd__h2220[31] && !sfd__h2220[30] && !sfd__h2220[29] &&
	      !sfd__h2220[28] &&
	      !sfd__h2220[27] &&
	      !sfd__h2220[26] &&
	      !sfd__h2220[25] &&
	      !sfd__h2220[24] &&
	      !sfd__h2220[23] &&
	      !sfd__h2220[22] &&
	      !sfd__h2220[21] &&
	      !sfd__h2220[20] &&
	      !sfd__h2220[19] &&
	      !sfd__h2220[18] &&
	      !sfd__h2220[17] &&
	      !sfd__h2220[16] &&
	      !sfd__h2220[15] &&
	      !sfd__h2220[14] &&
	      !sfd__h2220[13] &&
	      !sfd__h2220[12] &&
	      !sfd__h2220[11] &&
	      !sfd__h2220[10] &&
	      !sfd__h2220[9] &&
	      !sfd__h2220[8] &&
	      !sfd__h2220[7] &&
	      !sfd__h2220[6] &&
	      !sfd__h2220[5] &&
	      !sfd__h2220[4] &&
	      !sfd__h2220[3] &&
	      !sfd__h2220[2] &&
	      !sfd__h2220[1] &&
	      !sfd__h2220[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8128 ;
  assign IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d667 =
	     (requestR[159:128] == 32'd0 ||
	      !requestR[159] &&
	      NOT_requestR_BIT_158_62_63_AND_NOT_requestR_BI_ETC___d553) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14186 ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_0_527_AND_r_ETC___d1657 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       32'd0 :
	       (NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1628[23] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1655) ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_0_527_AND_r_ETC___d3646 =
	     requestR_BITS_190_TO_180_516_EQ_0_527_AND_requ_ETC___d3601 ?
	       requestR[127:64] :
	       (requestR_BITS_126_TO_116_584_EQ_0_598_AND_requ_ETC___d3605 ?
		  requestR[191:128] :
		  res__h147045) ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_0_527_AND_r_ETC___d3717 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       res___1__h155237 :
	       ((requestR[190:180] == 11'd0) ?
		  res___1__h155256 :
		  res__h155272) ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2151 =
	     ((requestR[190:180] == 11'd0) ?
		(requestR[179] ?
		   6'd2 :
		   (requestR[178] ?
		      6'd3 :
		      (requestR[177] ?
			 6'd4 :
			 (requestR[176] ?
			    6'd5 :
			    (requestR[175] ?
			       6'd6 :
			       (requestR[174] ?
				  6'd7 :
				  (requestR[173] ?
				     6'd8 :
				     (requestR[172] ?
					6'd9 :
					(requestR[171] ?
					   6'd10 :
					   (requestR[170] ?
					      6'd11 :
					      (requestR[169] ?
						 6'd12 :
						 (requestR[168] ?
						    6'd13 :
						    (requestR[167] ?
						       6'd14 :
						       (requestR[166] ?
							  6'd15 :
							  (requestR[165] ?
							     6'd16 :
							     (requestR[164] ?
								6'd17 :
								(requestR[163] ?
								   6'd18 :
								   (requestR[162] ?
								      6'd19 :
								      (requestR[161] ?
									 6'd20 :
									 (requestR[160] ?
									    6'd21 :
									    (requestR[159] ?
									       6'd22 :
									       (requestR[158] ?
										  6'd23 :
										  (requestR[157] ?
										     6'd24 :
										     (requestR[156] ?
											6'd25 :
											(requestR[155] ?
											   6'd26 :
											   (requestR[154] ?
											      6'd27 :
											      (requestR[153] ?
												 6'd28 :
												 (requestR[152] ?
												    6'd29 :
												    (requestR[151] ?
												       6'd30 :
												       (requestR[150] ?
													  6'd31 :
													  (requestR[149] ?
													     6'd32 :
													     (requestR[148] ?
														6'd33 :
														(requestR[147] ?
														   6'd34 :
														   (requestR[146] ?
														      6'd35 :
														      (requestR[145] ?
															 6'd36 :
															 (requestR[144] ?
															    6'd37 :
															    (requestR[143] ?
															       6'd38 :
															       (requestR[142] ?
																  6'd39 :
																  (requestR[141] ?
																     6'd40 :
																     (requestR[140] ?
																	6'd41 :
																	(requestR[139] ?
																	   6'd42 :
																	   (requestR[138] ?
																	      6'd43 :
																	      (requestR[137] ?
																		 6'd44 :
																		 (requestR[136] ?
																		    6'd45 :
																		    (requestR[135] ?
																		       6'd46 :
																		       (requestR[134] ?
																			  6'd47 :
																			  (requestR[133] ?
																			     6'd48 :
																			     (requestR[132] ?
																				6'd49 :
																				(requestR[131] ?
																				   6'd50 :
																				   (requestR[130] ?
																				      6'd51 :
																				      (requestR[129] ?
																					 6'd52 :
																					 (requestR[128] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2712 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1761 ?
		  IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_ETC___d2698 :
		  requestR[191]) :
	       (SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2218 ?
		  IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2710 :
		  requestR[191]) ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2763 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d2745 :
	       SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2218 &&
	       SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2219 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2759[4] ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2774 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d2770 :
	       SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2218 &&
	       SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2219 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2759[3] ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2790 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2782 :
	       !SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2218 ||
	       IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2788 ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2803 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d2797 :
	       SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2218 &&
	       IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2801 ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2816 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2810 :
	       !SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2218 ||
	       IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2814 ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_2047_517_AN_ETC___d1597 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_BIT_191_144_THEN_2147483648_ELSE_2_ETC___d1526 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1595) ;
  assign IF_requestR_BITS_190_TO_180_516_EQ_2047_517_AN_ETC___d2682 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       _theResult___snd_fst_sfd__h53391 :
	       _theResult___fst_sfd__h96108 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1033 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d996 ||
	     sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22] ||
	     sV2_exp__h918 == 8'd255 && sV2_sfd__h919[22] ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1044 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d976 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d972 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d978) &&
	     !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d971 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d972 ||
	      !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d973) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1048 =
	     sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0 &&
	     sV2_exp__h918 == 8'd0 &&
	     sV2_sfd__h919 == 23'd0 ||
	     NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d1047 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:128] :
	       31'h7FC00000 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d772 =
	     sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 ||
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) &&
	     sV1_exp__h815 == 8'd255 &&
	     sV1_sfd__h816 == 23'd0 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d773 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'h80000000 :
	       32'h7FFFFFFF ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d776 =
	     sV1_exp__h815 - 8'd127 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d785 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       -b__h14817 :
	       b__h14817 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d906 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'd0 :
	       ((sV1_exp__h815 == 8'd255 && sV1_sfd__h816 == 23'd0) ?
		  32'hFFFFFFFF :
		  IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d904) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d914 =
	     sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 ||
	     sV1_exp__h815 == 8'd255 && sV1_sfd__h816 == 23'd0 ||
	     (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d875[19] ||
	      NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d877 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d896 &&
	      x__h16582[56:25] == 32'hFFFFFFFF) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d925 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d914,
	       3'd0,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d919 } ==
	     5'd0 ||
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d914 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d948 =
	     sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	     !sV1_sfd__h816[22] &&
	     sV2_exp__h918 == 8'd255 &&
	     sV2_sfd__h919 != 23'd0 &&
	     !sV2_sfd__h919[22] ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d958 =
	     sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0 &&
	     requestR[191:160] == 32'hFFFFFFFF &&
	     requestR[159] &&
	     sV2_exp__h918 == 8'd0 &&
	     sV2_sfd__h919 == 23'd0 &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d971 =
	     sV1_exp__h815 < sV2_exp__h918 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d972 =
	     sV1_exp__h815 == sV2_exp__h918 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d973 =
	     sV1_sfd__h816 < sV2_sfd__h919 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d976 =
	     sV1_exp__h815 <= sV2_exp__h918 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d978 =
	     sV1_sfd__h816 <= sV2_sfd__h919 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d996 =
	     sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	     !sV1_sfd__h816[22] ||
	     sV2_exp__h918 == 8'd255 && sV2_sfd__h919 != 23'd0 &&
	     !sV2_sfd__h919[22] ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1212 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5533_0b0_requestR_BIT_159_0b1_reques_ETC__q27 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1232 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard6221_0b0_requestR_BIT_159_0b1_reques_ETC__q28 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1555 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h47073 == 2'b10) ?
		  IF_requestR_BIT_191_144_THEN_NEG_0b0_CONCAT_NO_ETC___d1538[53] :
		  guard__h47073 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h47073 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BIT_191_144_THEN_NEG_0b0_CONCAT_NO_ETC___d1538[85] &&
		  guard__h47073 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1587 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h47624 == 2'b10) ?
		  x__h47810[54] :
		  guard__h47624 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h47624 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h47810[85] &&
		  guard__h47624 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1649 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h48667 == 2'b10) ?
		  x__h48885[54] :
		  guard__h48667 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h48667 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2691 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard1047_0b0_requestR_BIT_191_0b1_reques_ETC__q70 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2690 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2696 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9740_0b0_requestR_BIT_191_0b1_reques_ETC__q71 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2690 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2703 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8657_0b0_requestR_BIT_191_0b1_reques_ETC__q72 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2690 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2708 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard7479_0b0_requestR_BIT_191_0b1_reques_ETC__q73 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2690 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d289 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard134_0b0_requestR_BIT_159_0b1_request_ETC__q14 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d309 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard622_0b0_requestR_BIT_159_0b1_request_ETC__q15 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3474 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10480_0b0_requestR_BITS_191_TO_160_E_ETC__q94 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d3473 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3479 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19716_0b0_requestR_BITS_191_TO_160_E_ETC__q95 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d3473 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3484 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard28741_0b0_requestR_BITS_191_TO_160_E_ETC__q96 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d3473 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d802 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h14753 == 2'b10) ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d785[24] :
		  guard__h14753 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h14753 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d785[56] &&
		  guard__h14753 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d834 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h15304 == 2'b10) ?
		  x__h15490[25] :
		  guard__h15304 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h15304 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h15490[56] &&
		  guard__h15304 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d896 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h16364 == 2'b10) ?
		  x__h16582[25] :
		  guard__h16364 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h16364 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1414 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h45115 == 2'b0) ? 11'd0 : _theResult___exp__h45728) :
	       11'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d622 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h13197 == 2'b0) ? 8'd0 : _theResult___exp__h13607) :
	       8'd0 ;
  assign IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1378 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d587 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d440 =
	     (sfd__h2220[31] || sfd__h2220[30] || sfd__h2220[29] ||
	      sfd__h2220[28] ||
	      sfd__h2220[27] ||
	      sfd__h2220[26] ||
	      sfd__h2220[25] ||
	      sfd__h2220[24] ||
	      sfd__h2220[23] ||
	      sfd__h2220[22] ||
	      sfd__h2220[21] ||
	      sfd__h2220[20] ||
	      sfd__h2220[19] ||
	      sfd__h2220[18] ||
	      sfd__h2220[17] ||
	      sfd__h2220[16] ||
	      sfd__h2220[15] ||
	      sfd__h2220[14] ||
	      sfd__h2220[13] ||
	      sfd__h2220[12] ||
	      sfd__h2220[11] ||
	      sfd__h2220[10] ||
	      sfd__h2220[9] ||
	      sfd__h2220[8] ||
	      sfd__h2220[7] ||
	      sfd__h2220[6] ||
	      sfd__h2220[5] ||
	      sfd__h2220[4] ||
	      sfd__h2220[3] ||
	      sfd__h2220[2] ||
	      sfd__h2220[1] ||
	      sfd__h2220[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 &&
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 &&
	      _theResult___fst_exp__h8119 == 8'd255 &&
	      _theResult___fst_sfd__h8120 == 23'd0) ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d443 =
	     (sfd__h2220[31] || sfd__h2220[30] || sfd__h2220[29] ||
	      sfd__h2220[28] ||
	      sfd__h2220[27] ||
	      sfd__h2220[26] ||
	      sfd__h2220[25] ||
	      sfd__h2220[24] ||
	      sfd__h2220[23] ||
	      sfd__h2220[22] ||
	      sfd__h2220[21] ||
	      sfd__h2220[20] ||
	      sfd__h2220[19] ||
	      sfd__h2220[18] ||
	      sfd__h2220[17] ||
	      sfd__h2220[16] ||
	      sfd__h2220[15] ||
	      sfd__h2220[14] ||
	      sfd__h2220[13] ||
	      sfd__h2220[12] ||
	      sfd__h2220[11] ||
	      sfd__h2220[10] ||
	      sfd__h2220[9] ||
	      sfd__h2220[8] ||
	      sfd__h2220[7] ||
	      sfd__h2220[6] ||
	      sfd__h2220[5] ||
	      sfd__h2220[4] ||
	      sfd__h2220[3] ||
	      sfd__h2220[2] ||
	      sfd__h2220[1] ||
	      sfd__h2220[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d452 =
	     (sfd__h2220[31] || sfd__h2220[30] || sfd__h2220[29] ||
	      sfd__h2220[28] ||
	      sfd__h2220[27] ||
	      sfd__h2220[26] ||
	      sfd__h2220[25] ||
	      sfd__h2220[24] ||
	      sfd__h2220[23] ||
	      sfd__h2220[22] ||
	      sfd__h2220[21] ||
	      sfd__h2220[20] ||
	      sfd__h2220[19] ||
	      sfd__h2220[18] ||
	      sfd__h2220[17] ||
	      sfd__h2220[16] ||
	      sfd__h2220[15] ||
	      sfd__h2220[14] ||
	      sfd__h2220[13] ||
	      sfd__h2220[12] ||
	      sfd__h2220[11] ||
	      sfd__h2220[10] ||
	      sfd__h2220[9] ||
	      sfd__h2220[8] ||
	      sfd__h2220[7] ||
	      sfd__h2220[6] ||
	      sfd__h2220[5] ||
	      sfd__h2220[4] ||
	      sfd__h2220[3] ||
	      sfd__h2220[2] ||
	      sfd__h2220[1] ||
	      sfd__h2220[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 &&
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d449 ;
  assign IF_requestR_BIT_191_144_THEN_2147483648_ELSE_2_ETC___d1526 =
	     requestR[191] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_requestR_BIT_191_144_THEN_NEG_0b0_CONCAT_NO_ETC___d1538 =
	     requestR[191] ? -b__h47137 : b__h47137 ;
  assign IF_requestR_BIT_191_144_THEN_NOT_requestR_BITS_ETC___d3625 =
	     requestR[191] ?
	       !requestR_BITS_190_TO_180_516_ULE_requestR_BITS_ETC___d3614 ||
	       requestR_BITS_190_TO_180_516_EQ_requestR_BITS__ETC___d3616 &&
	       !requestR_BITS_179_TO_128_518_ULE_requestR_BITS_ETC___d3617 :
	       requestR_BITS_190_TO_180_516_ULT_requestR_BITS_ETC___d3621 ||
	       requestR_BITS_190_TO_180_516_EQ_requestR_BITS__ETC___d3616 &&
	       requestR_BITS_179_TO_128_518_ULT_requestR_BITS_ETC___d3622 ;
  assign IF_sfd___3124_BIT_7_THEN_2_ELSE_0__q7 =
	     sfd___3__h7124[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3124_BIT_8_THEN_2_ELSE_0__q6 =
	     sfd___3__h7124[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___33187_BIT_7_THEN_2_ELSE_0__q18 =
	     sfd___3__h13187[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___33187_BIT_8_THEN_2_ELSE_0__q17 =
	     sfd___3__h13187[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35105_BIT_1_THEN_2_ELSE_0__q37 =
	     sfd___3__h45105[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35105_BIT_2_THEN_2_ELSE_0__q36 =
	     sfd___3__h45105[2] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35523_BIT_1_THEN_2_ELSE_0__q26 =
	     sfd___3__h35523[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35523_BIT_2_THEN_2_ELSE_0__q25 =
	     sfd___3__h35523[2] ? 2'd2 : 2'd0 ;
  assign IF_sfdin27936_BIT_4_THEN_2_ELSE_0__q80 =
	     sfdin__h127936[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin6877_BIT_33_THEN_2_ELSE_0__q54 =
	     sfdin__h86877[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin9138_BIT_33_THEN_2_ELSE_0__q45 =
	     sfdin__h69138[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd18392_BIT_4_THEN_2_ELSE_0__q75 =
	     _theResult___snd__h118392[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd36677_BIT_4_THEN_2_ELSE_0__q85 =
	     _theResult___snd__h136677[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd5502_BIT_33_THEN_2_ELSE_0__q59 =
	     _theResult___snd__h95502[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd7739_BIT_33_THEN_2_ELSE_0__q49 =
	     _theResult___snd__h77739[33] ? 2'd2 : 2'd0 ;
  assign IF_x5490_BIT_24_THEN_2_ELSE_0__q23 = x__h15490[24] ? 2'd2 : 2'd0 ;
  assign IF_x6582_BIT_24_THEN_2_ELSE_0__q24 = x__h16582[24] ? 2'd2 : 2'd0 ;
  assign IF_x7810_BIT_53_THEN_2_ELSE_0__q42 = x__h47810[53] ? 2'd2 : 2'd0 ;
  assign IF_x8885_BIT_53_THEN_2_ELSE_0__q43 = x__h48885[53] ? 2'd2 : 2'd0 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d778 =
	     -{ {12{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d776[7]}},
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d776 } ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d810 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d778 +
	     20'd32 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d811 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d810 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d813 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d811 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d875 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d810 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d877 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d875 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1531 =
	     -{ {13{requestR_BITS_190_TO_180_516_MINUS_1023___d1529[10]}},
		requestR_BITS_190_TO_180_516_MINUS_1023___d1529 } ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1563 =
	     NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1531 +
	     24'd32 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1564 =
	     NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1563 -
	     24'd2 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1566 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1564 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1628 =
	     NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1563 -
	     24'd1 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1630 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1628 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2782 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1761 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1762 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2730[2] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2742[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_68_ETC___d2810 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1761 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1762 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2730[0] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2742[0]) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1043 =
	     !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d971 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d972 ||
	      !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d973) &&
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d976 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d972 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d978) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1049 =
	     (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	     (sV2_exp__h918 != 8'd255 || sV2_sfd__h919 == 23'd0) &&
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1048 ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1067 =
	     (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	     (sV2_exp__h918 != 8'd255 || sV2_sfd__h919 == 23'd0) &&
	     (requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d984 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1048) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2919 =
	     !sV1_sfd__h816[21] && !sV1_sfd__h816[20] && !sV1_sfd__h816[19] &&
	     !sV1_sfd__h816[18] &&
	     !sV1_sfd__h816[17] &&
	     !sV1_sfd__h816[16] &&
	     !sV1_sfd__h816[15] &&
	     !sV1_sfd__h816[14] &&
	     !sV1_sfd__h816[13] &&
	     !sV1_sfd__h816[12] &&
	     !sV1_sfd__h816[11] &&
	     !sV1_sfd__h816[10] &&
	     !sV1_sfd__h816[9] &&
	     !sV1_sfd__h816[8] &&
	     !sV1_sfd__h816[7] &&
	     !sV1_sfd__h816[6] &&
	     !sV1_sfd__h816[5] &&
	     !sV1_sfd__h816[4] &&
	     !sV1_sfd__h816[3] &&
	     !sV1_sfd__h816[2] &&
	     !sV1_sfd__h816[1] &&
	     !sV1_sfd__h816[0] ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d855 =
	     (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d778 ==
	       20'd1048545) ?
		_theResult_____2__h14755[32:31] != 2'b11 :
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d811[19] ||
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d813 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d834 &&
		x__h15490[56:25] == 32'h7FFFFFFF) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d919 =
	     (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	     !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d875[19] &&
	     (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d877 ||
	      guard__h16364 != 2'd0) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d985 =
	     (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0 ||
	      sV2_exp__h918 != 8'd0 ||
	      sV2_sfd__h919 != 23'd0) &&
	     requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d984 ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d986 =
	     (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	     (sV2_exp__h918 != 8'd255 || sV2_sfd__h919 == 23'd0) &&
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d985 ;
  assign NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d261 =
	     !sfd__h2220[31] && !sfd__h2220[30] && !sfd__h2220[29] &&
	     !sfd__h2220[28] &&
	     !sfd__h2220[27] &&
	     !sfd__h2220[26] &&
	     !sfd__h2220[25] &&
	     !sfd__h2220[24] &&
	     !sfd__h2220[23] &&
	     !sfd__h2220[22] &&
	     !sfd__h2220[21] &&
	     !sfd__h2220[20] &&
	     !sfd__h2220[19] &&
	     !sfd__h2220[18] &&
	     !sfd__h2220[17] &&
	     !sfd__h2220[16] &&
	     !sfd__h2220[15] &&
	     !sfd__h2220[14] &&
	     !sfd__h2220[13] &&
	     !sfd__h2220[12] &&
	     !sfd__h2220[11] &&
	     !sfd__h2220[10] &&
	     !sfd__h2220[9] &&
	     !sfd__h2220[8] &&
	     !sfd__h2220[7] &&
	     !sfd__h2220[6] &&
	     !sfd__h2220[5] &&
	     !sfd__h2220[4] &&
	     !sfd__h2220[3] &&
	     !sfd__h2220[2] &&
	     !sfd__h2220[1] &&
	     !sfd__h2220[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 ||
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 ;
  assign NOT_requestR_BITS_159_TO_128_22_EQ_0_23_24_AND_ETC___d739 =
	     requestR[159:128] != 32'd0 &&
	     (requestR[159] ||
	      requestR_BIT_158_62_OR_requestR_BIT_157_64_OR__ETC___d728) &&
	     (!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592 &&
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593 &&
	      _theResult___fst_exp__h14177 == 8'd255 &&
	      _theResult___fst_sfd__h14178 == 23'd0) ;
  assign NOT_requestR_BITS_190_TO_180_516_EQ_0_527_533__ETC___d1608 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1531 ==
	       24'd16777185) ?
		_theResult_____2__h47075[32:31] != 2'b11 :
		NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1564[23] ||
		NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1566 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1587 &&
		x__h47810[85:54] == 32'h7FFFFFFF) ;
  assign NOT_requestR_BITS_190_TO_180_516_EQ_0_527_533__ETC___d1672 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1628[23] &&
	     (!NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1630 ||
	      guard__h48667 != 2'd0) ;
  assign NOT_requestR_BITS_190_TO_180_516_EQ_2047_517_6_ETC___d3629 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0 ||
	      requestR[126:116] != 11'd0 ||
	      requestR[115:64] != 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_BIT_191_144_THEN_NOT_requestR_BITS_ETC___d3625) ;
  assign NOT_requestR_BITS_190_TO_180_516_EQ_2047_517_6_ETC___d3694 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_BIT_191_144_THEN_NOT_requestR_BITS_ETC___d3625 ||
	      requestR_BITS_190_TO_180_516_EQ_0_527_AND_requ_ETC___d3675) ;
  assign NOT_requestR_BITS_190_TO_180_516_ULT_requestR__ETC___d3671 =
	     !requestR_BITS_190_TO_180_516_ULT_requestR_BITS_ETC___d3621 &&
	     (!requestR_BITS_190_TO_180_516_EQ_requestR_BITS__ETC___d3616 ||
	      !requestR_BITS_179_TO_128_518_ULT_requestR_BITS_ETC___d3622) &&
	     requestR_BITS_190_TO_180_516_ULE_requestR_BITS_ETC___d3614 &&
	     (!requestR_BITS_190_TO_180_516_EQ_requestR_BITS__ETC___d3616 ||
	      requestR_BITS_179_TO_128_518_ULE_requestR_BITS_ETC___d3617) ;
  assign NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d1047 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159] ||
	      requestR[127:96] == 32'hFFFFFFFF && requestR[95]) &&
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     ((requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
		NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1043 :
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1044) ;
  assign NOT_requestR_BIT_158_62_63_AND_NOT_requestR_BI_ETC___d553 =
	     !requestR[158] && !requestR[157] && !requestR[156] &&
	     !requestR[155] &&
	     !requestR[154] &&
	     !requestR[153] &&
	     !requestR[152] &&
	     !requestR[151] &&
	     !requestR[150] &&
	     !requestR[149] &&
	     !requestR[148] &&
	     !requestR[147] &&
	     !requestR[146] &&
	     !requestR[145] &&
	     !requestR[144] &&
	     !requestR[143] &&
	     !requestR[142] &&
	     !requestR[141] &&
	     !requestR[140] &&
	     !requestR[139] &&
	     !requestR[138] &&
	     !requestR[137] &&
	     !requestR[136] &&
	     !requestR[135] &&
	     !requestR[134] &&
	     !requestR[133] &&
	     !requestR[132] &&
	     !requestR[131] &&
	     !requestR[130] &&
	     !requestR[129] &&
	     !requestR[128] ;
  assign NOT_requestR_BIT_179_687_057_AND_NOT_requestR__ETC___d2096 =
	     !requestR[179] && !requestR[178] && !requestR[177] &&
	     !requestR[176] &&
	     !requestR[175] &&
	     !requestR[174] &&
	     !requestR[173] &&
	     !requestR[172] &&
	     !requestR[171] &&
	     !requestR[170] &&
	     !requestR[169] &&
	     !requestR[168] &&
	     !requestR[167] &&
	     !requestR[166] &&
	     !requestR[165] &&
	     !requestR[164] &&
	     !requestR[163] &&
	     !requestR[162] &&
	     !requestR[161] &&
	     !requestR[160] &&
	     !requestR[159] &&
	     NOT_requestR_BIT_158_62_63_AND_NOT_requestR_BI_ETC___d553 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3012 =
	     { {4{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d776[7]}},
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d776 } ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3013 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3012 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3014 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3012 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q78 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3012 +
	     12'd1023 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q83 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q78[10:0] -
	     11'd1023 ;
  assign SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_529___d2217 =
	     { requestR_BITS_190_TO_180_516_MINUS_1023___d1529[10],
	       requestR_BITS_190_TO_180_516_MINUS_1023___d1529 } ;
  assign SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2218 =
	     (SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_529___d2217 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2219 =
	     (SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_529___d2217 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC__q52 =
	     SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_529___d2217 +
	     12'd127 ;
  assign SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC__q57 =
	     SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC__q52[7:0] -
	     8'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1996 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1994 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2730 =
	     { 3'd0,
	       _theResult___fst_exp__h69144 == 8'd0 &&
	       (sfdin__h69138[56:34] == 23'd0 || guard__h61047 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h69729 == 8'd255 &&
	       _theResult___fst_sfd__h69730 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h69144 != 8'd255 &&
	       guard__h61047 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3263 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d3261 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3520 =
	     { 3'd0,
	       _theResult___fst_exp__h127942 == 11'd0 &&
	       (sfdin__h127936[56:5] == 52'd0 || guard__h119716 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h128730 == 11'd2047 &&
	       _theResult___fst_sfd__h128731 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h127942 != 11'd2047 &&
	       guard__h119716 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2466 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2464 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2759 =
	     { 3'd0,
	       _theResult___fst_exp__h86883 == 8'd0 &&
	       (sfdin__h86877[56:34] == 23'd0 || guard__h78657 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h87468 == 8'd255 &&
	       _theResult___fst_sfd__h87469 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h86883 != 8'd255 &&
	       guard__h78657 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d2948 =
	     ({ 6'd0,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2946 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3331 =
	     ({ 6'd0,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2946 } ^
	      12'h800) <=
	     (IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3330 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3503 =
	     { 3'd0,
	       _theResult___fst_exp__h118441 == 11'd0 &&
	       guard__h110480 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h119155 == 11'd2047 &&
	       _theResult___fst_sfd__h119156 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h118441 != 11'd2047 &&
	       guard__h110480 != 2'b0 } ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2153 =
	     ({ 3'd0,
		IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2151 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2534 =
	     ({ 3'd0,
		IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2151 } ^
	      9'h100) <=
	     (IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2533 ^
	      9'h100) ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2742 =
	     { 3'd0,
	       _theResult___fst_exp__h77788 == 8'd0 && guard__h69740 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h78299 == 8'd255 &&
	       _theResult___fst_sfd__h78300 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h77788 != 8'd255 &&
	       guard__h69740 != 2'b0 } ;
  assign _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d3019 =
	     b__h14817 >>
	     _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d3015 ;
  assign _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_516_EQ_ETC___d2224 =
	     sfd__h53437 >>
	     _3970_MINUS_SEXT_requestR_BITS_190_TO_180_516_M_ETC___d2220 ;
  assign _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66 =
	     { 33'h1AAAAAAAA,
	       requestR[63:32] == 32'hFFFFFFFF && requestR[31],
	       (requestR[63:32] == 32'hFFFFFFFF) ?
		 requestR[30:0] :
		 31'h7FC00000 } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1760 =
	     12'd3074 -
	     { 6'd0,
	       requestR[179] ?
		 6'd0 :
		 (requestR[178] ?
		    6'd1 :
		    (requestR[177] ?
		       6'd2 :
		       (requestR[176] ?
			  6'd3 :
			  (requestR[175] ?
			     6'd4 :
			     (requestR[174] ?
				6'd5 :
				(requestR[173] ?
				   6'd6 :
				   (requestR[172] ?
				      6'd7 :
				      (requestR[171] ?
					 6'd8 :
					 (requestR[170] ?
					    6'd9 :
					    (requestR[169] ?
					       6'd10 :
					       (requestR[168] ?
						  6'd11 :
						  (requestR[167] ?
						     6'd12 :
						     (requestR[166] ?
							6'd13 :
							(requestR[165] ?
							   6'd14 :
							   (requestR[164] ?
							      6'd15 :
							      (requestR[163] ?
								 6'd16 :
								 (requestR[162] ?
								    6'd17 :
								    (requestR[161] ?
								       6'd18 :
								       (requestR[160] ?
									  6'd19 :
									  (requestR[159] ?
									     6'd20 :
									     (requestR[158] ?
										6'd21 :
										(requestR[157] ?
										   6'd22 :
										   (requestR[156] ?
										      6'd23 :
										      (requestR[155] ?
											 6'd24 :
											 (requestR[154] ?
											    6'd25 :
											    (requestR[153] ?
											       6'd26 :
											       (requestR[152] ?
												  6'd27 :
												  (requestR[151] ?
												     6'd28 :
												     (requestR[150] ?
													6'd29 :
													(requestR[149] ?
													   6'd30 :
													   (requestR[148] ?
													      6'd31 :
													      (requestR[147] ?
														 6'd32 :
														 (requestR[146] ?
														    6'd33 :
														    (requestR[145] ?
														       6'd34 :
														       (requestR[144] ?
															  6'd35 :
															  (requestR[143] ?
															     6'd36 :
															     (requestR[142] ?
																6'd37 :
																(requestR[141] ?
																   6'd38 :
																   (requestR[140] ?
																      6'd39 :
																      (requestR[139] ?
																	 6'd40 :
																	 (requestR[138] ?
																	    6'd41 :
																	    (requestR[137] ?
																	       6'd42 :
																	       (requestR[136] ?
																		  6'd43 :
																		  (requestR[135] ?
																		     6'd44 :
																		     (requestR[134] ?
																			6'd45 :
																			(requestR[133] ?
																			   6'd46 :
																			   (requestR[132] ?
																			      6'd47 :
																			      (requestR[131] ?
																				 6'd48 :
																				 (requestR[130] ?
																				    6'd49 :
																				    (requestR[129] ?
																				       6'd50 :
																				       (requestR[128] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1761 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1760 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1762 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1760 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d2745 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1761 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1762 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2730[4] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2742[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d2770 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1761 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1762 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2730[3] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2742[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d2797 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1761 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1762 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d2730[1] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2742[1]) ;
  assign _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d3015 =
	     12'd3074 -
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3012 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188 =
	     (12'd32 -
	      { 6'd0,
		IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1185 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1189 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1191 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1193 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d253 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1381 =
	     (12'd32 -
	      { 6'd0,
		IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1378 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1382 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1381 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1383 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1381 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1384 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1381 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590 =
	     (9'd32 -
	      { 3'd0,
		IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d587 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590 ^
	      9'h100) <
	     9'd130 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2874 =
	     12'd3970 -
	     { 7'd0,
	       sV1_sfd__h816[22] ?
		 5'd0 :
		 (sV1_sfd__h816[21] ?
		    5'd1 :
		    (sV1_sfd__h816[20] ?
		       5'd2 :
		       (sV1_sfd__h816[19] ?
			  5'd3 :
			  (sV1_sfd__h816[18] ?
			     5'd4 :
			     (sV1_sfd__h816[17] ?
				5'd5 :
				(sV1_sfd__h816[16] ?
				   5'd6 :
				   (sV1_sfd__h816[15] ?
				      5'd7 :
				      (sV1_sfd__h816[14] ?
					 5'd8 :
					 (sV1_sfd__h816[13] ?
					    5'd9 :
					    (sV1_sfd__h816[12] ?
					       5'd10 :
					       (sV1_sfd__h816[11] ?
						  5'd11 :
						  (sV1_sfd__h816[10] ?
						     5'd12 :
						     (sV1_sfd__h816[9] ?
							5'd13 :
							(sV1_sfd__h816[8] ?
							   5'd14 :
							   (sV1_sfd__h816[7] ?
							      5'd15 :
							      (sV1_sfd__h816[6] ?
								 5'd16 :
								 (sV1_sfd__h816[5] ?
								    5'd17 :
								    (sV1_sfd__h816[4] ?
								       5'd18 :
								       (sV1_sfd__h816[3] ?
									  5'd19 :
									  (sV1_sfd__h816[2] ?
									     5'd20 :
									     (sV1_sfd__h816[1] ?
										5'd21 :
										(sV1_sfd__h816[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2875 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2874 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2876 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2874 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_requestR_BITS_190_TO_180_516_M_ETC___d2220 =
	     12'd3970 -
	     SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_529___d2217 ;
  assign _theResult_____2__h14755 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d802 ?
	       out1___1__h15244 :
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d785[56:24] ;
  assign _theResult_____2__h47075 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1555 ?
	       out1___1__h47564 :
	       IF_requestR_BIT_191_144_THEN_NEG_0b0_CONCAT_NO_ETC___d1538[85:53] ;
  assign _theResult____h119706 =
	     ((_3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d3015 ^
	       12'h800) <
	      12'd2105) ?
	       result__h120319 :
	       ((value__h14819 == 25'd0) ? b__h14817 : 57'd1) ;
  assign _theResult____h61037 =
	     (value__h47139 == 54'd0) ? sfd__h53437 : 57'd1 ;
  assign _theResult____h78647 =
	     ((_3970_MINUS_SEXT_requestR_BITS_190_TO_180_516_M_ETC___d2220 ^
	       12'h800) <
	      12'd2105) ?
	       result__h79260 :
	       _theResult____h61037 ;
  assign _theResult___exp__h119093 =
	     sfd__h118459[53] ?
	       ((_theResult___fst_exp__h118441 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h137503) :
	       ((_theResult___fst_exp__h118441 == 11'd0 &&
		 sfd__h118459[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h118441) ;
  assign _theResult___exp__h128668 =
	     sfd__h128034[53] ?
	       ((_theResult___fst_exp__h127942 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h137527) :
	       ((_theResult___fst_exp__h127942 == 11'd0 &&
		 sfd__h128034[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h127942) ;
  assign _theResult___exp__h13607 =
	     (sfd__h13214[24] || sfd__h13214[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h137408 =
	     sfd__h136750[53] ?
	       ((_theResult___fst_exp__h136731 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h137546) :
	       ((_theResult___fst_exp__h136731 == 11'd0 &&
		 sfd__h136750[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h136731) ;
  assign _theResult___exp__h14117 =
	     sfd__h13711[24] ?
	       ((x__h13696[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h14211) :
	       ((x__h13696[7:0] == 8'd0 && sfd__h13711[24:23] == 2'b01) ?
		  8'd1 :
		  x__h13696[7:0]) ;
  assign _theResult___exp__h36146 =
	     (sfd__h35550[53] || sfd__h35550[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h36860 =
	     sfd__h36251[53] ?
	       ((x__h36236[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h36959) :
	       ((x__h36236[10:0] == 11'd0 && sfd__h36251[53:52] == 2'b01) ?
		  11'd1 :
		  x__h36236[10:0]) ;
  assign _theResult___exp__h45728 =
	     (sfd__h45132[53] || sfd__h45132[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h46441 =
	     sfd__h45832[53] ?
	       ((x__h45817[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h46535) :
	       ((x__h45817[10:0] == 11'd0 && sfd__h45832[53:52] == 2'b01) ?
		  11'd1 :
		  x__h45817[10:0]) ;
  assign _theResult___exp__h69667 =
	     sfd__h69236[24] ?
	       ((_theResult___fst_exp__h69144 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h96122) :
	       ((_theResult___fst_exp__h69144 == 8'd0 &&
		 sfd__h69236[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h69144) ;
  assign _theResult___exp__h7547 =
	     (sfd__h7151[24] || sfd__h7151[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h78237 =
	     sfd__h77806[24] ?
	       ((_theResult___fst_exp__h77788 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h96141) :
	       ((_theResult___fst_exp__h77788 == 8'd0 &&
		 sfd__h77806[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h77788) ;
  assign _theResult___exp__h8058 =
	     sfd__h7652[24] ?
	       ((x__h7637[7:0] == 8'd254) ? 8'd255 : din_inc___2_exp__h8157) :
	       ((x__h7637[7:0] == 8'd0 && sfd__h7652[24:23] == 2'b01) ?
		  8'd1 :
		  x__h7637[7:0]) ;
  assign _theResult___exp__h87406 =
	     sfd__h86975[24] ?
	       ((_theResult___fst_exp__h86883 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h96165) :
	       ((_theResult___fst_exp__h86883 == 8'd0 &&
		 sfd__h86975[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h86883) ;
  assign _theResult___exp__h96030 =
	     sfd__h95575[24] ?
	       ((_theResult___fst_exp__h95556 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h96184) :
	       ((_theResult___fst_exp__h95556 == 8'd0 &&
		 sfd__h95575[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h95556) ;
  assign _theResult___fst_exp__h103392 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       11'd2047 :
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 ;
  assign _theResult___fst_exp__h118432 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2946 } ;
  assign _theResult___fst_exp__h118438 =
	     (sV1_exp__h815 == 8'd0 && !sV1_sfd__h816[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2919 ||
	      !_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d2948) ?
	       11'd0 :
	       _theResult___fst_exp__h118432 ;
  assign _theResult___fst_exp__h118441 =
	     (sV1_exp__h815 == 8'd0) ?
	       _theResult___fst_exp__h118438 :
	       11'd897 ;
  assign _theResult___fst_exp__h119152 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10480_0b0_theResult___fst_exp18441_0_ETC__q76 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q77 ;
  assign _theResult___fst_exp__h119155 =
	     (_theResult___fst_exp__h118441 == 11'd2047) ?
	       _theResult___fst_exp__h118441 :
	       _theResult___fst_exp__h119152 ;
  assign _theResult___fst_exp__h127942 =
	     _theResult____h119706[56] ?
	       11'd2 :
	       _theResult___fst_exp__h128016 ;
  assign _theResult___fst_exp__h128007 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d3261 } ;
  assign _theResult___fst_exp__h128013 =
	     (!_theResult____h119706[56] && !_theResult____h119706[55] &&
	      !_theResult____h119706[54] &&
	      !_theResult____h119706[53] &&
	      !_theResult____h119706[52] &&
	      !_theResult____h119706[51] &&
	      !_theResult____h119706[50] &&
	      !_theResult____h119706[49] &&
	      !_theResult____h119706[48] &&
	      !_theResult____h119706[47] &&
	      !_theResult____h119706[46] &&
	      !_theResult____h119706[45] &&
	      !_theResult____h119706[44] &&
	      !_theResult____h119706[43] &&
	      !_theResult____h119706[42] &&
	      !_theResult____h119706[41] &&
	      !_theResult____h119706[40] &&
	      !_theResult____h119706[39] &&
	      !_theResult____h119706[38] &&
	      !_theResult____h119706[37] &&
	      !_theResult____h119706[36] &&
	      !_theResult____h119706[35] &&
	      !_theResult____h119706[34] &&
	      !_theResult____h119706[33] &&
	      !_theResult____h119706[32] &&
	      !_theResult____h119706[31] &&
	      !_theResult____h119706[30] &&
	      !_theResult____h119706[29] &&
	      !_theResult____h119706[28] &&
	      !_theResult____h119706[27] &&
	      !_theResult____h119706[26] &&
	      !_theResult____h119706[25] &&
	      !_theResult____h119706[24] &&
	      !_theResult____h119706[23] &&
	      !_theResult____h119706[22] &&
	      !_theResult____h119706[21] &&
	      !_theResult____h119706[20] &&
	      !_theResult____h119706[19] &&
	      !_theResult____h119706[18] &&
	      !_theResult____h119706[17] &&
	      !_theResult____h119706[16] &&
	      !_theResult____h119706[15] &&
	      !_theResult____h119706[14] &&
	      !_theResult____h119706[13] &&
	      !_theResult____h119706[12] &&
	      !_theResult____h119706[11] &&
	      !_theResult____h119706[10] &&
	      !_theResult____h119706[9] &&
	      !_theResult____h119706[8] &&
	      !_theResult____h119706[7] &&
	      !_theResult____h119706[6] &&
	      !_theResult____h119706[5] &&
	      !_theResult____h119706[4] &&
	      !_theResult____h119706[3] &&
	      !_theResult____h119706[2] &&
	      !_theResult____h119706[1] &&
	      !_theResult____h119706[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d3263) ?
	       11'd0 :
	       _theResult___fst_exp__h128007 ;
  assign _theResult___fst_exp__h128016 =
	     (!_theResult____h119706[56] && _theResult____h119706[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h128013 ;
  assign _theResult___fst_exp__h128727 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19716_0b0_theResult___fst_exp27942_0_ETC__q81 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q82 ;
  assign _theResult___fst_exp__h128730 =
	     (_theResult___fst_exp__h127942 == 11'd2047) ?
	       _theResult___fst_exp__h127942 :
	       _theResult___fst_exp__h128727 ;
  assign _theResult___fst_exp__h13664 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3197_0b0_0_0b1_0_0b10_out_exp3610_0b_ETC__q21 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d622 ;
  assign _theResult___fst_exp__h136683 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q78[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q78[10:0] ;
  assign _theResult___fst_exp__h136722 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q78[10:0] -
	     { 5'd0,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2946 } ;
  assign _theResult___fst_exp__h136728 =
	     (sV1_exp__h815 == 8'd0 && !sV1_sfd__h816[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2919 ||
	      !_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d3331) ?
	       11'd0 :
	       _theResult___fst_exp__h136722 ;
  assign _theResult___fst_exp__h136731 =
	     (sV1_exp__h815 == 8'd0) ?
	       _theResult___fst_exp__h136728 :
	       _theResult___fst_exp__h136683 ;
  assign _theResult___fst_exp__h137467 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard28741_0b0_theResult___fst_exp36731_0_ETC__q86 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 ;
  assign _theResult___fst_exp__h137470 =
	     (_theResult___fst_exp__h136731 == 11'd2047) ?
	       _theResult___fst_exp__h136731 :
	       _theResult___fst_exp__h137467 ;
  assign _theResult___fst_exp__h137479 =
	     (sV1_exp__h815 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2875 ?
		  _theResult___snd_fst_exp__h119158 :
		  _theResult___fst_exp__h103392) :
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3013 ?
		  _theResult___snd_fst_exp__h137473 :
		  _theResult___fst_exp__h103392) ;
  assign _theResult___fst_exp__h137482 =
	     (sV1_exp__h815 == 8'd0 && sV1_sfd__h816 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h137479 ;
  assign _theResult___fst_exp__h14174 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3681_0b0_x3696_BITS_7_TO_0_0b1_x3696_ETC__q19 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d661 ;
  assign _theResult___fst_exp__h14177 =
	     (x__h13696[7:0] == 8'd255) ?
	       x__h13696[7:0] :
	       _theResult___fst_exp__h14174 ;
  assign _theResult___fst_exp__h36204 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5533_0b0_0_0b1_0_0b10_out_exp6149_0b_ETC__q35 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1255 ;
  assign _theResult___fst_exp__h36918 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard6221_0b0_x6236_BITS_10_TO_0_0b1_x623_ETC__q29 :
	       CASE_requestR_BITS_194_TO_192_0x1_x6236_BITS_1_ETC__q30 ;
  assign _theResult___fst_exp__h36921 =
	     (x__h36236[10:0] == 11'd2047) ?
	       x__h36236[10:0] :
	       _theResult___fst_exp__h36918 ;
  assign _theResult___fst_exp__h45785 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5115_0b0_0_0b1_0_0b10_out_exp5731_0b_ETC__q38 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1414 ;
  assign _theResult___fst_exp__h46498 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5802_0b0_x5817_BITS_10_TO_0_0b1_x581_ETC__q39 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1452 ;
  assign _theResult___fst_exp__h46501 =
	     (x__h45817[10:0] == 11'd2047) ?
	       x__h45817[10:0] :
	       _theResult___fst_exp__h46498 ;
  assign _theResult___fst_exp__h61019 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       8'd255 :
	       CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 ;
  assign _theResult___fst_exp__h69144 =
	     _theResult____h61037[56] ? 8'd2 : _theResult___fst_exp__h69218 ;
  assign _theResult___fst_exp__h69209 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1994 } ;
  assign _theResult___fst_exp__h69215 =
	     (!_theResult____h61037[56] && !_theResult____h61037[55] &&
	      !_theResult____h61037[54] &&
	      !_theResult____h61037[53] &&
	      !_theResult____h61037[52] &&
	      !_theResult____h61037[51] &&
	      !_theResult____h61037[50] &&
	      !_theResult____h61037[49] &&
	      !_theResult____h61037[48] &&
	      !_theResult____h61037[47] &&
	      !_theResult____h61037[46] &&
	      !_theResult____h61037[45] &&
	      !_theResult____h61037[44] &&
	      !_theResult____h61037[43] &&
	      !_theResult____h61037[42] &&
	      !_theResult____h61037[41] &&
	      !_theResult____h61037[40] &&
	      !_theResult____h61037[39] &&
	      !_theResult____h61037[38] &&
	      !_theResult____h61037[37] &&
	      !_theResult____h61037[36] &&
	      !_theResult____h61037[35] &&
	      !_theResult____h61037[34] &&
	      !_theResult____h61037[33] &&
	      !_theResult____h61037[32] &&
	      !_theResult____h61037[31] &&
	      !_theResult____h61037[30] &&
	      !_theResult____h61037[29] &&
	      !_theResult____h61037[28] &&
	      !_theResult____h61037[27] &&
	      !_theResult____h61037[26] &&
	      !_theResult____h61037[25] &&
	      !_theResult____h61037[24] &&
	      !_theResult____h61037[23] &&
	      !_theResult____h61037[22] &&
	      !_theResult____h61037[21] &&
	      !_theResult____h61037[20] &&
	      !_theResult____h61037[19] &&
	      !_theResult____h61037[18] &&
	      !_theResult____h61037[17] &&
	      !_theResult____h61037[16] &&
	      !_theResult____h61037[15] &&
	      !_theResult____h61037[14] &&
	      !_theResult____h61037[13] &&
	      !_theResult____h61037[12] &&
	      !_theResult____h61037[11] &&
	      !_theResult____h61037[10] &&
	      !_theResult____h61037[9] &&
	      !_theResult____h61037[8] &&
	      !_theResult____h61037[7] &&
	      !_theResult____h61037[6] &&
	      !_theResult____h61037[5] &&
	      !_theResult____h61037[4] &&
	      !_theResult____h61037[3] &&
	      !_theResult____h61037[2] &&
	      !_theResult____h61037[1] &&
	      !_theResult____h61037[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d1996) ?
	       8'd0 :
	       _theResult___fst_exp__h69209 ;
  assign _theResult___fst_exp__h69218 =
	     (!_theResult____h61037[56] && _theResult____h61037[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h69215 ;
  assign _theResult___fst_exp__h69726 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard1047_0b0_theResult___fst_exp9144_0b1_ETC__q46 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q47 ;
  assign _theResult___fst_exp__h69729 =
	     (_theResult___fst_exp__h69144 == 8'd255) ?
	       _theResult___fst_exp__h69144 :
	       _theResult___fst_exp__h69726 ;
  assign _theResult___fst_exp__h7605 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard134_0b0_0_0b1_0_0b10_out_exp550_0b11_ETC__q16 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d333 ;
  assign _theResult___fst_exp__h77779 =
	     8'd129 -
	     { 2'd0,
	       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2151 } ;
  assign _theResult___fst_exp__h77785 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_687_057_AND_NOT_requestR__ETC___d2096 ||
	      !_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2153) ?
	       8'd0 :
	       _theResult___fst_exp__h77779 ;
  assign _theResult___fst_exp__h77788 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h77785 :
	       8'd129 ;
  assign _theResult___fst_exp__h78296 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9740_0b0_theResult___fst_exp7788_0b1_ETC__q50 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q51 ;
  assign _theResult___fst_exp__h78299 =
	     (_theResult___fst_exp__h77788 == 8'd255) ?
	       _theResult___fst_exp__h77788 :
	       _theResult___fst_exp__h78296 ;
  assign _theResult___fst_exp__h8116 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard622_0b0_x637_BITS_7_TO_0_0b1_x637_BI_ETC__q8 :
	       CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9 ;
  assign _theResult___fst_exp__h8119 =
	     (x__h7637[7:0] == 8'd255) ?
	       x__h7637[7:0] :
	       _theResult___fst_exp__h8116 ;
  assign _theResult___fst_exp__h86883 =
	     _theResult____h78647[56] ? 8'd2 : _theResult___fst_exp__h86957 ;
  assign _theResult___fst_exp__h86948 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2464 } ;
  assign _theResult___fst_exp__h86954 =
	     (!_theResult____h78647[56] && !_theResult____h78647[55] &&
	      !_theResult____h78647[54] &&
	      !_theResult____h78647[53] &&
	      !_theResult____h78647[52] &&
	      !_theResult____h78647[51] &&
	      !_theResult____h78647[50] &&
	      !_theResult____h78647[49] &&
	      !_theResult____h78647[48] &&
	      !_theResult____h78647[47] &&
	      !_theResult____h78647[46] &&
	      !_theResult____h78647[45] &&
	      !_theResult____h78647[44] &&
	      !_theResult____h78647[43] &&
	      !_theResult____h78647[42] &&
	      !_theResult____h78647[41] &&
	      !_theResult____h78647[40] &&
	      !_theResult____h78647[39] &&
	      !_theResult____h78647[38] &&
	      !_theResult____h78647[37] &&
	      !_theResult____h78647[36] &&
	      !_theResult____h78647[35] &&
	      !_theResult____h78647[34] &&
	      !_theResult____h78647[33] &&
	      !_theResult____h78647[32] &&
	      !_theResult____h78647[31] &&
	      !_theResult____h78647[30] &&
	      !_theResult____h78647[29] &&
	      !_theResult____h78647[28] &&
	      !_theResult____h78647[27] &&
	      !_theResult____h78647[26] &&
	      !_theResult____h78647[25] &&
	      !_theResult____h78647[24] &&
	      !_theResult____h78647[23] &&
	      !_theResult____h78647[22] &&
	      !_theResult____h78647[21] &&
	      !_theResult____h78647[20] &&
	      !_theResult____h78647[19] &&
	      !_theResult____h78647[18] &&
	      !_theResult____h78647[17] &&
	      !_theResult____h78647[16] &&
	      !_theResult____h78647[15] &&
	      !_theResult____h78647[14] &&
	      !_theResult____h78647[13] &&
	      !_theResult____h78647[12] &&
	      !_theResult____h78647[11] &&
	      !_theResult____h78647[10] &&
	      !_theResult____h78647[9] &&
	      !_theResult____h78647[8] &&
	      !_theResult____h78647[7] &&
	      !_theResult____h78647[6] &&
	      !_theResult____h78647[5] &&
	      !_theResult____h78647[4] &&
	      !_theResult____h78647[3] &&
	      !_theResult____h78647[2] &&
	      !_theResult____h78647[1] &&
	      !_theResult____h78647[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d2466) ?
	       8'd0 :
	       _theResult___fst_exp__h86948 ;
  assign _theResult___fst_exp__h86957 =
	     (!_theResult____h78647[56] && _theResult____h78647[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h86954 ;
  assign _theResult___fst_exp__h87465 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8657_0b0_theResult___fst_exp6883_0b1_ETC__q55 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q56 ;
  assign _theResult___fst_exp__h87468 =
	     (_theResult___fst_exp__h86883 == 8'd255) ?
	       _theResult___fst_exp__h86883 :
	       _theResult___fst_exp__h87465 ;
  assign _theResult___fst_exp__h95508 =
	     (SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC__q52[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC__q52[7:0] ;
  assign _theResult___fst_exp__h95547 =
	     SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC__q52[7:0] -
	     { 2'd0,
	       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2151 } ;
  assign _theResult___fst_exp__h95553 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_687_057_AND_NOT_requestR__ETC___d2096 ||
	      !_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_0__ETC___d2534) ?
	       8'd0 :
	       _theResult___fst_exp__h95547 ;
  assign _theResult___fst_exp__h95556 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h95553 :
	       _theResult___fst_exp__h95508 ;
  assign _theResult___fst_exp__h96089 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard7479_0b0_theResult___fst_exp5556_0b1_ETC__q60 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 ;
  assign _theResult___fst_exp__h96092 =
	     (_theResult___fst_exp__h95556 == 8'd255) ?
	       _theResult___fst_exp__h95556 :
	       _theResult___fst_exp__h96089 ;
  assign _theResult___fst_exp__h96101 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1761 ?
		  _theResult___snd_fst_exp__h78302 :
		  _theResult___fst_exp__h61019) :
	       (SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2218 ?
		  _theResult___snd_fst_exp__h96095 :
		  _theResult___fst_exp__h61019) ;
  assign _theResult___fst_exp__h96104 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h96101 ;
  assign _theResult___fst_sfd__h103393 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       52'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 ;
  assign _theResult___fst_sfd__h119153 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10480_0b0_theResult___snd18392_BITS__ETC__q88 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 ;
  assign _theResult___fst_sfd__h119156 =
	     (_theResult___fst_exp__h118441 == 11'd2047) ?
	       _theResult___snd__h118392[56:5] :
	       _theResult___fst_sfd__h119153 ;
  assign _theResult___fst_sfd__h128728 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19716_0b0_sfdin27936_BITS_56_TO_5_0b_ETC__q90 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin27936_B_ETC__q91 ;
  assign _theResult___fst_sfd__h128731 =
	     (_theResult___fst_exp__h127942 == 11'd2047) ?
	       sfdin__h127936[56:5] :
	       _theResult___fst_sfd__h128728 ;
  assign _theResult___fst_sfd__h13665 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3197_0b0_sfd___33187_BITS_31_TO_9_0b_ETC__q22 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d681 ;
  assign _theResult___fst_sfd__h137468 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard28741_0b0_theResult___snd36677_BITS__ETC__q92 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 ;
  assign _theResult___fst_sfd__h137471 =
	     (_theResult___fst_exp__h136731 == 11'd2047) ?
	       _theResult___snd__h136677[56:5] :
	       _theResult___fst_sfd__h137468 ;
  assign _theResult___fst_sfd__h137480 =
	     (sV1_exp__h815 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2875 ?
		  _theResult___snd_fst_sfd__h119159 :
		  _theResult___fst_sfd__h103393) :
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3013 ?
		  _theResult___snd_fst_sfd__h137474 :
		  _theResult___fst_sfd__h103393) ;
  assign _theResult___fst_sfd__h137486 =
	     ((sV1_exp__h815 == 8'd255 || sV1_exp__h815 == 8'd0) &&
	      sV1_sfd__h816 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h137480 ;
  assign _theResult___fst_sfd__h14175 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3681_0b0_sfd___33187_BITS_30_TO_8_0b_ETC__q20 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d693 ;
  assign _theResult___fst_sfd__h14178 =
	     (x__h13696[7:0] == 8'd255) ?
	       sfd___3__h13187[30:8] :
	       _theResult___fst_sfd__h14175 ;
  assign _theResult___fst_sfd__h36205 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5533_0b0_sfd___35523_BITS_54_TO_3_0b_ETC__q33 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q34 ;
  assign _theResult___fst_sfd__h36919 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard6221_0b0_sfd___35523_BITS_53_TO_2_0b_ETC__q31 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q32 ;
  assign _theResult___fst_sfd__h36922 =
	     (x__h36236[10:0] == 11'd2047) ?
	       sfd___3__h35523[53:2] :
	       _theResult___fst_sfd__h36919 ;
  assign _theResult___fst_sfd__h45786 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5115_0b0_sfd___35105_BITS_54_TO_3_0b_ETC__q41 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1471 ;
  assign _theResult___fst_sfd__h46499 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5802_0b0_sfd___35105_BITS_53_TO_2_0b_ETC__q40 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1483 ;
  assign _theResult___fst_sfd__h46502 =
	     (x__h45817[10:0] == 11'd2047) ?
	       sfd___3__h45105[53:2] :
	       _theResult___fst_sfd__h46499 ;
  assign _theResult___fst_sfd__h49733 = { 1'd1, requestR[178:128] } ;
  assign _theResult___fst_sfd__h61020 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       23'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 ;
  assign _theResult___fst_sfd__h69727 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard1047_0b0_sfdin9138_BITS_56_TO_34_0b1_ETC__q62 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin9138_BI_ETC__q63 ;
  assign _theResult___fst_sfd__h69730 =
	     (_theResult___fst_exp__h69144 == 8'd255) ?
	       sfdin__h69138[56:34] :
	       _theResult___fst_sfd__h69727 ;
  assign _theResult___fst_sfd__h7606 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard134_0b0_sfd___3124_BITS_31_TO_9_0b1__ETC__q12 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13 ;
  assign _theResult___fst_sfd__h78297 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9740_0b0_theResult___snd7739_BITS_56_ETC__q64 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 ;
  assign _theResult___fst_sfd__h78300 =
	     (_theResult___fst_exp__h77788 == 8'd255) ?
	       _theResult___snd__h77739[56:34] :
	       _theResult___fst_sfd__h78297 ;
  assign _theResult___fst_sfd__h8117 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard622_0b0_sfd___3124_BITS_30_TO_8_0b1__ETC__q10 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11 ;
  assign _theResult___fst_sfd__h8120 =
	     (x__h7637[7:0] == 8'd255) ?
	       sfd___3__h7124[30:8] :
	       _theResult___fst_sfd__h8117 ;
  assign _theResult___fst_sfd__h87466 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8657_0b0_sfdin6877_BITS_56_TO_34_0b1_ETC__q66 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin6877_BI_ETC__q67 ;
  assign _theResult___fst_sfd__h87469 =
	     (_theResult___fst_exp__h86883 == 8'd255) ?
	       sfdin__h86877[56:34] :
	       _theResult___fst_sfd__h87466 ;
  assign _theResult___fst_sfd__h96090 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard7479_0b0_theResult___snd5502_BITS_56_ETC__q68 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 ;
  assign _theResult___fst_sfd__h96093 =
	     (_theResult___fst_exp__h95556 == 8'd255) ?
	       _theResult___snd__h95502[56:34] :
	       _theResult___fst_sfd__h96090 ;
  assign _theResult___fst_sfd__h96102 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1761 ?
		  _theResult___snd_fst_sfd__h78303 :
		  _theResult___fst_sfd__h61020) :
	       (SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2218 ?
		  _theResult___snd_fst_sfd__h96096 :
		  _theResult___fst_sfd__h61020) ;
  assign _theResult___fst_sfd__h96108 =
	     ((requestR[190:180] == 11'd2047 || requestR[190:180] == 11'd0) &&
	      requestR[179:128] == 52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h96102 ;
  assign _theResult___fst_sfd__h97941 = { 1'd1, sV1_sfd__h816[21:0] } ;
  assign _theResult___sfd__h119094 =
	     sfd__h118459[53] ?
	       ((_theResult___fst_exp__h118441 == 11'd2046) ?
		  52'd0 :
		  sfd__h118459[52:1]) :
	       sfd__h118459[51:0] ;
  assign _theResult___sfd__h128669 =
	     sfd__h128034[53] ?
	       ((_theResult___fst_exp__h127942 == 11'd2046) ?
		  52'd0 :
		  sfd__h128034[52:1]) :
	       sfd__h128034[51:0] ;
  assign _theResult___sfd__h13608 =
	     sfd__h13214[24] ? sfd__h13214[23:1] : sfd__h13214[22:0] ;
  assign _theResult___sfd__h137409 =
	     sfd__h136750[53] ?
	       ((_theResult___fst_exp__h136731 == 11'd2046) ?
		  52'd0 :
		  sfd__h136750[52:1]) :
	       sfd__h136750[51:0] ;
  assign _theResult___sfd__h14118 =
	     sfd__h13711[24] ?
	       ((x__h13696[7:0] == 8'd254) ? 23'd0 : sfd__h13711[23:1]) :
	       sfd__h13711[22:0] ;
  assign _theResult___sfd__h36147 =
	     sfd__h35550[53] ? sfd__h35550[52:1] : sfd__h35550[51:0] ;
  assign _theResult___sfd__h36861 =
	     sfd__h36251[53] ?
	       ((x__h36236[10:0] == 11'd2046) ? 52'd0 : sfd__h36251[52:1]) :
	       sfd__h36251[51:0] ;
  assign _theResult___sfd__h45729 =
	     sfd__h45132[53] ? sfd__h45132[52:1] : sfd__h45132[51:0] ;
  assign _theResult___sfd__h46442 =
	     sfd__h45832[53] ?
	       ((x__h45817[10:0] == 11'd2046) ? 52'd0 : sfd__h45832[52:1]) :
	       sfd__h45832[51:0] ;
  assign _theResult___sfd__h69668 =
	     sfd__h69236[24] ?
	       ((_theResult___fst_exp__h69144 == 8'd254) ?
		  23'd0 :
		  sfd__h69236[23:1]) :
	       sfd__h69236[22:0] ;
  assign _theResult___sfd__h7548 =
	     sfd__h7151[24] ? sfd__h7151[23:1] : sfd__h7151[22:0] ;
  assign _theResult___sfd__h78238 =
	     sfd__h77806[24] ?
	       ((_theResult___fst_exp__h77788 == 8'd254) ?
		  23'd0 :
		  sfd__h77806[23:1]) :
	       sfd__h77806[22:0] ;
  assign _theResult___sfd__h8059 =
	     sfd__h7652[24] ?
	       ((x__h7637[7:0] == 8'd254) ? 23'd0 : sfd__h7652[23:1]) :
	       sfd__h7652[22:0] ;
  assign _theResult___sfd__h87407 =
	     sfd__h86975[24] ?
	       ((_theResult___fst_exp__h86883 == 8'd254) ?
		  23'd0 :
		  sfd__h86975[23:1]) :
	       sfd__h86975[22:0] ;
  assign _theResult___sfd__h96031 =
	     sfd__h95575[24] ?
	       ((_theResult___fst_exp__h95556 == 8'd254) ?
		  23'd0 :
		  sfd__h95575[23:1]) :
	       sfd__h95575[22:0] ;
  assign _theResult___snd__h118392 =
	     (sV1_exp__h815 == 8'd0) ?
	       _theResult___snd__h118401 :
	       _theResult___snd__h118394 ;
  assign _theResult___snd__h118394 = { sV1_sfd__h816, 34'd0 } ;
  assign _theResult___snd__h118401 =
	     (sV1_exp__h815 == 8'd0 && !sV1_sfd__h816[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2919) ?
	       b__h14817 :
	       _theResult___snd__h118407 ;
  assign _theResult___snd__h118407 =
	     { IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q74[54:0],
	       2'd0 } ;
  assign _theResult___snd__h118430 =
	     b__h14817 <<
	     IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2946 ;
  assign _theResult___snd__h127953 = { _theResult____h119706[55:0], 1'd0 } ;
  assign _theResult___snd__h127964 =
	     (!_theResult____h119706[56] && _theResult____h119706[55]) ?
	       _theResult___snd__h127966 :
	       _theResult___snd__h127976 ;
  assign _theResult___snd__h127966 = { _theResult____h119706[54:0], 2'd0 } ;
  assign _theResult___snd__h127976 =
	     (!_theResult____h119706[56] && !_theResult____h119706[55] &&
	      !_theResult____h119706[54] &&
	      !_theResult____h119706[53] &&
	      !_theResult____h119706[52] &&
	      !_theResult____h119706[51] &&
	      !_theResult____h119706[50] &&
	      !_theResult____h119706[49] &&
	      !_theResult____h119706[48] &&
	      !_theResult____h119706[47] &&
	      !_theResult____h119706[46] &&
	      !_theResult____h119706[45] &&
	      !_theResult____h119706[44] &&
	      !_theResult____h119706[43] &&
	      !_theResult____h119706[42] &&
	      !_theResult____h119706[41] &&
	      !_theResult____h119706[40] &&
	      !_theResult____h119706[39] &&
	      !_theResult____h119706[38] &&
	      !_theResult____h119706[37] &&
	      !_theResult____h119706[36] &&
	      !_theResult____h119706[35] &&
	      !_theResult____h119706[34] &&
	      !_theResult____h119706[33] &&
	      !_theResult____h119706[32] &&
	      !_theResult____h119706[31] &&
	      !_theResult____h119706[30] &&
	      !_theResult____h119706[29] &&
	      !_theResult____h119706[28] &&
	      !_theResult____h119706[27] &&
	      !_theResult____h119706[26] &&
	      !_theResult____h119706[25] &&
	      !_theResult____h119706[24] &&
	      !_theResult____h119706[23] &&
	      !_theResult____h119706[22] &&
	      !_theResult____h119706[21] &&
	      !_theResult____h119706[20] &&
	      !_theResult____h119706[19] &&
	      !_theResult____h119706[18] &&
	      !_theResult____h119706[17] &&
	      !_theResult____h119706[16] &&
	      !_theResult____h119706[15] &&
	      !_theResult____h119706[14] &&
	      !_theResult____h119706[13] &&
	      !_theResult____h119706[12] &&
	      !_theResult____h119706[11] &&
	      !_theResult____h119706[10] &&
	      !_theResult____h119706[9] &&
	      !_theResult____h119706[8] &&
	      !_theResult____h119706[7] &&
	      !_theResult____h119706[6] &&
	      !_theResult____h119706[5] &&
	      !_theResult____h119706[4] &&
	      !_theResult____h119706[3] &&
	      !_theResult____h119706[2] &&
	      !_theResult____h119706[1] &&
	      !_theResult____h119706[0]) ?
	       _theResult____h119706 :
	       _theResult___snd__h127982 ;
  assign _theResult___snd__h127982 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q79[54:0],
	       2'd0 } ;
  assign _theResult___snd__h128005 =
	     _theResult____h119706 <<
	     IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d3261 ;
  assign _theResult___snd__h136677 =
	     (sV1_exp__h815 == 8'd0) ?
	       _theResult___snd__h136691 :
	       _theResult___snd__h118394 ;
  assign _theResult___snd__h136691 =
	     (sV1_exp__h815 == 8'd0 && !sV1_sfd__h816[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2919) ?
	       b__h14817 :
	       _theResult___snd__h136697 ;
  assign _theResult___snd__h136697 =
	     { IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q84[54:0],
	       2'd0 } ;
  assign _theResult___snd__h136715 =
	     b__h14817 <<
	     IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3330 ;
  assign _theResult___snd__h69155 = { _theResult____h61037[55:0], 1'd0 } ;
  assign _theResult___snd__h69166 =
	     (!_theResult____h61037[56] && _theResult____h61037[55]) ?
	       _theResult___snd__h69168 :
	       _theResult___snd__h69178 ;
  assign _theResult___snd__h69168 = { _theResult____h61037[54:0], 2'd0 } ;
  assign _theResult___snd__h69178 =
	     (!_theResult____h61037[56] && !_theResult____h61037[55] &&
	      !_theResult____h61037[54] &&
	      !_theResult____h61037[53] &&
	      !_theResult____h61037[52] &&
	      !_theResult____h61037[51] &&
	      !_theResult____h61037[50] &&
	      !_theResult____h61037[49] &&
	      !_theResult____h61037[48] &&
	      !_theResult____h61037[47] &&
	      !_theResult____h61037[46] &&
	      !_theResult____h61037[45] &&
	      !_theResult____h61037[44] &&
	      !_theResult____h61037[43] &&
	      !_theResult____h61037[42] &&
	      !_theResult____h61037[41] &&
	      !_theResult____h61037[40] &&
	      !_theResult____h61037[39] &&
	      !_theResult____h61037[38] &&
	      !_theResult____h61037[37] &&
	      !_theResult____h61037[36] &&
	      !_theResult____h61037[35] &&
	      !_theResult____h61037[34] &&
	      !_theResult____h61037[33] &&
	      !_theResult____h61037[32] &&
	      !_theResult____h61037[31] &&
	      !_theResult____h61037[30] &&
	      !_theResult____h61037[29] &&
	      !_theResult____h61037[28] &&
	      !_theResult____h61037[27] &&
	      !_theResult____h61037[26] &&
	      !_theResult____h61037[25] &&
	      !_theResult____h61037[24] &&
	      !_theResult____h61037[23] &&
	      !_theResult____h61037[22] &&
	      !_theResult____h61037[21] &&
	      !_theResult____h61037[20] &&
	      !_theResult____h61037[19] &&
	      !_theResult____h61037[18] &&
	      !_theResult____h61037[17] &&
	      !_theResult____h61037[16] &&
	      !_theResult____h61037[15] &&
	      !_theResult____h61037[14] &&
	      !_theResult____h61037[13] &&
	      !_theResult____h61037[12] &&
	      !_theResult____h61037[11] &&
	      !_theResult____h61037[10] &&
	      !_theResult____h61037[9] &&
	      !_theResult____h61037[8] &&
	      !_theResult____h61037[7] &&
	      !_theResult____h61037[6] &&
	      !_theResult____h61037[5] &&
	      !_theResult____h61037[4] &&
	      !_theResult____h61037[3] &&
	      !_theResult____h61037[2] &&
	      !_theResult____h61037[1] &&
	      !_theResult____h61037[0]) ?
	       _theResult____h61037 :
	       _theResult___snd__h69184 ;
  assign _theResult___snd__h69184 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q44[54:0],
	       2'd0 } ;
  assign _theResult___snd__h69207 =
	     _theResult____h61037 <<
	     IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d1994 ;
  assign _theResult___snd__h77739 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h77748 :
	       _theResult___snd__h77741 ;
  assign _theResult___snd__h77741 = { requestR[179:128], 5'd0 } ;
  assign _theResult___snd__h77748 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_687_057_AND_NOT_requestR__ETC___d2096) ?
	       sfd__h53437 :
	       _theResult___snd__h77754 ;
  assign _theResult___snd__h77754 =
	     { IF_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_ETC__q48[54:0],
	       2'd0 } ;
  assign _theResult___snd__h77777 =
	     sfd__h53437 <<
	     IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2151 ;
  assign _theResult___snd__h86894 = { _theResult____h78647[55:0], 1'd0 } ;
  assign _theResult___snd__h86905 =
	     (!_theResult____h78647[56] && _theResult____h78647[55]) ?
	       _theResult___snd__h86907 :
	       _theResult___snd__h86917 ;
  assign _theResult___snd__h86907 = { _theResult____h78647[54:0], 2'd0 } ;
  assign _theResult___snd__h86917 =
	     (!_theResult____h78647[56] && !_theResult____h78647[55] &&
	      !_theResult____h78647[54] &&
	      !_theResult____h78647[53] &&
	      !_theResult____h78647[52] &&
	      !_theResult____h78647[51] &&
	      !_theResult____h78647[50] &&
	      !_theResult____h78647[49] &&
	      !_theResult____h78647[48] &&
	      !_theResult____h78647[47] &&
	      !_theResult____h78647[46] &&
	      !_theResult____h78647[45] &&
	      !_theResult____h78647[44] &&
	      !_theResult____h78647[43] &&
	      !_theResult____h78647[42] &&
	      !_theResult____h78647[41] &&
	      !_theResult____h78647[40] &&
	      !_theResult____h78647[39] &&
	      !_theResult____h78647[38] &&
	      !_theResult____h78647[37] &&
	      !_theResult____h78647[36] &&
	      !_theResult____h78647[35] &&
	      !_theResult____h78647[34] &&
	      !_theResult____h78647[33] &&
	      !_theResult____h78647[32] &&
	      !_theResult____h78647[31] &&
	      !_theResult____h78647[30] &&
	      !_theResult____h78647[29] &&
	      !_theResult____h78647[28] &&
	      !_theResult____h78647[27] &&
	      !_theResult____h78647[26] &&
	      !_theResult____h78647[25] &&
	      !_theResult____h78647[24] &&
	      !_theResult____h78647[23] &&
	      !_theResult____h78647[22] &&
	      !_theResult____h78647[21] &&
	      !_theResult____h78647[20] &&
	      !_theResult____h78647[19] &&
	      !_theResult____h78647[18] &&
	      !_theResult____h78647[17] &&
	      !_theResult____h78647[16] &&
	      !_theResult____h78647[15] &&
	      !_theResult____h78647[14] &&
	      !_theResult____h78647[13] &&
	      !_theResult____h78647[12] &&
	      !_theResult____h78647[11] &&
	      !_theResult____h78647[10] &&
	      !_theResult____h78647[9] &&
	      !_theResult____h78647[8] &&
	      !_theResult____h78647[7] &&
	      !_theResult____h78647[6] &&
	      !_theResult____h78647[5] &&
	      !_theResult____h78647[4] &&
	      !_theResult____h78647[3] &&
	      !_theResult____h78647[2] &&
	      !_theResult____h78647[1] &&
	      !_theResult____h78647[0]) ?
	       _theResult____h78647 :
	       _theResult___snd__h86923 ;
  assign _theResult___snd__h86923 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q53[54:0],
	       2'd0 } ;
  assign _theResult___snd__h86946 =
	     _theResult____h78647 <<
	     IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d2464 ;
  assign _theResult___snd__h95502 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h95516 :
	       _theResult___snd__h77741 ;
  assign _theResult___snd__h95516 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_687_057_AND_NOT_requestR__ETC___d2096) ?
	       sfd__h53437 :
	       _theResult___snd__h95522 ;
  assign _theResult___snd__h95522 =
	     { IF_0_CONCAT_IF_requestR_BITS_190_TO_180_516_EQ_ETC__q58[54:0],
	       2'd0 } ;
  assign _theResult___snd__h95540 =
	     sfd__h53437 <<
	     IF_SEXT_requestR_BITS_190_TO_180_516_MINUS_102_ETC___d2533 ;
  assign _theResult___snd_fst_exp__h119158 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2876 ?
	       11'd0 :
	       _theResult___fst_exp__h119155 ;
  assign _theResult___snd_fst_exp__h137473 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3014 ?
	       _theResult___fst_exp__h128730 :
	       _theResult___fst_exp__h137470 ;
  assign _theResult___snd_fst_exp__h14180 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593 ?
	       _theResult___fst_exp__h13664 :
	       _theResult___fst_exp__h14177 ;
  assign _theResult___snd_fst_exp__h14183 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14180 ;
  assign _theResult___snd_fst_exp__h14186 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 ?
	       _theResult___snd_fst_exp__h14183 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h36924 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1193 ?
	       _theResult___fst_exp__h36204 :
	       _theResult___fst_exp__h36921 ;
  assign _theResult___snd_fst_exp__h36927 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1191 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h36924 ;
  assign _theResult___snd_fst_exp__h36930 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1189 ?
	       _theResult___snd_fst_exp__h36927 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h46504 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1384 ?
	       _theResult___fst_exp__h45785 :
	       _theResult___fst_exp__h46501 ;
  assign _theResult___snd_fst_exp__h46507 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1383 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h46504 ;
  assign _theResult___snd_fst_exp__h46510 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1382 ?
	       _theResult___snd_fst_exp__h46507 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h78302 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1762 ?
	       _theResult___fst_exp__h69729 :
	       _theResult___fst_exp__h78299 ;
  assign _theResult___snd_fst_exp__h8122 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 ?
	       _theResult___fst_exp__h7605 :
	       _theResult___fst_exp__h8119 ;
  assign _theResult___snd_fst_exp__h8125 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d259 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8122 ;
  assign _theResult___snd_fst_exp__h8128 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d257 ?
	       _theResult___snd_fst_exp__h8125 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h96095 =
	     SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2219 ?
	       _theResult___fst_exp__h87468 :
	       _theResult___fst_exp__h96092 ;
  assign _theResult___snd_fst_sfd__h119159 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d2876 ?
	       52'd0 :
	       _theResult___fst_sfd__h119156 ;
  assign _theResult___snd_fst_sfd__h137474 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3014 ?
	       _theResult___fst_sfd__h128731 :
	       _theResult___fst_sfd__h137471 ;
  assign _theResult___snd_fst_sfd__h14181 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d593 ?
	       _theResult___fst_sfd__h13665 :
	       _theResult___fst_sfd__h14178 ;
  assign _theResult___snd_fst_sfd__h36925 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1193 ?
	       _theResult___fst_sfd__h36205 :
	       _theResult___fst_sfd__h36922 ;
  assign _theResult___snd_fst_sfd__h46505 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1384 ?
	       _theResult___fst_sfd__h45786 :
	       _theResult___fst_sfd__h46502 ;
  assign _theResult___snd_fst_sfd__h53391 =
	     (value__h49276[51:29] == 23'd0) ?
	       23'd2097152 :
	       value__h49276[51:29] ;
  assign _theResult___snd_fst_sfd__h78303 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_687_TH_ETC___d1762 ?
	       _theResult___fst_sfd__h69730 :
	       _theResult___fst_sfd__h78300 ;
  assign _theResult___snd_fst_sfd__h8123 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d262 ?
	       _theResult___fst_sfd__h7606 :
	       _theResult___fst_sfd__h8120 ;
  assign _theResult___snd_fst_sfd__h96096 =
	     SEXT_requestR_BITS_190_TO_180_516_MINUS_1023_5_ETC___d2219 ?
	       _theResult___fst_sfd__h87469 :
	       _theResult___fst_sfd__h96093 ;
  assign _theResult___snd_fst_sfd__h99569 =
	     (value__h97686 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h97683 ;
  assign ab__h155880 = dw_result$wget ;
  assign b__h14817 = { value__h14819, 32'd0 } ;
  assign b__h47137 = { value__h47139, 32'd0 } ;
  assign din_inc___2_exp__h137503 = _theResult___fst_exp__h118441 + 11'd1 ;
  assign din_inc___2_exp__h137527 = _theResult___fst_exp__h127942 + 11'd1 ;
  assign din_inc___2_exp__h137546 = _theResult___fst_exp__h136731 + 11'd1 ;
  assign din_inc___2_exp__h14211 = x__h13696[7:0] + 8'd1 ;
  assign din_inc___2_exp__h36959 = x__h36236[10:0] + 11'd1 ;
  assign din_inc___2_exp__h46535 = x__h45817[10:0] + 11'd1 ;
  assign din_inc___2_exp__h8157 = x__h7637[7:0] + 8'd1 ;
  assign din_inc___2_exp__h96122 = _theResult___fst_exp__h69144 + 8'd1 ;
  assign din_inc___2_exp__h96141 = _theResult___fst_exp__h77788 + 8'd1 ;
  assign din_inc___2_exp__h96165 = _theResult___fst_exp__h86883 + 8'd1 ;
  assign din_inc___2_exp__h96184 = _theResult___fst_exp__h95556 + 8'd1 ;
  assign guard__h110480 =
	     { IF_theResult___snd18392_BIT_4_THEN_2_ELSE_0__q75[1],
	       { _theResult___snd__h118392[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h119716 =
	     { IF_sfdin27936_BIT_4_THEN_2_ELSE_0__q80[1],
	       { sfdin__h127936[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h120314 = x__h120414 != 57'd0 ;
  assign guard__h128741 =
	     { IF_theResult___snd36677_BIT_4_THEN_2_ELSE_0__q85[1],
	       { _theResult___snd__h136677[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h13197 =
	     { IF_sfd___33187_BIT_8_THEN_2_ELSE_0__q17[1],
	       { sfd___3__h13187[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h13681 =
	     { IF_sfd___33187_BIT_7_THEN_2_ELSE_0__q18[1],
	       { sfd___3__h13187[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h14753 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d785[23],
	       { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d785[22:0],
		 33'd0 } !=
	       56'd0 } ;
  assign guard__h15304 =
	     { IF_x5490_BIT_24_THEN_2_ELSE_0__q23[1],
	       { x__h15490[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h16364 =
	     { IF_x6582_BIT_24_THEN_2_ELSE_0__q24[1],
	       { x__h16582[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h35533 =
	     { IF_sfd___35523_BIT_2_THEN_2_ELSE_0__q25[1],
	       { sfd___3__h35523[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h36221 =
	     { IF_sfd___35523_BIT_1_THEN_2_ELSE_0__q26[1],
	       { sfd___3__h35523[0], 53'd0 } != 54'd0 } ;
  assign guard__h45115 =
	     { IF_sfd___35105_BIT_2_THEN_2_ELSE_0__q36[1],
	       { sfd___3__h45105[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h45802 =
	     { IF_sfd___35105_BIT_1_THEN_2_ELSE_0__q37[1],
	       { sfd___3__h45105[0], 53'd0 } != 54'd0 } ;
  assign guard__h47073 =
	     { IF_requestR_BIT_191_144_THEN_NEG_0b0_CONCAT_NO_ETC___d1538[52],
	       { IF_requestR_BIT_191_144_THEN_NEG_0b0_CONCAT_NO_ETC___d1538[51:0],
		 33'd0 } !=
	       85'd0 } ;
  assign guard__h47624 =
	     { IF_x7810_BIT_53_THEN_2_ELSE_0__q42[1],
	       { x__h47810[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h48667 =
	     { IF_x8885_BIT_53_THEN_2_ELSE_0__q43[1],
	       { x__h48885[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h61047 =
	     { IF_sfdin9138_BIT_33_THEN_2_ELSE_0__q45[1],
	       { sfdin__h69138[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h69740 =
	     { IF_theResult___snd7739_BIT_33_THEN_2_ELSE_0__q49[1],
	       { _theResult___snd__h77739[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h7134 =
	     { IF_sfd___3124_BIT_8_THEN_2_ELSE_0__q6[1],
	       { sfd___3__h7124[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h7622 =
	     { IF_sfd___3124_BIT_7_THEN_2_ELSE_0__q7[1],
	       { sfd___3__h7124[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h78657 =
	     { IF_sfdin6877_BIT_33_THEN_2_ELSE_0__q54[1],
	       { sfdin__h86877[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h79255 = x__h79355 != 57'd0 ;
  assign guard__h87479 =
	     { IF_theResult___snd5502_BIT_33_THEN_2_ELSE_0__q59[1],
	       { _theResult___snd__h95502[32:0], 23'd0 } != 56'd0 } ;
  assign out1___1__h15244 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d785[56:24] +
	     33'd1 ;
  assign out1___1__h47564 =
	     IF_requestR_BIT_191_144_THEN_NEG_0b0_CONCAT_NO_ETC___d1538[85:53] +
	     33'd1 ;
  assign out___1_sfd__h97683 = { value__h97686, 29'd0 } ;
  assign out_exp__h119096 =
	     _theResult___snd__h118392[5] ?
	       _theResult___exp__h119093 :
	       _theResult___fst_exp__h118441 ;
  assign out_exp__h128671 =
	     sfdin__h127936[5] ?
	       _theResult___exp__h128668 :
	       _theResult___fst_exp__h127942 ;
  assign out_exp__h13610 =
	     sfd___3__h13187[9] ? _theResult___exp__h13607 : 8'd0 ;
  assign out_exp__h137411 =
	     _theResult___snd__h136677[5] ?
	       _theResult___exp__h137408 :
	       _theResult___fst_exp__h136731 ;
  assign out_exp__h14120 =
	     sfd___3__h13187[8] ? _theResult___exp__h14117 : x__h13696[7:0] ;
  assign out_exp__h36149 =
	     sfd___3__h35523[3] ? _theResult___exp__h36146 : 11'd0 ;
  assign out_exp__h36863 =
	     sfd___3__h35523[2] ? _theResult___exp__h36860 : x__h36236[10:0] ;
  assign out_exp__h45731 =
	     sfd___3__h45105[3] ? _theResult___exp__h45728 : 11'd0 ;
  assign out_exp__h46444 =
	     sfd___3__h45105[2] ? _theResult___exp__h46441 : x__h45817[10:0] ;
  assign out_exp__h69670 =
	     sfdin__h69138[34] ?
	       _theResult___exp__h69667 :
	       _theResult___fst_exp__h69144 ;
  assign out_exp__h7550 = sfd___3__h7124[9] ? _theResult___exp__h7547 : 8'd0 ;
  assign out_exp__h78240 =
	     _theResult___snd__h77739[34] ?
	       _theResult___exp__h78237 :
	       _theResult___fst_exp__h77788 ;
  assign out_exp__h8061 =
	     sfd___3__h7124[8] ? _theResult___exp__h8058 : x__h7637[7:0] ;
  assign out_exp__h87409 =
	     sfdin__h86877[34] ?
	       _theResult___exp__h87406 :
	       _theResult___fst_exp__h86883 ;
  assign out_exp__h96033 =
	     _theResult___snd__h95502[34] ?
	       _theResult___exp__h96030 :
	       _theResult___fst_exp__h95556 ;
  assign out_sfd__h119097 =
	     _theResult___snd__h118392[5] ?
	       _theResult___sfd__h119094 :
	       _theResult___snd__h118392[56:5] ;
  assign out_sfd__h128672 =
	     sfdin__h127936[5] ?
	       _theResult___sfd__h128669 :
	       sfdin__h127936[56:5] ;
  assign out_sfd__h13611 =
	     sfd___3__h13187[9] ?
	       _theResult___sfd__h13608 :
	       sfd___3__h13187[31:9] ;
  assign out_sfd__h137412 =
	     _theResult___snd__h136677[5] ?
	       _theResult___sfd__h137409 :
	       _theResult___snd__h136677[56:5] ;
  assign out_sfd__h14121 =
	     sfd___3__h13187[8] ?
	       _theResult___sfd__h14118 :
	       sfd___3__h13187[30:8] ;
  assign out_sfd__h36150 =
	     sfd___3__h35523[3] ?
	       _theResult___sfd__h36147 :
	       sfd___3__h35523[54:3] ;
  assign out_sfd__h36864 =
	     sfd___3__h35523[2] ?
	       _theResult___sfd__h36861 :
	       sfd___3__h35523[53:2] ;
  assign out_sfd__h45732 =
	     sfd___3__h45105[3] ?
	       _theResult___sfd__h45729 :
	       sfd___3__h45105[54:3] ;
  assign out_sfd__h46445 =
	     sfd___3__h45105[2] ?
	       _theResult___sfd__h46442 :
	       sfd___3__h45105[53:2] ;
  assign out_sfd__h69671 =
	     sfdin__h69138[34] ?
	       _theResult___sfd__h69668 :
	       sfdin__h69138[56:34] ;
  assign out_sfd__h7551 =
	     sfd___3__h7124[9] ?
	       _theResult___sfd__h7548 :
	       sfd___3__h7124[31:9] ;
  assign out_sfd__h78241 =
	     _theResult___snd__h77739[34] ?
	       _theResult___sfd__h78238 :
	       _theResult___snd__h77739[56:34] ;
  assign out_sfd__h8062 =
	     sfd___3__h7124[8] ?
	       _theResult___sfd__h8059 :
	       sfd___3__h7124[30:8] ;
  assign out_sfd__h87410 =
	     sfdin__h86877[34] ?
	       _theResult___sfd__h87407 :
	       sfdin__h86877[56:34] ;
  assign out_sfd__h96034 =
	     _theResult___snd__h95502[34] ?
	       _theResult___sfd__h96031 :
	       _theResult___snd__h95502[56:34] ;
  assign requestR_BITS_126_TO_116_584_EQ_0_598_AND_requ_ETC___d3605 =
	     requestR[126:116] == 11'd0 && requestR[115:64] == 52'd0 &&
	     requestR[127] &&
	     requestR[190:180] == 11'd0 &&
	     requestR[179:128] == 52'd0 &&
	     !requestR[191] ;
  assign requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       (requestR[127:96] == 32'hFFFFFFFF) ?
		 requestR[94:64] :
		 31'h7FC00000 } ;
  assign requestR_BITS_159_TO_128__q1 = requestR[159:128] ;
  assign requestR_BITS_179_TO_128_518_ULE_requestR_BITS_ETC___d3617 =
	     requestR[179:128] <= requestR[115:64] ;
  assign requestR_BITS_179_TO_128_518_ULT_requestR_BITS_ETC___d3622 =
	     requestR[179:128] < requestR[115:64] ;
  assign requestR_BITS_190_TO_180_516_EQ_0_527_AND_requ_ETC___d3601 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[191] &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 &&
	     !requestR[127] ;
  assign requestR_BITS_190_TO_180_516_EQ_0_527_AND_requ_ETC___d3675 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 ||
	     (!requestR[191] || requestR[127]) &&
	     (requestR[191] || !requestR[127]) &&
	     (requestR[191] ?
		requestR_BITS_190_TO_180_516_ULE_requestR_BITS_ETC___d3670 :
		NOT_requestR_BITS_190_TO_180_516_ULT_requestR__ETC___d3671) ;
  assign requestR_BITS_190_TO_180_516_EQ_2047_517_AND_0_ETC___d1667 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	     requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1628[23] ||
	      NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1630 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1649 &&
	      x__h48885[85:54] == 32'hFFFFFFFF) ;
  assign requestR_BITS_190_TO_180_516_EQ_2047_517_AND_0_ETC___d1678 =
	     { requestR_BITS_190_TO_180_516_EQ_2047_517_AND_0_ETC___d1667,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_BITS_190_TO_180_516_EQ_0_527_533__ETC___d1672 } ==
	     5'd0 ||
	     requestR_BITS_190_TO_180_516_EQ_2047_517_AND_0_ETC___d1667 ;
  assign requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3593 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] &&
	     requestR[126:116] == 11'd2047 &&
	     requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3638 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3660 =
	     requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3638 ||
	     requestR[190:180] == 11'd2047 && requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115] ;
  assign requestR_BITS_190_TO_180_516_EQ_requestR_BITS__ETC___d3616 =
	     requestR[190:180] == requestR[126:116] ;
  assign requestR_BITS_190_TO_180_516_MINUS_1023___d1529 =
	     requestR[190:180] - 11'd1023 ;
  assign requestR_BITS_190_TO_180_516_ULE_requestR_BITS_ETC___d3614 =
	     requestR[190:180] <= requestR[126:116] ;
  assign requestR_BITS_190_TO_180_516_ULE_requestR_BITS_ETC___d3670 =
	     requestR_BITS_190_TO_180_516_ULE_requestR_BITS_ETC___d3614 &&
	     (!requestR_BITS_190_TO_180_516_EQ_requestR_BITS__ETC___d3616 ||
	      requestR_BITS_179_TO_128_518_ULE_requestR_BITS_ETC___d3617) &&
	     !requestR_BITS_190_TO_180_516_ULT_requestR_BITS_ETC___d3621 &&
	     (!requestR_BITS_190_TO_180_516_EQ_requestR_BITS__ETC___d3616 ||
	      !requestR_BITS_179_TO_128_518_ULT_requestR_BITS_ETC___d3622) ;
  assign requestR_BITS_190_TO_180_516_ULT_requestR_BITS_ETC___d3621 =
	     requestR[190:180] < requestR[126:116] ;
  assign requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d984 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ||
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d982 ;
  assign requestR_BIT_158_62_OR_requestR_BIT_157_64_OR__ETC___d728 =
	     requestR[158] || requestR[157] || requestR[156] ||
	     requestR[155] ||
	     requestR[154] ||
	     requestR[153] ||
	     requestR[152] ||
	     requestR[151] ||
	     requestR[150] ||
	     requestR[149] ||
	     requestR[148] ||
	     requestR[147] ||
	     requestR[146] ||
	     requestR[145] ||
	     requestR[144] ||
	     requestR[143] ||
	     requestR[142] ||
	     requestR[141] ||
	     requestR[140] ||
	     requestR[139] ||
	     requestR[138] ||
	     requestR[137] ||
	     requestR[136] ||
	     requestR[135] ||
	     requestR[134] ||
	     requestR[133] ||
	     requestR[132] ||
	     requestR[131] ||
	     requestR[130] ||
	     requestR[129] ||
	     requestR[128] ;
  assign requestR_BIT_159_6_OR_requestR_BIT_158_62_OR_r_ETC___d750 =
	     (requestR[159] ||
	      requestR_BIT_158_62_OR_requestR_BIT_157_64_OR__ETC___d728) &&
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 &&
	     !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592 &&
	     IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d747 ;
  assign res___1__h154789 =
	     (requestR[190:180] == 11'd2047 && requestR[179]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h155227 = requestR[191] ? 64'd1 : 64'd128 ;
  assign res___1__h155237 = requestR[191] ? 64'd8 : 64'd16 ;
  assign res___1__h155256 = requestR[191] ? 64'd4 : 64'd32 ;
  assign res___1__h25982 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816[22]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h26218 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd1 :
	       64'd128 ;
  assign res___1__h26228 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd8 :
	       64'd16 ;
  assign res___1__h26247 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd4 :
	       64'd32 ;
  assign res__h138073 =
	     { IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3489,
	       x__h97627,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3462 } ;
  assign res__h142497 =
	     NOT_requestR_BITS_190_TO_180_516_EQ_2047_517_6_ETC___d3629 ?
	       requestR[191:128] :
	       requestR[127:64] ;
  assign res__h147045 =
	     NOT_requestR_BITS_190_TO_180_516_EQ_2047_517_6_ETC___d3629 ?
	       requestR[127:64] :
	       requestR[191:128] ;
  assign res__h149749 =
	     ((requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	      (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	      requestR_BITS_190_TO_180_516_EQ_0_527_AND_requ_ETC___d3675) ?
	       64'd1 :
	       64'd0 ;
  assign res__h152444 =
	     NOT_requestR_BITS_190_TO_180_516_EQ_2047_517_6_ETC___d3629 ?
	       64'd1 :
	       64'd0 ;
  assign res__h154321 =
	     NOT_requestR_BITS_190_TO_180_516_EQ_2047_517_6_ETC___d3694 ?
	       64'd1 :
	       64'd0 ;
  assign res__h155272 = requestR[191] ? 64'd2 : 64'd64 ;
  assign res__h155453 = { 32'hFFFFFFFF, fpu$response_get[36:5] } ;
  assign res__h17586 =
	     { 32'hFFFFFFFF,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 } ;
  assign res__h17823 =
	     { 32'hFFFFFFFF,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign res__h23195 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1049 ?
	       64'd1 :
	       64'd0 ;
  assign res__h24678 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d986 ?
	       64'd1 :
	       64'd0 ;
  assign res__h25747 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1067 ?
	       64'd1 :
	       64'd0 ;
  assign res__h26263 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd2 :
	       64'd64 ;
  assign res__h96536 = { 32'hFFFFFFFF, x__h96542 } ;
  assign result__h120319 =
	     { _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d3019[56:1],
	       _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d3019[0] |
	       guard__h120314 } ;
  assign result__h79260 =
	     { _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_516_EQ_ETC___d2224[56:1],
	       _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_516_EQ_ETC___d2224[0] |
	       guard__h79255 } ;
  assign sV1_exp__h815 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:151] :
	       8'd255 ;
  assign sV1_sfd__h816 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[150:128] :
	       23'd4194304 ;
  assign sV2_exp__h918 =
	     (requestR[127:96] == 32'hFFFFFFFF) ? requestR[94:87] : 8'd255 ;
  assign sV2_sfd__h919 =
	     (requestR[127:96] == 32'hFFFFFFFF) ?
	       requestR[86:64] :
	       23'd4194304 ;
  assign sfd___3__h13187 =
	     requestR[159:128] <<
	     IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d587 ;
  assign sfd___3__h35523 =
	     sfd__h27522 <<
	     IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1185 ;
  assign sfd___3__h45105 =
	     sfd__h37353 <<
	     IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1378 ;
  assign sfd___3__h7124 =
	     sfd__h2220 <<
	     IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d253 ;
  assign sfd__h118459 =
	     { 1'b0,
	       _theResult___fst_exp__h118441 != 11'd0,
	       _theResult___snd__h118392[56:5] } +
	     54'd1 ;
  assign sfd__h128034 =
	     { 1'b0,
	       _theResult___fst_exp__h127942 != 11'd0,
	       sfdin__h127936[56:5] } +
	     54'd1 ;
  assign sfd__h13214 = { 2'd0, sfd___3__h13187[31:9] } + 25'd1 ;
  assign sfd__h136750 =
	     { 1'b0,
	       _theResult___fst_exp__h136731 != 11'd0,
	       _theResult___snd__h136677[56:5] } +
	     54'd1 ;
  assign sfd__h13711 =
	     { 1'b0, x__h13696[7:0] != 8'd0, sfd___3__h13187[30:8] } + 25'd1 ;
  assign sfd__h2220 = requestR[159] ? -requestR[159:128] : requestR[159:128] ;
  assign sfd__h27522 = { sfd__h2220, 23'd0 } ;
  assign sfd__h35550 = { 2'd0, sfd___3__h35523[54:3] } + 54'd1 ;
  assign sfd__h36251 =
	     { 1'b0, x__h36236[10:0] != 11'd0, sfd___3__h35523[53:2] } +
	     54'd1 ;
  assign sfd__h37353 = { requestR[159:128], 23'd0 } ;
  assign sfd__h45132 = { 2'd0, sfd___3__h45105[54:3] } + 54'd1 ;
  assign sfd__h45832 =
	     { 1'b0, x__h45817[10:0] != 11'd0, sfd___3__h45105[53:2] } +
	     54'd1 ;
  assign sfd__h53437 = { value__h47139, 3'd0 } ;
  assign sfd__h69236 =
	     { 1'b0,
	       _theResult___fst_exp__h69144 != 8'd0,
	       sfdin__h69138[56:34] } +
	     25'd1 ;
  assign sfd__h7151 = { 2'd0, sfd___3__h7124[31:9] } + 25'd1 ;
  assign sfd__h7652 =
	     { 1'b0, x__h7637[7:0] != 8'd0, sfd___3__h7124[30:8] } + 25'd1 ;
  assign sfd__h77806 =
	     { 1'b0,
	       _theResult___fst_exp__h77788 != 8'd0,
	       _theResult___snd__h77739[56:34] } +
	     25'd1 ;
  assign sfd__h86975 =
	     { 1'b0,
	       _theResult___fst_exp__h86883 != 8'd0,
	       sfdin__h86877[56:34] } +
	     25'd1 ;
  assign sfd__h95575 =
	     { 1'b0,
	       _theResult___fst_exp__h95556 != 8'd0,
	       _theResult___snd__h95502[56:34] } +
	     25'd1 ;
  assign sfdin__h127936 =
	     _theResult____h119706[56] ?
	       _theResult___snd__h127953 :
	       _theResult___snd__h127964 ;
  assign sfdin__h69138 =
	     _theResult____h61037[56] ?
	       _theResult___snd__h69155 :
	       _theResult___snd__h69166 ;
  assign sfdin__h86877 =
	     _theResult____h78647[56] ?
	       _theResult___snd__h86894 :
	       _theResult___snd__h86905 ;
  assign value__h14819 = { 1'b0, sV1_exp__h815 != 8'd0, sV1_sfd__h816 } ;
  assign value__h47139 =
	     { 1'b0, requestR[190:180] != 11'd0, requestR[179:128] } ;
  assign value__h49276 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	      !requestR[179]) ?
	       _theResult___fst_sfd__h49733 :
	       requestR[179:128] ;
  assign value__h97686 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 &&
	      !sV1_sfd__h816[22]) ?
	       _theResult___fst_sfd__h97941 :
	       sV1_sfd__h816 ;
  assign x__h120414 = b__h14817 << x__h120447 ;
  assign x__h120447 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d3015 ;
  assign x__h13696 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d590 +
	     9'd127 ;
  assign x__h138157 =
	     { IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3527,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3534,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3548,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3560,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3572 } ;
  assign x__h139080 =
	     requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3593 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   IF_requestR_BITS_126_TO_116_584_EQ_2047_585_AN_ETC___d3632)))) ;
  assign x__h142629 =
	     { requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3638,
	       4'd0 } ;
  assign x__h14290 =
	     { 2'd0,
	       NOT_requestR_BITS_159_TO_128_22_EQ_0_23_24_AND_ETC___d739,
	       requestR[159:128] != 32'd0 &&
	       (requestR[159] ||
		requestR_BIT_158_62_OR_requestR_BIT_157_64_OR__ETC___d728) &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592,
	       requestR[159:128] != 32'd0 &&
	       requestR_BIT_159_6_OR_requestR_BIT_158_62_OR_r_ETC___d750 } ;
  assign x__h143628 =
	     requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3593 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   ((requestR[126:116] == 11'd2047 && requestR[115]) ?
			      requestR[191:128] :
			      IF_requestR_BITS_190_TO_180_516_EQ_0_527_AND_r_ETC___d3646))))) ;
  assign x__h14574 = { {32{x__h14577[31]}}, x__h14577 } ;
  assign x__h14577 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d772 ?
	       32'h7FFFFFFF :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d844 ;
  assign x__h148072 =
	     requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3660 ?
	       64'd0 :
	       res__h149749 ;
  assign x__h150767 =
	     requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3660 ?
	       64'd0 :
	       res__h152444 ;
  assign x__h152463 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0,
	       4'd0 } ;
  assign x__h152644 =
	     requestR_BITS_190_TO_180_516_EQ_2047_517_AND_N_ETC___d3660 ?
	       64'd0 :
	       res__h154321 ;
  assign x__h154771 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       res___1__h154789 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  res___1__h155227 :
		  IF_requestR_BITS_190_TO_180_516_EQ_0_527_AND_r_ETC___d3717) ;
  assign x__h15490 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d785 >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d811 |
	     ~(57'h1FFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d811) &
	     {57{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d785[56]}} ;
  assign x__h155421 =
	     fpu$response_get[69] ? res__h155453 : fpu$response_get[68:5] ;
  assign x__h15904 =
	     { sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 ||
	       sV1_exp__h815 == 8'd255 && sV1_sfd__h816 == 23'd0 ||
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d855,
	       3'd0,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       (sV1_exp__h815 != 8'd0 || sV1_sfd__h816 != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d866 } ;
  assign x__h16161 = { {32{x__h16164[31]}}, x__h16164 } ;
  assign x__h16164 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d772 ?
	       32'hFFFFFFFF :
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d906 ;
  assign x__h16582 =
	     { sV1_exp__h815 != 8'd0, sV1_sfd__h816, 33'd0 } >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d875 ;
  assign x__h16660 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d925 :
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d914,
	       3'd0,
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 == 23'd0) &&
	       (sV1_exp__h815 != 8'd255 || sV1_sfd__h816 != 23'd0) &&
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d919 } ;
  assign x__h16908 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d948 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d994 ;
  assign x__h1771 = { 32'hFFFFFFFF, x__h1777 } ;
  assign x__h1777 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h18947 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d996,
	       4'd0 } ;
  assign x__h1917 = { 32'hFFFFFFFF, x__h1923 } ;
  assign x__h1923 =
	     { requestR[127:96] != 32'hFFFFFFFF || !requestR[95],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h19542 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d948 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1010 ;
  assign x__h2051 = { 32'hFFFFFFFF, x__h2057 } ;
  assign x__h2057 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) !=
	       (requestR[127:96] == 32'hFFFFFFFF && requestR[95]),
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h2199 = { 32'hFFFFFFFF, x__h2205 } ;
  assign x__h2205 =
	     { requestR[159:128] != 32'd0 &&
	       (NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d261 ?
		  requestR[159] :
		  IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d311),
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d365,
	       (requestR[159:128] == 32'd0 ||
		NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d261) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h8123 } ;
  assign x__h22067 = { 32'hFFFFFFFF, requestR[159:128] } ;
  assign x__h22188 =
	     { {32{requestR_BITS_159_TO_128__q1[31]}},
	       requestR_BITS_159_TO_128__q1 } ;
  assign x__h22326 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1033 ?
	       64'd0 :
	       res__h23195 ;
  assign x__h23809 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1033 ?
	       64'd0 :
	       res__h24678 ;
  assign x__h24697 =
	     { sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0 ||
	       sV2_exp__h918 == 8'd255 && sV2_sfd__h919 != 23'd0,
	       4'd0 } ;
  assign x__h24878 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1033 ?
	       64'd0 :
	       res__h25747 ;
  assign x__h25964 =
	     (sV1_exp__h815 == 8'd255 && sV1_sfd__h816 != 23'd0) ?
	       res___1__h25982 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1081 ;
  assign x__h27131 = { requestR[127], requestR[190:128] } ;
  assign x__h27253 = { !requestR[127], requestR[190:128] } ;
  assign x__h27377 = { requestR[191] != requestR[127], requestR[190:128] } ;
  assign x__h27507 =
	     { requestR[159:128] != 32'd0 &&
	       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d1235,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h36930,
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1320 } ;
  assign x__h36236 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1188 +
	     12'd1023 ;
  assign x__h37056 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1189 ||
		!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1191 &&
		!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1193 &&
		_theResult___fst_exp__h36921 == 11'd2047 &&
		_theResult___fst_sfd__h36922 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1189 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1191,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1189 &&
	       !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1191 &&
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1337 } ;
  assign x__h37341 =
	     { 1'd0,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h46510,
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d1487 } ;
  assign x__h45817 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1381 +
	     12'd1023 ;
  assign x__h46610 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1382 ||
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1383 &&
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1384 &&
		_theResult___fst_exp__h46501 == 11'd2047 &&
		_theResult___fst_sfd__h46502 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1382 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1383,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1382 &&
	       !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1383 &&
	       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1504 } ;
  assign x__h46894 = { {32{x__h46897[31]}}, x__h46897 } ;
  assign x__h46897 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'h7FFFFFFF :
	       IF_requestR_BITS_190_TO_180_516_EQ_2047_517_AN_ETC___d1597 ;
  assign x__h47810 =
	     IF_requestR_BIT_191_144_THEN_NEG_0b0_CONCAT_NO_ETC___d1538 >>
	     NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1564 |
	     ~(86'h3FFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1564) &
	     {86{IF_requestR_BIT_191_144_THEN_NEG_0b0_CONCAT_NO_ETC___d1538[85]}} ;
  assign x__h48207 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_BITS_190_TO_180_516_EQ_0_527_533__ETC___d1608,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_ETC___d1619 } ;
  assign x__h48464 = { {32{x__h48467[31]}}, x__h48467 } ;
  assign x__h48467 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'hFFFFFFFF :
	       (requestR[191] ?
		  32'd0 :
		  ((requestR[190:180] == 11'd2047 &&
		    requestR[179:128] == 52'd0) ?
		     32'hFFFFFFFF :
		     IF_requestR_BITS_190_TO_180_516_EQ_0_527_AND_r_ETC___d1657)) ;
  assign x__h48885 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 33'd0 } >>
	     NEG_SEXT_requestR_BITS_190_TO_180_516_MINUS_10_ETC___d1628 ;
  assign x__h48963 =
	     { requestR[191] ?
		 requestR_BITS_190_TO_180_516_EQ_2047_517_AND_0_ETC___d1678 :
		 requestR_BITS_190_TO_180_516_EQ_2047_517_AND_0_ETC___d1667,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_BITS_190_TO_180_516_EQ_0_527_533__ETC___d1672 } ;
  assign x__h49207 =
	     (x__h49216 == 8'd255 &&
	      IF_requestR_BITS_190_TO_180_516_EQ_2047_517_AN_ETC___d2682[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       res__h96536 ;
  assign x__h49216 =
	     (requestR[190:180] == 11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h96104 ;
  assign x__h7637 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d256 +
	     9'd127 ;
  assign x__h79355 = sfd__h53437 << x__h79388 ;
  assign x__h79388 =
	     12'd57 -
	     _3970_MINUS_SEXT_requestR_BITS_190_TO_180_516_M_ETC___d2220 ;
  assign x__h8258 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d440,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d443,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d452 } ;
  assign x__h8546 =
	     { 33'h1FFFFFFFE,
	       IF_requestR_BITS_159_TO_128_22_EQ_0_23_OR_NOT__ETC___d667,
	       (requestR[159:128] == 32'd0 ||
		!requestR[159] &&
		NOT_requestR_BIT_158_62_63_AND_NOT_requestR_BI_ETC___d553 ||
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d591 ||
		_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d592) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h14181 } ;
  assign x__h96542 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
		(requestR[190:180] == 11'd2047 ||
		 requestR[190:180] == 11'd0) &&
		requestR[179:128] == 52'd0) ?
		 requestR[191] :
		 IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2712,
	       x__h49216,
	       IF_requestR_BITS_190_TO_180_516_EQ_2047_517_AN_ETC___d2682 } ;
  assign x__h96635 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179] :
		 (requestR[190:180] != 11'd2047 ||
		  requestR[179:128] != 52'd0) &&
		 (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
		 IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2763,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2774,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2790,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2803,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_516_EQ_0_527_THEN__ETC___d2816 } ;
  assign x__h97618 =
	     (x__h97627 == 11'd2047 &&
	      IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d3462[51]) ?
	       64'h7FF8000000000000 :
	       res__h138073 ;
  assign x__h97627 =
	     (sV1_exp__h815 == 8'd255) ?
	       11'd2047 :
	       _theResult___fst_exp__h137482 ;
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd254;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd255 : 8'd254;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd254 : 8'd255;
      default: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      23'd8388607;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd0 : 23'd8388607;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd8388607 : 23'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 = 23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd2046;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2047 :
		11'd2046;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2046 :
		11'd2047;
      default: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      52'hFFFFFFFFFFFFF;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 = 52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h0:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 =
	      requestR[194:192];
      3'h1: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd4;
      3'h2: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd3;
      3'h3: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd2;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 =
		   3'd0;
    endcase
  end
  always@(guard__h7622 or
	  x__h7637 or out_exp__h8061 or _theResult___exp__h8058)
  begin
    case (guard__h7622)
      2'b0, 2'b01:
	  CASE_guard622_0b0_x637_BITS_7_TO_0_0b1_x637_BI_ETC__q8 =
	      x__h7637[7:0];
      2'b10:
	  CASE_guard622_0b0_x637_BITS_7_TO_0_0b1_x637_BI_ETC__q8 =
	      out_exp__h8061;
      2'b11:
	  CASE_guard622_0b0_x637_BITS_7_TO_0_0b1_x637_BI_ETC__q8 =
	      _theResult___exp__h8058;
    endcase
  end
  always@(requestR or
	  x__h7637 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d356 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d354)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9 =
	      x__h7637[7:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d356;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d354;
      default: CASE_requestR_BITS_194_TO_192_0x1_x637_BITS_7__ETC__q9 = 8'd0;
    endcase
  end
  always@(guard__h7622 or
	  sfd___3__h7124 or out_sfd__h8062 or _theResult___sfd__h8059)
  begin
    case (guard__h7622)
      2'b0, 2'b01:
	  CASE_guard622_0b0_sfd___3124_BITS_30_TO_8_0b1__ETC__q10 =
	      sfd___3__h7124[30:8];
      2'b10:
	  CASE_guard622_0b0_sfd___3124_BITS_30_TO_8_0b1__ETC__q10 =
	      out_sfd__h8062;
      2'b11:
	  CASE_guard622_0b0_sfd___3124_BITS_30_TO_8_0b1__ETC__q10 =
	      _theResult___sfd__h8059;
    endcase
  end
  always@(requestR or
	  sfd___3__h7124 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d391 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d389)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11 =
	      sfd___3__h7124[30:8];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d391;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d389;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q11 =
		   23'd0;
    endcase
  end
  always@(guard__h7134 or
	  sfd___3__h7124 or out_sfd__h7551 or _theResult___sfd__h7548)
  begin
    case (guard__h7134)
      2'b0, 2'b01:
	  CASE_guard134_0b0_sfd___3124_BITS_31_TO_9_0b1__ETC__q12 =
	      sfd___3__h7124[31:9];
      2'b10:
	  CASE_guard134_0b0_sfd___3124_BITS_31_TO_9_0b1__ETC__q12 =
	      out_sfd__h7551;
      2'b11:
	  CASE_guard134_0b0_sfd___3124_BITS_31_TO_9_0b1__ETC__q12 =
	      _theResult___sfd__h7548;
    endcase
  end
  always@(requestR or
	  sfd___3__h7124 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d376 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d374)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13 =
	      sfd___3__h7124[31:9];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d376;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d374;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___3124_B_ETC__q13 =
		   23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 =
	      requestR[159];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d288 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h7134 or requestR)
  begin
    case (guard__h7134)
      2'b0, 2'b01, 2'b10:
	  CASE_guard134_0b0_requestR_BIT_159_0b1_request_ETC__q14 =
	      requestR[159];
      2'd3:
	  CASE_guard134_0b0_requestR_BIT_159_0b1_request_ETC__q14 =
	      guard__h7134 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h7622 or requestR)
  begin
    case (guard__h7622)
      2'b0, 2'b01, 2'b10:
	  CASE_guard622_0b0_requestR_BIT_159_0b1_request_ETC__q15 =
	      requestR[159];
      2'd3:
	  CASE_guard622_0b0_requestR_BIT_159_0b1_request_ETC__q15 =
	      guard__h7622 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d331 or
	  guard__h7134 or _theResult___exp__h7547)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d333 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d331;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d333 =
	      (guard__h7134 == 2'b0 || requestR[159]) ?
		8'd0 :
		_theResult___exp__h7547;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d333 =
		   8'd0;
    endcase
  end
  always@(guard__h7134 or out_exp__h7550 or _theResult___exp__h7547)
  begin
    case (guard__h7134)
      2'b0, 2'b01:
	  CASE_guard134_0b0_0_0b1_0_0b10_out_exp550_0b11_ETC__q16 = 8'd0;
      2'b10:
	  CASE_guard134_0b0_0_0b1_0_0b10_out_exp550_0b11_ETC__q16 =
	      out_exp__h7550;
      2'b11:
	  CASE_guard134_0b0_0_0b1_0_0b10_out_exp550_0b11_ETC__q16 =
	      _theResult___exp__h7547;
    endcase
  end
  always@(requestR or x__h13696 or guard__h13681 or _theResult___exp__h14117)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d661 =
	      x__h13696[7:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d661 =
	      (guard__h13681 == 2'b0) ?
		x__h13696[7:0] :
		_theResult___exp__h14117;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d661 =
		   8'd0;
    endcase
  end
  always@(guard__h13681 or
	  x__h13696 or out_exp__h14120 or _theResult___exp__h14117)
  begin
    case (guard__h13681)
      2'b0, 2'b01:
	  CASE_guard3681_0b0_x3696_BITS_7_TO_0_0b1_x3696_ETC__q19 =
	      x__h13696[7:0];
      2'b10:
	  CASE_guard3681_0b0_x3696_BITS_7_TO_0_0b1_x3696_ETC__q19 =
	      out_exp__h14120;
      2'b11:
	  CASE_guard3681_0b0_x3696_BITS_7_TO_0_0b1_x3696_ETC__q19 =
	      _theResult___exp__h14117;
    endcase
  end
  always@(requestR or
	  sfd___3__h13187 or guard__h13681 or _theResult___sfd__h14118)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d693 =
	      sfd___3__h13187[30:8];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d693 =
	      (guard__h13681 == 2'b0) ?
		sfd___3__h13187[30:8] :
		_theResult___sfd__h14118;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d693 =
		   23'd0;
    endcase
  end
  always@(guard__h13681 or
	  sfd___3__h13187 or out_sfd__h14121 or _theResult___sfd__h14118)
  begin
    case (guard__h13681)
      2'b0, 2'b01:
	  CASE_guard3681_0b0_sfd___33187_BITS_30_TO_8_0b_ETC__q20 =
	      sfd___3__h13187[30:8];
      2'b10:
	  CASE_guard3681_0b0_sfd___33187_BITS_30_TO_8_0b_ETC__q20 =
	      out_sfd__h14121;
      2'b11:
	  CASE_guard3681_0b0_sfd___33187_BITS_30_TO_8_0b_ETC__q20 =
	      _theResult___sfd__h14118;
    endcase
  end
  always@(guard__h13197 or out_exp__h13610 or _theResult___exp__h13607)
  begin
    case (guard__h13197)
      2'b0, 2'b01:
	  CASE_guard3197_0b0_0_0b1_0_0b10_out_exp3610_0b_ETC__q21 = 8'd0;
      2'b10:
	  CASE_guard3197_0b0_0_0b1_0_0b10_out_exp3610_0b_ETC__q21 =
	      out_exp__h13610;
      2'b11:
	  CASE_guard3197_0b0_0_0b1_0_0b10_out_exp3610_0b_ETC__q21 =
	      _theResult___exp__h13607;
    endcase
  end
  always@(requestR or
	  sfd___3__h13187 or guard__h13197 or _theResult___sfd__h13608)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d681 =
	      sfd___3__h13187[31:9];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d681 =
	      (guard__h13197 == 2'b0) ?
		sfd___3__h13187[31:9] :
		_theResult___sfd__h13608;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d681 =
		   23'd0;
    endcase
  end
  always@(guard__h13197 or
	  sfd___3__h13187 or out_sfd__h13611 or _theResult___sfd__h13608)
  begin
    case (guard__h13197)
      2'b0, 2'b01:
	  CASE_guard3197_0b0_sfd___33187_BITS_31_TO_9_0b_ETC__q22 =
	      sfd___3__h13187[31:9];
      2'b10:
	  CASE_guard3197_0b0_sfd___33187_BITS_31_TO_9_0b_ETC__q22 =
	      out_sfd__h13611;
      2'b11:
	  CASE_guard3197_0b0_sfd___33187_BITS_31_TO_9_0b_ETC__q22 =
	      _theResult___sfd__h13608;
    endcase
  end
  always@(guard__h35533 or requestR)
  begin
    case (guard__h35533)
      2'b0, 2'b01, 2'b10:
	  CASE_guard5533_0b0_requestR_BIT_159_0b1_reques_ETC__q27 =
	      requestR[159];
      2'd3:
	  CASE_guard5533_0b0_requestR_BIT_159_0b1_reques_ETC__q27 =
	      guard__h35533 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h36221 or requestR)
  begin
    case (guard__h36221)
      2'b0, 2'b01, 2'b10:
	  CASE_guard6221_0b0_requestR_BIT_159_0b1_reques_ETC__q28 =
	      requestR[159];
      2'd3:
	  CASE_guard6221_0b0_requestR_BIT_159_0b1_reques_ETC__q28 =
	      guard__h36221 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h36221 or
	  x__h36236 or out_exp__h36863 or _theResult___exp__h36860)
  begin
    case (guard__h36221)
      2'b0, 2'b01:
	  CASE_guard6221_0b0_x6236_BITS_10_TO_0_0b1_x623_ETC__q29 =
	      x__h36236[10:0];
      2'b10:
	  CASE_guard6221_0b0_x6236_BITS_10_TO_0_0b1_x623_ETC__q29 =
	      out_exp__h36863;
      2'b11:
	  CASE_guard6221_0b0_x6236_BITS_10_TO_0_0b1_x623_ETC__q29 =
	      _theResult___exp__h36860;
    endcase
  end
  always@(requestR or
	  x__h36236 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1278 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1276)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x6236_BITS_1_ETC__q30 =
	      x__h36236[10:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x6236_BITS_1_ETC__q30 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1278;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x6236_BITS_1_ETC__q30 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1276;
      default: CASE_requestR_BITS_194_TO_192_0x1_x6236_BITS_1_ETC__q30 =
		   11'd0;
    endcase
  end
  always@(guard__h36221 or
	  sfd___3__h35523 or out_sfd__h36864 or _theResult___sfd__h36861)
  begin
    case (guard__h36221)
      2'b0, 2'b01:
	  CASE_guard6221_0b0_sfd___35523_BITS_53_TO_2_0b_ETC__q31 =
	      sfd___3__h35523[53:2];
      2'b10:
	  CASE_guard6221_0b0_sfd___35523_BITS_53_TO_2_0b_ETC__q31 =
	      out_sfd__h36864;
      2'b11:
	  CASE_guard6221_0b0_sfd___35523_BITS_53_TO_2_0b_ETC__q31 =
	      _theResult___sfd__h36861;
    endcase
  end
  always@(requestR or
	  sfd___3__h35523 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1313 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1311)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q32 =
	      sfd___3__h35523[53:2];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q32 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1313;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q32 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1311;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q32 =
		   52'd0;
    endcase
  end
  always@(guard__h35533 or
	  sfd___3__h35523 or out_sfd__h36150 or _theResult___sfd__h36147)
  begin
    case (guard__h35533)
      2'b0, 2'b01:
	  CASE_guard5533_0b0_sfd___35523_BITS_54_TO_3_0b_ETC__q33 =
	      sfd___3__h35523[54:3];
      2'b10:
	  CASE_guard5533_0b0_sfd___35523_BITS_54_TO_3_0b_ETC__q33 =
	      out_sfd__h36150;
      2'b11:
	  CASE_guard5533_0b0_sfd___35523_BITS_54_TO_3_0b_ETC__q33 =
	      _theResult___sfd__h36147;
    endcase
  end
  always@(requestR or
	  sfd___3__h35523 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1298 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1296)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q34 =
	      sfd___3__h35523[54:3];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q34 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1298;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q34 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1296;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___35523__ETC__q34 =
		   52'd0;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1253 or
	  guard__h35533 or _theResult___exp__h36146)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1255 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1253;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1255 =
	      (guard__h35533 == 2'b0 || requestR[159]) ?
		11'd0 :
		_theResult___exp__h36146;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1255 =
		   11'd0;
    endcase
  end
  always@(guard__h35533 or out_exp__h36149 or _theResult___exp__h36146)
  begin
    case (guard__h35533)
      2'b0, 2'b01:
	  CASE_guard5533_0b0_0_0b1_0_0b10_out_exp6149_0b_ETC__q35 = 11'd0;
      2'b10:
	  CASE_guard5533_0b0_0_0b1_0_0b10_out_exp6149_0b_ETC__q35 =
	      out_exp__h36149;
      2'b11:
	  CASE_guard5533_0b0_0_0b1_0_0b10_out_exp6149_0b_ETC__q35 =
	      _theResult___exp__h36146;
    endcase
  end
  always@(guard__h45115 or out_exp__h45731 or _theResult___exp__h45728)
  begin
    case (guard__h45115)
      2'b0, 2'b01:
	  CASE_guard5115_0b0_0_0b1_0_0b10_out_exp5731_0b_ETC__q38 = 11'd0;
      2'b10:
	  CASE_guard5115_0b0_0_0b1_0_0b10_out_exp5731_0b_ETC__q38 =
	      out_exp__h45731;
      2'b11:
	  CASE_guard5115_0b0_0_0b1_0_0b10_out_exp5731_0b_ETC__q38 =
	      _theResult___exp__h45728;
    endcase
  end
  always@(requestR or x__h45817 or guard__h45802 or _theResult___exp__h46441)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1452 =
	      x__h45817[10:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1452 =
	      (guard__h45802 == 2'b0) ?
		x__h45817[10:0] :
		_theResult___exp__h46441;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1452 =
		   11'd0;
    endcase
  end
  always@(guard__h45802 or
	  x__h45817 or out_exp__h46444 or _theResult___exp__h46441)
  begin
    case (guard__h45802)
      2'b0, 2'b01:
	  CASE_guard5802_0b0_x5817_BITS_10_TO_0_0b1_x581_ETC__q39 =
	      x__h45817[10:0];
      2'b10:
	  CASE_guard5802_0b0_x5817_BITS_10_TO_0_0b1_x581_ETC__q39 =
	      out_exp__h46444;
      2'b11:
	  CASE_guard5802_0b0_x5817_BITS_10_TO_0_0b1_x581_ETC__q39 =
	      _theResult___exp__h46441;
    endcase
  end
  always@(requestR or
	  sfd___3__h45105 or guard__h45802 or _theResult___sfd__h46442)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1483 =
	      sfd___3__h45105[53:2];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1483 =
	      (guard__h45802 == 2'b0) ?
		sfd___3__h45105[53:2] :
		_theResult___sfd__h46442;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1483 =
		   52'd0;
    endcase
  end
  always@(guard__h45802 or
	  sfd___3__h45105 or out_sfd__h46445 or _theResult___sfd__h46442)
  begin
    case (guard__h45802)
      2'b0, 2'b01:
	  CASE_guard5802_0b0_sfd___35105_BITS_53_TO_2_0b_ETC__q40 =
	      sfd___3__h45105[53:2];
      2'b10:
	  CASE_guard5802_0b0_sfd___35105_BITS_53_TO_2_0b_ETC__q40 =
	      out_sfd__h46445;
      2'b11:
	  CASE_guard5802_0b0_sfd___35105_BITS_53_TO_2_0b_ETC__q40 =
	      _theResult___sfd__h46442;
    endcase
  end
  always@(requestR or
	  sfd___3__h45105 or guard__h45115 or _theResult___sfd__h45729)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1471 =
	      sfd___3__h45105[54:3];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1471 =
	      (guard__h45115 == 2'b0) ?
		sfd___3__h45105[54:3] :
		_theResult___sfd__h45729;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1471 =
		   52'd0;
    endcase
  end
  always@(guard__h45115 or
	  sfd___3__h45105 or out_sfd__h45732 or _theResult___sfd__h45729)
  begin
    case (guard__h45115)
      2'b0, 2'b01:
	  CASE_guard5115_0b0_sfd___35105_BITS_54_TO_3_0b_ETC__q41 =
	      sfd___3__h45105[54:3];
      2'b10:
	  CASE_guard5115_0b0_sfd___35105_BITS_54_TO_3_0b_ETC__q41 =
	      out_sfd__h45732;
      2'b11:
	  CASE_guard5115_0b0_sfd___35105_BITS_54_TO_3_0b_ETC__q41 =
	      _theResult___sfd__h45729;
    endcase
  end
  always@(guard__h61047 or
	  _theResult___fst_exp__h69144 or
	  out_exp__h69670 or _theResult___exp__h69667)
  begin
    case (guard__h61047)
      2'b0, 2'b01:
	  CASE_guard1047_0b0_theResult___fst_exp9144_0b1_ETC__q46 =
	      _theResult___fst_exp__h69144;
      2'b10:
	  CASE_guard1047_0b0_theResult___fst_exp9144_0b1_ETC__q46 =
	      out_exp__h69670;
      2'b11:
	  CASE_guard1047_0b0_theResult___fst_exp9144_0b1_ETC__q46 =
	      _theResult___exp__h69667;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h69144 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2051 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2049)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q47 =
	      _theResult___fst_exp__h69144;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q47 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2051;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q47 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2049;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q47 = 8'd0;
    endcase
  end
  always@(guard__h69740 or
	  _theResult___fst_exp__h77788 or
	  out_exp__h78240 or _theResult___exp__h78237)
  begin
    case (guard__h69740)
      2'b0, 2'b01:
	  CASE_guard9740_0b0_theResult___fst_exp7788_0b1_ETC__q50 =
	      _theResult___fst_exp__h77788;
      2'b10:
	  CASE_guard9740_0b0_theResult___fst_exp7788_0b1_ETC__q50 =
	      out_exp__h78240;
      2'b11:
	  CASE_guard9740_0b0_theResult___fst_exp7788_0b1_ETC__q50 =
	      _theResult___exp__h78237;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h77788 or
	  IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2203 or
	  IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2201)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q51 =
	      _theResult___fst_exp__h77788;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q51 =
	      IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2203;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q51 =
	      IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2201;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q51 = 8'd0;
    endcase
  end
  always@(guard__h78657 or
	  _theResult___fst_exp__h86883 or
	  out_exp__h87409 or _theResult___exp__h87406)
  begin
    case (guard__h78657)
      2'b0, 2'b01:
	  CASE_guard8657_0b0_theResult___fst_exp6883_0b1_ETC__q55 =
	      _theResult___fst_exp__h86883;
      2'b10:
	  CASE_guard8657_0b0_theResult___fst_exp6883_0b1_ETC__q55 =
	      out_exp__h87409;
      2'b11:
	  CASE_guard8657_0b0_theResult___fst_exp6883_0b1_ETC__q55 =
	      _theResult___exp__h87406;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h86883 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2521 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2519)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q56 =
	      _theResult___fst_exp__h86883;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q56 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2521;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q56 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2519;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q56 = 8'd0;
    endcase
  end
  always@(guard__h87479 or
	  _theResult___fst_exp__h95556 or
	  out_exp__h96033 or _theResult___exp__h96030)
  begin
    case (guard__h87479)
      2'b0, 2'b01:
	  CASE_guard7479_0b0_theResult___fst_exp5556_0b1_ETC__q60 =
	      _theResult___fst_exp__h95556;
      2'b10:
	  CASE_guard7479_0b0_theResult___fst_exp5556_0b1_ETC__q60 =
	      out_exp__h96033;
      2'b11:
	  CASE_guard7479_0b0_theResult___fst_exp5556_0b1_ETC__q60 =
	      _theResult___exp__h96030;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h95556 or
	  IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2585 or
	  IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2583)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 =
	      _theResult___fst_exp__h95556;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 =
	      IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2585;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 =
	      IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2583;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q61 = 8'd0;
    endcase
  end
  always@(guard__h61047 or
	  sfdin__h69138 or out_sfd__h69671 or _theResult___sfd__h69668)
  begin
    case (guard__h61047)
      2'b0, 2'b01:
	  CASE_guard1047_0b0_sfdin9138_BITS_56_TO_34_0b1_ETC__q62 =
	      sfdin__h69138[56:34];
      2'b10:
	  CASE_guard1047_0b0_sfdin9138_BITS_56_TO_34_0b1_ETC__q62 =
	      out_sfd__h69671;
      2'b11:
	  CASE_guard1047_0b0_sfdin9138_BITS_56_TO_34_0b1_ETC__q62 =
	      _theResult___sfd__h69668;
    endcase
  end
  always@(requestR or
	  sfdin__h69138 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2616 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2614)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin9138_BI_ETC__q63 =
	      sfdin__h69138[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin9138_BI_ETC__q63 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2616;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin9138_BI_ETC__q63 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d2614;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin9138_BI_ETC__q63 =
		   23'd0;
    endcase
  end
  always@(guard__h69740 or
	  _theResult___snd__h77739 or
	  out_sfd__h78241 or _theResult___sfd__h78238)
  begin
    case (guard__h69740)
      2'b0, 2'b01:
	  CASE_guard9740_0b0_theResult___snd7739_BITS_56_ETC__q64 =
	      _theResult___snd__h77739[56:34];
      2'b10:
	  CASE_guard9740_0b0_theResult___snd7739_BITS_56_ETC__q64 =
	      out_sfd__h78241;
      2'b11:
	  CASE_guard9740_0b0_theResult___snd7739_BITS_56_ETC__q64 =
	      _theResult___sfd__h78238;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h77739 or
	  IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2632 or
	  IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2630)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
	      _theResult___snd__h77739[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
	      IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2632;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
	      IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2630;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q65 =
		   23'd0;
    endcase
  end
  always@(guard__h78657 or
	  sfdin__h86877 or out_sfd__h87410 or _theResult___sfd__h87407)
  begin
    case (guard__h78657)
      2'b0, 2'b01:
	  CASE_guard8657_0b0_sfdin6877_BITS_56_TO_34_0b1_ETC__q66 =
	      sfdin__h86877[56:34];
      2'b10:
	  CASE_guard8657_0b0_sfdin6877_BITS_56_TO_34_0b1_ETC__q66 =
	      out_sfd__h87410;
      2'b11:
	  CASE_guard8657_0b0_sfdin6877_BITS_56_TO_34_0b1_ETC__q66 =
	      _theResult___sfd__h87407;
    endcase
  end
  always@(requestR or
	  sfdin__h86877 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2656 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2654)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin6877_BI_ETC__q67 =
	      sfdin__h86877[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin6877_BI_ETC__q67 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2656;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin6877_BI_ETC__q67 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d2654;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin6877_BI_ETC__q67 =
		   23'd0;
    endcase
  end
  always@(guard__h87479 or
	  _theResult___snd__h95502 or
	  out_sfd__h96034 or _theResult___sfd__h96031)
  begin
    case (guard__h87479)
      2'b0, 2'b01:
	  CASE_guard7479_0b0_theResult___snd5502_BITS_56_ETC__q68 =
	      _theResult___snd__h95502[56:34];
      2'b10:
	  CASE_guard7479_0b0_theResult___snd5502_BITS_56_ETC__q68 =
	      out_sfd__h96034;
      2'b11:
	  CASE_guard7479_0b0_theResult___snd5502_BITS_56_ETC__q68 =
	      _theResult___sfd__h96031;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h95502 or
	  IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2672 or
	  IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2670)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
	      _theResult___snd__h95502[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
	      IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2672;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
	      IF_IF_IF_requestR_BITS_190_TO_180_516_EQ_0_527_ETC___d2670;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q69 =
		   23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2690 =
	      requestR[191];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d2690 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h61047 or requestR)
  begin
    case (guard__h61047)
      2'b0, 2'b01, 2'b10:
	  CASE_guard1047_0b0_requestR_BIT_191_0b1_reques_ETC__q70 =
	      requestR[191];
      2'd3:
	  CASE_guard1047_0b0_requestR_BIT_191_0b1_reques_ETC__q70 =
	      guard__h61047 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h69740 or requestR)
  begin
    case (guard__h69740)
      2'b0, 2'b01, 2'b10:
	  CASE_guard9740_0b0_requestR_BIT_191_0b1_reques_ETC__q71 =
	      requestR[191];
      2'd3:
	  CASE_guard9740_0b0_requestR_BIT_191_0b1_reques_ETC__q71 =
	      guard__h69740 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h78657 or requestR)
  begin
    case (guard__h78657)
      2'b0, 2'b01, 2'b10:
	  CASE_guard8657_0b0_requestR_BIT_191_0b1_reques_ETC__q72 =
	      requestR[191];
      2'd3:
	  CASE_guard8657_0b0_requestR_BIT_191_0b1_reques_ETC__q72 =
	      guard__h78657 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h87479 or requestR)
  begin
    case (guard__h87479)
      2'b0, 2'b01, 2'b10:
	  CASE_guard7479_0b0_requestR_BIT_191_0b1_reques_ETC__q73 =
	      requestR[191];
      2'd3:
	  CASE_guard7479_0b0_requestR_BIT_191_0b1_reques_ETC__q73 =
	      guard__h87479 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h110480 or
	  _theResult___fst_exp__h118441 or
	  out_exp__h119096 or _theResult___exp__h119093)
  begin
    case (guard__h110480)
      2'b0, 2'b01:
	  CASE_guard10480_0b0_theResult___fst_exp18441_0_ETC__q76 =
	      _theResult___fst_exp__h118441;
      2'b10:
	  CASE_guard10480_0b0_theResult___fst_exp18441_0_ETC__q76 =
	      out_exp__h119096;
      2'b11:
	  CASE_guard10480_0b0_theResult___fst_exp18441_0_ETC__q76 =
	      _theResult___exp__h119093;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h118441 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d2998 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d2996)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q77 =
	      _theResult___fst_exp__h118441;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q77 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d2998;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q77 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d2996;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q77 =
		   11'd0;
    endcase
  end
  always@(guard__h119716 or
	  _theResult___fst_exp__h127942 or
	  out_exp__h128671 or _theResult___exp__h128668)
  begin
    case (guard__h119716)
      2'b0, 2'b01:
	  CASE_guard19716_0b0_theResult___fst_exp27942_0_ETC__q81 =
	      _theResult___fst_exp__h127942;
      2'b10:
	  CASE_guard19716_0b0_theResult___fst_exp27942_0_ETC__q81 =
	      out_exp__h128671;
      2'b11:
	  CASE_guard19716_0b0_theResult___fst_exp27942_0_ETC__q81 =
	      _theResult___exp__h128668;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h127942 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3318 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3316)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q82 =
	      _theResult___fst_exp__h127942;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q82 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3318;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q82 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3316;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q82 =
		   11'd0;
    endcase
  end
  always@(guard__h128741 or
	  _theResult___fst_exp__h136731 or
	  out_exp__h137411 or _theResult___exp__h137408)
  begin
    case (guard__h128741)
      2'b0, 2'b01:
	  CASE_guard28741_0b0_theResult___fst_exp36731_0_ETC__q86 =
	      _theResult___fst_exp__h136731;
      2'b10:
	  CASE_guard28741_0b0_theResult___fst_exp36731_0_ETC__q86 =
	      out_exp__h137411;
      2'b11:
	  CASE_guard28741_0b0_theResult___fst_exp36731_0_ETC__q86 =
	      _theResult___exp__h137408;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h136731 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3382 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3380)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
	      _theResult___fst_exp__h136731;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3382;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3380;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q87 =
		   11'd0;
    endcase
  end
  always@(guard__h110480 or
	  _theResult___snd__h118392 or
	  out_sfd__h119097 or _theResult___sfd__h119094)
  begin
    case (guard__h110480)
      2'b0, 2'b01:
	  CASE_guard10480_0b0_theResult___snd18392_BITS__ETC__q88 =
	      _theResult___snd__h118392[56:5];
      2'b10:
	  CASE_guard10480_0b0_theResult___snd18392_BITS__ETC__q88 =
	      out_sfd__h119097;
      2'b11:
	  CASE_guard10480_0b0_theResult___snd18392_BITS__ETC__q88 =
	      _theResult___sfd__h119094;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h118392 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3412 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3410)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      _theResult___snd__h118392[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3412;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3410;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
		   52'd0;
    endcase
  end
  always@(guard__h119716 or
	  sfdin__h127936 or out_sfd__h128672 or _theResult___sfd__h128669)
  begin
    case (guard__h119716)
      2'b0, 2'b01:
	  CASE_guard19716_0b0_sfdin27936_BITS_56_TO_5_0b_ETC__q90 =
	      sfdin__h127936[56:5];
      2'b10:
	  CASE_guard19716_0b0_sfdin27936_BITS_56_TO_5_0b_ETC__q90 =
	      out_sfd__h128672;
      2'b11:
	  CASE_guard19716_0b0_sfdin27936_BITS_56_TO_5_0b_ETC__q90 =
	      _theResult___sfd__h128669;
    endcase
  end
  always@(requestR or
	  sfdin__h127936 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3436 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3434)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin27936_B_ETC__q91 =
	      sfdin__h127936[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin27936_B_ETC__q91 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3436;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin27936_B_ETC__q91 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d3434;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin27936_B_ETC__q91 =
		   52'd0;
    endcase
  end
  always@(guard__h128741 or
	  _theResult___snd__h136677 or
	  out_sfd__h137412 or _theResult___sfd__h137409)
  begin
    case (guard__h128741)
      2'b0, 2'b01:
	  CASE_guard28741_0b0_theResult___snd36677_BITS__ETC__q92 =
	      _theResult___snd__h136677[56:5];
      2'b10:
	  CASE_guard28741_0b0_theResult___snd36677_BITS__ETC__q92 =
	      out_sfd__h137412;
      2'b11:
	  CASE_guard28741_0b0_theResult___snd36677_BITS__ETC__q92 =
	      _theResult___sfd__h137409;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h136677 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3452 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3450)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      _theResult___snd__h136677[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3452;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d3450;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
		   52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d3473 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d3473 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h110480 or requestR)
  begin
    case (guard__h110480)
      2'b0, 2'b01, 2'b10:
	  CASE_guard10480_0b0_requestR_BITS_191_TO_160_E_ETC__q94 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard10480_0b0_requestR_BITS_191_TO_160_E_ETC__q94 =
	      guard__h110480 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(guard__h119716 or requestR)
  begin
    case (guard__h119716)
      2'b0, 2'b01, 2'b10:
	  CASE_guard19716_0b0_requestR_BITS_191_TO_160_E_ETC__q95 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard19716_0b0_requestR_BITS_191_TO_160_E_ETC__q95 =
	      guard__h119716 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(guard__h128741 or requestR)
  begin
    case (guard__h128741)
      2'b0, 2'b01, 2'b10:
	  CASE_guard28741_0b0_requestR_BITS_191_TO_160_E_ETC__q96 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard28741_0b0_requestR_BITS_191_TO_160_E_ETC__q96 =
	      guard__h128741 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	requestR <= `BSV_ASSIGNMENT_DELAY
	    215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	resultR <= `BSV_ASSIGNMENT_DELAY 70'h0AAAAAAAAAAAAAAAAA;
	stateR <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (requestR$EN) requestR <= `BSV_ASSIGNMENT_DELAY requestR$D_IN;
	if (resultR$EN) resultR <= `BSV_ASSIGNMENT_DELAY resultR$D_IN;
	if (stateR$EN) stateR <= `BSV_ASSIGNMENT_DELAY stateR$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_verbosity = 4'hA;
    requestR = 215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    resultR = 70'h2AAAAAAAAAAAAAAAAA;
    stateR = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkRISCV_FBox

