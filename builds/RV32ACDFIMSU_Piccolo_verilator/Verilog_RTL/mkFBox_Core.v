//
// Generated by Bluespec Compiler, version 2018.10.beta1 (build e1df8052c, 2018-10-17)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1 reg
// valid                          O     1
// word_fst                       O    64
// word_snd                       O     5
// CLK                            I     1 clock
// RST_N                          I     1 reset
// req_opcode                     I     7
// req_f7                         I     7
// req_rm                         I     3
// req_rs2                        I     5
// req_v1                         I    64
// req_v2                         I    64
// req_v3                         I    64
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkFBox_Core(CLK,
		   RST_N,

		   EN_server_reset_request_put,
		   RDY_server_reset_request_put,

		   EN_server_reset_response_get,
		   RDY_server_reset_response_get,

		   req_opcode,
		   req_f7,
		   req_rm,
		   req_rs2,
		   req_v1,
		   req_v2,
		   req_v3,
		   EN_req,

		   valid,

		   word_fst,

		   word_snd);
  input  CLK;
  input  RST_N;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [6 : 0] req_opcode;
  input  [6 : 0] req_f7;
  input  [2 : 0] req_rm;
  input  [4 : 0] req_rs2;
  input  [63 : 0] req_v1;
  input  [63 : 0] req_v2;
  input  [63 : 0] req_v3;
  input  EN_req;

  // value method valid
  output valid;

  // value method word_fst
  output [63 : 0] word_fst;

  // value method word_snd
  output [4 : 0] word_snd;

  // signals for module outputs
  wire [63 : 0] word_fst;
  wire [4 : 0] word_snd;
  wire RDY_server_reset_request_put, RDY_server_reset_response_get, valid;

  // inlined wires
  reg [68 : 0] dw_result$wget;
  wire dw_valid$wget, dw_valid$whas;

  // register requestR
  reg [214 : 0] requestR;
  wire [214 : 0] requestR$D_IN;
  wire requestR$EN;

  // register resultR
  reg [69 : 0] resultR;
  reg [69 : 0] resultR$D_IN;
  wire resultR$EN;

  // register stateR
  reg [1 : 0] stateR;
  reg [1 : 0] stateR$D_IN;
  wire stateR$EN;

  // ports of submodule fpu
  reg [201 : 0] fpu$server_core_request_put;
  wire [69 : 0] fpu$server_core_response_get;
  wire fpu$EN_server_core_request_put,
       fpu$EN_server_core_response_get,
       fpu$EN_server_reset_request_put,
       fpu$EN_server_reset_response_get,
       fpu$RDY_server_core_request_put,
       fpu$RDY_server_core_response_get,
       fpu$RDY_server_reset_request_put,
       fpu$RDY_server_reset_response_get;

  // ports of submodule frmFpuF
  wire frmFpuF$CLR, frmFpuF$DEQ, frmFpuF$D_IN, frmFpuF$ENQ;

  // ports of submodule resetReqsF
  wire resetReqsF$CLR,
       resetReqsF$DEQ,
       resetReqsF$EMPTY_N,
       resetReqsF$ENQ,
       resetReqsF$FULL_N;

  // ports of submodule resetRspsF
  wire resetRspsF$CLR,
       resetRspsF$DEQ,
       resetRspsF$EMPTY_N,
       resetRspsF$ENQ,
       resetRspsF$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_doFADD_D,
       CAN_FIRE_RL_doFADD_S,
       CAN_FIRE_RL_doFCLASS_D,
       CAN_FIRE_RL_doFCLASS_S,
       CAN_FIRE_RL_doFCVT_D_S,
       CAN_FIRE_RL_doFCVT_D_W,
       CAN_FIRE_RL_doFCVT_D_WU,
       CAN_FIRE_RL_doFCVT_S_D,
       CAN_FIRE_RL_doFCVT_S_W,
       CAN_FIRE_RL_doFCVT_S_WU,
       CAN_FIRE_RL_doFCVT_WU_D,
       CAN_FIRE_RL_doFCVT_WU_S,
       CAN_FIRE_RL_doFCVT_W_D,
       CAN_FIRE_RL_doFCVT_W_S,
       CAN_FIRE_RL_doFDIV_D,
       CAN_FIRE_RL_doFDIV_S,
       CAN_FIRE_RL_doFEQ_D,
       CAN_FIRE_RL_doFEQ_S,
       CAN_FIRE_RL_doFLE_D,
       CAN_FIRE_RL_doFLE_S,
       CAN_FIRE_RL_doFLT_D,
       CAN_FIRE_RL_doFLT_S,
       CAN_FIRE_RL_doFMADD_D,
       CAN_FIRE_RL_doFMADD_S,
       CAN_FIRE_RL_doFMAX_D,
       CAN_FIRE_RL_doFMAX_S,
       CAN_FIRE_RL_doFMIN_D,
       CAN_FIRE_RL_doFMIN_S,
       CAN_FIRE_RL_doFMSUB_D,
       CAN_FIRE_RL_doFMSUB_S,
       CAN_FIRE_RL_doFMUL_D,
       CAN_FIRE_RL_doFMUL_S,
       CAN_FIRE_RL_doFMV_D_X,
       CAN_FIRE_RL_doFMV_W_X,
       CAN_FIRE_RL_doFMV_X_D,
       CAN_FIRE_RL_doFMV_X_W,
       CAN_FIRE_RL_doFNMADD_D,
       CAN_FIRE_RL_doFNMADD_S,
       CAN_FIRE_RL_doFNMSUB_D,
       CAN_FIRE_RL_doFNMSUB_S,
       CAN_FIRE_RL_doFSGNJN_D,
       CAN_FIRE_RL_doFSGNJN_S,
       CAN_FIRE_RL_doFSGNJX_D,
       CAN_FIRE_RL_doFSGNJX_S,
       CAN_FIRE_RL_doFSGNJ_D,
       CAN_FIRE_RL_doFSGNJ_S,
       CAN_FIRE_RL_doFSQRT_D,
       CAN_FIRE_RL_doFSQRT_S,
       CAN_FIRE_RL_doFSUB_D,
       CAN_FIRE_RL_doFSUB_S,
       CAN_FIRE_RL_rl_drive_fpu_result,
       CAN_FIRE_RL_rl_get_fpu_result,
       CAN_FIRE_RL_rl_reset_begin,
       CAN_FIRE_RL_rl_reset_end,
       CAN_FIRE_req,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       WILL_FIRE_RL_doFADD_D,
       WILL_FIRE_RL_doFADD_S,
       WILL_FIRE_RL_doFCLASS_D,
       WILL_FIRE_RL_doFCLASS_S,
       WILL_FIRE_RL_doFCVT_D_S,
       WILL_FIRE_RL_doFCVT_D_W,
       WILL_FIRE_RL_doFCVT_D_WU,
       WILL_FIRE_RL_doFCVT_S_D,
       WILL_FIRE_RL_doFCVT_S_W,
       WILL_FIRE_RL_doFCVT_S_WU,
       WILL_FIRE_RL_doFCVT_WU_D,
       WILL_FIRE_RL_doFCVT_WU_S,
       WILL_FIRE_RL_doFCVT_W_D,
       WILL_FIRE_RL_doFCVT_W_S,
       WILL_FIRE_RL_doFDIV_D,
       WILL_FIRE_RL_doFDIV_S,
       WILL_FIRE_RL_doFEQ_D,
       WILL_FIRE_RL_doFEQ_S,
       WILL_FIRE_RL_doFLE_D,
       WILL_FIRE_RL_doFLE_S,
       WILL_FIRE_RL_doFLT_D,
       WILL_FIRE_RL_doFLT_S,
       WILL_FIRE_RL_doFMADD_D,
       WILL_FIRE_RL_doFMADD_S,
       WILL_FIRE_RL_doFMAX_D,
       WILL_FIRE_RL_doFMAX_S,
       WILL_FIRE_RL_doFMIN_D,
       WILL_FIRE_RL_doFMIN_S,
       WILL_FIRE_RL_doFMSUB_D,
       WILL_FIRE_RL_doFMSUB_S,
       WILL_FIRE_RL_doFMUL_D,
       WILL_FIRE_RL_doFMUL_S,
       WILL_FIRE_RL_doFMV_D_X,
       WILL_FIRE_RL_doFMV_W_X,
       WILL_FIRE_RL_doFMV_X_D,
       WILL_FIRE_RL_doFMV_X_W,
       WILL_FIRE_RL_doFNMADD_D,
       WILL_FIRE_RL_doFNMADD_S,
       WILL_FIRE_RL_doFNMSUB_D,
       WILL_FIRE_RL_doFNMSUB_S,
       WILL_FIRE_RL_doFSGNJN_D,
       WILL_FIRE_RL_doFSGNJN_S,
       WILL_FIRE_RL_doFSGNJX_D,
       WILL_FIRE_RL_doFSGNJX_S,
       WILL_FIRE_RL_doFSGNJ_D,
       WILL_FIRE_RL_doFSGNJ_S,
       WILL_FIRE_RL_doFSQRT_D,
       WILL_FIRE_RL_doFSQRT_S,
       WILL_FIRE_RL_doFSUB_D,
       WILL_FIRE_RL_doFSUB_S,
       WILL_FIRE_RL_rl_drive_fpu_result,
       WILL_FIRE_RL_rl_get_fpu_result,
       WILL_FIRE_RL_rl_reset_begin,
       WILL_FIRE_RL_rl_reset_end,
       WILL_FIRE_req,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get;

  // inputs to muxes for submodule ports
  wire [214 : 0] MUX_requestR$write_1__VAL_2;
  wire [201 : 0] MUX_fpu$server_core_request_put_1__VAL_1,
		 MUX_fpu$server_core_request_put_1__VAL_10,
		 MUX_fpu$server_core_request_put_1__VAL_11,
		 MUX_fpu$server_core_request_put_1__VAL_12,
		 MUX_fpu$server_core_request_put_1__VAL_13,
		 MUX_fpu$server_core_request_put_1__VAL_14,
		 MUX_fpu$server_core_request_put_1__VAL_15,
		 MUX_fpu$server_core_request_put_1__VAL_16,
		 MUX_fpu$server_core_request_put_1__VAL_17,
		 MUX_fpu$server_core_request_put_1__VAL_18,
		 MUX_fpu$server_core_request_put_1__VAL_2,
		 MUX_fpu$server_core_request_put_1__VAL_3,
		 MUX_fpu$server_core_request_put_1__VAL_4,
		 MUX_fpu$server_core_request_put_1__VAL_5,
		 MUX_fpu$server_core_request_put_1__VAL_6,
		 MUX_fpu$server_core_request_put_1__VAL_7,
		 MUX_fpu$server_core_request_put_1__VAL_8,
		 MUX_fpu$server_core_request_put_1__VAL_9;
  wire [69 : 0] MUX_resultR$write_1__VAL_10,
		MUX_resultR$write_1__VAL_11,
		MUX_resultR$write_1__VAL_12,
		MUX_resultR$write_1__VAL_13,
		MUX_resultR$write_1__VAL_14,
		MUX_resultR$write_1__VAL_15,
		MUX_resultR$write_1__VAL_16,
		MUX_resultR$write_1__VAL_17,
		MUX_resultR$write_1__VAL_18,
		MUX_resultR$write_1__VAL_19,
		MUX_resultR$write_1__VAL_20,
		MUX_resultR$write_1__VAL_21,
		MUX_resultR$write_1__VAL_22,
		MUX_resultR$write_1__VAL_23,
		MUX_resultR$write_1__VAL_24,
		MUX_resultR$write_1__VAL_25,
		MUX_resultR$write_1__VAL_26,
		MUX_resultR$write_1__VAL_27,
		MUX_resultR$write_1__VAL_28,
		MUX_resultR$write_1__VAL_29,
		MUX_resultR$write_1__VAL_3,
		MUX_resultR$write_1__VAL_30,
		MUX_resultR$write_1__VAL_31,
		MUX_resultR$write_1__VAL_32,
		MUX_resultR$write_1__VAL_33,
		MUX_resultR$write_1__VAL_34,
		MUX_resultR$write_1__VAL_35,
		MUX_resultR$write_1__VAL_4,
		MUX_resultR$write_1__VAL_5,
		MUX_resultR$write_1__VAL_7,
		MUX_resultR$write_1__VAL_8,
		MUX_resultR$write_1__VAL_9;
  wire [68 : 0] MUX_dw_result$wset_1__VAL_1,
		MUX_dw_result$wset_1__VAL_10,
		MUX_dw_result$wset_1__VAL_11,
		MUX_dw_result$wset_1__VAL_12,
		MUX_dw_result$wset_1__VAL_13,
		MUX_dw_result$wset_1__VAL_14,
		MUX_dw_result$wset_1__VAL_15,
		MUX_dw_result$wset_1__VAL_16,
		MUX_dw_result$wset_1__VAL_17,
		MUX_dw_result$wset_1__VAL_18,
		MUX_dw_result$wset_1__VAL_19,
		MUX_dw_result$wset_1__VAL_2,
		MUX_dw_result$wset_1__VAL_20,
		MUX_dw_result$wset_1__VAL_21,
		MUX_dw_result$wset_1__VAL_22,
		MUX_dw_result$wset_1__VAL_23,
		MUX_dw_result$wset_1__VAL_24,
		MUX_dw_result$wset_1__VAL_25,
		MUX_dw_result$wset_1__VAL_26,
		MUX_dw_result$wset_1__VAL_27,
		MUX_dw_result$wset_1__VAL_28,
		MUX_dw_result$wset_1__VAL_29,
		MUX_dw_result$wset_1__VAL_3,
		MUX_dw_result$wset_1__VAL_30,
		MUX_dw_result$wset_1__VAL_31,
		MUX_dw_result$wset_1__VAL_32,
		MUX_dw_result$wset_1__VAL_4,
		MUX_dw_result$wset_1__VAL_5,
		MUX_dw_result$wset_1__VAL_6,
		MUX_dw_result$wset_1__VAL_7,
		MUX_dw_result$wset_1__VAL_8,
		MUX_dw_result$wset_1__VAL_9;
  wire MUX_dw_result$wset_1__SEL_1,
       MUX_dw_result$wset_1__SEL_2,
       MUX_dw_result$wset_1__SEL_30;

  // remaining internal signals
  reg [51 : 0] CASE_guard12081_0b0_theResult___snd19993_BITS__ETC__q114,
	       CASE_guard12081_0b0_theResult___snd19993_BITS__ETC__q115,
	       CASE_guard21389_0b0_sfdin29609_BITS_56_TO_5_0b_ETC__q116,
	       CASE_guard21389_0b0_sfdin29609_BITS_56_TO_5_0b_ETC__q117,
	       CASE_guard30456_0b0_theResult___snd38392_BITS__ETC__q118,
	       CASE_guard30456_0b0_theResult___snd38392_BITS__ETC__q119,
	       CASE_guard6245_0b0_sfd___36235_BITS_54_TO_3_0b_ETC__q56,
	       CASE_guard6245_0b0_sfd___36235_BITS_54_TO_3_0b_ETC__q57,
	       CASE_guard6549_0b0_sfd___36539_BITS_54_TO_3_0b_ETC__q45,
	       CASE_guard6549_0b0_sfd___36539_BITS_54_TO_3_0b_ETC__q46,
	       CASE_guard6974_0b0_sfd___36235_BITS_53_TO_2_0b_ETC__q54,
	       CASE_guard6974_0b0_sfd___36235_BITS_53_TO_2_0b_ETC__q55,
	       CASE_guard7279_0b0_sfd___36539_BITS_53_TO_2_0b_ETC__q41,
	       CASE_guard7279_0b0_sfd___36539_BITS_53_TO_2_0b_ETC__q42,
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1413,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1581,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1596,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3594,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3621,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3640;
  reg [22 : 0] CASE_guard0054_0b0_sfdin8274_BITS_56_TO_34_0b1_ETC__q82,
	       CASE_guard0054_0b0_sfdin8274_BITS_56_TO_34_0b1_ETC__q83,
	       CASE_guard1065_0b0_theResult___snd9064_BITS_56_ETC__q78,
	       CASE_guard1065_0b0_theResult___snd9064_BITS_56_ETC__q79,
	       CASE_guard2330_0b0_sfdin0421_BITS_56_TO_34_0b1_ETC__q80,
	       CASE_guard2330_0b0_sfdin0421_BITS_56_TO_34_0b1_ETC__q81,
	       CASE_guard248_0b0_sfd___3708_BITS_30_TO_8_0b1__ETC__q18,
	       CASE_guard248_0b0_sfd___3708_BITS_30_TO_8_0b1__ETC__q19,
	       CASE_guard3895_0b0_sfd___33885_BITS_31_TO_9_0b_ETC__q29,
	       CASE_guard3895_0b0_sfd___33885_BITS_31_TO_9_0b_ETC__q30,
	       CASE_guard4421_0b0_sfd___33885_BITS_30_TO_8_0b_ETC__q27,
	       CASE_guard4421_0b0_sfd___33885_BITS_30_TO_8_0b_ETC__q28,
	       CASE_guard718_0b0_sfd___3708_BITS_31_TO_9_0b1__ETC__q16,
	       CASE_guard718_0b0_sfd___3708_BITS_31_TO_9_0b1__ETC__q17,
	       CASE_guard8918_0b0_theResult___snd6941_BITS_56_ETC__q84,
	       CASE_guard8918_0b0_theResult___snd6941_BITS_56_ETC__q85,
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2759,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2778,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2805,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2824,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d425,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d443,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d743,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d758;
  reg [10 : 0] CASE_guard12081_0b0_theResult___fst_exp20042_0_ETC__q102,
	       CASE_guard12081_0b0_theResult___fst_exp20042_0_ETC__q103,
	       CASE_guard21389_0b0_theResult___fst_exp29615_0_ETC__q104,
	       CASE_guard21389_0b0_theResult___fst_exp29615_0_ETC__q105,
	       CASE_guard30456_0b0_theResult___fst_exp38446_0_ETC__q106,
	       CASE_guard30456_0b0_theResult___fst_exp38446_0_ETC__q107,
	       CASE_guard6245_0b0_0_0b1_0_0b10_out_exp6864_0b_ETC__q49,
	       CASE_guard6245_0b0_0_0b1_theResult___exp6861_0_ETC__q50,
	       CASE_guard6549_0b0_0_0b1_0_0b10_out_exp7168_0b_ETC__q44,
	       CASE_guard6549_0b0_0_0b1_theResult___exp7165_0_ETC__q43,
	       CASE_guard6974_0b0_x6989_BITS_10_TO_0_0b1_theR_ETC__q52,
	       CASE_guard6974_0b0_x6989_BITS_10_TO_0_0b1_x698_ETC__q53,
	       CASE_guard7279_0b0_x7294_BITS_10_TO_0_0b1_theR_ETC__q39,
	       CASE_guard7279_0b0_x7294_BITS_10_TO_0_0b1_x729_ETC__q40,
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4,
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard6245_ETC__q51,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1343,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1559,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3167,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3492,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3561;
  reg [7 : 0] CASE_guard0054_0b0_theResult___fst_exp8280_0b1_ETC__q74,
	      CASE_guard0054_0b0_theResult___fst_exp8280_0b1_ETC__q75,
	      CASE_guard1065_0b0_theResult___fst_exp9113_0b1_ETC__q72,
	      CASE_guard1065_0b0_theResult___fst_exp9113_0b1_ETC__q73,
	      CASE_guard2330_0b0_theResult___fst_exp0427_0b1_ETC__q70,
	      CASE_guard2330_0b0_theResult___fst_exp0427_0b1_ETC__q71,
	      CASE_guard248_0b0_x263_BITS_7_TO_0_0b1_theResu_ETC__q14,
	      CASE_guard248_0b0_x263_BITS_7_TO_0_0b1_x263_BI_ETC__q15,
	      CASE_guard3895_0b0_0_0b1_0_0b10_out_exp4311_0b_ETC__q22,
	      CASE_guard3895_0b0_0_0b1_theResult___exp4308_0_ETC__q23,
	      CASE_guard4421_0b0_x4436_BITS_7_TO_0_0b1_theRe_ETC__q25,
	      CASE_guard4421_0b0_x4436_BITS_7_TO_0_0b1_x4436_ETC__q26,
	      CASE_guard718_0b0_0_0b1_0_0b10_out_exp137_0b11_ETC__q13,
	      CASE_guard718_0b0_0_0b1_theResult___exp134_0b1_ETC__q12,
	      CASE_guard8918_0b0_theResult___fst_exp6995_0b1_ETC__q76,
	      CASE_guard8918_0b0_theResult___fst_exp6995_0b1_ETC__q77,
	      CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2,
	      CASE_requestR_BITS_194_TO_192_0x3_IF_guard3895_ETC__q24,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2172,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2329,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2656,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2725,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d373,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d402,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d720;
  reg [2 : 0] IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50;
  reg CASE_guard0054_0b0_requestR_BIT_191_0b1_reques_ETC__q90,
      CASE_guard1065_0b0_requestR_BIT_191_0b1_reques_ETC__q88,
      CASE_guard12081_0b0_requestR_BITS_191_TO_160_E_ETC__q108,
      CASE_guard21389_0b0_requestR_BITS_191_TO_160_E_ETC__q110,
      CASE_guard2330_0b0_requestR_BIT_191_0b1_reques_ETC__q86,
      CASE_guard248_0b0_requestR_BIT_159_0b1_request_ETC__q10,
      CASE_guard30456_0b0_requestR_BITS_191_TO_160_E_ETC__q112,
      CASE_guard6549_0b0_requestR_BIT_159_0b1_reques_ETC__q35,
      CASE_guard718_0b0_requestR_BIT_159_0b1_request_ETC__q8,
      CASE_guard7279_0b0_requestR_BIT_159_0b1_reques_ETC__q37,
      CASE_guard8918_0b0_requestR_BIT_191_0b1_reques_ETC__q92,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93;
  wire [85 : 0] IF_requestR_3_BIT_191_219_THEN_NEG_0b0_CONCAT__ETC___d1651,
		b__h48384,
		x__h49060,
		x__h50138;
  wire [64 : 0] _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78;
  wire [63 : 0] IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1058,
		IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1074,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1057,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1059,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1073,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1075,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1145,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1146,
		IF_requestR_3_BITS_126_TO_116_778_EQ_2047_779__ETC___d3826,
		IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_ETC___d3840,
		IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_ETC___d3911,
		res___1__h156600,
		res___1__h157038,
		res___1__h157048,
		res___1__h157067,
		res___1__h26803,
		res___1__h27039,
		res___1__h27049,
		res___1__h27068,
		res__h139866,
		res__h144308,
		res__h148856,
		res__h151560,
		res__h154255,
		res__h156132,
		res__h157083,
		res__h157265,
		res__h18407,
		res__h18644,
		res__h24016,
		res__h25499,
		res__h26568,
		res__h27084,
		res__h98061,
		x__h140891,
		x__h145439,
		x__h149883,
		x__h152578,
		x__h15386,
		x__h154455,
		x__h156582,
		x__h157232,
		x__h16979,
		x__h17729,
		x__h20363,
		x__h22888,
		x__h23009,
		x__h23147,
		x__h2356,
		x__h24630,
		x__h2502,
		x__h25699,
		x__h2636,
		x__h26785,
		x__h2783,
		x__h28147,
		x__h28269,
		x__h28393,
		x__h28523,
		x__h38471,
		x__h48138,
		x__h49714,
		x__h50460,
		x__h9244,
		x__h99165;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65,
		IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q100,
		IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q94,
		IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629__ETC__q62,
		IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629__ETC__q68,
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d850,
		_0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3185,
		_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_629__ETC___d2351,
		_theResult____h121379,
		_theResult____h62320,
		_theResult____h80044,
		_theResult___snd__h119993,
		_theResult___snd__h119995,
		_theResult___snd__h120002,
		_theResult___snd__h120008,
		_theResult___snd__h120031,
		_theResult___snd__h129626,
		_theResult___snd__h129637,
		_theResult___snd__h129639,
		_theResult___snd__h129649,
		_theResult___snd__h129655,
		_theResult___snd__h129678,
		_theResult___snd__h138392,
		_theResult___snd__h138406,
		_theResult___snd__h138412,
		_theResult___snd__h138430,
		_theResult___snd__h70438,
		_theResult___snd__h70449,
		_theResult___snd__h70451,
		_theResult___snd__h70461,
		_theResult___snd__h70467,
		_theResult___snd__h70490,
		_theResult___snd__h79064,
		_theResult___snd__h79066,
		_theResult___snd__h79073,
		_theResult___snd__h79079,
		_theResult___snd__h79102,
		_theResult___snd__h88291,
		_theResult___snd__h88302,
		_theResult___snd__h88304,
		_theResult___snd__h88314,
		_theResult___snd__h88320,
		_theResult___snd__h88343,
		_theResult___snd__h96941,
		_theResult___snd__h96955,
		_theResult___snd__h96961,
		_theResult___snd__h96979,
		b__h15632,
		result__h121992,
		result__h80657,
		sfd__h54690,
		sfdin__h129609,
		sfdin__h70421,
		sfdin__h88274,
		x__h122087,
		x__h16308,
		x__h17403,
		x__h80752;
  wire [54 : 0] sfd___3__h36539, sfd___3__h46235, sfd__h28538, sfd__h38483;
  wire [53 : 0] sfd__h120060,
		sfd__h129707,
		sfd__h138465,
		sfd__h36566,
		sfd__h37309,
		sfd__h46262,
		sfd__h47004,
		value__h48386;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3615,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3617,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3588,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3590,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3634,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3636,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1389,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1391,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1407,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1409,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3647,
		IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d1417,
		IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d1600,
		_theResult___fst_sfd__h104970,
		_theResult___fst_sfd__h120796,
		_theResult___fst_sfd__h120799,
		_theResult___fst_sfd__h130443,
		_theResult___fst_sfd__h130446,
		_theResult___fst_sfd__h139225,
		_theResult___fst_sfd__h139228,
		_theResult___fst_sfd__h139237,
		_theResult___fst_sfd__h139243,
		_theResult___fst_sfd__h37263,
		_theResult___fst_sfd__h38019,
		_theResult___fst_sfd__h38022,
		_theResult___fst_sfd__h46958,
		_theResult___fst_sfd__h47713,
		_theResult___fst_sfd__h47716,
		_theResult___fst_sfd__h50986,
		_theResult___sfd__h120698,
		_theResult___sfd__h130345,
		_theResult___sfd__h139127,
		_theResult___sfd__h37166,
		_theResult___sfd__h37922,
		_theResult___sfd__h46862,
		_theResult___sfd__h47617,
		_theResult___snd_fst_sfd__h101116,
		_theResult___snd_fst_sfd__h120802,
		_theResult___snd_fst_sfd__h139231,
		_theResult___snd_fst_sfd__h38025,
		_theResult___snd_fst_sfd__h47719,
		out___1_sfd__h99230,
		out_sfd__h120701,
		out_sfd__h130348,
		out_sfd__h139130,
		out_sfd__h37169,
		out_sfd__h37925,
		out_sfd__h46865,
		out_sfd__h47620,
		value__h50529;
  wire [32 : 0] _theResult_____2__h15567,
		_theResult_____2__h48319,
		out1___1__h16059,
		out1___1__h48811;
  wire [31 : 0] IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1054,
		IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1068,
		IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1070,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1055,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1071,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d909,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d969,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d905,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d907,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d967,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1706,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1708,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1768,
		IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1052,
		IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1067,
		IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_ETC___d1770,
		IF_requestR_3_BITS_190_TO_180_629_EQ_2047_630__ETC___d1710,
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d838,
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d971,
		IF_requestR_3_BIT_191_219_THEN_2147483648_ELSE_ETC___d1639,
		requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
		requestR_BITS_159_TO_128__q1,
		sfd___3__h13885,
		sfd___3__h7708,
		sfd__h2804,
		x__h15389,
		x__h16982,
		x__h2362,
		x__h2508,
		x__h2642,
		x__h2789,
		x__h48141,
		x__h49717,
		x__h98067;
  wire [30 : 0] IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29;
  wire [24 : 0] sfd__h13912,
		sfd__h14451,
		sfd__h70519,
		sfd__h7735,
		sfd__h79131,
		sfd__h8278,
		sfd__h88372,
		sfd__h97014,
		value__h15634;
  wire [23 : 0] NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1644,
		NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1676,
		NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1677,
		NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1741;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2753,
		IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2755,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2799,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2801,
		IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2772,
		IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2774,
		IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2818,
		IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2820,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d419,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d421,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d437,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d439,
		IF_requestR_3_BITS_190_TO_180_629_EQ_2047_630__ETC___d2831,
		_theResult___fst_sfd__h14405,
		_theResult___fst_sfd__h14957,
		_theResult___fst_sfd__h14960,
		_theResult___fst_sfd__h62303,
		_theResult___fst_sfd__h71052,
		_theResult___fst_sfd__h71055,
		_theResult___fst_sfd__h79664,
		_theResult___fst_sfd__h79667,
		_theResult___fst_sfd__h8232,
		_theResult___fst_sfd__h8785,
		_theResult___fst_sfd__h8788,
		_theResult___fst_sfd__h88905,
		_theResult___fst_sfd__h88908,
		_theResult___fst_sfd__h97571,
		_theResult___fst_sfd__h97574,
		_theResult___fst_sfd__h97583,
		_theResult___fst_sfd__h97589,
		_theResult___fst_sfd__h99488,
		_theResult___sfd__h14309,
		_theResult___sfd__h14861,
		_theResult___sfd__h70954,
		_theResult___sfd__h79566,
		_theResult___sfd__h8135,
		_theResult___sfd__h8688,
		_theResult___sfd__h88807,
		_theResult___sfd__h97473,
		_theResult___snd_fst_sfd__h14963,
		_theResult___snd_fst_sfd__h54644,
		_theResult___snd_fst_sfd__h79670,
		_theResult___snd_fst_sfd__h8791,
		_theResult___snd_fst_sfd__h97577,
		out_sfd__h14312,
		out_sfd__h14864,
		out_sfd__h70957,
		out_sfd__h79569,
		out_sfd__h8138,
		out_sfd__h8691,
		out_sfd__h88810,
		out_sfd__h97476,
		sV1_sfd__h1206,
		sV2_sfd__h1309,
		value__h99233;
  wire [19 : 0] NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d843,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d875,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d876,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d940;
  wire [11 : 0] IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3501,
		SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3178,
		SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96,
		SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2344,
		SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC__q64,
		_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1873,
		_3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3181,
		_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1263,
		_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1478,
		_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3035,
		_3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_629_ETC___d2347,
		x__h122120,
		x__h37294,
		x__h46989,
		x__h80785;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3486,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3488,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3161,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3163,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3555,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3557,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1340,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1366,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1368,
		SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99,
		_theResult___exp__h120697,
		_theResult___exp__h130344,
		_theResult___exp__h139126,
		_theResult___exp__h37165,
		_theResult___exp__h37921,
		_theResult___exp__h46861,
		_theResult___exp__h47616,
		_theResult___fst_exp__h104969,
		_theResult___fst_exp__h120033,
		_theResult___fst_exp__h120039,
		_theResult___fst_exp__h120042,
		_theResult___fst_exp__h120795,
		_theResult___fst_exp__h120798,
		_theResult___fst_exp__h129615,
		_theResult___fst_exp__h129680,
		_theResult___fst_exp__h129686,
		_theResult___fst_exp__h129689,
		_theResult___fst_exp__h130442,
		_theResult___fst_exp__h130445,
		_theResult___fst_exp__h138398,
		_theResult___fst_exp__h138437,
		_theResult___fst_exp__h138443,
		_theResult___fst_exp__h138446,
		_theResult___fst_exp__h139224,
		_theResult___fst_exp__h139227,
		_theResult___fst_exp__h139236,
		_theResult___fst_exp__h139239,
		_theResult___fst_exp__h37262,
		_theResult___fst_exp__h38018,
		_theResult___fst_exp__h38021,
		_theResult___fst_exp__h46957,
		_theResult___fst_exp__h47712,
		_theResult___fst_exp__h47715,
		_theResult___snd_fst_exp__h120801,
		_theResult___snd_fst_exp__h139230,
		_theResult___snd_fst_exp__h38024,
		_theResult___snd_fst_exp__h38027,
		_theResult___snd_fst_exp__h38030,
		_theResult___snd_fst_exp__h47718,
		_theResult___snd_fst_exp__h47721,
		_theResult___snd_fst_exp__h47724,
		din_inc___2_exp__h139262,
		din_inc___2_exp__h139292,
		din_inc___2_exp__h139316,
		din_inc___2_exp__h38064,
		din_inc___2_exp__h47754,
		out_exp__h120700,
		out_exp__h130347,
		out_exp__h139129,
		out_exp__h37168,
		out_exp__h37924,
		out_exp__h46864,
		out_exp__h47619,
		requestR_3_BITS_190_TO_180_629_MINUS_1023___d1642,
		x__h99174;
  wire [8 : 0] IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2665,
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281,
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d639,
	       x__h14436,
	       x__h8263;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2166,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2168,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2650,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2652,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2323,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2325,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2719,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2721,
	       IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d370,
	       IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d396,
	       IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d398,
	       IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d408,
	       IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d726,
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d841,
	       SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC__q67,
	       _theResult___exp__h14308,
	       _theResult___exp__h14860,
	       _theResult___exp__h70953,
	       _theResult___exp__h79565,
	       _theResult___exp__h8134,
	       _theResult___exp__h8687,
	       _theResult___exp__h88806,
	       _theResult___exp__h97472,
	       _theResult___fst_exp__h14404,
	       _theResult___fst_exp__h14956,
	       _theResult___fst_exp__h14959,
	       _theResult___fst_exp__h62302,
	       _theResult___fst_exp__h70427,
	       _theResult___fst_exp__h70492,
	       _theResult___fst_exp__h70498,
	       _theResult___fst_exp__h70501,
	       _theResult___fst_exp__h71051,
	       _theResult___fst_exp__h71054,
	       _theResult___fst_exp__h79104,
	       _theResult___fst_exp__h79110,
	       _theResult___fst_exp__h79113,
	       _theResult___fst_exp__h79663,
	       _theResult___fst_exp__h79666,
	       _theResult___fst_exp__h8231,
	       _theResult___fst_exp__h8784,
	       _theResult___fst_exp__h8787,
	       _theResult___fst_exp__h88280,
	       _theResult___fst_exp__h88345,
	       _theResult___fst_exp__h88351,
	       _theResult___fst_exp__h88354,
	       _theResult___fst_exp__h88904,
	       _theResult___fst_exp__h88907,
	       _theResult___fst_exp__h96947,
	       _theResult___fst_exp__h96986,
	       _theResult___fst_exp__h96992,
	       _theResult___fst_exp__h96995,
	       _theResult___fst_exp__h97570,
	       _theResult___fst_exp__h97573,
	       _theResult___fst_exp__h97582,
	       _theResult___fst_exp__h97585,
	       _theResult___snd_fst_exp__h14962,
	       _theResult___snd_fst_exp__h14965,
	       _theResult___snd_fst_exp__h14968,
	       _theResult___snd_fst_exp__h79669,
	       _theResult___snd_fst_exp__h8790,
	       _theResult___snd_fst_exp__h8793,
	       _theResult___snd_fst_exp__h8796,
	       _theResult___snd_fst_exp__h97576,
	       din_inc___2_exp__h14998,
	       din_inc___2_exp__h8830,
	       din_inc___2_exp__h97604,
	       din_inc___2_exp__h97628,
	       din_inc___2_exp__h97658,
	       din_inc___2_exp__h97682,
	       out_exp__h14311,
	       out_exp__h14863,
	       out_exp__h70956,
	       out_exp__h79568,
	       out_exp__h8137,
	       out_exp__h8690,
	       out_exp__h88809,
	       out_exp__h97475,
	       sV1_exp__h1205,
	       sV2_exp__h1308,
	       x__h50469;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2107,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3427,
	       IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2591,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3107,
	       IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1260,
	       IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d278,
	       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2269,
	       IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1475,
	       IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d636;
  wire [4 : 0] _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2891,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3714,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2920,
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3697,
	       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2903,
	       x__h139968,
	       x__h144440,
	       x__h15102,
	       x__h154274,
	       x__h16722,
	       x__h17481,
	       x__h19768,
	       x__h25518,
	       x__h38186,
	       x__h47854,
	       x__h49457,
	       x__h50216,
	       x__h8956,
	       x__h98182;
  wire [1 : 0] IF_sfd___33885_BIT_7_THEN_2_ELSE_0__q21,
	       IF_sfd___33885_BIT_8_THEN_2_ELSE_0__q20,
	       IF_sfd___36235_BIT_1_THEN_2_ELSE_0__q48,
	       IF_sfd___36235_BIT_2_THEN_2_ELSE_0__q47,
	       IF_sfd___36539_BIT_1_THEN_2_ELSE_0__q34,
	       IF_sfd___36539_BIT_2_THEN_2_ELSE_0__q33,
	       IF_sfd___3708_BIT_7_THEN_2_ELSE_0__q7,
	       IF_sfd___3708_BIT_8_THEN_2_ELSE_0__q6,
	       IF_sfdin0421_BIT_33_THEN_2_ELSE_0__q61,
	       IF_sfdin29609_BIT_4_THEN_2_ELSE_0__q98,
	       IF_sfdin8274_BIT_33_THEN_2_ELSE_0__q66,
	       IF_theResult___snd19993_BIT_4_THEN_2_ELSE_0__q95,
	       IF_theResult___snd38392_BIT_4_THEN_2_ELSE_0__q101,
	       IF_theResult___snd6941_BIT_33_THEN_2_ELSE_0__q69,
	       IF_theResult___snd9064_BIT_33_THEN_2_ELSE_0__q63,
	       IF_x0138_BIT_53_THEN_2_ELSE_0__q59,
	       IF_x6308_BIT_24_THEN_2_ELSE_0__q31,
	       IF_x7403_BIT_24_THEN_2_ELSE_0__q32,
	       IF_x9060_BIT_53_THEN_2_ELSE_0__q58,
	       guard__h112081,
	       guard__h121389,
	       guard__h130456,
	       guard__h13895,
	       guard__h14421,
	       guard__h15565,
	       guard__h16119,
	       guard__h17182,
	       guard__h36549,
	       guard__h37279,
	       guard__h46245,
	       guard__h46974,
	       guard__h48317,
	       guard__h48871,
	       guard__h49917,
	       guard__h62330,
	       guard__h71065,
	       guard__h7718,
	       guard__h80054,
	       guard__h8248,
	       guard__h88918;
  wire IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_8_ETC___d2853,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1319,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1434,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d348,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d498,
       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d1617,
       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d812,
       IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3671,
       IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3679,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3683,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3718,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3721,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3728,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3742,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3754,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3766,
       IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d931,
       IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1732,
       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1320,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3663,
       IF_NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1047,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3681,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3740,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3752,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3764,
       IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2871,
       IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2949,
       IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2962,
       IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2975,
       IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1027,
       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2873,
       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2924,
       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2935,
       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2951,
       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2964,
       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2977,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1013,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1023,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1036,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1037,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1038,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1041,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1043,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1061,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1098,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1109,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1113,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d979,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d990,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1668,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1700,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1762,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d867,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d899,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d961,
       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d489,
       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d492,
       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d501,
       IF_requestR_3_BIT_191_219_THEN_NOT_requestR_3__ETC___d3819,
       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d878,
       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d942,
       NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1679,
       NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1743,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2943,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2971,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1050,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1051,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1108,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1114,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1132,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3080,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d920,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d984,
       NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d286,
       NOT_requestR_3_BITS_159_TO_128_47_EQ_0_48_49_A_ETC___d804,
       NOT_requestR_3_BITS_190_TO_180_629_EQ_0_640_64_ETC___d1721,
       NOT_requestR_3_BITS_190_TO_180_629_EQ_0_640_64_ETC___d1785,
       NOT_requestR_3_BITS_190_TO_180_629_EQ_2047_630_ETC___d3823,
       NOT_requestR_3_BITS_190_TO_180_629_EQ_2047_630_ETC___d3888,
       NOT_requestR_3_BITS_190_TO_180_629_ULT_request_ETC___d3865,
       NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1112,
       NOT_requestR_3_BIT_158_11_12_AND_NOT_requestR__ETC___d602,
       NOT_requestR_3_BIT_179_800_175_AND_NOT_request_ETC___d2214,
       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3179,
       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3180,
       SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2345,
       SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2346,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2109,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3429,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2593,
       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3109,
       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3502,
       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2271,
       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2666,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1874,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1875,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d2906,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d2931,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d2958,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1264,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1266,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1268,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d282,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d287,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1479,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1480,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1481,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d640,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d641,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d642,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3036,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3037,
       guard__h121987,
       guard__h80652,
       requestR_3_BITS_126_TO_116_778_EQ_0_792_AND_re_ETC___d3799,
       requestR_3_BITS_179_TO_128_631_ULE_requestR_3__ETC___d3811,
       requestR_3_BITS_179_TO_128_631_ULT_requestR_3__ETC___d3816,
       requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_re_ETC___d3795,
       requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_re_ETC___d3869,
       requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d1780,
       requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d1791,
       requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3787,
       requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3832,
       requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3854,
       requestR_3_BITS_190_TO_180_629_EQ_requestR_3_B_ETC___d3810,
       requestR_3_BITS_190_TO_180_629_ULE_requestR_3__ETC___d3808,
       requestR_3_BITS_190_TO_180_629_ULE_requestR_3__ETC___d3864,
       requestR_3_BITS_190_TO_180_629_ULT_requestR_3__ETC___d3815,
       requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1049,
       requestR_3_BIT_158_11_OR_requestR_3_BIT_157_13_ETC___d793,
       requestR_3_BIT_159_6_OR_requestR_3_BIT_158_11__ETC___d815;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = resetReqsF$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = resetReqsF$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // value method valid
  assign valid = dw_valid$whas && dw_valid$wget ;

  // value method word_fst
  assign word_fst = dw_result$wget[68:5] ;

  // value method word_snd
  assign word_snd = dw_result$wget[4:0] ;

  // submodule fpu
  mkFPU fpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .server_core_request_put(fpu$server_core_request_put),
	    .EN_server_core_request_put(fpu$EN_server_core_request_put),
	    .EN_server_core_response_get(fpu$EN_server_core_response_get),
	    .EN_server_reset_request_put(fpu$EN_server_reset_request_put),
	    .EN_server_reset_response_get(fpu$EN_server_reset_response_get),
	    .RDY_server_core_request_put(fpu$RDY_server_core_request_put),
	    .server_core_response_get(fpu$server_core_response_get),
	    .RDY_server_core_response_get(fpu$RDY_server_core_response_get),
	    .RDY_server_reset_request_put(fpu$RDY_server_reset_request_put),
	    .RDY_server_reset_response_get(fpu$RDY_server_reset_response_get));

  // submodule frmFpuF
  FIFO2 #(.width(32'd1), .guarded(32'd1)) frmFpuF(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(frmFpuF$D_IN),
						  .ENQ(frmFpuF$ENQ),
						  .DEQ(frmFpuF$DEQ),
						  .CLR(frmFpuF$CLR),
						  .D_OUT(),
						  .FULL_N(),
						  .EMPTY_N());

  // submodule resetReqsF
  FIFO20 #(.guarded(32'd1)) resetReqsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetReqsF$ENQ),
				       .DEQ(resetReqsF$DEQ),
				       .CLR(resetReqsF$CLR),
				       .FULL_N(resetReqsF$FULL_N),
				       .EMPTY_N(resetReqsF$EMPTY_N));

  // submodule resetRspsF
  FIFO20 #(.guarded(32'd1)) resetRspsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetRspsF$ENQ),
				       .DEQ(resetRspsF$DEQ),
				       .CLR(resetRspsF$CLR),
				       .FULL_N(resetRspsF$FULL_N),
				       .EMPTY_N(resetRspsF$EMPTY_N));

  // rule RL_rl_reset_end
  assign CAN_FIRE_RL_rl_reset_end =
	     fpu$RDY_server_reset_response_get && resetRspsF$FULL_N &&
	     stateR == 2'd0 ;
  assign WILL_FIRE_RL_rl_reset_end = CAN_FIRE_RL_rl_reset_end ;

  // rule RL_doFADD_S
  assign CAN_FIRE_RL_doFADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0 ;
  assign WILL_FIRE_RL_doFADD_S = CAN_FIRE_RL_doFADD_S ;

  // rule RL_doFSUB_S
  assign CAN_FIRE_RL_doFSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h04 ;
  assign WILL_FIRE_RL_doFSUB_S = CAN_FIRE_RL_doFSUB_S ;

  // rule RL_doFMUL_S
  assign CAN_FIRE_RL_doFMUL_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h08 ;
  assign WILL_FIRE_RL_doFMUL_S = CAN_FIRE_RL_doFMUL_S ;

  // rule RL_doFMADD_S
  assign CAN_FIRE_RL_doFMADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMADD_S = CAN_FIRE_RL_doFMADD_S ;

  // rule RL_doFMSUB_S
  assign CAN_FIRE_RL_doFMSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMSUB_S = CAN_FIRE_RL_doFMSUB_S ;

  // rule RL_doFNMADD_S
  assign CAN_FIRE_RL_doFNMADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMADD_S = CAN_FIRE_RL_doFNMADD_S ;

  // rule RL_doFNMSUB_S
  assign CAN_FIRE_RL_doFNMSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMSUB_S = CAN_FIRE_RL_doFNMSUB_S ;

  // rule RL_doFDIV_S
  assign CAN_FIRE_RL_doFDIV_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0C ;
  assign WILL_FIRE_RL_doFDIV_S = CAN_FIRE_RL_doFDIV_S ;

  // rule RL_doFSQRT_S
  assign CAN_FIRE_RL_doFSQRT_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h2C ;
  assign WILL_FIRE_RL_doFSQRT_S = CAN_FIRE_RL_doFSQRT_S ;

  // rule RL_doFSGNJ_S
  assign CAN_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;
  assign WILL_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;

  // rule RL_doFSGNJN_S
  assign CAN_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;
  assign WILL_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;

  // rule RL_doFSGNJX_S
  assign CAN_FIRE_RL_doFSGNJX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_S = CAN_FIRE_RL_doFSGNJX_S ;

  // rule RL_doFCVT_S_W
  assign CAN_FIRE_RL_doFCVT_S_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_S_W = CAN_FIRE_RL_doFCVT_S_W ;

  // rule RL_doFCVT_S_WU
  assign CAN_FIRE_RL_doFCVT_S_WU =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_WU = CAN_FIRE_RL_doFCVT_S_WU ;

  // rule RL_doFCVT_W_S
  assign CAN_FIRE_RL_doFCVT_W_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_S = CAN_FIRE_RL_doFCVT_W_S ;

  // rule RL_doFCVT_WU_S
  assign CAN_FIRE_RL_doFCVT_WU_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_S = CAN_FIRE_RL_doFCVT_WU_S ;

  // rule RL_doFMIN_S
  assign CAN_FIRE_RL_doFMIN_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_S = CAN_FIRE_RL_doFMIN_S ;

  // rule RL_doFMAX_S
  assign CAN_FIRE_RL_doFMAX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_S = CAN_FIRE_RL_doFMAX_S ;

  // rule RL_doFMV_W_X
  assign CAN_FIRE_RL_doFMV_W_X =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h78 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_W_X = CAN_FIRE_RL_doFMV_W_X ;

  // rule RL_doFMV_X_W
  assign CAN_FIRE_RL_doFMV_X_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_W = CAN_FIRE_RL_doFMV_X_W ;

  // rule RL_doFEQ_S
  assign CAN_FIRE_RL_doFEQ_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_S = CAN_FIRE_RL_doFEQ_S ;

  // rule RL_doFLT_S
  assign CAN_FIRE_RL_doFLT_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_S = CAN_FIRE_RL_doFLT_S ;

  // rule RL_doFLE_S
  assign CAN_FIRE_RL_doFLE_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_S = CAN_FIRE_RL_doFLE_S ;

  // rule RL_doFCLASS_S
  assign CAN_FIRE_RL_doFCLASS_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_S = CAN_FIRE_RL_doFCLASS_S ;

  // rule RL_doFADD_D
  assign CAN_FIRE_RL_doFADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h01 ;
  assign WILL_FIRE_RL_doFADD_D = CAN_FIRE_RL_doFADD_D ;

  // rule RL_doFSUB_D
  assign CAN_FIRE_RL_doFSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h05 ;
  assign WILL_FIRE_RL_doFSUB_D = CAN_FIRE_RL_doFSUB_D ;

  // rule RL_doFMUL_D
  assign CAN_FIRE_RL_doFMUL_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h09 ;
  assign WILL_FIRE_RL_doFMUL_D = CAN_FIRE_RL_doFMUL_D ;

  // rule RL_doFMADD_D
  assign CAN_FIRE_RL_doFMADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMADD_D = CAN_FIRE_RL_doFMADD_D ;

  // rule RL_doFMSUB_D
  assign CAN_FIRE_RL_doFMSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMSUB_D = CAN_FIRE_RL_doFMSUB_D ;

  // rule RL_doFNMADD_D
  assign CAN_FIRE_RL_doFNMADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMADD_D = CAN_FIRE_RL_doFNMADD_D ;

  // rule RL_doFNMSUB_D
  assign CAN_FIRE_RL_doFNMSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMSUB_D = CAN_FIRE_RL_doFNMSUB_D ;

  // rule RL_doFDIV_D
  assign CAN_FIRE_RL_doFDIV_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0D ;
  assign WILL_FIRE_RL_doFDIV_D = CAN_FIRE_RL_doFDIV_D ;

  // rule RL_doFSQRT_D
  assign CAN_FIRE_RL_doFSQRT_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h2D ;
  assign WILL_FIRE_RL_doFSQRT_D = CAN_FIRE_RL_doFSQRT_D ;

  // rule RL_doFSGNJ_D
  assign CAN_FIRE_RL_doFSGNJ_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_D = CAN_FIRE_RL_doFSGNJ_D ;

  // rule RL_doFSGNJN_D
  assign CAN_FIRE_RL_doFSGNJN_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_D = CAN_FIRE_RL_doFSGNJN_D ;

  // rule RL_doFSGNJX_D
  assign CAN_FIRE_RL_doFSGNJX_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_D = CAN_FIRE_RL_doFSGNJX_D ;

  // rule RL_doFCVT_D_W
  assign CAN_FIRE_RL_doFCVT_D_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_W = CAN_FIRE_RL_doFCVT_D_W ;

  // rule RL_doFCVT_D_WU
  assign CAN_FIRE_RL_doFCVT_D_WU =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_D_WU = CAN_FIRE_RL_doFCVT_D_WU ;

  // rule RL_doFCVT_W_D
  assign CAN_FIRE_RL_doFCVT_W_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_D = CAN_FIRE_RL_doFCVT_W_D ;

  // rule RL_doFCVT_WU_D
  assign CAN_FIRE_RL_doFCVT_WU_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_D = CAN_FIRE_RL_doFCVT_WU_D ;

  // rule RL_doFCVT_S_D
  assign CAN_FIRE_RL_doFCVT_S_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h20 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_D = CAN_FIRE_RL_doFCVT_S_D ;

  // rule RL_doFCVT_D_S
  assign CAN_FIRE_RL_doFCVT_D_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h21 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_S = CAN_FIRE_RL_doFCVT_D_S ;

  // rule RL_doFMIN_D
  assign CAN_FIRE_RL_doFMIN_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_D = CAN_FIRE_RL_doFMIN_D ;

  // rule RL_doFMAX_D
  assign CAN_FIRE_RL_doFMAX_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_D = CAN_FIRE_RL_doFMAX_D ;

  // rule RL_doFEQ_D
  assign CAN_FIRE_RL_doFEQ_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_D = CAN_FIRE_RL_doFEQ_D ;

  // rule RL_doFLT_D
  assign CAN_FIRE_RL_doFLT_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_D = CAN_FIRE_RL_doFLT_D ;

  // rule RL_doFLE_D
  assign CAN_FIRE_RL_doFLE_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_D = CAN_FIRE_RL_doFLE_D ;

  // rule RL_doFMV_D_X
  assign CAN_FIRE_RL_doFMV_D_X =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h79 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_D_X = CAN_FIRE_RL_doFMV_D_X ;

  // rule RL_doFMV_X_D
  assign CAN_FIRE_RL_doFMV_X_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_D = CAN_FIRE_RL_doFMV_X_D ;

  // rule RL_doFCLASS_D
  assign CAN_FIRE_RL_doFCLASS_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_D = CAN_FIRE_RL_doFCLASS_D ;

  // rule RL_rl_get_fpu_result
  assign CAN_FIRE_RL_rl_get_fpu_result =
	     fpu$RDY_server_core_response_get && stateR == 2'd2 ;
  assign WILL_FIRE_RL_rl_get_fpu_result = CAN_FIRE_RL_rl_get_fpu_result ;

  // rule RL_rl_drive_fpu_result
  assign CAN_FIRE_RL_rl_drive_fpu_result = stateR == 2'd3 ;
  assign WILL_FIRE_RL_rl_drive_fpu_result = stateR == 2'd3 ;

  // rule RL_rl_reset_begin
  assign CAN_FIRE_RL_rl_reset_begin =
	     fpu$RDY_server_reset_request_put && resetReqsF$EMPTY_N ;
  assign WILL_FIRE_RL_rl_reset_begin = CAN_FIRE_RL_rl_reset_begin ;

  // inputs to muxes for submodule ports
  assign MUX_dw_result$wset_1__SEL_1 =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h1 ;
  assign MUX_dw_result$wset_1__SEL_2 =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h0 ;
  assign MUX_dw_result$wset_1__SEL_30 =
	     WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ;
  assign MUX_dw_result$wset_1__VAL_1 = { x__h2502, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_2 = { x__h2356, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_3 = { x__h2636, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_4 = { x__h2783, x__h8956 } ;
  assign MUX_dw_result$wset_1__VAL_5 = { x__h9244, x__h15102 } ;
  assign MUX_dw_result$wset_1__VAL_6 = { x__h15386, x__h16722 } ;
  assign MUX_dw_result$wset_1__VAL_7 = { x__h16979, x__h17481 } ;
  assign MUX_dw_result$wset_1__VAL_8 = { x__h17729, x__h19768 } ;
  assign MUX_dw_result$wset_1__VAL_9 = { x__h20363, x__h19768 } ;
  assign MUX_dw_result$wset_1__VAL_10 = { x__h22888, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_11 = { x__h23009, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_12 = { x__h23147, x__h19768 } ;
  assign MUX_dw_result$wset_1__VAL_13 = { x__h24630, x__h25518 } ;
  assign MUX_dw_result$wset_1__VAL_14 = { x__h25699, x__h25518 } ;
  assign MUX_dw_result$wset_1__VAL_15 = { x__h26785, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_16 = { x__h28147, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_17 = { x__h28269, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_18 = { x__h28393, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_19 = { x__h28523, x__h38186 } ;
  assign MUX_dw_result$wset_1__VAL_20 = { x__h38471, x__h47854 } ;
  assign MUX_dw_result$wset_1__VAL_21 = { x__h48138, x__h49457 } ;
  assign MUX_dw_result$wset_1__VAL_22 = { x__h49714, x__h50216 } ;
  assign MUX_dw_result$wset_1__VAL_23 = { x__h50460, x__h98182 } ;
  assign MUX_dw_result$wset_1__VAL_24 = { x__h99165, x__h139968 } ;
  assign MUX_dw_result$wset_1__VAL_25 = { x__h140891, x__h144440 } ;
  assign MUX_dw_result$wset_1__VAL_26 = { x__h145439, x__h144440 } ;
  assign MUX_dw_result$wset_1__VAL_27 = { x__h149883, x__h144440 } ;
  assign MUX_dw_result$wset_1__VAL_28 = { x__h152578, x__h154274 } ;
  assign MUX_dw_result$wset_1__VAL_29 = { x__h154455, x__h154274 } ;
  assign MUX_dw_result$wset_1__VAL_30 = { requestR[191:128], 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_31 = { x__h156582, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_32 =
	     { x__h157232, fpu$server_core_response_get[4:0] } ;
  assign MUX_fpu$server_core_request_put_1__VAL_1 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd0 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_2 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd1 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_3 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd2 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_4 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd5 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_5 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd6 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_6 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd7 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_7 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd8 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_8 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd3 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_9 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       130'h15555555555555554AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd4 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_10 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd0 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_11 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd1 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_12 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd2 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_13 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd5 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_14 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd6 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_15 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd7 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_16 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd8 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_17 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd3 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_18 =
	     { 1'd0,
	       requestR[191:128],
	       130'h15555555555555554AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd4 } ;
  assign MUX_requestR$write_1__VAL_2 =
	     { 1'd1,
	       req_opcode,
	       req_f7,
	       req_rs2,
	       req_rm,
	       req_v1,
	       req_v2,
	       req_v3 } ;
  assign MUX_resultR$write_1__VAL_3 =
	     { 1'd1, x__h157232, fpu$server_core_response_get[4:0] } ;
  assign MUX_resultR$write_1__VAL_4 = { 1'd1, x__h156582, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_5 = { 1'd1, requestR[191:128], 5'd0 } ;
  assign MUX_resultR$write_1__VAL_7 = { 1'd1, x__h154455, x__h154274 } ;
  assign MUX_resultR$write_1__VAL_8 = { 1'd1, x__h152578, x__h154274 } ;
  assign MUX_resultR$write_1__VAL_9 = { 1'd1, x__h149883, x__h144440 } ;
  assign MUX_resultR$write_1__VAL_10 = { 1'd1, x__h145439, x__h144440 } ;
  assign MUX_resultR$write_1__VAL_11 = { 1'd1, x__h140891, x__h144440 } ;
  assign MUX_resultR$write_1__VAL_12 = { 1'd1, x__h99165, x__h139968 } ;
  assign MUX_resultR$write_1__VAL_13 = { 1'd1, x__h50460, x__h98182 } ;
  assign MUX_resultR$write_1__VAL_14 = { 1'd1, x__h49714, x__h50216 } ;
  assign MUX_resultR$write_1__VAL_15 = { 1'd1, x__h48138, x__h49457 } ;
  assign MUX_resultR$write_1__VAL_16 = { 1'd1, x__h38471, x__h47854 } ;
  assign MUX_resultR$write_1__VAL_17 = { 1'd1, x__h28523, x__h38186 } ;
  assign MUX_resultR$write_1__VAL_18 = { 1'd1, x__h28393, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_19 = { 1'd1, x__h28269, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_20 = { 1'd1, x__h28147, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_21 = { 1'd1, x__h26785, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_22 = { 1'd1, x__h25699, x__h25518 } ;
  assign MUX_resultR$write_1__VAL_23 = { 1'd1, x__h24630, x__h25518 } ;
  assign MUX_resultR$write_1__VAL_24 = { 1'd1, x__h23147, x__h19768 } ;
  assign MUX_resultR$write_1__VAL_25 = { 1'd1, x__h23009, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_26 = { 1'd1, x__h22888, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_27 = { 1'd1, x__h20363, x__h19768 } ;
  assign MUX_resultR$write_1__VAL_28 = { 1'd1, x__h17729, x__h19768 } ;
  assign MUX_resultR$write_1__VAL_29 = { 1'd1, x__h16979, x__h17481 } ;
  assign MUX_resultR$write_1__VAL_30 = { 1'd1, x__h15386, x__h16722 } ;
  assign MUX_resultR$write_1__VAL_31 = { 1'd1, x__h9244, x__h15102 } ;
  assign MUX_resultR$write_1__VAL_32 = { 1'd1, x__h2783, x__h8956 } ;
  assign MUX_resultR$write_1__VAL_33 = { 1'd1, x__h2636, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_34 = { 1'd1, x__h2502, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_35 = { 1'd1, x__h2356, 5'd0 } ;

  // inlined wires
  assign dw_valid$wget = !WILL_FIRE_RL_rl_drive_fpu_result || resultR[69] ;
  assign dw_valid$whas =
	     WILL_FIRE_RL_rl_drive_fpu_result ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;
  always@(WILL_FIRE_RL_doFSGNJN_S or
	  MUX_dw_result$wset_1__VAL_1 or
	  WILL_FIRE_RL_doFSGNJ_S or
	  MUX_dw_result$wset_1__VAL_2 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_dw_result$wset_1__VAL_3 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_dw_result$wset_1__VAL_4 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_dw_result$wset_1__VAL_5 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_dw_result$wset_1__VAL_6 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_dw_result$wset_1__VAL_7 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_dw_result$wset_1__VAL_8 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_dw_result$wset_1__VAL_9 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_dw_result$wset_1__VAL_10 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_dw_result$wset_1__VAL_11 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_dw_result$wset_1__VAL_12 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_dw_result$wset_1__VAL_13 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_dw_result$wset_1__VAL_14 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_dw_result$wset_1__VAL_15 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_dw_result$wset_1__VAL_16 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_dw_result$wset_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_dw_result$wset_1__VAL_18 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_dw_result$wset_1__VAL_19 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_dw_result$wset_1__VAL_20 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_dw_result$wset_1__VAL_21 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_dw_result$wset_1__VAL_22 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_dw_result$wset_1__VAL_23 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_dw_result$wset_1__VAL_24 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_dw_result$wset_1__VAL_25 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_dw_result$wset_1__VAL_26 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_dw_result$wset_1__VAL_27 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_dw_result$wset_1__VAL_28 or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_dw_result$wset_1__VAL_29 or
	  MUX_dw_result$wset_1__SEL_30 or
	  MUX_dw_result$wset_1__VAL_30 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_dw_result$wset_1__VAL_31 or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_dw_result$wset_1__VAL_32 or
	  WILL_FIRE_RL_rl_drive_fpu_result or resultR)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFSGNJN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_1;
      WILL_FIRE_RL_doFSGNJ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_2;
      WILL_FIRE_RL_doFSGNJX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_3;
      WILL_FIRE_RL_doFCVT_S_W: dw_result$wget = MUX_dw_result$wset_1__VAL_4;
      WILL_FIRE_RL_doFCVT_S_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_5;
      WILL_FIRE_RL_doFCVT_W_S: dw_result$wget = MUX_dw_result$wset_1__VAL_6;
      WILL_FIRE_RL_doFCVT_WU_S: dw_result$wget = MUX_dw_result$wset_1__VAL_7;
      WILL_FIRE_RL_doFMIN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_8;
      WILL_FIRE_RL_doFMAX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_9;
      WILL_FIRE_RL_doFMV_W_X: dw_result$wget = MUX_dw_result$wset_1__VAL_10;
      WILL_FIRE_RL_doFMV_X_W: dw_result$wget = MUX_dw_result$wset_1__VAL_11;
      WILL_FIRE_RL_doFEQ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_12;
      WILL_FIRE_RL_doFLT_S: dw_result$wget = MUX_dw_result$wset_1__VAL_13;
      WILL_FIRE_RL_doFLE_S: dw_result$wget = MUX_dw_result$wset_1__VAL_14;
      WILL_FIRE_RL_doFCLASS_S: dw_result$wget = MUX_dw_result$wset_1__VAL_15;
      WILL_FIRE_RL_doFSGNJ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_16;
      WILL_FIRE_RL_doFSGNJN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_17;
      WILL_FIRE_RL_doFSGNJX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_18;
      WILL_FIRE_RL_doFCVT_D_W: dw_result$wget = MUX_dw_result$wset_1__VAL_19;
      WILL_FIRE_RL_doFCVT_D_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_20;
      WILL_FIRE_RL_doFCVT_W_D: dw_result$wget = MUX_dw_result$wset_1__VAL_21;
      WILL_FIRE_RL_doFCVT_WU_D: dw_result$wget = MUX_dw_result$wset_1__VAL_22;
      WILL_FIRE_RL_doFCVT_S_D: dw_result$wget = MUX_dw_result$wset_1__VAL_23;
      WILL_FIRE_RL_doFCVT_D_S: dw_result$wget = MUX_dw_result$wset_1__VAL_24;
      WILL_FIRE_RL_doFMIN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_25;
      WILL_FIRE_RL_doFMAX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_26;
      WILL_FIRE_RL_doFEQ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_27;
      WILL_FIRE_RL_doFLT_D: dw_result$wget = MUX_dw_result$wset_1__VAL_28;
      WILL_FIRE_RL_doFLE_D: dw_result$wget = MUX_dw_result$wset_1__VAL_29;
      MUX_dw_result$wset_1__SEL_30:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_30;
      WILL_FIRE_RL_doFCLASS_D: dw_result$wget = MUX_dw_result$wset_1__VAL_31;
      WILL_FIRE_RL_rl_get_fpu_result:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_32;
      WILL_FIRE_RL_rl_drive_fpu_result: dw_result$wget = resultR[68:0];
      default: dw_result$wget =
		   69'h0AAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end

  // register requestR
  assign requestR$D_IN =
	     WILL_FIRE_RL_rl_reset_begin ?
	       215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       MUX_requestR$write_1__VAL_2 ;
  assign requestR$EN = WILL_FIRE_RL_rl_reset_begin || EN_req ;

  // register resultR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_resultR$write_1__VAL_3 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_resultR$write_1__VAL_4 or
	  WILL_FIRE_RL_doFMV_X_D or
	  MUX_resultR$write_1__VAL_5 or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_resultR$write_1__VAL_7 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_resultR$write_1__VAL_8 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_resultR$write_1__VAL_9 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_resultR$write_1__VAL_10 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_resultR$write_1__VAL_11 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_resultR$write_1__VAL_12 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_resultR$write_1__VAL_13 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_resultR$write_1__VAL_14 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_resultR$write_1__VAL_15 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_resultR$write_1__VAL_16 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_resultR$write_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_resultR$write_1__VAL_18 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_resultR$write_1__VAL_19 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_resultR$write_1__VAL_20 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_resultR$write_1__VAL_21 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_resultR$write_1__VAL_22 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_resultR$write_1__VAL_23 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_resultR$write_1__VAL_24 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_resultR$write_1__VAL_25 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_resultR$write_1__VAL_26 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_resultR$write_1__VAL_27 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_resultR$write_1__VAL_28 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_resultR$write_1__VAL_29 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_resultR$write_1__VAL_30 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_resultR$write_1__VAL_31 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_resultR$write_1__VAL_32 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_resultR$write_1__VAL_33 or
	  WILL_FIRE_RL_doFSGNJN_S or
	  MUX_resultR$write_1__VAL_34 or
	  WILL_FIRE_RL_doFSGNJ_S or MUX_resultR$write_1__VAL_35)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin || EN_req:
	resultR$D_IN = 70'h0AAAAAAAAAAAAAAAAA;
    WILL_FIRE_RL_rl_get_fpu_result: resultR$D_IN = MUX_resultR$write_1__VAL_3;
    WILL_FIRE_RL_doFCLASS_D: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFMV_X_D: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFMV_D_X: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFLE_D: resultR$D_IN = MUX_resultR$write_1__VAL_7;
    WILL_FIRE_RL_doFLT_D: resultR$D_IN = MUX_resultR$write_1__VAL_8;
    WILL_FIRE_RL_doFEQ_D: resultR$D_IN = MUX_resultR$write_1__VAL_9;
    WILL_FIRE_RL_doFMAX_D: resultR$D_IN = MUX_resultR$write_1__VAL_10;
    WILL_FIRE_RL_doFMIN_D: resultR$D_IN = MUX_resultR$write_1__VAL_11;
    WILL_FIRE_RL_doFCVT_D_S: resultR$D_IN = MUX_resultR$write_1__VAL_12;
    WILL_FIRE_RL_doFCVT_S_D: resultR$D_IN = MUX_resultR$write_1__VAL_13;
    WILL_FIRE_RL_doFCVT_WU_D: resultR$D_IN = MUX_resultR$write_1__VAL_14;
    WILL_FIRE_RL_doFCVT_W_D: resultR$D_IN = MUX_resultR$write_1__VAL_15;
    WILL_FIRE_RL_doFCVT_D_WU: resultR$D_IN = MUX_resultR$write_1__VAL_16;
    WILL_FIRE_RL_doFCVT_D_W: resultR$D_IN = MUX_resultR$write_1__VAL_17;
    WILL_FIRE_RL_doFSGNJX_D: resultR$D_IN = MUX_resultR$write_1__VAL_18;
    WILL_FIRE_RL_doFSGNJN_D: resultR$D_IN = MUX_resultR$write_1__VAL_19;
    WILL_FIRE_RL_doFSGNJ_D: resultR$D_IN = MUX_resultR$write_1__VAL_20;
    WILL_FIRE_RL_doFCLASS_S: resultR$D_IN = MUX_resultR$write_1__VAL_21;
    WILL_FIRE_RL_doFLE_S: resultR$D_IN = MUX_resultR$write_1__VAL_22;
    WILL_FIRE_RL_doFLT_S: resultR$D_IN = MUX_resultR$write_1__VAL_23;
    WILL_FIRE_RL_doFEQ_S: resultR$D_IN = MUX_resultR$write_1__VAL_24;
    WILL_FIRE_RL_doFMV_X_W: resultR$D_IN = MUX_resultR$write_1__VAL_25;
    WILL_FIRE_RL_doFMV_W_X: resultR$D_IN = MUX_resultR$write_1__VAL_26;
    WILL_FIRE_RL_doFMAX_S: resultR$D_IN = MUX_resultR$write_1__VAL_27;
    WILL_FIRE_RL_doFMIN_S: resultR$D_IN = MUX_resultR$write_1__VAL_28;
    WILL_FIRE_RL_doFCVT_WU_S: resultR$D_IN = MUX_resultR$write_1__VAL_29;
    WILL_FIRE_RL_doFCVT_W_S: resultR$D_IN = MUX_resultR$write_1__VAL_30;
    WILL_FIRE_RL_doFCVT_S_WU: resultR$D_IN = MUX_resultR$write_1__VAL_31;
    WILL_FIRE_RL_doFCVT_S_W: resultR$D_IN = MUX_resultR$write_1__VAL_32;
    WILL_FIRE_RL_doFSGNJX_S: resultR$D_IN = MUX_resultR$write_1__VAL_33;
    WILL_FIRE_RL_doFSGNJN_S: resultR$D_IN = MUX_resultR$write_1__VAL_34;
    WILL_FIRE_RL_doFSGNJ_S: resultR$D_IN = MUX_resultR$write_1__VAL_35;
    default: resultR$D_IN = 70'h2AAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign resultR$EN =
	     WILL_FIRE_RL_rl_reset_begin || EN_req ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFSGNJ_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_rl_get_fpu_result ;

  // register stateR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  WILL_FIRE_RL_doFCLASS_D or
	  WILL_FIRE_RL_doFMV_X_D or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  WILL_FIRE_RL_doFLT_D or
	  WILL_FIRE_RL_doFEQ_D or
	  WILL_FIRE_RL_doFMAX_D or
	  WILL_FIRE_RL_doFMIN_D or
	  WILL_FIRE_RL_doFCVT_D_S or
	  WILL_FIRE_RL_doFCVT_S_D or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  WILL_FIRE_RL_doFCVT_W_D or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  WILL_FIRE_RL_doFCVT_D_W or
	  WILL_FIRE_RL_doFSGNJX_D or
	  WILL_FIRE_RL_doFSGNJN_D or
	  WILL_FIRE_RL_doFSGNJ_D or
	  WILL_FIRE_RL_doFSQRT_D or
	  WILL_FIRE_RL_doFDIV_D or
	  WILL_FIRE_RL_doFNMSUB_D or
	  WILL_FIRE_RL_doFNMADD_D or
	  WILL_FIRE_RL_doFMSUB_D or
	  WILL_FIRE_RL_doFMADD_D or
	  WILL_FIRE_RL_doFMUL_D or
	  WILL_FIRE_RL_doFSUB_D or
	  WILL_FIRE_RL_doFADD_D or
	  WILL_FIRE_RL_doFCLASS_S or
	  WILL_FIRE_RL_doFLE_S or
	  WILL_FIRE_RL_doFLT_S or
	  WILL_FIRE_RL_doFEQ_S or
	  WILL_FIRE_RL_doFMV_X_W or
	  WILL_FIRE_RL_doFMV_W_X or
	  WILL_FIRE_RL_doFMAX_S or
	  WILL_FIRE_RL_doFMIN_S or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  WILL_FIRE_RL_doFCVT_W_S or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  WILL_FIRE_RL_doFCVT_S_W or
	  WILL_FIRE_RL_doFSGNJX_S or
	  WILL_FIRE_RL_doFSGNJN_S or
	  WILL_FIRE_RL_doFSGNJ_S or
	  WILL_FIRE_RL_doFSQRT_S or
	  WILL_FIRE_RL_doFDIV_S or
	  WILL_FIRE_RL_doFNMSUB_S or
	  WILL_FIRE_RL_doFNMADD_S or
	  WILL_FIRE_RL_doFMSUB_S or
	  WILL_FIRE_RL_doFMADD_S or
	  WILL_FIRE_RL_doFMUL_S or
	  WILL_FIRE_RL_doFSUB_S or
	  WILL_FIRE_RL_doFADD_S or WILL_FIRE_RL_rl_reset_end)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin: stateR$D_IN = 2'd0;
    EN_req: stateR$D_IN = 2'd1;
    WILL_FIRE_RL_rl_get_fpu_result || WILL_FIRE_RL_doFCLASS_D ||
    WILL_FIRE_RL_doFMV_X_D ||
    WILL_FIRE_RL_doFMV_D_X ||
    WILL_FIRE_RL_doFLE_D ||
    WILL_FIRE_RL_doFLT_D ||
    WILL_FIRE_RL_doFEQ_D ||
    WILL_FIRE_RL_doFMAX_D ||
    WILL_FIRE_RL_doFMIN_D ||
    WILL_FIRE_RL_doFCVT_D_S ||
    WILL_FIRE_RL_doFCVT_S_D ||
    WILL_FIRE_RL_doFCVT_WU_D ||
    WILL_FIRE_RL_doFCVT_W_D ||
    WILL_FIRE_RL_doFCVT_D_WU ||
    WILL_FIRE_RL_doFCVT_D_W ||
    WILL_FIRE_RL_doFSGNJX_D ||
    WILL_FIRE_RL_doFSGNJN_D ||
    WILL_FIRE_RL_doFSGNJ_D:
	stateR$D_IN = 2'd3;
    WILL_FIRE_RL_doFSQRT_D || WILL_FIRE_RL_doFDIV_D ||
    WILL_FIRE_RL_doFNMSUB_D ||
    WILL_FIRE_RL_doFNMADD_D ||
    WILL_FIRE_RL_doFMSUB_D ||
    WILL_FIRE_RL_doFMADD_D ||
    WILL_FIRE_RL_doFMUL_D ||
    WILL_FIRE_RL_doFSUB_D ||
    WILL_FIRE_RL_doFADD_D:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFCLASS_S || WILL_FIRE_RL_doFLE_S || WILL_FIRE_RL_doFLT_S ||
    WILL_FIRE_RL_doFEQ_S ||
    WILL_FIRE_RL_doFMV_X_W ||
    WILL_FIRE_RL_doFMV_W_X ||
    WILL_FIRE_RL_doFMAX_S ||
    WILL_FIRE_RL_doFMIN_S ||
    WILL_FIRE_RL_doFCVT_WU_S ||
    WILL_FIRE_RL_doFCVT_W_S ||
    WILL_FIRE_RL_doFCVT_S_WU ||
    WILL_FIRE_RL_doFCVT_S_W ||
    WILL_FIRE_RL_doFSGNJX_S ||
    WILL_FIRE_RL_doFSGNJN_S ||
    WILL_FIRE_RL_doFSGNJ_S:
	stateR$D_IN = 2'd3;
    WILL_FIRE_RL_doFSQRT_S || WILL_FIRE_RL_doFDIV_S ||
    WILL_FIRE_RL_doFNMSUB_S ||
    WILL_FIRE_RL_doFNMADD_S ||
    WILL_FIRE_RL_doFMSUB_S ||
    WILL_FIRE_RL_doFMADD_S ||
    WILL_FIRE_RL_doFMUL_S ||
    WILL_FIRE_RL_doFSUB_S ||
    WILL_FIRE_RL_doFADD_S:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_rl_reset_end: stateR$D_IN = 2'd1;
    default: stateR$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign stateR$EN =
	     WILL_FIRE_RL_rl_reset_begin || WILL_FIRE_RL_rl_reset_end ||
	     EN_req ||
	     WILL_FIRE_RL_doFSQRT_D ||
	     WILL_FIRE_RL_doFDIV_D ||
	     WILL_FIRE_RL_doFNMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSQRT_S ||
	     WILL_FIRE_RL_doFDIV_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFADD_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;

  // submodule fpu
  always@(WILL_FIRE_RL_doFADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_1 or
	  WILL_FIRE_RL_doFSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_2 or
	  WILL_FIRE_RL_doFMUL_S or
	  MUX_fpu$server_core_request_put_1__VAL_3 or
	  WILL_FIRE_RL_doFMADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_4 or
	  WILL_FIRE_RL_doFMSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_5 or
	  WILL_FIRE_RL_doFNMADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_6 or
	  WILL_FIRE_RL_doFNMSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_7 or
	  WILL_FIRE_RL_doFDIV_S or
	  MUX_fpu$server_core_request_put_1__VAL_8 or
	  WILL_FIRE_RL_doFSQRT_S or
	  MUX_fpu$server_core_request_put_1__VAL_9 or
	  WILL_FIRE_RL_doFADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_10 or
	  WILL_FIRE_RL_doFSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_11 or
	  WILL_FIRE_RL_doFMUL_D or
	  MUX_fpu$server_core_request_put_1__VAL_12 or
	  WILL_FIRE_RL_doFMADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_13 or
	  WILL_FIRE_RL_doFMSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_14 or
	  WILL_FIRE_RL_doFNMADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_15 or
	  WILL_FIRE_RL_doFNMSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_16 or
	  WILL_FIRE_RL_doFDIV_D or
	  MUX_fpu$server_core_request_put_1__VAL_17 or
	  WILL_FIRE_RL_doFSQRT_D or MUX_fpu$server_core_request_put_1__VAL_18)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_1;
      WILL_FIRE_RL_doFSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_2;
      WILL_FIRE_RL_doFMUL_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_3;
      WILL_FIRE_RL_doFMADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_4;
      WILL_FIRE_RL_doFMSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_5;
      WILL_FIRE_RL_doFNMADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_6;
      WILL_FIRE_RL_doFNMSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_7;
      WILL_FIRE_RL_doFDIV_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_8;
      WILL_FIRE_RL_doFSQRT_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_9;
      WILL_FIRE_RL_doFADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_10;
      WILL_FIRE_RL_doFSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_11;
      WILL_FIRE_RL_doFMUL_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_12;
      WILL_FIRE_RL_doFMADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_13;
      WILL_FIRE_RL_doFMSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_14;
      WILL_FIRE_RL_doFNMADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_15;
      WILL_FIRE_RL_doFNMSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_16;
      WILL_FIRE_RL_doFDIV_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_17;
      WILL_FIRE_RL_doFSQRT_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_18;
      default: fpu$server_core_request_put =
		   202'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fpu$EN_server_core_request_put =
	     WILL_FIRE_RL_doFADD_S || WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFDIV_S ||
	     WILL_FIRE_RL_doFSQRT_S ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFNMSUB_D ||
	     WILL_FIRE_RL_doFDIV_D ||
	     WILL_FIRE_RL_doFSQRT_D ;
  assign fpu$EN_server_core_response_get = CAN_FIRE_RL_rl_get_fpu_result ;
  assign fpu$EN_server_reset_request_put = CAN_FIRE_RL_rl_reset_begin ;
  assign fpu$EN_server_reset_response_get = CAN_FIRE_RL_rl_reset_end ;

  // submodule frmFpuF
  assign frmFpuF$D_IN = 1'b0 ;
  assign frmFpuF$ENQ = 1'b0 ;
  assign frmFpuF$DEQ = 1'b0 ;
  assign frmFpuF$CLR = CAN_FIRE_RL_rl_reset_begin ;

  // submodule resetReqsF
  assign resetReqsF$ENQ = EN_server_reset_request_put ;
  assign resetReqsF$DEQ =
	     fpu$RDY_server_reset_request_put && resetReqsF$EMPTY_N ;
  assign resetReqsF$CLR = 1'b0 ;

  // submodule resetRspsF
  assign resetRspsF$ENQ =
	     fpu$RDY_server_reset_response_get && resetRspsF$FULL_N &&
	     stateR == 2'd0 ;
  assign resetRspsF$DEQ = EN_server_reset_response_get ;
  assign resetRspsF$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2109 ?
	       _theResult___snd__h70490 :
	       _theResult____h62320 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3429 ?
	       _theResult___snd__h129678 :
	       _theResult____h121379 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2593 ?
	       _theResult___snd__h88343 :
	       _theResult____h80044 ;
  assign IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q100 =
	     _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3502 ?
	       _theResult___snd__h120031 :
	       _theResult___snd__h138430 ;
  assign IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q94 =
	     _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3109 ?
	       _theResult___snd__h120031 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629__ETC__q62 =
	     _0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2271 ?
	       _theResult___snd__h79102 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629__ETC__q68 =
	     _0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2666 ?
	       _theResult___snd__h79102 :
	       _theResult___snd__h96979 ;
  assign IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_8_ETC___d2853 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1875 ?
	       ((_theResult___fst_exp__h70427 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard2330_0b0_requestR_BIT_191_0b1_reques_ETC__q86 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87)) :
	       ((_theResult___fst_exp__h79113 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard1065_0b0_requestR_BIT_191_0b1_reques_ETC__q88 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1319 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1268 ?
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard6549_0b0_requestR_BIT_159_0b1_reques_ETC__q35 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36) :
	       ((x__h37294[10:0] == 11'd2047) ?
		  requestR[159] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard7279_0b0_requestR_BIT_159_0b1_reques_ETC__q37 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1434 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1268 ?
	       guard__h36549 != 2'b0 :
	       x__h37294[10:0] != 11'd2047 && guard__h37279 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d348 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d287 ?
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard718_0b0_requestR_BIT_159_0b1_request_ETC__q8 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9) :
	       ((x__h8263[7:0] == 8'd255) ?
		  requestR[159] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard248_0b0_requestR_BIT_159_0b1_request_ETC__q10 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d498 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d287 ?
	       guard__h7718 != 2'b0 :
	       x__h8263[7:0] != 8'd255 && guard__h8248 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d1617 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1481 ?
	       guard__h46245 != 2'b0 :
	       x__h46989[10:0] != 11'd2047 && guard__h46974 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d812 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d642 ?
	       guard__h13895 != 2'b0 :
	       x__h14436[7:0] != 8'd255 && guard__h14421 != 2'b0 ;
  assign IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2107 =
	     (_theResult____h62320[56] ?
		6'd0 :
		(_theResult____h62320[55] ?
		   6'd1 :
		   (_theResult____h62320[54] ?
		      6'd2 :
		      (_theResult____h62320[53] ?
			 6'd3 :
			 (_theResult____h62320[52] ?
			    6'd4 :
			    (_theResult____h62320[51] ?
			       6'd5 :
			       (_theResult____h62320[50] ?
				  6'd6 :
				  (_theResult____h62320[49] ?
				     6'd7 :
				     (_theResult____h62320[48] ?
					6'd8 :
					(_theResult____h62320[47] ?
					   6'd9 :
					   (_theResult____h62320[46] ?
					      6'd10 :
					      (_theResult____h62320[45] ?
						 6'd11 :
						 (_theResult____h62320[44] ?
						    6'd12 :
						    (_theResult____h62320[43] ?
						       6'd13 :
						       (_theResult____h62320[42] ?
							  6'd14 :
							  (_theResult____h62320[41] ?
							     6'd15 :
							     (_theResult____h62320[40] ?
								6'd16 :
								(_theResult____h62320[39] ?
								   6'd17 :
								   (_theResult____h62320[38] ?
								      6'd18 :
								      (_theResult____h62320[37] ?
									 6'd19 :
									 (_theResult____h62320[36] ?
									    6'd20 :
									    (_theResult____h62320[35] ?
									       6'd21 :
									       (_theResult____h62320[34] ?
										  6'd22 :
										  (_theResult____h62320[33] ?
										     6'd23 :
										     (_theResult____h62320[32] ?
											6'd24 :
											(_theResult____h62320[31] ?
											   6'd25 :
											   (_theResult____h62320[30] ?
											      6'd26 :
											      (_theResult____h62320[29] ?
												 6'd27 :
												 (_theResult____h62320[28] ?
												    6'd28 :
												    (_theResult____h62320[27] ?
												       6'd29 :
												       (_theResult____h62320[26] ?
													  6'd30 :
													  (_theResult____h62320[25] ?
													     6'd31 :
													     (_theResult____h62320[24] ?
														6'd32 :
														(_theResult____h62320[23] ?
														   6'd33 :
														   (_theResult____h62320[22] ?
														      6'd34 :
														      (_theResult____h62320[21] ?
															 6'd35 :
															 (_theResult____h62320[20] ?
															    6'd36 :
															    (_theResult____h62320[19] ?
															       6'd37 :
															       (_theResult____h62320[18] ?
																  6'd38 :
																  (_theResult____h62320[17] ?
																     6'd39 :
																     (_theResult____h62320[16] ?
																	6'd40 :
																	(_theResult____h62320[15] ?
																	   6'd41 :
																	   (_theResult____h62320[14] ?
																	      6'd42 :
																	      (_theResult____h62320[13] ?
																		 6'd43 :
																		 (_theResult____h62320[12] ?
																		    6'd44 :
																		    (_theResult____h62320[11] ?
																		       6'd45 :
																		       (_theResult____h62320[10] ?
																			  6'd46 :
																			  (_theResult____h62320[9] ?
																			     6'd47 :
																			     (_theResult____h62320[8] ?
																				6'd48 :
																				(_theResult____h62320[7] ?
																				   6'd49 :
																				   (_theResult____h62320[6] ?
																				      6'd50 :
																				      (_theResult____h62320[5] ?
																					 6'd51 :
																					 (_theResult____h62320[4] ?
																					    6'd52 :
																					    (_theResult____h62320[3] ?
																					       6'd53 :
																					       (_theResult____h62320[2] ?
																						  6'd54 :
																						  (_theResult____h62320[1] ?
																						     6'd55 :
																						     (_theResult____h62320[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3427 =
	     (_theResult____h121379[56] ?
		6'd0 :
		(_theResult____h121379[55] ?
		   6'd1 :
		   (_theResult____h121379[54] ?
		      6'd2 :
		      (_theResult____h121379[53] ?
			 6'd3 :
			 (_theResult____h121379[52] ?
			    6'd4 :
			    (_theResult____h121379[51] ?
			       6'd5 :
			       (_theResult____h121379[50] ?
				  6'd6 :
				  (_theResult____h121379[49] ?
				     6'd7 :
				     (_theResult____h121379[48] ?
					6'd8 :
					(_theResult____h121379[47] ?
					   6'd9 :
					   (_theResult____h121379[46] ?
					      6'd10 :
					      (_theResult____h121379[45] ?
						 6'd11 :
						 (_theResult____h121379[44] ?
						    6'd12 :
						    (_theResult____h121379[43] ?
						       6'd13 :
						       (_theResult____h121379[42] ?
							  6'd14 :
							  (_theResult____h121379[41] ?
							     6'd15 :
							     (_theResult____h121379[40] ?
								6'd16 :
								(_theResult____h121379[39] ?
								   6'd17 :
								   (_theResult____h121379[38] ?
								      6'd18 :
								      (_theResult____h121379[37] ?
									 6'd19 :
									 (_theResult____h121379[36] ?
									    6'd20 :
									    (_theResult____h121379[35] ?
									       6'd21 :
									       (_theResult____h121379[34] ?
										  6'd22 :
										  (_theResult____h121379[33] ?
										     6'd23 :
										     (_theResult____h121379[32] ?
											6'd24 :
											(_theResult____h121379[31] ?
											   6'd25 :
											   (_theResult____h121379[30] ?
											      6'd26 :
											      (_theResult____h121379[29] ?
												 6'd27 :
												 (_theResult____h121379[28] ?
												    6'd28 :
												    (_theResult____h121379[27] ?
												       6'd29 :
												       (_theResult____h121379[26] ?
													  6'd30 :
													  (_theResult____h121379[25] ?
													     6'd31 :
													     (_theResult____h121379[24] ?
														6'd32 :
														(_theResult____h121379[23] ?
														   6'd33 :
														   (_theResult____h121379[22] ?
														      6'd34 :
														      (_theResult____h121379[21] ?
															 6'd35 :
															 (_theResult____h121379[20] ?
															    6'd36 :
															    (_theResult____h121379[19] ?
															       6'd37 :
															       (_theResult____h121379[18] ?
																  6'd38 :
																  (_theResult____h121379[17] ?
																     6'd39 :
																     (_theResult____h121379[16] ?
																	6'd40 :
																	(_theResult____h121379[15] ?
																	   6'd41 :
																	   (_theResult____h121379[14] ?
																	      6'd42 :
																	      (_theResult____h121379[13] ?
																		 6'd43 :
																		 (_theResult____h121379[12] ?
																		    6'd44 :
																		    (_theResult____h121379[11] ?
																		       6'd45 :
																		       (_theResult____h121379[10] ?
																			  6'd46 :
																			  (_theResult____h121379[9] ?
																			     6'd47 :
																			     (_theResult____h121379[8] ?
																				6'd48 :
																				(_theResult____h121379[7] ?
																				   6'd49 :
																				   (_theResult____h121379[6] ?
																				      6'd50 :
																				      (_theResult____h121379[5] ?
																					 6'd51 :
																					 (_theResult____h121379[4] ?
																					    6'd52 :
																					    (_theResult____h121379[3] ?
																					       6'd53 :
																					       (_theResult____h121379[2] ?
																						  6'd54 :
																						  (_theResult____h121379[1] ?
																						     6'd55 :
																						     (_theResult____h121379[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2591 =
	     (_theResult____h80044[56] ?
		6'd0 :
		(_theResult____h80044[55] ?
		   6'd1 :
		   (_theResult____h80044[54] ?
		      6'd2 :
		      (_theResult____h80044[53] ?
			 6'd3 :
			 (_theResult____h80044[52] ?
			    6'd4 :
			    (_theResult____h80044[51] ?
			       6'd5 :
			       (_theResult____h80044[50] ?
				  6'd6 :
				  (_theResult____h80044[49] ?
				     6'd7 :
				     (_theResult____h80044[48] ?
					6'd8 :
					(_theResult____h80044[47] ?
					   6'd9 :
					   (_theResult____h80044[46] ?
					      6'd10 :
					      (_theResult____h80044[45] ?
						 6'd11 :
						 (_theResult____h80044[44] ?
						    6'd12 :
						    (_theResult____h80044[43] ?
						       6'd13 :
						       (_theResult____h80044[42] ?
							  6'd14 :
							  (_theResult____h80044[41] ?
							     6'd15 :
							     (_theResult____h80044[40] ?
								6'd16 :
								(_theResult____h80044[39] ?
								   6'd17 :
								   (_theResult____h80044[38] ?
								      6'd18 :
								      (_theResult____h80044[37] ?
									 6'd19 :
									 (_theResult____h80044[36] ?
									    6'd20 :
									    (_theResult____h80044[35] ?
									       6'd21 :
									       (_theResult____h80044[34] ?
										  6'd22 :
										  (_theResult____h80044[33] ?
										     6'd23 :
										     (_theResult____h80044[32] ?
											6'd24 :
											(_theResult____h80044[31] ?
											   6'd25 :
											   (_theResult____h80044[30] ?
											      6'd26 :
											      (_theResult____h80044[29] ?
												 6'd27 :
												 (_theResult____h80044[28] ?
												    6'd28 :
												    (_theResult____h80044[27] ?
												       6'd29 :
												       (_theResult____h80044[26] ?
													  6'd30 :
													  (_theResult____h80044[25] ?
													     6'd31 :
													     (_theResult____h80044[24] ?
														6'd32 :
														(_theResult____h80044[23] ?
														   6'd33 :
														   (_theResult____h80044[22] ?
														      6'd34 :
														      (_theResult____h80044[21] ?
															 6'd35 :
															 (_theResult____h80044[20] ?
															    6'd36 :
															    (_theResult____h80044[19] ?
															       6'd37 :
															       (_theResult____h80044[18] ?
																  6'd38 :
																  (_theResult____h80044[17] ?
																     6'd39 :
																     (_theResult____h80044[16] ?
																	6'd40 :
																	(_theResult____h80044[15] ?
																	   6'd41 :
																	   (_theResult____h80044[14] ?
																	      6'd42 :
																	      (_theResult____h80044[13] ?
																		 6'd43 :
																		 (_theResult____h80044[12] ?
																		    6'd44 :
																		    (_theResult____h80044[11] ?
																		       6'd45 :
																		       (_theResult____h80044[10] ?
																			  6'd46 :
																			  (_theResult____h80044[9] ?
																			     6'd47 :
																			     (_theResult____h80044[8] ?
																				6'd48 :
																				(_theResult____h80044[7] ?
																				   6'd49 :
																				   (_theResult____h80044[6] ?
																				      6'd50 :
																				      (_theResult____h80044[5] ?
																					 6'd51 :
																					 (_theResult____h80044[4] ?
																					    6'd52 :
																					    (_theResult____h80044[3] ?
																					       6'd53 :
																					       (_theResult____h80044[2] ?
																						  6'd54 :
																						  (_theResult____h80044[1] ?
																						     6'd55 :
																						     (_theResult____h80044[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3671 =
	     (_theResult___fst_exp__h129615 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard21389_0b0_requestR_BITS_191_TO_160_E_ETC__q110 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2166 =
	     (guard__h62330 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h70427 :
	       _theResult___exp__h70953 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2168 =
	     (guard__h62330 == 2'b0) ?
	       _theResult___fst_exp__h70427 :
	       (requestR[191] ?
		  _theResult___exp__h70953 :
		  _theResult___fst_exp__h70427) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2753 =
	     (guard__h62330 == 2'b0 || requestR[191]) ?
	       sfdin__h70421[56:34] :
	       _theResult___sfd__h70954 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2755 =
	     (guard__h62330 == 2'b0) ?
	       sfdin__h70421[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h70954 :
		  sfdin__h70421[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3486 =
	     (guard__h121389 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h129615 :
	       _theResult___exp__h130344 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3488 =
	     (guard__h121389 == 2'b0) ?
	       _theResult___fst_exp__h129615 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h130344 :
		  _theResult___fst_exp__h129615) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3615 =
	     (guard__h121389 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       sfdin__h129609[56:5] :
	       _theResult___sfd__h130345 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3617 =
	     (guard__h121389 == 2'b0) ?
	       sfdin__h129609[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h130345 :
		  sfdin__h129609[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2650 =
	     (guard__h80054 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h88280 :
	       _theResult___exp__h88806 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2652 =
	     (guard__h80054 == 2'b0) ?
	       _theResult___fst_exp__h88280 :
	       (requestR[191] ?
		  _theResult___exp__h88806 :
		  _theResult___fst_exp__h88280) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2799 =
	     (guard__h80054 == 2'b0 || requestR[191]) ?
	       sfdin__h88274[56:34] :
	       _theResult___sfd__h88807 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2801 =
	     (guard__h80054 == 2'b0) ?
	       sfdin__h88274[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h88807 :
		  sfdin__h88274[56:34]) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3161 =
	     (guard__h112081 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h120042 :
	       _theResult___exp__h120697 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3163 =
	     (guard__h112081 == 2'b0) ?
	       _theResult___fst_exp__h120042 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h120697 :
		  _theResult___fst_exp__h120042) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3555 =
	     (guard__h130456 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h138446 :
	       _theResult___exp__h139126 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3557 =
	     (guard__h130456 == 2'b0) ?
	       _theResult___fst_exp__h138446 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h139126 :
		  _theResult___fst_exp__h138446) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3588 =
	     (guard__h112081 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h119993[56:5] :
	       _theResult___sfd__h120698 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3590 =
	     (guard__h112081 == 2'b0) ?
	       _theResult___snd__h119993[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h120698 :
		  _theResult___snd__h119993[56:5]) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3634 =
	     (guard__h130456 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h138392[56:5] :
	       _theResult___sfd__h139127 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3636 =
	     (guard__h130456 == 2'b0) ?
	       _theResult___snd__h138392[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h139127 :
		  _theResult___snd__h138392[56:5]) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2323 =
	     (guard__h71065 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h79113 :
	       _theResult___exp__h79565 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2325 =
	     (guard__h71065 == 2'b0) ?
	       _theResult___fst_exp__h79113 :
	       (requestR[191] ?
		  _theResult___exp__h79565 :
		  _theResult___fst_exp__h79113) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2719 =
	     (guard__h88918 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h96995 :
	       _theResult___exp__h97472 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2721 =
	     (guard__h88918 == 2'b0) ?
	       _theResult___fst_exp__h96995 :
	       (requestR[191] ?
		  _theResult___exp__h97472 :
		  _theResult___fst_exp__h96995) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2772 =
	     (guard__h71065 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h79064[56:34] :
	       _theResult___sfd__h79566 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2774 =
	     (guard__h71065 == 2'b0) ?
	       _theResult___snd__h79064[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h79566 :
		  _theResult___snd__h79064[56:34]) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2818 =
	     (guard__h88918 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h96941[56:34] :
	       _theResult___sfd__h97473 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2820 =
	     (guard__h88918 == 2'b0) ?
	       _theResult___snd__h96941[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h97473 :
		  _theResult___snd__h96941[56:34]) ;
  assign IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3679 =
	     (_theResult___fst_exp__h138446 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard30456_0b0_requestR_BITS_191_TO_160_E_ETC__q112 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1340 =
	     (guard__h36549 == 2'b0) ?
	       11'd0 :
	       (requestR[159] ? _theResult___exp__h37165 : 11'd0) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1366 =
	     (guard__h37279 == 2'b0 || requestR[159]) ?
	       x__h37294[10:0] :
	       _theResult___exp__h37921 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1368 =
	     (guard__h37279 == 2'b0) ?
	       x__h37294[10:0] :
	       (requestR[159] ? _theResult___exp__h37921 : x__h37294[10:0]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1389 =
	     (guard__h36549 == 2'b0 || requestR[159]) ?
	       sfd___3__h36539[54:3] :
	       _theResult___sfd__h37166 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1391 =
	     (guard__h36549 == 2'b0) ?
	       sfd___3__h36539[54:3] :
	       (requestR[159] ?
		  _theResult___sfd__h37166 :
		  sfd___3__h36539[54:3]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1407 =
	     (guard__h37279 == 2'b0 || requestR[159]) ?
	       sfd___3__h36539[53:2] :
	       _theResult___sfd__h37922 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1409 =
	     (guard__h37279 == 2'b0) ?
	       sfd___3__h36539[53:2] :
	       (requestR[159] ?
		  _theResult___sfd__h37922 :
		  sfd___3__h36539[53:2]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d370 =
	     (guard__h7718 == 2'b0) ?
	       8'd0 :
	       (requestR[159] ? _theResult___exp__h8134 : 8'd0) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d396 =
	     (guard__h8248 == 2'b0 || requestR[159]) ?
	       x__h8263[7:0] :
	       _theResult___exp__h8687 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d398 =
	     (guard__h8248 == 2'b0) ?
	       x__h8263[7:0] :
	       (requestR[159] ? _theResult___exp__h8687 : x__h8263[7:0]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d419 =
	     (guard__h7718 == 2'b0 || requestR[159]) ?
	       sfd___3__h7708[31:9] :
	       _theResult___sfd__h8135 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d421 =
	     (guard__h7718 == 2'b0) ?
	       sfd___3__h7708[31:9] :
	       (requestR[159] ?
		  _theResult___sfd__h8135 :
		  sfd___3__h7708[31:9]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d437 =
	     (guard__h8248 == 2'b0 || requestR[159]) ?
	       sfd___3__h7708[30:8] :
	       _theResult___sfd__h8688 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d439 =
	     (guard__h8248 == 2'b0) ?
	       sfd___3__h7708[30:8] :
	       (requestR[159] ?
		  _theResult___sfd__h8688 :
		  sfd___3__h7708[30:8]) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1054 =
	     (sV2_exp__h1308 == 8'd255 && sV2_sfd__h1309[22] ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1023) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       (IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1027 ?
		  requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
		  IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1052) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1058 =
	     (sV2_exp__h1308 == 8'd255 && sV2_sfd__h1309 != 23'd0 &&
	      !sV2_sfd__h1309[22]) ?
	       res__h18644 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1057 ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1068 =
	     IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1027 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1067 ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1070 =
	     (sV2_exp__h1308 == 8'd255 && sV2_sfd__h1309[22]) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       (IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1023 ?
		  requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
		  IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1068) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1074 =
	     (sV2_exp__h1308 == 8'd255 && sV2_sfd__h1309 != 23'd0 &&
	      !sV2_sfd__h1309[22]) ?
	       res__h18644 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1073 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1055 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206[22]) ?
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1054 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1057 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206[22] &&
	      sV2_exp__h1308 == 8'd255 &&
	      sV2_sfd__h1309[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1055 } ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1059 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0 &&
	      !sV1_sfd__h1206[22]) ?
	       res__h18407 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1058 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1071 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206[22]) ?
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1070 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1073 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206[22] &&
	      sV2_exp__h1308 == 8'd255 &&
	      sV2_sfd__h1309[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1071 } ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1075 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0 &&
	      !sV1_sfd__h1206[22]) ?
	       res__h18407 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1074 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1145 =
	     (sV1_exp__h1205 == 8'd0 && sV1_sfd__h1206 == 23'd0) ?
	       res___1__h27049 :
	       ((sV1_exp__h1205 == 8'd0) ? res___1__h27068 : res__h27084) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1146 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 == 23'd0) ?
	       res___1__h27039 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1145 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3107 =
	     ((sV1_exp__h1205 == 8'd0) ?
		(sV1_sfd__h1206[22] ?
		   6'd2 :
		   (sV1_sfd__h1206[21] ?
		      6'd3 :
		      (sV1_sfd__h1206[20] ?
			 6'd4 :
			 (sV1_sfd__h1206[19] ?
			    6'd5 :
			    (sV1_sfd__h1206[18] ?
			       6'd6 :
			       (sV1_sfd__h1206[17] ?
				  6'd7 :
				  (sV1_sfd__h1206[16] ?
				     6'd8 :
				     (sV1_sfd__h1206[15] ?
					6'd9 :
					(sV1_sfd__h1206[14] ?
					   6'd10 :
					   (sV1_sfd__h1206[13] ?
					      6'd11 :
					      (sV1_sfd__h1206[12] ?
						 6'd12 :
						 (sV1_sfd__h1206[11] ?
						    6'd13 :
						    (sV1_sfd__h1206[10] ?
						       6'd14 :
						       (sV1_sfd__h1206[9] ?
							  6'd15 :
							  (sV1_sfd__h1206[8] ?
							     6'd16 :
							     (sV1_sfd__h1206[7] ?
								6'd17 :
								(sV1_sfd__h1206[6] ?
								   6'd18 :
								   (sV1_sfd__h1206[5] ?
								      6'd19 :
								      (sV1_sfd__h1206[4] ?
									 6'd20 :
									 (sV1_sfd__h1206[3] ?
									    6'd21 :
									    (sV1_sfd__h1206[2] ?
									       6'd22 :
									       (sV1_sfd__h1206[1] ?
										  6'd23 :
										  (sV1_sfd__h1206[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3647 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0) ?
	       _theResult___snd_fst_sfd__h101116 :
	       _theResult___fst_sfd__h139243 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3683 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0 ||
	      (sV1_exp__h1205 == 8'd255 || sV1_exp__h1205 == 8'd0) &&
	      sV1_sfd__h1206 == 23'd0) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((sV1_exp__h1205 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3663 :
		  IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3681) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3718 =
	     (sV1_exp__h1205 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3036 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3037 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3697[4] :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3179 &&
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3180 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3714[4] ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3721 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0) ?
	       sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0 &&
	       !sV1_sfd__h1206[22] :
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 != 23'd0) &&
	       (sV1_exp__h1205 != 8'd0 || sV1_sfd__h1206 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3718 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3728 =
	     (sV1_exp__h1205 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3036 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3037 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3697[3] :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3179 &&
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3180 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3714[3] ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3742 =
	     (sV1_exp__h1205 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3036 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3037 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3697[2] :
	       !SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3179 ||
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3740 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3754 =
	     (sV1_exp__h1205 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3036 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3037 ||
		_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3697[1]) :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3179 &&
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3752 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3766 =
	     (sV1_exp__h1205 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3036 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3037 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3697[0] :
	       !SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3179 ||
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3764 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d909 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 == 23'd0) ?
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d838 :
	       ((sV1_exp__h1205 == 8'd0 && sV1_sfd__h1206 == 23'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d907) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d969 =
	     (sV1_exp__h1205 == 8'd0 && sV1_sfd__h1206 == 23'd0) ?
	       32'd0 :
	       (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d940[19] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d967) ;
  assign IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1260 =
	     sfd__h2804[31] ?
	       6'd0 :
	       (sfd__h2804[30] ?
		  6'd1 :
		  (sfd__h2804[29] ?
		     6'd2 :
		     (sfd__h2804[28] ?
			6'd3 :
			(sfd__h2804[27] ?
			   6'd4 :
			   (sfd__h2804[26] ?
			      6'd5 :
			      (sfd__h2804[25] ?
				 6'd6 :
				 (sfd__h2804[24] ?
				    6'd7 :
				    (sfd__h2804[23] ?
				       6'd8 :
				       (sfd__h2804[22] ?
					  6'd9 :
					  (sfd__h2804[21] ?
					     6'd10 :
					     (sfd__h2804[20] ?
						6'd11 :
						(sfd__h2804[19] ?
						   6'd12 :
						   (sfd__h2804[18] ?
						      6'd13 :
						      (sfd__h2804[17] ?
							 6'd14 :
							 (sfd__h2804[16] ?
							    6'd15 :
							    (sfd__h2804[15] ?
							       6'd16 :
							       (sfd__h2804[14] ?
								  6'd17 :
								  (sfd__h2804[13] ?
								     6'd18 :
								     (sfd__h2804[12] ?
									6'd19 :
									(sfd__h2804[11] ?
									   6'd20 :
									   (sfd__h2804[10] ?
									      6'd21 :
									      (sfd__h2804[9] ?
										 6'd22 :
										 (sfd__h2804[8] ?
										    6'd23 :
										    (sfd__h2804[7] ?
										       6'd24 :
										       (sfd__h2804[6] ?
											  6'd25 :
											  (sfd__h2804[5] ?
											     6'd26 :
											     (sfd__h2804[4] ?
												6'd27 :
												(sfd__h2804[3] ?
												   6'd28 :
												   (sfd__h2804[2] ?
												      6'd29 :
												      (sfd__h2804[1] ?
													 6'd30 :
													 (sfd__h2804[0] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d278 =
	     sfd__h2804[31] ?
	       6'd0 :
	       (sfd__h2804[30] ?
		  6'd1 :
		  (sfd__h2804[29] ?
		     6'd2 :
		     (sfd__h2804[28] ?
			6'd3 :
			(sfd__h2804[27] ?
			   6'd4 :
			   (sfd__h2804[26] ?
			      6'd5 :
			      (sfd__h2804[25] ?
				 6'd6 :
				 (sfd__h2804[24] ?
				    6'd7 :
				    (sfd__h2804[23] ?
				       6'd8 :
				       (sfd__h2804[22] ?
					  6'd9 :
					  (sfd__h2804[21] ?
					     6'd10 :
					     (sfd__h2804[20] ?
						6'd11 :
						(sfd__h2804[19] ?
						   6'd12 :
						   (sfd__h2804[18] ?
						      6'd13 :
						      (sfd__h2804[17] ?
							 6'd14 :
							 (sfd__h2804[16] ?
							    6'd15 :
							    (sfd__h2804[15] ?
							       6'd16 :
							       (sfd__h2804[14] ?
								  6'd17 :
								  (sfd__h2804[13] ?
								     6'd18 :
								     (sfd__h2804[12] ?
									6'd19 :
									(sfd__h2804[11] ?
									   6'd20 :
									   (sfd__h2804[10] ?
									      6'd21 :
									      (sfd__h2804[9] ?
										 6'd22 :
										 (sfd__h2804[8] ?
										    6'd23 :
										    (sfd__h2804[7] ?
										       6'd24 :
										       (sfd__h2804[6] ?
											  6'd25 :
											  (sfd__h2804[5] ?
											     6'd26 :
											     (sfd__h2804[4] ?
												6'd27 :
												(sfd__h2804[3] ?
												   6'd28 :
												   (sfd__h2804[2] ?
												      6'd29 :
												      (sfd__h2804[1] ?
													 6'd30 :
													 (sfd__h2804[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d905 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d878 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d899 ?
		  ((x__h16308[56:25] == 32'h7FFFFFFF) ?
		     x__h16308[56:25] :
		     x__h16308[56:25] + 32'd1) :
		  x__h16308[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d907 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d843 ==
	      20'd1048545) ?
	       ((_theResult_____2__h15567[32:31] == 2'b11) ?
		  _theResult_____2__h15567[31:0] :
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d838) :
	       (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d876[19] ?
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d838 :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d905) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d931 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d843 ==
	      20'd1048545) ?
	       _theResult_____2__h15567[32:31] == 2'b11 &&
	       guard__h15565 != 2'd0 :
	       !NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d876[19] &&
	       (!NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d878 ||
		guard__h16119 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d967 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d942 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d961 ?
		  ((x__h17403[56:25] == 32'hFFFFFFFF) ?
		     x__h17403[56:25] :
		     x__h17403[56:25] + 32'd1) :
		  x__h17403[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1706 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1679 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1700 ?
		  ((x__h49060[85:54] == 32'h7FFFFFFF) ?
		     x__h49060[85:54] :
		     x__h49060[85:54] + 32'd1) :
		  x__h49060[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1708 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1644 ==
	      24'd16777185) ?
	       ((_theResult_____2__h48319[32:31] == 2'b11) ?
		  _theResult_____2__h48319[31:0] :
		  IF_requestR_3_BIT_191_219_THEN_2147483648_ELSE_ETC___d1639) :
	       (NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1677[23] ?
		  IF_requestR_3_BIT_191_219_THEN_2147483648_ELSE_ETC___d1639 :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1706) ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1732 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1644 ==
	      24'd16777185) ?
	       _theResult_____2__h48319[32:31] == 2'b11 &&
	       guard__h48317 != 2'd0 :
	       !NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1677[23] &&
	       (!NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1679 ||
		guard__h48871 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1768 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1743 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1762 ?
		  ((x__h50138[85:54] == 32'hFFFFFFFF) ?
		     x__h50138[85:54] :
		     x__h50138[85:54] + 32'd1) :
		  x__h50138[85:54]) :
	       32'd0 ;
  assign IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1320 =
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1264 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1266) ?
	       requestR[159] :
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1319 ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3663 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3036 ||
	      _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3037 ||
	      _theResult___fst_exp__h120042 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard12081_0b0_requestR_BITS_191_TO_160_E_ETC__q108 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109) ;
  assign IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1052 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1051 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 ;
  assign IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1067 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1051 ?
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign IF_NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1047 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1036 ||
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1037 &&
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1038 :
	       !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1041 ||
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1037 &&
	       !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1043 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3501 =
	     ((SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99[10],
		  SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3681 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3179 ?
	       (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3180 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3671 :
		  IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3679) :
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3740 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3180 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3714[2] :
	       _theResult___fst_exp__h139227 == 11'd2047 &&
	       _theResult___fst_sfd__h139228 == 52'd0 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3752 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3180 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3714[1] :
	       _theResult___fst_exp__h138446 == 11'd0 &&
	       guard__h130456 != 2'b0 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3764 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3180 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3714[0] :
	       _theResult___fst_exp__h138446 != 11'd2047 &&
	       guard__h130456 != 2'b0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2665 =
	     ((SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC__q64[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC__q67[7],
		  SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC__q67 }) -
	     9'd386 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2871 =
	     SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2346 ?
	       ((_theResult___fst_exp__h88280 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard0054_0b0_requestR_BIT_191_0b1_reques_ETC__q90 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91)) :
	       ((_theResult___fst_exp__h96995 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard8918_0b0_requestR_BIT_191_0b1_reques_ETC__q92 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93)) ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2949 =
	     SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2346 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2920[2] :
	       _theResult___fst_exp__h97573 == 8'd255 &&
	       _theResult___fst_sfd__h97574 == 23'd0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2962 =
	     SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2346 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2920[1] :
	       _theResult___fst_exp__h96995 == 8'd0 && guard__h88918 != 2'b0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2975 =
	     SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2346 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2920[0] :
	       _theResult___fst_exp__h96995 != 8'd255 &&
	       guard__h88918 != 2'b0 ;
  assign IF_requestR_3_BITS_126_TO_116_778_EQ_2047_779__ETC___d3826 =
	     (requestR[126:116] == 11'd2047 && requestR[115] ||
	      requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_re_ETC___d3795) ?
	       requestR[191:128] :
	       (requestR_3_BITS_126_TO_116_778_EQ_0_792_AND_re_ETC___d3799 ?
		  requestR[127:64] :
		  res__h144308) ;
  assign IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1027 =
	     sV2_exp__h1308 == 8'd0 && sV2_sfd__h1309 == 23'd0 &&
	     requestR[127:96] == 32'hFFFFFFFF &&
	     requestR[95] &&
	     sV1_exp__h1205 == 8'd0 &&
	     sV1_sfd__h1206 == 23'd0 &&
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ;
  assign IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d1417 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1264 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1266) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h38025 ;
  assign IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d1600 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1479 ||
	      _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1480) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h47719 ;
  assign IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d408 =
	     (requestR[159:128] == 32'd0 ||
	      !sfd__h2804[31] && !sfd__h2804[30] && !sfd__h2804[29] &&
	      !sfd__h2804[28] &&
	      !sfd__h2804[27] &&
	      !sfd__h2804[26] &&
	      !sfd__h2804[25] &&
	      !sfd__h2804[24] &&
	      !sfd__h2804[23] &&
	      !sfd__h2804[22] &&
	      !sfd__h2804[21] &&
	      !sfd__h2804[20] &&
	      !sfd__h2804[19] &&
	      !sfd__h2804[18] &&
	      !sfd__h2804[17] &&
	      !sfd__h2804[16] &&
	      !sfd__h2804[15] &&
	      !sfd__h2804[14] &&
	      !sfd__h2804[13] &&
	      !sfd__h2804[12] &&
	      !sfd__h2804[11] &&
	      !sfd__h2804[10] &&
	      !sfd__h2804[9] &&
	      !sfd__h2804[8] &&
	      !sfd__h2804[7] &&
	      !sfd__h2804[6] &&
	      !sfd__h2804[5] &&
	      !sfd__h2804[4] &&
	      !sfd__h2804[3] &&
	      !sfd__h2804[2] &&
	      !sfd__h2804[1] &&
	      !sfd__h2804[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8796 ;
  assign IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d726 =
	     (requestR[159:128] == 32'd0 ||
	      !requestR[159] &&
	      NOT_requestR_3_BIT_158_11_12_AND_NOT_requestR__ETC___d602) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14968 ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_ETC___d1770 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       32'd0 :
	       (NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1741[23] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1768) ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_ETC___d3840 =
	     requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_re_ETC___d3795 ?
	       requestR[127:64] :
	       (requestR_3_BITS_126_TO_116_778_EQ_0_792_AND_re_ETC___d3799 ?
		  requestR[191:128] :
		  res__h148856) ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_ETC___d3911 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       res___1__h157048 :
	       ((requestR[190:180] == 11'd0) ?
		  res___1__h157067 :
		  res__h157083) ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2269 =
	     ((requestR[190:180] == 11'd0) ?
		(requestR[179] ?
		   6'd2 :
		   (requestR[178] ?
		      6'd3 :
		      (requestR[177] ?
			 6'd4 :
			 (requestR[176] ?
			    6'd5 :
			    (requestR[175] ?
			       6'd6 :
			       (requestR[174] ?
				  6'd7 :
				  (requestR[173] ?
				     6'd8 :
				     (requestR[172] ?
					6'd9 :
					(requestR[171] ?
					   6'd10 :
					   (requestR[170] ?
					      6'd11 :
					      (requestR[169] ?
						 6'd12 :
						 (requestR[168] ?
						    6'd13 :
						    (requestR[167] ?
						       6'd14 :
						       (requestR[166] ?
							  6'd15 :
							  (requestR[165] ?
							     6'd16 :
							     (requestR[164] ?
								6'd17 :
								(requestR[163] ?
								   6'd18 :
								   (requestR[162] ?
								      6'd19 :
								      (requestR[161] ?
									 6'd20 :
									 (requestR[160] ?
									    6'd21 :
									    (requestR[159] ?
									       6'd22 :
									       (requestR[158] ?
										  6'd23 :
										  (requestR[157] ?
										     6'd24 :
										     (requestR[156] ?
											6'd25 :
											(requestR[155] ?
											   6'd26 :
											   (requestR[154] ?
											      6'd27 :
											      (requestR[153] ?
												 6'd28 :
												 (requestR[152] ?
												    6'd29 :
												    (requestR[151] ?
												       6'd30 :
												       (requestR[150] ?
													  6'd31 :
													  (requestR[149] ?
													     6'd32 :
													     (requestR[148] ?
														6'd33 :
														(requestR[147] ?
														   6'd34 :
														   (requestR[146] ?
														      6'd35 :
														      (requestR[145] ?
															 6'd36 :
															 (requestR[144] ?
															    6'd37 :
															    (requestR[143] ?
															       6'd38 :
															       (requestR[142] ?
																  6'd39 :
																  (requestR[141] ?
																     6'd40 :
																     (requestR[140] ?
																	6'd41 :
																	(requestR[139] ?
																	   6'd42 :
																	   (requestR[138] ?
																	      6'd43 :
																	      (requestR[137] ?
																		 6'd44 :
																		 (requestR[136] ?
																		    6'd45 :
																		    (requestR[135] ?
																		       6'd46 :
																		       (requestR[134] ?
																			  6'd47 :
																			  (requestR[133] ?
																			     6'd48 :
																			     (requestR[132] ?
																				6'd49 :
																				(requestR[131] ?
																				   6'd50 :
																				   (requestR[130] ?
																				      6'd51 :
																				      (requestR[129] ?
																					 6'd52 :
																					 (requestR[128] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2873 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1874 ?
		  IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_8_ETC___d2853 :
		  requestR[191]) :
	       (SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2345 ?
		  IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2871 :
		  requestR[191]) ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2924 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d2906 :
	       SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2345 &&
	       SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2346 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2920[4] ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2935 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d2931 :
	       SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2345 &&
	       SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2346 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2920[3] ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2951 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2943 :
	       !SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2345 ||
	       IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2949 ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2964 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d2958 :
	       SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2345 &&
	       IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2962 ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2977 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2971 :
	       !SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2345 ||
	       IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2975 ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_2047_630__ETC___d1710 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_3_BIT_191_219_THEN_2147483648_ELSE_ETC___d1639 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1708) ;
  assign IF_requestR_3_BITS_190_TO_180_629_EQ_2047_630__ETC___d2831 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       _theResult___snd_fst_sfd__h54644 :
	       _theResult___fst_sfd__h97589 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1013 =
	     sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0 &&
	     !sV1_sfd__h1206[22] &&
	     sV2_exp__h1308 == 8'd255 &&
	     sV2_sfd__h1309 != 23'd0 &&
	     !sV2_sfd__h1309[22] ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1023 =
	     sV1_exp__h1205 == 8'd0 && sV1_sfd__h1206 == 23'd0 &&
	     requestR[191:160] == 32'hFFFFFFFF &&
	     requestR[159] &&
	     sV2_exp__h1308 == 8'd0 &&
	     sV2_sfd__h1309 == 23'd0 &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1036 =
	     sV1_exp__h1205 < sV2_exp__h1308 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1037 =
	     sV1_exp__h1205 == sV2_exp__h1308 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1038 =
	     sV1_sfd__h1206 < sV2_sfd__h1309 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1041 =
	     sV1_exp__h1205 <= sV2_exp__h1308 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1043 =
	     sV1_sfd__h1206 <= sV2_sfd__h1309 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1061 =
	     sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0 &&
	     !sV1_sfd__h1206[22] ||
	     sV2_exp__h1308 == 8'd255 && sV2_sfd__h1309 != 23'd0 &&
	     !sV2_sfd__h1309[22] ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1098 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1061 ||
	     sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206[22] ||
	     sV2_exp__h1308 == 8'd255 && sV2_sfd__h1309[22] ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1109 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1041 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1037 ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1043) &&
	     !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1036 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1037 ||
	      !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1038) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1113 =
	     sV1_exp__h1205 == 8'd0 && sV1_sfd__h1206 == 23'd0 &&
	     sV2_exp__h1308 == 8'd0 &&
	     sV2_sfd__h1309 == 23'd0 ||
	     NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1112 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:128] :
	       31'h7FC00000 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837 =
	     sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0 ||
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) &&
	     sV1_exp__h1205 == 8'd255 &&
	     sV1_sfd__h1206 == 23'd0 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d838 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'h80000000 :
	       32'h7FFFFFFF ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d841 =
	     sV1_exp__h1205 - 8'd127 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d850 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       -b__h15632 :
	       b__h15632 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d971 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'd0 :
	       ((sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 == 23'd0) ?
		  32'hFFFFFFFF :
		  IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d969) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d979 =
	     sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0 ||
	     sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 == 23'd0 ||
	     (sV1_exp__h1205 != 8'd0 || sV1_sfd__h1206 != 23'd0) &&
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d940[19] ||
	      NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d942 &&
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d961 &&
	      x__h17403[56:25] == 32'hFFFFFFFF) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d990 =
	     { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d979,
	       3'd0,
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 == 23'd0) &&
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 != 23'd0) &&
	       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d984 } ==
	     5'd0 ||
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d979 ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1668 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h48317 == 2'b10) ?
		  IF_requestR_3_BIT_191_219_THEN_NEG_0b0_CONCAT__ETC___d1651[53] :
		  guard__h48317 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h48317 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_3_BIT_191_219_THEN_NEG_0b0_CONCAT__ETC___d1651[85] &&
		  guard__h48317 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1700 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h48871 == 2'b10) ?
		  x__h49060[54] :
		  guard__h48871 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h48871 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h49060[85] &&
		  guard__h48871 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1762 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h49917 == 2'b10) ?
		  x__h50138[54] :
		  guard__h49917 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h49917 != 2'd0 ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d867 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h15565 == 2'b10) ?
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d850[24] :
		  guard__h15565 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h15565 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d850[56] &&
		  guard__h15565 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d899 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h16119 == 2'b10) ?
		  x__h16308[25] :
		  guard__h16119 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h16119 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h16308[56] &&
		  guard__h16119 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d961 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h17182 == 2'b10) ?
		  x__h17403[25] :
		  guard__h17182 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h17182 != 2'd0 ;
  assign IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1475 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d636 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d489 =
	     (sfd__h2804[31] || sfd__h2804[30] || sfd__h2804[29] ||
	      sfd__h2804[28] ||
	      sfd__h2804[27] ||
	      sfd__h2804[26] ||
	      sfd__h2804[25] ||
	      sfd__h2804[24] ||
	      sfd__h2804[23] ||
	      sfd__h2804[22] ||
	      sfd__h2804[21] ||
	      sfd__h2804[20] ||
	      sfd__h2804[19] ||
	      sfd__h2804[18] ||
	      sfd__h2804[17] ||
	      sfd__h2804[16] ||
	      sfd__h2804[15] ||
	      sfd__h2804[14] ||
	      sfd__h2804[13] ||
	      sfd__h2804[12] ||
	      sfd__h2804[11] ||
	      sfd__h2804[10] ||
	      sfd__h2804[9] ||
	      sfd__h2804[8] ||
	      sfd__h2804[7] ||
	      sfd__h2804[6] ||
	      sfd__h2804[5] ||
	      sfd__h2804[4] ||
	      sfd__h2804[3] ||
	      sfd__h2804[2] ||
	      sfd__h2804[1] ||
	      sfd__h2804[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d282 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 &&
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d287 &&
	      _theResult___fst_exp__h8787 == 8'd255 &&
	      _theResult___fst_sfd__h8788 == 23'd0) ;
  assign IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d492 =
	     (sfd__h2804[31] || sfd__h2804[30] || sfd__h2804[29] ||
	      sfd__h2804[28] ||
	      sfd__h2804[27] ||
	      sfd__h2804[26] ||
	      sfd__h2804[25] ||
	      sfd__h2804[24] ||
	      sfd__h2804[23] ||
	      sfd__h2804[22] ||
	      sfd__h2804[21] ||
	      sfd__h2804[20] ||
	      sfd__h2804[19] ||
	      sfd__h2804[18] ||
	      sfd__h2804[17] ||
	      sfd__h2804[16] ||
	      sfd__h2804[15] ||
	      sfd__h2804[14] ||
	      sfd__h2804[13] ||
	      sfd__h2804[12] ||
	      sfd__h2804[11] ||
	      sfd__h2804[10] ||
	      sfd__h2804[9] ||
	      sfd__h2804[8] ||
	      sfd__h2804[7] ||
	      sfd__h2804[6] ||
	      sfd__h2804[5] ||
	      sfd__h2804[4] ||
	      sfd__h2804[3] ||
	      sfd__h2804[2] ||
	      sfd__h2804[1] ||
	      sfd__h2804[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d282 &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 ;
  assign IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d501 =
	     (sfd__h2804[31] || sfd__h2804[30] || sfd__h2804[29] ||
	      sfd__h2804[28] ||
	      sfd__h2804[27] ||
	      sfd__h2804[26] ||
	      sfd__h2804[25] ||
	      sfd__h2804[24] ||
	      sfd__h2804[23] ||
	      sfd__h2804[22] ||
	      sfd__h2804[21] ||
	      sfd__h2804[20] ||
	      sfd__h2804[19] ||
	      sfd__h2804[18] ||
	      sfd__h2804[17] ||
	      sfd__h2804[16] ||
	      sfd__h2804[15] ||
	      sfd__h2804[14] ||
	      sfd__h2804[13] ||
	      sfd__h2804[12] ||
	      sfd__h2804[11] ||
	      sfd__h2804[10] ||
	      sfd__h2804[9] ||
	      sfd__h2804[8] ||
	      sfd__h2804[7] ||
	      sfd__h2804[6] ||
	      sfd__h2804[5] ||
	      sfd__h2804[4] ||
	      sfd__h2804[3] ||
	      sfd__h2804[2] ||
	      sfd__h2804[1] ||
	      sfd__h2804[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d282 &&
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d498 ;
  assign IF_requestR_3_BIT_191_219_THEN_2147483648_ELSE_ETC___d1639 =
	     requestR[191] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_requestR_3_BIT_191_219_THEN_NEG_0b0_CONCAT__ETC___d1651 =
	     requestR[191] ? -b__h48384 : b__h48384 ;
  assign IF_requestR_3_BIT_191_219_THEN_NOT_requestR_3__ETC___d3819 =
	     requestR[191] ?
	       !requestR_3_BITS_190_TO_180_629_ULE_requestR_3__ETC___d3808 ||
	       requestR_3_BITS_190_TO_180_629_EQ_requestR_3_B_ETC___d3810 &&
	       !requestR_3_BITS_179_TO_128_631_ULE_requestR_3__ETC___d3811 :
	       requestR_3_BITS_190_TO_180_629_ULT_requestR_3__ETC___d3815 ||
	       requestR_3_BITS_190_TO_180_629_EQ_requestR_3_B_ETC___d3810 &&
	       requestR_3_BITS_179_TO_128_631_ULT_requestR_3__ETC___d3816 ;
  assign IF_sfd___33885_BIT_7_THEN_2_ELSE_0__q21 =
	     sfd___3__h13885[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___33885_BIT_8_THEN_2_ELSE_0__q20 =
	     sfd___3__h13885[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___36235_BIT_1_THEN_2_ELSE_0__q48 =
	     sfd___3__h46235[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___36235_BIT_2_THEN_2_ELSE_0__q47 =
	     sfd___3__h46235[2] ? 2'd2 : 2'd0 ;
  assign IF_sfd___36539_BIT_1_THEN_2_ELSE_0__q34 =
	     sfd___3__h36539[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___36539_BIT_2_THEN_2_ELSE_0__q33 =
	     sfd___3__h36539[2] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3708_BIT_7_THEN_2_ELSE_0__q7 =
	     sfd___3__h7708[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3708_BIT_8_THEN_2_ELSE_0__q6 =
	     sfd___3__h7708[8] ? 2'd2 : 2'd0 ;
  assign IF_sfdin0421_BIT_33_THEN_2_ELSE_0__q61 =
	     sfdin__h70421[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin29609_BIT_4_THEN_2_ELSE_0__q98 =
	     sfdin__h129609[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin8274_BIT_33_THEN_2_ELSE_0__q66 =
	     sfdin__h88274[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd19993_BIT_4_THEN_2_ELSE_0__q95 =
	     _theResult___snd__h119993[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd38392_BIT_4_THEN_2_ELSE_0__q101 =
	     _theResult___snd__h138392[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd6941_BIT_33_THEN_2_ELSE_0__q69 =
	     _theResult___snd__h96941[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd9064_BIT_33_THEN_2_ELSE_0__q63 =
	     _theResult___snd__h79064[33] ? 2'd2 : 2'd0 ;
  assign IF_x0138_BIT_53_THEN_2_ELSE_0__q59 = x__h50138[53] ? 2'd2 : 2'd0 ;
  assign IF_x6308_BIT_24_THEN_2_ELSE_0__q31 = x__h16308[24] ? 2'd2 : 2'd0 ;
  assign IF_x7403_BIT_24_THEN_2_ELSE_0__q32 = x__h17403[24] ? 2'd2 : 2'd0 ;
  assign IF_x9060_BIT_53_THEN_2_ELSE_0__q58 = x__h49060[53] ? 2'd2 : 2'd0 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d843 =
	     -{ {12{IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d841[7]}},
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d841 } ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d875 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d843 +
	     20'd32 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d876 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d875 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d878 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d876 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d940 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d875 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d942 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d940 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1644 =
	     -{ {13{requestR_3_BITS_190_TO_180_629_MINUS_1023___d1642[10]}},
		requestR_3_BITS_190_TO_180_629_MINUS_1023___d1642 } ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1676 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1644 +
	     24'd32 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1677 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1676 -
	     24'd2 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1679 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1677 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1741 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1676 -
	     24'd1 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1743 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1741 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2943 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1874 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1875 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2891[2] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2903[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2971 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1874 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1875 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2891[0] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2903[0]) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1050 =
	     (sV1_exp__h1205 != 8'd0 || sV1_sfd__h1206 != 23'd0 ||
	      sV2_exp__h1308 != 8'd0 ||
	      sV2_sfd__h1309 != 23'd0) &&
	     requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1049 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1051 =
	     (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 == 23'd0) &&
	     (sV2_exp__h1308 != 8'd255 || sV2_sfd__h1309 == 23'd0) &&
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1050 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1108 =
	     !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1036 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1037 ||
	      !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1038) &&
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1041 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1037 ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1043) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1114 =
	     (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 == 23'd0) &&
	     (sV2_exp__h1308 != 8'd255 || sV2_sfd__h1309 == 23'd0) &&
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1113 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1132 =
	     (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 == 23'd0) &&
	     (sV2_exp__h1308 != 8'd255 || sV2_sfd__h1309 == 23'd0) &&
	     (requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1049 ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1113) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3080 =
	     !sV1_sfd__h1206[21] && !sV1_sfd__h1206[20] &&
	     !sV1_sfd__h1206[19] &&
	     !sV1_sfd__h1206[18] &&
	     !sV1_sfd__h1206[17] &&
	     !sV1_sfd__h1206[16] &&
	     !sV1_sfd__h1206[15] &&
	     !sV1_sfd__h1206[14] &&
	     !sV1_sfd__h1206[13] &&
	     !sV1_sfd__h1206[12] &&
	     !sV1_sfd__h1206[11] &&
	     !sV1_sfd__h1206[10] &&
	     !sV1_sfd__h1206[9] &&
	     !sV1_sfd__h1206[8] &&
	     !sV1_sfd__h1206[7] &&
	     !sV1_sfd__h1206[6] &&
	     !sV1_sfd__h1206[5] &&
	     !sV1_sfd__h1206[4] &&
	     !sV1_sfd__h1206[3] &&
	     !sV1_sfd__h1206[2] &&
	     !sV1_sfd__h1206[1] &&
	     !sV1_sfd__h1206[0] ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d920 =
	     (sV1_exp__h1205 != 8'd0 || sV1_sfd__h1206 != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d843 ==
	       20'd1048545) ?
		_theResult_____2__h15567[32:31] != 2'b11 :
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d876[19] ||
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d878 &&
		IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d899 &&
		x__h16308[56:25] == 32'h7FFFFFFF) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d984 =
	     (sV1_exp__h1205 != 8'd0 || sV1_sfd__h1206 != 23'd0) &&
	     !NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d940[19] &&
	     (!NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d942 ||
	      guard__h17182 != 2'd0) ;
  assign NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d286 =
	     !sfd__h2804[31] && !sfd__h2804[30] && !sfd__h2804[29] &&
	     !sfd__h2804[28] &&
	     !sfd__h2804[27] &&
	     !sfd__h2804[26] &&
	     !sfd__h2804[25] &&
	     !sfd__h2804[24] &&
	     !sfd__h2804[23] &&
	     !sfd__h2804[22] &&
	     !sfd__h2804[21] &&
	     !sfd__h2804[20] &&
	     !sfd__h2804[19] &&
	     !sfd__h2804[18] &&
	     !sfd__h2804[17] &&
	     !sfd__h2804[16] &&
	     !sfd__h2804[15] &&
	     !sfd__h2804[14] &&
	     !sfd__h2804[13] &&
	     !sfd__h2804[12] &&
	     !sfd__h2804[11] &&
	     !sfd__h2804[10] &&
	     !sfd__h2804[9] &&
	     !sfd__h2804[8] &&
	     !sfd__h2804[7] &&
	     !sfd__h2804[6] &&
	     !sfd__h2804[5] &&
	     !sfd__h2804[4] &&
	     !sfd__h2804[3] &&
	     !sfd__h2804[2] &&
	     !sfd__h2804[1] &&
	     !sfd__h2804[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d282 ||
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 ;
  assign NOT_requestR_3_BITS_159_TO_128_47_EQ_0_48_49_A_ETC___d804 =
	     requestR[159:128] != 32'd0 &&
	     (requestR[159] ||
	      requestR_3_BIT_158_11_OR_requestR_3_BIT_157_13_ETC___d793) &&
	     (!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d640 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d641 &&
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d642 &&
	      _theResult___fst_exp__h14959 == 8'd255 &&
	      _theResult___fst_sfd__h14960 == 23'd0) ;
  assign NOT_requestR_3_BITS_190_TO_180_629_EQ_0_640_64_ETC___d1721 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1644 ==
	       24'd16777185) ?
		_theResult_____2__h48319[32:31] != 2'b11 :
		NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1677[23] ||
		NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1679 &&
		IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1700 &&
		x__h49060[85:54] == 32'h7FFFFFFF) ;
  assign NOT_requestR_3_BITS_190_TO_180_629_EQ_0_640_64_ETC___d1785 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1741[23] &&
	     (!NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1743 ||
	      guard__h49917 != 2'd0) ;
  assign NOT_requestR_3_BITS_190_TO_180_629_EQ_2047_630_ETC___d3823 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0 ||
	      requestR[126:116] != 11'd0 ||
	      requestR[115:64] != 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_3_BIT_191_219_THEN_NOT_requestR_3__ETC___d3819) ;
  assign NOT_requestR_3_BITS_190_TO_180_629_EQ_2047_630_ETC___d3888 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_3_BIT_191_219_THEN_NOT_requestR_3__ETC___d3819 ||
	      requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_re_ETC___d3869) ;
  assign NOT_requestR_3_BITS_190_TO_180_629_ULT_request_ETC___d3865 =
	     !requestR_3_BITS_190_TO_180_629_ULT_requestR_3__ETC___d3815 &&
	     (!requestR_3_BITS_190_TO_180_629_EQ_requestR_3_B_ETC___d3810 ||
	      !requestR_3_BITS_179_TO_128_631_ULT_requestR_3__ETC___d3816) &&
	     requestR_3_BITS_190_TO_180_629_ULE_requestR_3__ETC___d3808 &&
	     (!requestR_3_BITS_190_TO_180_629_EQ_requestR_3_B_ETC___d3810 ||
	      requestR_3_BITS_179_TO_128_631_ULE_requestR_3__ETC___d3811) ;
  assign NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1112 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159] ||
	      requestR[127:96] == 32'hFFFFFFFF && requestR[95]) &&
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     ((requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
		NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1108 :
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1109) ;
  assign NOT_requestR_3_BIT_158_11_12_AND_NOT_requestR__ETC___d602 =
	     !requestR[158] && !requestR[157] && !requestR[156] &&
	     !requestR[155] &&
	     !requestR[154] &&
	     !requestR[153] &&
	     !requestR[152] &&
	     !requestR[151] &&
	     !requestR[150] &&
	     !requestR[149] &&
	     !requestR[148] &&
	     !requestR[147] &&
	     !requestR[146] &&
	     !requestR[145] &&
	     !requestR[144] &&
	     !requestR[143] &&
	     !requestR[142] &&
	     !requestR[141] &&
	     !requestR[140] &&
	     !requestR[139] &&
	     !requestR[138] &&
	     !requestR[137] &&
	     !requestR[136] &&
	     !requestR[135] &&
	     !requestR[134] &&
	     !requestR[133] &&
	     !requestR[132] &&
	     !requestR[131] &&
	     !requestR[130] &&
	     !requestR[129] &&
	     !requestR[128] ;
  assign NOT_requestR_3_BIT_179_800_175_AND_NOT_request_ETC___d2214 =
	     !requestR[179] && !requestR[178] && !requestR[177] &&
	     !requestR[176] &&
	     !requestR[175] &&
	     !requestR[174] &&
	     !requestR[173] &&
	     !requestR[172] &&
	     !requestR[171] &&
	     !requestR[170] &&
	     !requestR[169] &&
	     !requestR[168] &&
	     !requestR[167] &&
	     !requestR[166] &&
	     !requestR[165] &&
	     !requestR[164] &&
	     !requestR[163] &&
	     !requestR[162] &&
	     !requestR[161] &&
	     !requestR[160] &&
	     !requestR[159] &&
	     NOT_requestR_3_BIT_158_11_12_AND_NOT_requestR__ETC___d602 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3178 =
	     { {4{IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d841[7]}},
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d841 } ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3179 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3178 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3180 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3178 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3178 +
	     12'd1023 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] -
	     11'd1023 ;
  assign SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2344 =
	     { requestR_3_BITS_190_TO_180_629_MINUS_1023___d1642[10],
	       requestR_3_BITS_190_TO_180_629_MINUS_1023___d1642 } ;
  assign SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2345 =
	     (SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2344 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2346 =
	     (SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2344 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC__q64 =
	     SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2344 +
	     12'd127 ;
  assign SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC__q67 =
	     SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC__q64[7:0] -
	     8'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2109 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2107 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2891 =
	     { 3'd0,
	       _theResult___fst_exp__h70427 == 8'd0 &&
	       (sfdin__h70421[56:34] == 23'd0 || guard__h62330 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h71054 == 8'd255 &&
	       _theResult___fst_sfd__h71055 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h70427 != 8'd255 &&
	       guard__h62330 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3429 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3427 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3714 =
	     { 3'd0,
	       _theResult___fst_exp__h129615 == 11'd0 &&
	       (sfdin__h129609[56:5] == 52'd0 || guard__h121389 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h130445 == 11'd2047 &&
	       _theResult___fst_sfd__h130446 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h129615 != 11'd2047 &&
	       guard__h121389 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2593 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2591 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2920 =
	     { 3'd0,
	       _theResult___fst_exp__h88280 == 8'd0 &&
	       (sfdin__h88274[56:34] == 23'd0 || guard__h80054 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h88907 == 8'd255 &&
	       _theResult___fst_sfd__h88908 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h88280 != 8'd255 &&
	       guard__h80054 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3109 =
	     ({ 6'd0,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3107 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3502 =
	     ({ 6'd0,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3107 } ^
	      12'h800) <=
	     (IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3501 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3697 =
	     { 3'd0,
	       _theResult___fst_exp__h120042 == 11'd0 &&
	       guard__h112081 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h120798 == 11'd2047 &&
	       _theResult___fst_sfd__h120799 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h120042 != 11'd2047 &&
	       guard__h112081 != 2'b0 } ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2271 =
	     ({ 3'd0,
		IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2269 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2666 =
	     ({ 3'd0,
		IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2269 } ^
	      9'h100) <=
	     (IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2665 ^
	      9'h100) ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2903 =
	     { 3'd0,
	       _theResult___fst_exp__h79113 == 8'd0 && guard__h71065 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h79666 == 8'd255 &&
	       _theResult___fst_sfd__h79667 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h79113 != 8'd255 &&
	       guard__h71065 != 2'b0 } ;
  assign _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3185 =
	     b__h15632 >>
	     _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3181 ;
  assign _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_629__ETC___d2351 =
	     sfd__h54690 >>
	     _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_629_ETC___d2347 ;
  assign _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78 =
	     { 33'h1AAAAAAAA,
	       requestR[63:32] == 32'hFFFFFFFF && requestR[31],
	       (requestR[63:32] == 32'hFFFFFFFF) ?
		 requestR[30:0] :
		 31'h7FC00000 } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1873 =
	     12'd3074 -
	     { 6'd0,
	       requestR[179] ?
		 6'd0 :
		 (requestR[178] ?
		    6'd1 :
		    (requestR[177] ?
		       6'd2 :
		       (requestR[176] ?
			  6'd3 :
			  (requestR[175] ?
			     6'd4 :
			     (requestR[174] ?
				6'd5 :
				(requestR[173] ?
				   6'd6 :
				   (requestR[172] ?
				      6'd7 :
				      (requestR[171] ?
					 6'd8 :
					 (requestR[170] ?
					    6'd9 :
					    (requestR[169] ?
					       6'd10 :
					       (requestR[168] ?
						  6'd11 :
						  (requestR[167] ?
						     6'd12 :
						     (requestR[166] ?
							6'd13 :
							(requestR[165] ?
							   6'd14 :
							   (requestR[164] ?
							      6'd15 :
							      (requestR[163] ?
								 6'd16 :
								 (requestR[162] ?
								    6'd17 :
								    (requestR[161] ?
								       6'd18 :
								       (requestR[160] ?
									  6'd19 :
									  (requestR[159] ?
									     6'd20 :
									     (requestR[158] ?
										6'd21 :
										(requestR[157] ?
										   6'd22 :
										   (requestR[156] ?
										      6'd23 :
										      (requestR[155] ?
											 6'd24 :
											 (requestR[154] ?
											    6'd25 :
											    (requestR[153] ?
											       6'd26 :
											       (requestR[152] ?
												  6'd27 :
												  (requestR[151] ?
												     6'd28 :
												     (requestR[150] ?
													6'd29 :
													(requestR[149] ?
													   6'd30 :
													   (requestR[148] ?
													      6'd31 :
													      (requestR[147] ?
														 6'd32 :
														 (requestR[146] ?
														    6'd33 :
														    (requestR[145] ?
														       6'd34 :
														       (requestR[144] ?
															  6'd35 :
															  (requestR[143] ?
															     6'd36 :
															     (requestR[142] ?
																6'd37 :
																(requestR[141] ?
																   6'd38 :
																   (requestR[140] ?
																      6'd39 :
																      (requestR[139] ?
																	 6'd40 :
																	 (requestR[138] ?
																	    6'd41 :
																	    (requestR[137] ?
																	       6'd42 :
																	       (requestR[136] ?
																		  6'd43 :
																		  (requestR[135] ?
																		     6'd44 :
																		     (requestR[134] ?
																			6'd45 :
																			(requestR[133] ?
																			   6'd46 :
																			   (requestR[132] ?
																			      6'd47 :
																			      (requestR[131] ?
																				 6'd48 :
																				 (requestR[130] ?
																				    6'd49 :
																				    (requestR[129] ?
																				       6'd50 :
																				       (requestR[128] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1874 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1873 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1875 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1873 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d2906 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1874 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1875 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2891[4] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2903[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d2931 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1874 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1875 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2891[3] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2903[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d2958 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1874 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1875 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2891[1] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2903[1]) ;
  assign _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3181 =
	     12'd3074 -
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3178 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1263 =
	     (12'd32 -
	      { 6'd0,
		IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1260 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1264 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1263 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1266 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1263 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1268 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1263 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d278 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d282 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d287 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1478 =
	     (12'd32 -
	      { 6'd0,
		IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1475 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1479 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1478 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1480 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1478 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1481 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1478 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d639 =
	     (9'd32 -
	      { 3'd0,
		IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d636 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d640 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d639 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d641 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d639 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d642 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d639 ^
	      9'h100) <
	     9'd130 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3035 =
	     12'd3970 -
	     { 7'd0,
	       sV1_sfd__h1206[22] ?
		 5'd0 :
		 (sV1_sfd__h1206[21] ?
		    5'd1 :
		    (sV1_sfd__h1206[20] ?
		       5'd2 :
		       (sV1_sfd__h1206[19] ?
			  5'd3 :
			  (sV1_sfd__h1206[18] ?
			     5'd4 :
			     (sV1_sfd__h1206[17] ?
				5'd5 :
				(sV1_sfd__h1206[16] ?
				   5'd6 :
				   (sV1_sfd__h1206[15] ?
				      5'd7 :
				      (sV1_sfd__h1206[14] ?
					 5'd8 :
					 (sV1_sfd__h1206[13] ?
					    5'd9 :
					    (sV1_sfd__h1206[12] ?
					       5'd10 :
					       (sV1_sfd__h1206[11] ?
						  5'd11 :
						  (sV1_sfd__h1206[10] ?
						     5'd12 :
						     (sV1_sfd__h1206[9] ?
							5'd13 :
							(sV1_sfd__h1206[8] ?
							   5'd14 :
							   (sV1_sfd__h1206[7] ?
							      5'd15 :
							      (sV1_sfd__h1206[6] ?
								 5'd16 :
								 (sV1_sfd__h1206[5] ?
								    5'd17 :
								    (sV1_sfd__h1206[4] ?
								       5'd18 :
								       (sV1_sfd__h1206[3] ?
									  5'd19 :
									  (sV1_sfd__h1206[2] ?
									     5'd20 :
									     (sV1_sfd__h1206[1] ?
										5'd21 :
										(sV1_sfd__h1206[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3036 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3035 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3037 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3035 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_629_ETC___d2347 =
	     12'd3970 -
	     SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2344 ;
  assign _theResult_____2__h15567 =
	     IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d867 ?
	       out1___1__h16059 :
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d850[56:24] ;
  assign _theResult_____2__h48319 =
	     IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1668 ?
	       out1___1__h48811 :
	       IF_requestR_3_BIT_191_219_THEN_NEG_0b0_CONCAT__ETC___d1651[85:53] ;
  assign _theResult____h121379 =
	     ((_3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3181 ^
	       12'h800) <
	      12'd2105) ?
	       result__h121992 :
	       ((value__h15634 == 25'd0) ? b__h15632 : 57'd1) ;
  assign _theResult____h62320 =
	     (value__h48386 == 54'd0) ? sfd__h54690 : 57'd1 ;
  assign _theResult____h80044 =
	     ((_3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_629_ETC___d2347 ^
	       12'h800) <
	      12'd2105) ?
	       result__h80657 :
	       _theResult____h62320 ;
  assign _theResult___exp__h120697 =
	     sfd__h120060[53] ?
	       ((_theResult___fst_exp__h120042 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h139262) :
	       ((_theResult___fst_exp__h120042 == 11'd0 &&
		 sfd__h120060[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h120042) ;
  assign _theResult___exp__h130344 =
	     sfd__h129707[53] ?
	       ((_theResult___fst_exp__h129615 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h139292) :
	       ((_theResult___fst_exp__h129615 == 11'd0 &&
		 sfd__h129707[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h129615) ;
  assign _theResult___exp__h139126 =
	     sfd__h138465[53] ?
	       ((_theResult___fst_exp__h138446 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h139316) :
	       ((_theResult___fst_exp__h138446 == 11'd0 &&
		 sfd__h138465[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h138446) ;
  assign _theResult___exp__h14308 =
	     (sfd__h13912[24] || sfd__h13912[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h14860 =
	     sfd__h14451[24] ?
	       ((x__h14436[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h14998) :
	       ((x__h14436[7:0] == 8'd0 && sfd__h14451[24:23] == 2'b01) ?
		  8'd1 :
		  x__h14436[7:0]) ;
  assign _theResult___exp__h37165 =
	     (sfd__h36566[53] || sfd__h36566[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h37921 =
	     sfd__h37309[53] ?
	       ((x__h37294[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h38064) :
	       ((x__h37294[10:0] == 11'd0 && sfd__h37309[53:52] == 2'b01) ?
		  11'd1 :
		  x__h37294[10:0]) ;
  assign _theResult___exp__h46861 =
	     (sfd__h46262[53] || sfd__h46262[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h47616 =
	     sfd__h47004[53] ?
	       ((x__h46989[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h47754) :
	       ((x__h46989[10:0] == 11'd0 && sfd__h47004[53:52] == 2'b01) ?
		  11'd1 :
		  x__h46989[10:0]) ;
  assign _theResult___exp__h70953 =
	     sfd__h70519[24] ?
	       ((_theResult___fst_exp__h70427 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h97604) :
	       ((_theResult___fst_exp__h70427 == 8'd0 &&
		 sfd__h70519[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h70427) ;
  assign _theResult___exp__h79565 =
	     sfd__h79131[24] ?
	       ((_theResult___fst_exp__h79113 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h97628) :
	       ((_theResult___fst_exp__h79113 == 8'd0 &&
		 sfd__h79131[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h79113) ;
  assign _theResult___exp__h8134 =
	     (sfd__h7735[24] || sfd__h7735[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h8687 =
	     sfd__h8278[24] ?
	       ((x__h8263[7:0] == 8'd254) ? 8'd255 : din_inc___2_exp__h8830) :
	       ((x__h8263[7:0] == 8'd0 && sfd__h8278[24:23] == 2'b01) ?
		  8'd1 :
		  x__h8263[7:0]) ;
  assign _theResult___exp__h88806 =
	     sfd__h88372[24] ?
	       ((_theResult___fst_exp__h88280 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h97658) :
	       ((_theResult___fst_exp__h88280 == 8'd0 &&
		 sfd__h88372[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h88280) ;
  assign _theResult___exp__h97472 =
	     sfd__h97014[24] ?
	       ((_theResult___fst_exp__h96995 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h97682) :
	       ((_theResult___fst_exp__h96995 == 8'd0 &&
		 sfd__h97014[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h96995) ;
  assign _theResult___fst_exp__h104969 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       11'd2047 :
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 ;
  assign _theResult___fst_exp__h120033 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3107 } ;
  assign _theResult___fst_exp__h120039 =
	     (sV1_exp__h1205 == 8'd0 && !sV1_sfd__h1206[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3080 ||
	      !_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3109) ?
	       11'd0 :
	       _theResult___fst_exp__h120033 ;
  assign _theResult___fst_exp__h120042 =
	     (sV1_exp__h1205 == 8'd0) ?
	       _theResult___fst_exp__h120039 :
	       11'd897 ;
  assign _theResult___fst_exp__h120795 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard12081_0b0_theResult___fst_exp20042_0_ETC__q103 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3167 ;
  assign _theResult___fst_exp__h120798 =
	     (_theResult___fst_exp__h120042 == 11'd2047) ?
	       _theResult___fst_exp__h120042 :
	       _theResult___fst_exp__h120795 ;
  assign _theResult___fst_exp__h129615 =
	     _theResult____h121379[56] ?
	       11'd2 :
	       _theResult___fst_exp__h129689 ;
  assign _theResult___fst_exp__h129680 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3427 } ;
  assign _theResult___fst_exp__h129686 =
	     (!_theResult____h121379[56] && !_theResult____h121379[55] &&
	      !_theResult____h121379[54] &&
	      !_theResult____h121379[53] &&
	      !_theResult____h121379[52] &&
	      !_theResult____h121379[51] &&
	      !_theResult____h121379[50] &&
	      !_theResult____h121379[49] &&
	      !_theResult____h121379[48] &&
	      !_theResult____h121379[47] &&
	      !_theResult____h121379[46] &&
	      !_theResult____h121379[45] &&
	      !_theResult____h121379[44] &&
	      !_theResult____h121379[43] &&
	      !_theResult____h121379[42] &&
	      !_theResult____h121379[41] &&
	      !_theResult____h121379[40] &&
	      !_theResult____h121379[39] &&
	      !_theResult____h121379[38] &&
	      !_theResult____h121379[37] &&
	      !_theResult____h121379[36] &&
	      !_theResult____h121379[35] &&
	      !_theResult____h121379[34] &&
	      !_theResult____h121379[33] &&
	      !_theResult____h121379[32] &&
	      !_theResult____h121379[31] &&
	      !_theResult____h121379[30] &&
	      !_theResult____h121379[29] &&
	      !_theResult____h121379[28] &&
	      !_theResult____h121379[27] &&
	      !_theResult____h121379[26] &&
	      !_theResult____h121379[25] &&
	      !_theResult____h121379[24] &&
	      !_theResult____h121379[23] &&
	      !_theResult____h121379[22] &&
	      !_theResult____h121379[21] &&
	      !_theResult____h121379[20] &&
	      !_theResult____h121379[19] &&
	      !_theResult____h121379[18] &&
	      !_theResult____h121379[17] &&
	      !_theResult____h121379[16] &&
	      !_theResult____h121379[15] &&
	      !_theResult____h121379[14] &&
	      !_theResult____h121379[13] &&
	      !_theResult____h121379[12] &&
	      !_theResult____h121379[11] &&
	      !_theResult____h121379[10] &&
	      !_theResult____h121379[9] &&
	      !_theResult____h121379[8] &&
	      !_theResult____h121379[7] &&
	      !_theResult____h121379[6] &&
	      !_theResult____h121379[5] &&
	      !_theResult____h121379[4] &&
	      !_theResult____h121379[3] &&
	      !_theResult____h121379[2] &&
	      !_theResult____h121379[1] &&
	      !_theResult____h121379[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3429) ?
	       11'd0 :
	       _theResult___fst_exp__h129680 ;
  assign _theResult___fst_exp__h129689 =
	     (!_theResult____h121379[56] && _theResult____h121379[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h129686 ;
  assign _theResult___fst_exp__h130442 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard21389_0b0_theResult___fst_exp29615_0_ETC__q105 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3492 ;
  assign _theResult___fst_exp__h130445 =
	     (_theResult___fst_exp__h129615 == 11'd2047) ?
	       _theResult___fst_exp__h129615 :
	       _theResult___fst_exp__h130442 ;
  assign _theResult___fst_exp__h138398 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] ;
  assign _theResult___fst_exp__h138437 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] -
	     { 5'd0,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3107 } ;
  assign _theResult___fst_exp__h138443 =
	     (sV1_exp__h1205 == 8'd0 && !sV1_sfd__h1206[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3080 ||
	      !_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3502) ?
	       11'd0 :
	       _theResult___fst_exp__h138437 ;
  assign _theResult___fst_exp__h138446 =
	     (sV1_exp__h1205 == 8'd0) ?
	       _theResult___fst_exp__h138443 :
	       _theResult___fst_exp__h138398 ;
  assign _theResult___fst_exp__h139224 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard30456_0b0_theResult___fst_exp38446_0_ETC__q107 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3561 ;
  assign _theResult___fst_exp__h139227 =
	     (_theResult___fst_exp__h138446 == 11'd2047) ?
	       _theResult___fst_exp__h138446 :
	       _theResult___fst_exp__h139224 ;
  assign _theResult___fst_exp__h139236 =
	     (sV1_exp__h1205 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3036 ?
		  _theResult___snd_fst_exp__h120801 :
		  _theResult___fst_exp__h104969) :
	       (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3179 ?
		  _theResult___snd_fst_exp__h139230 :
		  _theResult___fst_exp__h104969) ;
  assign _theResult___fst_exp__h139239 =
	     (sV1_exp__h1205 == 8'd0 && sV1_sfd__h1206 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h139236 ;
  assign _theResult___fst_exp__h14404 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard3895_0b0_0_0b1_0_0b10_out_exp4311_0b_ETC__q22 :
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard3895_ETC__q24 ;
  assign _theResult___fst_exp__h14956 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4421_0b0_x4436_BITS_7_TO_0_0b1_x4436_ETC__q26 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d720 ;
  assign _theResult___fst_exp__h14959 =
	     (x__h14436[7:0] == 8'd255) ?
	       x__h14436[7:0] :
	       _theResult___fst_exp__h14956 ;
  assign _theResult___fst_exp__h37262 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6549_0b0_0_0b1_0_0b10_out_exp7168_0b_ETC__q44 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1343 ;
  assign _theResult___fst_exp__h38018 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard7279_0b0_x7294_BITS_10_TO_0_0b1_x729_ETC__q40 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 ;
  assign _theResult___fst_exp__h38021 =
	     (x__h37294[10:0] == 11'd2047) ?
	       x__h37294[10:0] :
	       _theResult___fst_exp__h38018 ;
  assign _theResult___fst_exp__h46957 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6245_0b0_0_0b1_0_0b10_out_exp6864_0b_ETC__q49 :
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard6245_ETC__q51 ;
  assign _theResult___fst_exp__h47712 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6974_0b0_x6989_BITS_10_TO_0_0b1_x698_ETC__q53 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1559 ;
  assign _theResult___fst_exp__h47715 =
	     (x__h46989[10:0] == 11'd2047) ?
	       x__h46989[10:0] :
	       _theResult___fst_exp__h47712 ;
  assign _theResult___fst_exp__h62302 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       8'd255 :
	       CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 ;
  assign _theResult___fst_exp__h70427 =
	     _theResult____h62320[56] ? 8'd2 : _theResult___fst_exp__h70501 ;
  assign _theResult___fst_exp__h70492 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2107 } ;
  assign _theResult___fst_exp__h70498 =
	     (!_theResult____h62320[56] && !_theResult____h62320[55] &&
	      !_theResult____h62320[54] &&
	      !_theResult____h62320[53] &&
	      !_theResult____h62320[52] &&
	      !_theResult____h62320[51] &&
	      !_theResult____h62320[50] &&
	      !_theResult____h62320[49] &&
	      !_theResult____h62320[48] &&
	      !_theResult____h62320[47] &&
	      !_theResult____h62320[46] &&
	      !_theResult____h62320[45] &&
	      !_theResult____h62320[44] &&
	      !_theResult____h62320[43] &&
	      !_theResult____h62320[42] &&
	      !_theResult____h62320[41] &&
	      !_theResult____h62320[40] &&
	      !_theResult____h62320[39] &&
	      !_theResult____h62320[38] &&
	      !_theResult____h62320[37] &&
	      !_theResult____h62320[36] &&
	      !_theResult____h62320[35] &&
	      !_theResult____h62320[34] &&
	      !_theResult____h62320[33] &&
	      !_theResult____h62320[32] &&
	      !_theResult____h62320[31] &&
	      !_theResult____h62320[30] &&
	      !_theResult____h62320[29] &&
	      !_theResult____h62320[28] &&
	      !_theResult____h62320[27] &&
	      !_theResult____h62320[26] &&
	      !_theResult____h62320[25] &&
	      !_theResult____h62320[24] &&
	      !_theResult____h62320[23] &&
	      !_theResult____h62320[22] &&
	      !_theResult____h62320[21] &&
	      !_theResult____h62320[20] &&
	      !_theResult____h62320[19] &&
	      !_theResult____h62320[18] &&
	      !_theResult____h62320[17] &&
	      !_theResult____h62320[16] &&
	      !_theResult____h62320[15] &&
	      !_theResult____h62320[14] &&
	      !_theResult____h62320[13] &&
	      !_theResult____h62320[12] &&
	      !_theResult____h62320[11] &&
	      !_theResult____h62320[10] &&
	      !_theResult____h62320[9] &&
	      !_theResult____h62320[8] &&
	      !_theResult____h62320[7] &&
	      !_theResult____h62320[6] &&
	      !_theResult____h62320[5] &&
	      !_theResult____h62320[4] &&
	      !_theResult____h62320[3] &&
	      !_theResult____h62320[2] &&
	      !_theResult____h62320[1] &&
	      !_theResult____h62320[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2109) ?
	       8'd0 :
	       _theResult___fst_exp__h70492 ;
  assign _theResult___fst_exp__h70501 =
	     (!_theResult____h62320[56] && _theResult____h62320[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h70498 ;
  assign _theResult___fst_exp__h71051 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard2330_0b0_theResult___fst_exp0427_0b1_ETC__q71 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2172 ;
  assign _theResult___fst_exp__h71054 =
	     (_theResult___fst_exp__h70427 == 8'd255) ?
	       _theResult___fst_exp__h70427 :
	       _theResult___fst_exp__h71051 ;
  assign _theResult___fst_exp__h79104 =
	     8'd129 -
	     { 2'd0,
	       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2269 } ;
  assign _theResult___fst_exp__h79110 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_800_175_AND_NOT_request_ETC___d2214 ||
	      !_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2271) ?
	       8'd0 :
	       _theResult___fst_exp__h79104 ;
  assign _theResult___fst_exp__h79113 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h79110 :
	       8'd129 ;
  assign _theResult___fst_exp__h79663 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard1065_0b0_theResult___fst_exp9113_0b1_ETC__q73 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2329 ;
  assign _theResult___fst_exp__h79666 =
	     (_theResult___fst_exp__h79113 == 8'd255) ?
	       _theResult___fst_exp__h79113 :
	       _theResult___fst_exp__h79663 ;
  assign _theResult___fst_exp__h8231 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard718_0b0_0_0b1_0_0b10_out_exp137_0b11_ETC__q13 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d373 ;
  assign _theResult___fst_exp__h8784 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard248_0b0_x263_BITS_7_TO_0_0b1_x263_BI_ETC__q15 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d402 ;
  assign _theResult___fst_exp__h8787 =
	     (x__h8263[7:0] == 8'd255) ?
	       x__h8263[7:0] :
	       _theResult___fst_exp__h8784 ;
  assign _theResult___fst_exp__h88280 =
	     _theResult____h80044[56] ? 8'd2 : _theResult___fst_exp__h88354 ;
  assign _theResult___fst_exp__h88345 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2591 } ;
  assign _theResult___fst_exp__h88351 =
	     (!_theResult____h80044[56] && !_theResult____h80044[55] &&
	      !_theResult____h80044[54] &&
	      !_theResult____h80044[53] &&
	      !_theResult____h80044[52] &&
	      !_theResult____h80044[51] &&
	      !_theResult____h80044[50] &&
	      !_theResult____h80044[49] &&
	      !_theResult____h80044[48] &&
	      !_theResult____h80044[47] &&
	      !_theResult____h80044[46] &&
	      !_theResult____h80044[45] &&
	      !_theResult____h80044[44] &&
	      !_theResult____h80044[43] &&
	      !_theResult____h80044[42] &&
	      !_theResult____h80044[41] &&
	      !_theResult____h80044[40] &&
	      !_theResult____h80044[39] &&
	      !_theResult____h80044[38] &&
	      !_theResult____h80044[37] &&
	      !_theResult____h80044[36] &&
	      !_theResult____h80044[35] &&
	      !_theResult____h80044[34] &&
	      !_theResult____h80044[33] &&
	      !_theResult____h80044[32] &&
	      !_theResult____h80044[31] &&
	      !_theResult____h80044[30] &&
	      !_theResult____h80044[29] &&
	      !_theResult____h80044[28] &&
	      !_theResult____h80044[27] &&
	      !_theResult____h80044[26] &&
	      !_theResult____h80044[25] &&
	      !_theResult____h80044[24] &&
	      !_theResult____h80044[23] &&
	      !_theResult____h80044[22] &&
	      !_theResult____h80044[21] &&
	      !_theResult____h80044[20] &&
	      !_theResult____h80044[19] &&
	      !_theResult____h80044[18] &&
	      !_theResult____h80044[17] &&
	      !_theResult____h80044[16] &&
	      !_theResult____h80044[15] &&
	      !_theResult____h80044[14] &&
	      !_theResult____h80044[13] &&
	      !_theResult____h80044[12] &&
	      !_theResult____h80044[11] &&
	      !_theResult____h80044[10] &&
	      !_theResult____h80044[9] &&
	      !_theResult____h80044[8] &&
	      !_theResult____h80044[7] &&
	      !_theResult____h80044[6] &&
	      !_theResult____h80044[5] &&
	      !_theResult____h80044[4] &&
	      !_theResult____h80044[3] &&
	      !_theResult____h80044[2] &&
	      !_theResult____h80044[1] &&
	      !_theResult____h80044[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2593) ?
	       8'd0 :
	       _theResult___fst_exp__h88345 ;
  assign _theResult___fst_exp__h88354 =
	     (!_theResult____h80044[56] && _theResult____h80044[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h88351 ;
  assign _theResult___fst_exp__h88904 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard0054_0b0_theResult___fst_exp8280_0b1_ETC__q75 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2656 ;
  assign _theResult___fst_exp__h88907 =
	     (_theResult___fst_exp__h88280 == 8'd255) ?
	       _theResult___fst_exp__h88280 :
	       _theResult___fst_exp__h88904 ;
  assign _theResult___fst_exp__h96947 =
	     (SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC__q64[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC__q64[7:0] ;
  assign _theResult___fst_exp__h96986 =
	     SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC__q64[7:0] -
	     { 2'd0,
	       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2269 } ;
  assign _theResult___fst_exp__h96992 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_800_175_AND_NOT_request_ETC___d2214 ||
	      !_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629_EQ__ETC___d2666) ?
	       8'd0 :
	       _theResult___fst_exp__h96986 ;
  assign _theResult___fst_exp__h96995 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h96992 :
	       _theResult___fst_exp__h96947 ;
  assign _theResult___fst_exp__h97570 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8918_0b0_theResult___fst_exp6995_0b1_ETC__q77 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2725 ;
  assign _theResult___fst_exp__h97573 =
	     (_theResult___fst_exp__h96995 == 8'd255) ?
	       _theResult___fst_exp__h96995 :
	       _theResult___fst_exp__h97570 ;
  assign _theResult___fst_exp__h97582 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1874 ?
		  _theResult___snd_fst_exp__h79669 :
		  _theResult___fst_exp__h62302) :
	       (SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2345 ?
		  _theResult___snd_fst_exp__h97576 :
		  _theResult___fst_exp__h62302) ;
  assign _theResult___fst_exp__h97585 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h97582 ;
  assign _theResult___fst_sfd__h104970 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       52'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 ;
  assign _theResult___fst_sfd__h120796 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard12081_0b0_theResult___snd19993_BITS__ETC__q115 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3594 ;
  assign _theResult___fst_sfd__h120799 =
	     (_theResult___fst_exp__h120042 == 11'd2047) ?
	       _theResult___snd__h119993[56:5] :
	       _theResult___fst_sfd__h120796 ;
  assign _theResult___fst_sfd__h130443 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard21389_0b0_sfdin29609_BITS_56_TO_5_0b_ETC__q117 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3621 ;
  assign _theResult___fst_sfd__h130446 =
	     (_theResult___fst_exp__h129615 == 11'd2047) ?
	       sfdin__h129609[56:5] :
	       _theResult___fst_sfd__h130443 ;
  assign _theResult___fst_sfd__h139225 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard30456_0b0_theResult___snd38392_BITS__ETC__q119 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3640 ;
  assign _theResult___fst_sfd__h139228 =
	     (_theResult___fst_exp__h138446 == 11'd2047) ?
	       _theResult___snd__h138392[56:5] :
	       _theResult___fst_sfd__h139225 ;
  assign _theResult___fst_sfd__h139237 =
	     (sV1_exp__h1205 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3036 ?
		  _theResult___snd_fst_sfd__h120802 :
		  _theResult___fst_sfd__h104970) :
	       (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3179 ?
		  _theResult___snd_fst_sfd__h139231 :
		  _theResult___fst_sfd__h104970) ;
  assign _theResult___fst_sfd__h139243 =
	     ((sV1_exp__h1205 == 8'd255 || sV1_exp__h1205 == 8'd0) &&
	      sV1_sfd__h1206 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h139237 ;
  assign _theResult___fst_sfd__h14405 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard3895_0b0_sfd___33885_BITS_31_TO_9_0b_ETC__q30 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d743 ;
  assign _theResult___fst_sfd__h14957 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4421_0b0_sfd___33885_BITS_30_TO_8_0b_ETC__q28 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d758 ;
  assign _theResult___fst_sfd__h14960 =
	     (x__h14436[7:0] == 8'd255) ?
	       sfd___3__h13885[30:8] :
	       _theResult___fst_sfd__h14957 ;
  assign _theResult___fst_sfd__h37263 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6549_0b0_sfd___36539_BITS_54_TO_3_0b_ETC__q46 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 ;
  assign _theResult___fst_sfd__h38019 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard7279_0b0_sfd___36539_BITS_53_TO_2_0b_ETC__q42 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1413 ;
  assign _theResult___fst_sfd__h38022 =
	     (x__h37294[10:0] == 11'd2047) ?
	       sfd___3__h36539[53:2] :
	       _theResult___fst_sfd__h38019 ;
  assign _theResult___fst_sfd__h46958 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6245_0b0_sfd___36235_BITS_54_TO_3_0b_ETC__q57 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1581 ;
  assign _theResult___fst_sfd__h47713 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6974_0b0_sfd___36235_BITS_53_TO_2_0b_ETC__q55 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1596 ;
  assign _theResult___fst_sfd__h47716 =
	     (x__h46989[10:0] == 11'd2047) ?
	       sfd___3__h46235[53:2] :
	       _theResult___fst_sfd__h47713 ;
  assign _theResult___fst_sfd__h50986 = { 1'd1, requestR[178:128] } ;
  assign _theResult___fst_sfd__h62303 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       23'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 ;
  assign _theResult___fst_sfd__h71052 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard2330_0b0_sfdin0421_BITS_56_TO_34_0b1_ETC__q81 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2759 ;
  assign _theResult___fst_sfd__h71055 =
	     (_theResult___fst_exp__h70427 == 8'd255) ?
	       sfdin__h70421[56:34] :
	       _theResult___fst_sfd__h71052 ;
  assign _theResult___fst_sfd__h79664 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard1065_0b0_theResult___snd9064_BITS_56_ETC__q79 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2778 ;
  assign _theResult___fst_sfd__h79667 =
	     (_theResult___fst_exp__h79113 == 8'd255) ?
	       _theResult___snd__h79064[56:34] :
	       _theResult___fst_sfd__h79664 ;
  assign _theResult___fst_sfd__h8232 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard718_0b0_sfd___3708_BITS_31_TO_9_0b1__ETC__q17 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d425 ;
  assign _theResult___fst_sfd__h8785 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard248_0b0_sfd___3708_BITS_30_TO_8_0b1__ETC__q19 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d443 ;
  assign _theResult___fst_sfd__h8788 =
	     (x__h8263[7:0] == 8'd255) ?
	       sfd___3__h7708[30:8] :
	       _theResult___fst_sfd__h8785 ;
  assign _theResult___fst_sfd__h88905 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard0054_0b0_sfdin8274_BITS_56_TO_34_0b1_ETC__q83 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2805 ;
  assign _theResult___fst_sfd__h88908 =
	     (_theResult___fst_exp__h88280 == 8'd255) ?
	       sfdin__h88274[56:34] :
	       _theResult___fst_sfd__h88905 ;
  assign _theResult___fst_sfd__h97571 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8918_0b0_theResult___snd6941_BITS_56_ETC__q85 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2824 ;
  assign _theResult___fst_sfd__h97574 =
	     (_theResult___fst_exp__h96995 == 8'd255) ?
	       _theResult___snd__h96941[56:34] :
	       _theResult___fst_sfd__h97571 ;
  assign _theResult___fst_sfd__h97583 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1874 ?
		  _theResult___snd_fst_sfd__h79670 :
		  _theResult___fst_sfd__h62303) :
	       (SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2345 ?
		  _theResult___snd_fst_sfd__h97577 :
		  _theResult___fst_sfd__h62303) ;
  assign _theResult___fst_sfd__h97589 =
	     ((requestR[190:180] == 11'd2047 || requestR[190:180] == 11'd0) &&
	      requestR[179:128] == 52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h97583 ;
  assign _theResult___fst_sfd__h99488 = { 1'd1, sV1_sfd__h1206[21:0] } ;
  assign _theResult___sfd__h120698 =
	     sfd__h120060[53] ?
	       ((_theResult___fst_exp__h120042 == 11'd2046) ?
		  52'd0 :
		  sfd__h120060[52:1]) :
	       sfd__h120060[51:0] ;
  assign _theResult___sfd__h130345 =
	     sfd__h129707[53] ?
	       ((_theResult___fst_exp__h129615 == 11'd2046) ?
		  52'd0 :
		  sfd__h129707[52:1]) :
	       sfd__h129707[51:0] ;
  assign _theResult___sfd__h139127 =
	     sfd__h138465[53] ?
	       ((_theResult___fst_exp__h138446 == 11'd2046) ?
		  52'd0 :
		  sfd__h138465[52:1]) :
	       sfd__h138465[51:0] ;
  assign _theResult___sfd__h14309 =
	     sfd__h13912[24] ? sfd__h13912[23:1] : sfd__h13912[22:0] ;
  assign _theResult___sfd__h14861 =
	     sfd__h14451[24] ?
	       ((x__h14436[7:0] == 8'd254) ? 23'd0 : sfd__h14451[23:1]) :
	       sfd__h14451[22:0] ;
  assign _theResult___sfd__h37166 =
	     sfd__h36566[53] ? sfd__h36566[52:1] : sfd__h36566[51:0] ;
  assign _theResult___sfd__h37922 =
	     sfd__h37309[53] ?
	       ((x__h37294[10:0] == 11'd2046) ? 52'd0 : sfd__h37309[52:1]) :
	       sfd__h37309[51:0] ;
  assign _theResult___sfd__h46862 =
	     sfd__h46262[53] ? sfd__h46262[52:1] : sfd__h46262[51:0] ;
  assign _theResult___sfd__h47617 =
	     sfd__h47004[53] ?
	       ((x__h46989[10:0] == 11'd2046) ? 52'd0 : sfd__h47004[52:1]) :
	       sfd__h47004[51:0] ;
  assign _theResult___sfd__h70954 =
	     sfd__h70519[24] ?
	       ((_theResult___fst_exp__h70427 == 8'd254) ?
		  23'd0 :
		  sfd__h70519[23:1]) :
	       sfd__h70519[22:0] ;
  assign _theResult___sfd__h79566 =
	     sfd__h79131[24] ?
	       ((_theResult___fst_exp__h79113 == 8'd254) ?
		  23'd0 :
		  sfd__h79131[23:1]) :
	       sfd__h79131[22:0] ;
  assign _theResult___sfd__h8135 =
	     sfd__h7735[24] ? sfd__h7735[23:1] : sfd__h7735[22:0] ;
  assign _theResult___sfd__h8688 =
	     sfd__h8278[24] ?
	       ((x__h8263[7:0] == 8'd254) ? 23'd0 : sfd__h8278[23:1]) :
	       sfd__h8278[22:0] ;
  assign _theResult___sfd__h88807 =
	     sfd__h88372[24] ?
	       ((_theResult___fst_exp__h88280 == 8'd254) ?
		  23'd0 :
		  sfd__h88372[23:1]) :
	       sfd__h88372[22:0] ;
  assign _theResult___sfd__h97473 =
	     sfd__h97014[24] ?
	       ((_theResult___fst_exp__h96995 == 8'd254) ?
		  23'd0 :
		  sfd__h97014[23:1]) :
	       sfd__h97014[22:0] ;
  assign _theResult___snd__h119993 =
	     (sV1_exp__h1205 == 8'd0) ?
	       _theResult___snd__h120002 :
	       _theResult___snd__h119995 ;
  assign _theResult___snd__h119995 = { sV1_sfd__h1206, 34'd0 } ;
  assign _theResult___snd__h120002 =
	     (sV1_exp__h1205 == 8'd0 && !sV1_sfd__h1206[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3080) ?
	       b__h15632 :
	       _theResult___snd__h120008 ;
  assign _theResult___snd__h120008 =
	     { IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q94[54:0],
	       2'd0 } ;
  assign _theResult___snd__h120031 =
	     b__h15632 <<
	     IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3107 ;
  assign _theResult___snd__h129626 = { _theResult____h121379[55:0], 1'd0 } ;
  assign _theResult___snd__h129637 =
	     (!_theResult____h121379[56] && _theResult____h121379[55]) ?
	       _theResult___snd__h129639 :
	       _theResult___snd__h129649 ;
  assign _theResult___snd__h129639 = { _theResult____h121379[54:0], 2'd0 } ;
  assign _theResult___snd__h129649 =
	     (!_theResult____h121379[56] && !_theResult____h121379[55] &&
	      !_theResult____h121379[54] &&
	      !_theResult____h121379[53] &&
	      !_theResult____h121379[52] &&
	      !_theResult____h121379[51] &&
	      !_theResult____h121379[50] &&
	      !_theResult____h121379[49] &&
	      !_theResult____h121379[48] &&
	      !_theResult____h121379[47] &&
	      !_theResult____h121379[46] &&
	      !_theResult____h121379[45] &&
	      !_theResult____h121379[44] &&
	      !_theResult____h121379[43] &&
	      !_theResult____h121379[42] &&
	      !_theResult____h121379[41] &&
	      !_theResult____h121379[40] &&
	      !_theResult____h121379[39] &&
	      !_theResult____h121379[38] &&
	      !_theResult____h121379[37] &&
	      !_theResult____h121379[36] &&
	      !_theResult____h121379[35] &&
	      !_theResult____h121379[34] &&
	      !_theResult____h121379[33] &&
	      !_theResult____h121379[32] &&
	      !_theResult____h121379[31] &&
	      !_theResult____h121379[30] &&
	      !_theResult____h121379[29] &&
	      !_theResult____h121379[28] &&
	      !_theResult____h121379[27] &&
	      !_theResult____h121379[26] &&
	      !_theResult____h121379[25] &&
	      !_theResult____h121379[24] &&
	      !_theResult____h121379[23] &&
	      !_theResult____h121379[22] &&
	      !_theResult____h121379[21] &&
	      !_theResult____h121379[20] &&
	      !_theResult____h121379[19] &&
	      !_theResult____h121379[18] &&
	      !_theResult____h121379[17] &&
	      !_theResult____h121379[16] &&
	      !_theResult____h121379[15] &&
	      !_theResult____h121379[14] &&
	      !_theResult____h121379[13] &&
	      !_theResult____h121379[12] &&
	      !_theResult____h121379[11] &&
	      !_theResult____h121379[10] &&
	      !_theResult____h121379[9] &&
	      !_theResult____h121379[8] &&
	      !_theResult____h121379[7] &&
	      !_theResult____h121379[6] &&
	      !_theResult____h121379[5] &&
	      !_theResult____h121379[4] &&
	      !_theResult____h121379[3] &&
	      !_theResult____h121379[2] &&
	      !_theResult____h121379[1] &&
	      !_theResult____h121379[0]) ?
	       _theResult____h121379 :
	       _theResult___snd__h129655 ;
  assign _theResult___snd__h129655 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97[54:0],
	       2'd0 } ;
  assign _theResult___snd__h129678 =
	     _theResult____h121379 <<
	     IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3427 ;
  assign _theResult___snd__h138392 =
	     (sV1_exp__h1205 == 8'd0) ?
	       _theResult___snd__h138406 :
	       _theResult___snd__h119995 ;
  assign _theResult___snd__h138406 =
	     (sV1_exp__h1205 == 8'd0 && !sV1_sfd__h1206[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3080) ?
	       b__h15632 :
	       _theResult___snd__h138412 ;
  assign _theResult___snd__h138412 =
	     { IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q100[54:0],
	       2'd0 } ;
  assign _theResult___snd__h138430 =
	     b__h15632 <<
	     IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3501 ;
  assign _theResult___snd__h70438 = { _theResult____h62320[55:0], 1'd0 } ;
  assign _theResult___snd__h70449 =
	     (!_theResult____h62320[56] && _theResult____h62320[55]) ?
	       _theResult___snd__h70451 :
	       _theResult___snd__h70461 ;
  assign _theResult___snd__h70451 = { _theResult____h62320[54:0], 2'd0 } ;
  assign _theResult___snd__h70461 =
	     (!_theResult____h62320[56] && !_theResult____h62320[55] &&
	      !_theResult____h62320[54] &&
	      !_theResult____h62320[53] &&
	      !_theResult____h62320[52] &&
	      !_theResult____h62320[51] &&
	      !_theResult____h62320[50] &&
	      !_theResult____h62320[49] &&
	      !_theResult____h62320[48] &&
	      !_theResult____h62320[47] &&
	      !_theResult____h62320[46] &&
	      !_theResult____h62320[45] &&
	      !_theResult____h62320[44] &&
	      !_theResult____h62320[43] &&
	      !_theResult____h62320[42] &&
	      !_theResult____h62320[41] &&
	      !_theResult____h62320[40] &&
	      !_theResult____h62320[39] &&
	      !_theResult____h62320[38] &&
	      !_theResult____h62320[37] &&
	      !_theResult____h62320[36] &&
	      !_theResult____h62320[35] &&
	      !_theResult____h62320[34] &&
	      !_theResult____h62320[33] &&
	      !_theResult____h62320[32] &&
	      !_theResult____h62320[31] &&
	      !_theResult____h62320[30] &&
	      !_theResult____h62320[29] &&
	      !_theResult____h62320[28] &&
	      !_theResult____h62320[27] &&
	      !_theResult____h62320[26] &&
	      !_theResult____h62320[25] &&
	      !_theResult____h62320[24] &&
	      !_theResult____h62320[23] &&
	      !_theResult____h62320[22] &&
	      !_theResult____h62320[21] &&
	      !_theResult____h62320[20] &&
	      !_theResult____h62320[19] &&
	      !_theResult____h62320[18] &&
	      !_theResult____h62320[17] &&
	      !_theResult____h62320[16] &&
	      !_theResult____h62320[15] &&
	      !_theResult____h62320[14] &&
	      !_theResult____h62320[13] &&
	      !_theResult____h62320[12] &&
	      !_theResult____h62320[11] &&
	      !_theResult____h62320[10] &&
	      !_theResult____h62320[9] &&
	      !_theResult____h62320[8] &&
	      !_theResult____h62320[7] &&
	      !_theResult____h62320[6] &&
	      !_theResult____h62320[5] &&
	      !_theResult____h62320[4] &&
	      !_theResult____h62320[3] &&
	      !_theResult____h62320[2] &&
	      !_theResult____h62320[1] &&
	      !_theResult____h62320[0]) ?
	       _theResult____h62320 :
	       _theResult___snd__h70467 ;
  assign _theResult___snd__h70467 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60[54:0],
	       2'd0 } ;
  assign _theResult___snd__h70490 =
	     _theResult____h62320 <<
	     IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2107 ;
  assign _theResult___snd__h79064 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h79073 :
	       _theResult___snd__h79066 ;
  assign _theResult___snd__h79066 = { requestR[179:128], 5'd0 } ;
  assign _theResult___snd__h79073 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_800_175_AND_NOT_request_ETC___d2214) ?
	       sfd__h54690 :
	       _theResult___snd__h79079 ;
  assign _theResult___snd__h79079 =
	     { IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629__ETC__q62[54:0],
	       2'd0 } ;
  assign _theResult___snd__h79102 =
	     sfd__h54690 <<
	     IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2269 ;
  assign _theResult___snd__h88291 = { _theResult____h80044[55:0], 1'd0 } ;
  assign _theResult___snd__h88302 =
	     (!_theResult____h80044[56] && _theResult____h80044[55]) ?
	       _theResult___snd__h88304 :
	       _theResult___snd__h88314 ;
  assign _theResult___snd__h88304 = { _theResult____h80044[54:0], 2'd0 } ;
  assign _theResult___snd__h88314 =
	     (!_theResult____h80044[56] && !_theResult____h80044[55] &&
	      !_theResult____h80044[54] &&
	      !_theResult____h80044[53] &&
	      !_theResult____h80044[52] &&
	      !_theResult____h80044[51] &&
	      !_theResult____h80044[50] &&
	      !_theResult____h80044[49] &&
	      !_theResult____h80044[48] &&
	      !_theResult____h80044[47] &&
	      !_theResult____h80044[46] &&
	      !_theResult____h80044[45] &&
	      !_theResult____h80044[44] &&
	      !_theResult____h80044[43] &&
	      !_theResult____h80044[42] &&
	      !_theResult____h80044[41] &&
	      !_theResult____h80044[40] &&
	      !_theResult____h80044[39] &&
	      !_theResult____h80044[38] &&
	      !_theResult____h80044[37] &&
	      !_theResult____h80044[36] &&
	      !_theResult____h80044[35] &&
	      !_theResult____h80044[34] &&
	      !_theResult____h80044[33] &&
	      !_theResult____h80044[32] &&
	      !_theResult____h80044[31] &&
	      !_theResult____h80044[30] &&
	      !_theResult____h80044[29] &&
	      !_theResult____h80044[28] &&
	      !_theResult____h80044[27] &&
	      !_theResult____h80044[26] &&
	      !_theResult____h80044[25] &&
	      !_theResult____h80044[24] &&
	      !_theResult____h80044[23] &&
	      !_theResult____h80044[22] &&
	      !_theResult____h80044[21] &&
	      !_theResult____h80044[20] &&
	      !_theResult____h80044[19] &&
	      !_theResult____h80044[18] &&
	      !_theResult____h80044[17] &&
	      !_theResult____h80044[16] &&
	      !_theResult____h80044[15] &&
	      !_theResult____h80044[14] &&
	      !_theResult____h80044[13] &&
	      !_theResult____h80044[12] &&
	      !_theResult____h80044[11] &&
	      !_theResult____h80044[10] &&
	      !_theResult____h80044[9] &&
	      !_theResult____h80044[8] &&
	      !_theResult____h80044[7] &&
	      !_theResult____h80044[6] &&
	      !_theResult____h80044[5] &&
	      !_theResult____h80044[4] &&
	      !_theResult____h80044[3] &&
	      !_theResult____h80044[2] &&
	      !_theResult____h80044[1] &&
	      !_theResult____h80044[0]) ?
	       _theResult____h80044 :
	       _theResult___snd__h88320 ;
  assign _theResult___snd__h88320 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65[54:0],
	       2'd0 } ;
  assign _theResult___snd__h88343 =
	     _theResult____h80044 <<
	     IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2591 ;
  assign _theResult___snd__h96941 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h96955 :
	       _theResult___snd__h79066 ;
  assign _theResult___snd__h96955 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_800_175_AND_NOT_request_ETC___d2214) ?
	       sfd__h54690 :
	       _theResult___snd__h96961 ;
  assign _theResult___snd__h96961 =
	     { IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_629__ETC__q68[54:0],
	       2'd0 } ;
  assign _theResult___snd__h96979 =
	     sfd__h54690 <<
	     IF_SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1_ETC___d2665 ;
  assign _theResult___snd_fst_exp__h120801 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3037 ?
	       11'd0 :
	       _theResult___fst_exp__h120798 ;
  assign _theResult___snd_fst_exp__h139230 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3180 ?
	       _theResult___fst_exp__h130445 :
	       _theResult___fst_exp__h139227 ;
  assign _theResult___snd_fst_exp__h14962 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d642 ?
	       _theResult___fst_exp__h14404 :
	       _theResult___fst_exp__h14959 ;
  assign _theResult___snd_fst_exp__h14965 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d641 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14962 ;
  assign _theResult___snd_fst_exp__h14968 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d640 ?
	       _theResult___snd_fst_exp__h14965 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h38024 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1268 ?
	       _theResult___fst_exp__h37262 :
	       _theResult___fst_exp__h38021 ;
  assign _theResult___snd_fst_exp__h38027 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1266 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h38024 ;
  assign _theResult___snd_fst_exp__h38030 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1264 ?
	       _theResult___snd_fst_exp__h38027 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h47718 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1481 ?
	       _theResult___fst_exp__h46957 :
	       _theResult___fst_exp__h47715 ;
  assign _theResult___snd_fst_exp__h47721 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1480 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h47718 ;
  assign _theResult___snd_fst_exp__h47724 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1479 ?
	       _theResult___snd_fst_exp__h47721 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h79669 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1875 ?
	       _theResult___fst_exp__h71054 :
	       _theResult___fst_exp__h79666 ;
  assign _theResult___snd_fst_exp__h8790 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d287 ?
	       _theResult___fst_exp__h8231 :
	       _theResult___fst_exp__h8787 ;
  assign _theResult___snd_fst_exp__h8793 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8790 ;
  assign _theResult___snd_fst_exp__h8796 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d282 ?
	       _theResult___snd_fst_exp__h8793 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h97576 =
	     SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2346 ?
	       _theResult___fst_exp__h88907 :
	       _theResult___fst_exp__h97573 ;
  assign _theResult___snd_fst_sfd__h101116 =
	     (value__h99233 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h99230 ;
  assign _theResult___snd_fst_sfd__h120802 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3037 ?
	       52'd0 :
	       _theResult___fst_sfd__h120799 ;
  assign _theResult___snd_fst_sfd__h139231 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3180 ?
	       _theResult___fst_sfd__h130446 :
	       _theResult___fst_sfd__h139228 ;
  assign _theResult___snd_fst_sfd__h14963 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d642 ?
	       _theResult___fst_sfd__h14405 :
	       _theResult___fst_sfd__h14960 ;
  assign _theResult___snd_fst_sfd__h38025 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1268 ?
	       _theResult___fst_sfd__h37263 :
	       _theResult___fst_sfd__h38022 ;
  assign _theResult___snd_fst_sfd__h47719 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1481 ?
	       _theResult___fst_sfd__h46958 :
	       _theResult___fst_sfd__h47716 ;
  assign _theResult___snd_fst_sfd__h54644 =
	     (value__h50529[51:29] == 23'd0) ?
	       23'd2097152 :
	       value__h50529[51:29] ;
  assign _theResult___snd_fst_sfd__h79670 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_800__ETC___d1875 ?
	       _theResult___fst_sfd__h71055 :
	       _theResult___fst_sfd__h79667 ;
  assign _theResult___snd_fst_sfd__h8791 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d287 ?
	       _theResult___fst_sfd__h8232 :
	       _theResult___fst_sfd__h8788 ;
  assign _theResult___snd_fst_sfd__h97577 =
	     SEXT_requestR_3_BITS_190_TO_180_629_MINUS_1023_ETC___d2346 ?
	       _theResult___fst_sfd__h88908 :
	       _theResult___fst_sfd__h97574 ;
  assign b__h15632 = { value__h15634, 32'd0 } ;
  assign b__h48384 = { value__h48386, 32'd0 } ;
  assign din_inc___2_exp__h139262 = _theResult___fst_exp__h120042 + 11'd1 ;
  assign din_inc___2_exp__h139292 = _theResult___fst_exp__h129615 + 11'd1 ;
  assign din_inc___2_exp__h139316 = _theResult___fst_exp__h138446 + 11'd1 ;
  assign din_inc___2_exp__h14998 = x__h14436[7:0] + 8'd1 ;
  assign din_inc___2_exp__h38064 = x__h37294[10:0] + 11'd1 ;
  assign din_inc___2_exp__h47754 = x__h46989[10:0] + 11'd1 ;
  assign din_inc___2_exp__h8830 = x__h8263[7:0] + 8'd1 ;
  assign din_inc___2_exp__h97604 = _theResult___fst_exp__h70427 + 8'd1 ;
  assign din_inc___2_exp__h97628 = _theResult___fst_exp__h79113 + 8'd1 ;
  assign din_inc___2_exp__h97658 = _theResult___fst_exp__h88280 + 8'd1 ;
  assign din_inc___2_exp__h97682 = _theResult___fst_exp__h96995 + 8'd1 ;
  assign guard__h112081 =
	     { IF_theResult___snd19993_BIT_4_THEN_2_ELSE_0__q95[1],
	       { _theResult___snd__h119993[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h121389 =
	     { IF_sfdin29609_BIT_4_THEN_2_ELSE_0__q98[1],
	       { sfdin__h129609[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h121987 = x__h122087 != 57'd0 ;
  assign guard__h130456 =
	     { IF_theResult___snd38392_BIT_4_THEN_2_ELSE_0__q101[1],
	       { _theResult___snd__h138392[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h13895 =
	     { IF_sfd___33885_BIT_8_THEN_2_ELSE_0__q20[1],
	       { sfd___3__h13885[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h14421 =
	     { IF_sfd___33885_BIT_7_THEN_2_ELSE_0__q21[1],
	       { sfd___3__h13885[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h15565 =
	     { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d850[23],
	       { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d850[22:0],
		 33'd0 } !=
	       56'd0 } ;
  assign guard__h16119 =
	     { IF_x6308_BIT_24_THEN_2_ELSE_0__q31[1],
	       { x__h16308[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h17182 =
	     { IF_x7403_BIT_24_THEN_2_ELSE_0__q32[1],
	       { x__h17403[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h36549 =
	     { IF_sfd___36539_BIT_2_THEN_2_ELSE_0__q33[1],
	       { sfd___3__h36539[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h37279 =
	     { IF_sfd___36539_BIT_1_THEN_2_ELSE_0__q34[1],
	       { sfd___3__h36539[0], 53'd0 } != 54'd0 } ;
  assign guard__h46245 =
	     { IF_sfd___36235_BIT_2_THEN_2_ELSE_0__q47[1],
	       { sfd___3__h46235[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h46974 =
	     { IF_sfd___36235_BIT_1_THEN_2_ELSE_0__q48[1],
	       { sfd___3__h46235[0], 53'd0 } != 54'd0 } ;
  assign guard__h48317 =
	     { IF_requestR_3_BIT_191_219_THEN_NEG_0b0_CONCAT__ETC___d1651[52],
	       { IF_requestR_3_BIT_191_219_THEN_NEG_0b0_CONCAT__ETC___d1651[51:0],
		 33'd0 } !=
	       85'd0 } ;
  assign guard__h48871 =
	     { IF_x9060_BIT_53_THEN_2_ELSE_0__q58[1],
	       { x__h49060[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h49917 =
	     { IF_x0138_BIT_53_THEN_2_ELSE_0__q59[1],
	       { x__h50138[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h62330 =
	     { IF_sfdin0421_BIT_33_THEN_2_ELSE_0__q61[1],
	       { sfdin__h70421[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h71065 =
	     { IF_theResult___snd9064_BIT_33_THEN_2_ELSE_0__q63[1],
	       { _theResult___snd__h79064[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h7718 =
	     { IF_sfd___3708_BIT_8_THEN_2_ELSE_0__q6[1],
	       { sfd___3__h7708[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h80054 =
	     { IF_sfdin8274_BIT_33_THEN_2_ELSE_0__q66[1],
	       { sfdin__h88274[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h80652 = x__h80752 != 57'd0 ;
  assign guard__h8248 =
	     { IF_sfd___3708_BIT_7_THEN_2_ELSE_0__q7[1],
	       { sfd___3__h7708[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h88918 =
	     { IF_theResult___snd6941_BIT_33_THEN_2_ELSE_0__q69[1],
	       { _theResult___snd__h96941[32:0], 23'd0 } != 56'd0 } ;
  assign out1___1__h16059 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d850[56:24] +
	     33'd1 ;
  assign out1___1__h48811 =
	     IF_requestR_3_BIT_191_219_THEN_NEG_0b0_CONCAT__ETC___d1651[85:53] +
	     33'd1 ;
  assign out___1_sfd__h99230 = { value__h99233, 29'd0 } ;
  assign out_exp__h120700 =
	     _theResult___snd__h119993[5] ?
	       _theResult___exp__h120697 :
	       _theResult___fst_exp__h120042 ;
  assign out_exp__h130347 =
	     sfdin__h129609[5] ?
	       _theResult___exp__h130344 :
	       _theResult___fst_exp__h129615 ;
  assign out_exp__h139129 =
	     _theResult___snd__h138392[5] ?
	       _theResult___exp__h139126 :
	       _theResult___fst_exp__h138446 ;
  assign out_exp__h14311 =
	     sfd___3__h13885[9] ? _theResult___exp__h14308 : 8'd0 ;
  assign out_exp__h14863 =
	     sfd___3__h13885[8] ? _theResult___exp__h14860 : x__h14436[7:0] ;
  assign out_exp__h37168 =
	     sfd___3__h36539[3] ? _theResult___exp__h37165 : 11'd0 ;
  assign out_exp__h37924 =
	     sfd___3__h36539[2] ? _theResult___exp__h37921 : x__h37294[10:0] ;
  assign out_exp__h46864 =
	     sfd___3__h46235[3] ? _theResult___exp__h46861 : 11'd0 ;
  assign out_exp__h47619 =
	     sfd___3__h46235[2] ? _theResult___exp__h47616 : x__h46989[10:0] ;
  assign out_exp__h70956 =
	     sfdin__h70421[34] ?
	       _theResult___exp__h70953 :
	       _theResult___fst_exp__h70427 ;
  assign out_exp__h79568 =
	     _theResult___snd__h79064[34] ?
	       _theResult___exp__h79565 :
	       _theResult___fst_exp__h79113 ;
  assign out_exp__h8137 = sfd___3__h7708[9] ? _theResult___exp__h8134 : 8'd0 ;
  assign out_exp__h8690 =
	     sfd___3__h7708[8] ? _theResult___exp__h8687 : x__h8263[7:0] ;
  assign out_exp__h88809 =
	     sfdin__h88274[34] ?
	       _theResult___exp__h88806 :
	       _theResult___fst_exp__h88280 ;
  assign out_exp__h97475 =
	     _theResult___snd__h96941[34] ?
	       _theResult___exp__h97472 :
	       _theResult___fst_exp__h96995 ;
  assign out_sfd__h120701 =
	     _theResult___snd__h119993[5] ?
	       _theResult___sfd__h120698 :
	       _theResult___snd__h119993[56:5] ;
  assign out_sfd__h130348 =
	     sfdin__h129609[5] ?
	       _theResult___sfd__h130345 :
	       sfdin__h129609[56:5] ;
  assign out_sfd__h139130 =
	     _theResult___snd__h138392[5] ?
	       _theResult___sfd__h139127 :
	       _theResult___snd__h138392[56:5] ;
  assign out_sfd__h14312 =
	     sfd___3__h13885[9] ?
	       _theResult___sfd__h14309 :
	       sfd___3__h13885[31:9] ;
  assign out_sfd__h14864 =
	     sfd___3__h13885[8] ?
	       _theResult___sfd__h14861 :
	       sfd___3__h13885[30:8] ;
  assign out_sfd__h37169 =
	     sfd___3__h36539[3] ?
	       _theResult___sfd__h37166 :
	       sfd___3__h36539[54:3] ;
  assign out_sfd__h37925 =
	     sfd___3__h36539[2] ?
	       _theResult___sfd__h37922 :
	       sfd___3__h36539[53:2] ;
  assign out_sfd__h46865 =
	     sfd___3__h46235[3] ?
	       _theResult___sfd__h46862 :
	       sfd___3__h46235[54:3] ;
  assign out_sfd__h47620 =
	     sfd___3__h46235[2] ?
	       _theResult___sfd__h47617 :
	       sfd___3__h46235[53:2] ;
  assign out_sfd__h70957 =
	     sfdin__h70421[34] ?
	       _theResult___sfd__h70954 :
	       sfdin__h70421[56:34] ;
  assign out_sfd__h79569 =
	     _theResult___snd__h79064[34] ?
	       _theResult___sfd__h79566 :
	       _theResult___snd__h79064[56:34] ;
  assign out_sfd__h8138 =
	     sfd___3__h7708[9] ?
	       _theResult___sfd__h8135 :
	       sfd___3__h7708[31:9] ;
  assign out_sfd__h8691 =
	     sfd___3__h7708[8] ?
	       _theResult___sfd__h8688 :
	       sfd___3__h7708[30:8] ;
  assign out_sfd__h88810 =
	     sfdin__h88274[34] ?
	       _theResult___sfd__h88807 :
	       sfdin__h88274[56:34] ;
  assign out_sfd__h97476 =
	     _theResult___snd__h96941[34] ?
	       _theResult___sfd__h97473 :
	       _theResult___snd__h96941[56:34] ;
  assign requestR_3_BITS_126_TO_116_778_EQ_0_792_AND_re_ETC___d3799 =
	     requestR[126:116] == 11'd0 && requestR[115:64] == 52'd0 &&
	     requestR[127] &&
	     requestR[190:180] == 11'd0 &&
	     requestR[179:128] == 52'd0 &&
	     !requestR[191] ;
  assign requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       (requestR[127:96] == 32'hFFFFFFFF) ?
		 requestR[94:64] :
		 31'h7FC00000 } ;
  assign requestR_3_BITS_179_TO_128_631_ULE_requestR_3__ETC___d3811 =
	     requestR[179:128] <= requestR[115:64] ;
  assign requestR_3_BITS_179_TO_128_631_ULT_requestR_3__ETC___d3816 =
	     requestR[179:128] < requestR[115:64] ;
  assign requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_re_ETC___d3795 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[191] &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 &&
	     !requestR[127] ;
  assign requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_re_ETC___d3869 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 ||
	     (!requestR[191] || requestR[127]) &&
	     (requestR[191] || !requestR[127]) &&
	     (requestR[191] ?
		requestR_3_BITS_190_TO_180_629_ULE_requestR_3__ETC___d3864 :
		NOT_requestR_3_BITS_190_TO_180_629_ULT_request_ETC___d3865) ;
  assign requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d1780 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	     requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1741[23] ||
	      NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1743 &&
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1762 &&
	      x__h50138[85:54] == 32'hFFFFFFFF) ;
  assign requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d1791 =
	     { requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d1780,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_3_BITS_190_TO_180_629_EQ_0_640_64_ETC___d1785 } ==
	     5'd0 ||
	     requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d1780 ;
  assign requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3787 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] &&
	     requestR[126:116] == 11'd2047 &&
	     requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3832 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3854 =
	     requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3832 ||
	     requestR[190:180] == 11'd2047 && requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115] ;
  assign requestR_3_BITS_190_TO_180_629_EQ_requestR_3_B_ETC___d3810 =
	     requestR[190:180] == requestR[126:116] ;
  assign requestR_3_BITS_190_TO_180_629_MINUS_1023___d1642 =
	     requestR[190:180] - 11'd1023 ;
  assign requestR_3_BITS_190_TO_180_629_ULE_requestR_3__ETC___d3808 =
	     requestR[190:180] <= requestR[126:116] ;
  assign requestR_3_BITS_190_TO_180_629_ULE_requestR_3__ETC___d3864 =
	     requestR_3_BITS_190_TO_180_629_ULE_requestR_3__ETC___d3808 &&
	     (!requestR_3_BITS_190_TO_180_629_EQ_requestR_3_B_ETC___d3810 ||
	      requestR_3_BITS_179_TO_128_631_ULE_requestR_3__ETC___d3811) &&
	     !requestR_3_BITS_190_TO_180_629_ULT_requestR_3__ETC___d3815 &&
	     (!requestR_3_BITS_190_TO_180_629_EQ_requestR_3_B_ETC___d3810 ||
	      !requestR_3_BITS_179_TO_128_631_ULT_requestR_3__ETC___d3816) ;
  assign requestR_3_BITS_190_TO_180_629_ULT_requestR_3__ETC___d3815 =
	     requestR[190:180] < requestR[126:116] ;
  assign requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1049 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ||
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     IF_NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1047 ;
  assign requestR_3_BIT_158_11_OR_requestR_3_BIT_157_13_ETC___d793 =
	     requestR[158] || requestR[157] || requestR[156] ||
	     requestR[155] ||
	     requestR[154] ||
	     requestR[153] ||
	     requestR[152] ||
	     requestR[151] ||
	     requestR[150] ||
	     requestR[149] ||
	     requestR[148] ||
	     requestR[147] ||
	     requestR[146] ||
	     requestR[145] ||
	     requestR[144] ||
	     requestR[143] ||
	     requestR[142] ||
	     requestR[141] ||
	     requestR[140] ||
	     requestR[139] ||
	     requestR[138] ||
	     requestR[137] ||
	     requestR[136] ||
	     requestR[135] ||
	     requestR[134] ||
	     requestR[133] ||
	     requestR[132] ||
	     requestR[131] ||
	     requestR[130] ||
	     requestR[129] ||
	     requestR[128] ;
  assign requestR_3_BIT_159_6_OR_requestR_3_BIT_158_11__ETC___d815 =
	     (requestR[159] ||
	      requestR_3_BIT_158_11_OR_requestR_3_BIT_157_13_ETC___d793) &&
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d640 &&
	     !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d641 &&
	     IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d812 ;
  assign requestR_BITS_159_TO_128__q1 = requestR[159:128] ;
  assign res___1__h156600 =
	     (requestR[190:180] == 11'd2047 && requestR[179]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h157038 = requestR[191] ? 64'd1 : 64'd128 ;
  assign res___1__h157048 = requestR[191] ? 64'd8 : 64'd16 ;
  assign res___1__h157067 = requestR[191] ? 64'd4 : 64'd32 ;
  assign res___1__h26803 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206[22]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h27039 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd1 :
	       64'd128 ;
  assign res___1__h27049 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd8 :
	       64'd16 ;
  assign res___1__h27068 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd4 :
	       64'd32 ;
  assign res__h139866 =
	     { IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3683,
	       x__h99174,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3647 } ;
  assign res__h144308 =
	     NOT_requestR_3_BITS_190_TO_180_629_EQ_2047_630_ETC___d3823 ?
	       requestR[191:128] :
	       requestR[127:64] ;
  assign res__h148856 =
	     NOT_requestR_3_BITS_190_TO_180_629_EQ_2047_630_ETC___d3823 ?
	       requestR[127:64] :
	       requestR[191:128] ;
  assign res__h151560 =
	     ((requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	      (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	      requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_re_ETC___d3869) ?
	       64'd1 :
	       64'd0 ;
  assign res__h154255 =
	     NOT_requestR_3_BITS_190_TO_180_629_EQ_2047_630_ETC___d3823 ?
	       64'd1 :
	       64'd0 ;
  assign res__h156132 =
	     NOT_requestR_3_BITS_190_TO_180_629_EQ_2047_630_ETC___d3888 ?
	       64'd1 :
	       64'd0 ;
  assign res__h157083 = requestR[191] ? 64'd2 : 64'd64 ;
  assign res__h157265 = { 32'hFFFFFFFF, fpu$server_core_response_get[36:5] } ;
  assign res__h18407 =
	     { 32'hFFFFFFFF,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 } ;
  assign res__h18644 =
	     { 32'hFFFFFFFF,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign res__h24016 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1114 ?
	       64'd1 :
	       64'd0 ;
  assign res__h25499 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1051 ?
	       64'd1 :
	       64'd0 ;
  assign res__h26568 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1132 ?
	       64'd1 :
	       64'd0 ;
  assign res__h27084 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd2 :
	       64'd64 ;
  assign res__h98061 = { 32'hFFFFFFFF, x__h98067 } ;
  assign result__h121992 =
	     { _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3185[56:1],
	       _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3185[0] |
	       guard__h121987 } ;
  assign result__h80657 =
	     { _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_629__ETC___d2351[56:1],
	       _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_629__ETC___d2351[0] |
	       guard__h80652 } ;
  assign sV1_exp__h1205 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:151] :
	       8'd255 ;
  assign sV1_sfd__h1206 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[150:128] :
	       23'd4194304 ;
  assign sV2_exp__h1308 =
	     (requestR[127:96] == 32'hFFFFFFFF) ? requestR[94:87] : 8'd255 ;
  assign sV2_sfd__h1309 =
	     (requestR[127:96] == 32'hFFFFFFFF) ?
	       requestR[86:64] :
	       23'd4194304 ;
  assign sfd___3__h13885 =
	     requestR[159:128] <<
	     IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d636 ;
  assign sfd___3__h36539 =
	     sfd__h28538 <<
	     IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1260 ;
  assign sfd___3__h46235 =
	     sfd__h38483 <<
	     IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1475 ;
  assign sfd___3__h7708 =
	     sfd__h2804 <<
	     IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d278 ;
  assign sfd__h120060 =
	     { 1'b0,
	       _theResult___fst_exp__h120042 != 11'd0,
	       _theResult___snd__h119993[56:5] } +
	     54'd1 ;
  assign sfd__h129707 =
	     { 1'b0,
	       _theResult___fst_exp__h129615 != 11'd0,
	       sfdin__h129609[56:5] } +
	     54'd1 ;
  assign sfd__h138465 =
	     { 1'b0,
	       _theResult___fst_exp__h138446 != 11'd0,
	       _theResult___snd__h138392[56:5] } +
	     54'd1 ;
  assign sfd__h13912 = { 2'd0, sfd___3__h13885[31:9] } + 25'd1 ;
  assign sfd__h14451 =
	     { 1'b0, x__h14436[7:0] != 8'd0, sfd___3__h13885[30:8] } + 25'd1 ;
  assign sfd__h2804 = requestR[159] ? -requestR[159:128] : requestR[159:128] ;
  assign sfd__h28538 = { sfd__h2804, 23'd0 } ;
  assign sfd__h36566 = { 2'd0, sfd___3__h36539[54:3] } + 54'd1 ;
  assign sfd__h37309 =
	     { 1'b0, x__h37294[10:0] != 11'd0, sfd___3__h36539[53:2] } +
	     54'd1 ;
  assign sfd__h38483 = { requestR[159:128], 23'd0 } ;
  assign sfd__h46262 = { 2'd0, sfd___3__h46235[54:3] } + 54'd1 ;
  assign sfd__h47004 =
	     { 1'b0, x__h46989[10:0] != 11'd0, sfd___3__h46235[53:2] } +
	     54'd1 ;
  assign sfd__h54690 = { value__h48386, 3'd0 } ;
  assign sfd__h70519 =
	     { 1'b0,
	       _theResult___fst_exp__h70427 != 8'd0,
	       sfdin__h70421[56:34] } +
	     25'd1 ;
  assign sfd__h7735 = { 2'd0, sfd___3__h7708[31:9] } + 25'd1 ;
  assign sfd__h79131 =
	     { 1'b0,
	       _theResult___fst_exp__h79113 != 8'd0,
	       _theResult___snd__h79064[56:34] } +
	     25'd1 ;
  assign sfd__h8278 =
	     { 1'b0, x__h8263[7:0] != 8'd0, sfd___3__h7708[30:8] } + 25'd1 ;
  assign sfd__h88372 =
	     { 1'b0,
	       _theResult___fst_exp__h88280 != 8'd0,
	       sfdin__h88274[56:34] } +
	     25'd1 ;
  assign sfd__h97014 =
	     { 1'b0,
	       _theResult___fst_exp__h96995 != 8'd0,
	       _theResult___snd__h96941[56:34] } +
	     25'd1 ;
  assign sfdin__h129609 =
	     _theResult____h121379[56] ?
	       _theResult___snd__h129626 :
	       _theResult___snd__h129637 ;
  assign sfdin__h70421 =
	     _theResult____h62320[56] ?
	       _theResult___snd__h70438 :
	       _theResult___snd__h70449 ;
  assign sfdin__h88274 =
	     _theResult____h80044[56] ?
	       _theResult___snd__h88291 :
	       _theResult___snd__h88302 ;
  assign value__h15634 = { 1'b0, sV1_exp__h1205 != 8'd0, sV1_sfd__h1206 } ;
  assign value__h48386 =
	     { 1'b0, requestR[190:180] != 11'd0, requestR[179:128] } ;
  assign value__h50529 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	      !requestR[179]) ?
	       _theResult___fst_sfd__h50986 :
	       requestR[179:128] ;
  assign value__h99233 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0 &&
	      !sV1_sfd__h1206[22]) ?
	       _theResult___fst_sfd__h99488 :
	       sV1_sfd__h1206 ;
  assign x__h122087 = b__h15632 << x__h122120 ;
  assign x__h122120 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3181 ;
  assign x__h139968 =
	     { IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3721,
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 == 23'd0) &&
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 != 23'd0) &&
	       (sV1_exp__h1205 != 8'd0 || sV1_sfd__h1206 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3728,
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 == 23'd0) &&
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 != 23'd0) &&
	       (sV1_exp__h1205 != 8'd0 || sV1_sfd__h1206 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3742,
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 == 23'd0) &&
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 != 23'd0) &&
	       (sV1_exp__h1205 != 8'd0 || sV1_sfd__h1206 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3754,
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 == 23'd0) &&
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 != 23'd0) &&
	       (sV1_exp__h1205 != 8'd0 || sV1_sfd__h1206 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3766 } ;
  assign x__h140891 =
	     requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3787 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   IF_requestR_3_BITS_126_TO_116_778_EQ_2047_779__ETC___d3826)))) ;
  assign x__h14436 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d639 +
	     9'd127 ;
  assign x__h144440 =
	     { requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3832,
	       4'd0 } ;
  assign x__h145439 =
	     requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3787 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   ((requestR[126:116] == 11'd2047 && requestR[115]) ?
			      requestR[191:128] :
			      IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_ETC___d3840))))) ;
  assign x__h149883 =
	     requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3854 ?
	       64'd0 :
	       res__h151560 ;
  assign x__h15102 =
	     { 2'd0,
	       NOT_requestR_3_BITS_159_TO_128_47_EQ_0_48_49_A_ETC___d804,
	       requestR[159:128] != 32'd0 &&
	       (requestR[159] ||
		requestR_3_BIT_158_11_OR_requestR_3_BIT_157_13_ETC___d793) &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d640 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d641,
	       requestR[159:128] != 32'd0 &&
	       requestR_3_BIT_159_6_OR_requestR_3_BIT_158_11__ETC___d815 } ;
  assign x__h152578 =
	     requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3854 ?
	       64'd0 :
	       res__h154255 ;
  assign x__h15386 = { {32{x__h15389[31]}}, x__h15389 } ;
  assign x__h15389 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837 ?
	       32'h7FFFFFFF :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d909 ;
  assign x__h154274 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0,
	       4'd0 } ;
  assign x__h154455 =
	     requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d3854 ?
	       64'd0 :
	       res__h156132 ;
  assign x__h156582 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       res___1__h156600 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  res___1__h157038 :
		  IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_ETC___d3911) ;
  assign x__h157232 =
	     fpu$server_core_response_get[69] ?
	       res__h157265 :
	       fpu$server_core_response_get[68:5] ;
  assign x__h16308 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d850 >>
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d876 |
	     ~(57'h1FFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d876) &
	     {57{IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d850[56]}} ;
  assign x__h16722 =
	     { sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0 ||
	       sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 == 23'd0 ||
	       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d920,
	       3'd0,
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 == 23'd0) &&
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 != 23'd0) &&
	       (sV1_exp__h1205 != 8'd0 || sV1_sfd__h1206 != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d931 } ;
  assign x__h16979 = { {32{x__h16982[31]}}, x__h16982 } ;
  assign x__h16982 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d837 ?
	       32'hFFFFFFFF :
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d971 ;
  assign x__h17403 =
	     { sV1_exp__h1205 != 8'd0, sV1_sfd__h1206, 33'd0 } >>
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d940 ;
  assign x__h17481 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d990 :
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d979,
	       3'd0,
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 == 23'd0) &&
	       (sV1_exp__h1205 != 8'd255 || sV1_sfd__h1206 != 23'd0) &&
	       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d984 } ;
  assign x__h17729 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1013 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1059 ;
  assign x__h19768 =
	     { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1061,
	       4'd0 } ;
  assign x__h20363 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1013 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1075 ;
  assign x__h22888 = { 32'hFFFFFFFF, requestR[159:128] } ;
  assign x__h23009 =
	     { {32{requestR_BITS_159_TO_128__q1[31]}},
	       requestR_BITS_159_TO_128__q1 } ;
  assign x__h23147 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1098 ?
	       64'd0 :
	       res__h24016 ;
  assign x__h2356 = { 32'hFFFFFFFF, x__h2362 } ;
  assign x__h2362 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign x__h24630 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1098 ?
	       64'd0 :
	       res__h25499 ;
  assign x__h2502 = { 32'hFFFFFFFF, x__h2508 } ;
  assign x__h2508 =
	     { requestR[127:96] != 32'hFFFFFFFF || !requestR[95],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign x__h25518 =
	     { sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0 ||
	       sV2_exp__h1308 == 8'd255 && sV2_sfd__h1309 != 23'd0,
	       4'd0 } ;
  assign x__h25699 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1098 ?
	       64'd0 :
	       res__h26568 ;
  assign x__h2636 = { 32'hFFFFFFFF, x__h2642 } ;
  assign x__h2642 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) !=
	       (requestR[127:96] == 32'hFFFFFFFF && requestR[95]),
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign x__h26785 =
	     (sV1_exp__h1205 == 8'd255 && sV1_sfd__h1206 != 23'd0) ?
	       res___1__h26803 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1146 ;
  assign x__h2783 = { 32'hFFFFFFFF, x__h2789 } ;
  assign x__h2789 =
	     { requestR[159:128] != 32'd0 &&
	       (NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d286 ?
		  requestR[159] :
		  IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d348),
	       IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d408,
	       (requestR[159:128] == 32'd0 ||
		NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d286) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h8791 } ;
  assign x__h28147 = { requestR[127], requestR[190:128] } ;
  assign x__h28269 = { !requestR[127], requestR[190:128] } ;
  assign x__h28393 = { requestR[191] != requestR[127], requestR[190:128] } ;
  assign x__h28523 =
	     { requestR[159:128] != 32'd0 &&
	       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1320,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h38030,
	       IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d1417 } ;
  assign x__h37294 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1263 +
	     12'd1023 ;
  assign x__h38186 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1264 ||
		!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1266 &&
		!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1268 &&
		_theResult___fst_exp__h38021 == 11'd2047 &&
		_theResult___fst_sfd__h38022 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1264 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1266,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1264 &&
	       !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1266 &&
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1434 } ;
  assign x__h38471 =
	     { 1'd0,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h47724,
	       IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d1600 } ;
  assign x__h46989 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1478 +
	     12'd1023 ;
  assign x__h47854 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1479 ||
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1480 &&
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1481 &&
		_theResult___fst_exp__h47715 == 11'd2047 &&
		_theResult___fst_sfd__h47716 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1479 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1480,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1479 &&
	       !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1480 &&
	       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d1617 } ;
  assign x__h48138 = { {32{x__h48141[31]}}, x__h48141 } ;
  assign x__h48141 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'h7FFFFFFF :
	       IF_requestR_3_BITS_190_TO_180_629_EQ_2047_630__ETC___d1710 ;
  assign x__h49060 =
	     IF_requestR_3_BIT_191_219_THEN_NEG_0b0_CONCAT__ETC___d1651 >>
	     NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1677 |
	     ~(86'h3FFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1677) &
	     {86{IF_requestR_3_BIT_191_219_THEN_NEG_0b0_CONCAT__ETC___d1651[85]}} ;
  assign x__h49457 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_3_BITS_190_TO_180_629_EQ_0_640_64_ETC___d1721,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_3_BITS_190_TO_180_629_MIN_ETC___d1732 } ;
  assign x__h49714 = { {32{x__h49717[31]}}, x__h49717 } ;
  assign x__h49717 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'hFFFFFFFF :
	       (requestR[191] ?
		  32'd0 :
		  ((requestR[190:180] == 11'd2047 &&
		    requestR[179:128] == 52'd0) ?
		     32'hFFFFFFFF :
		     IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_AND_ETC___d1770)) ;
  assign x__h50138 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 33'd0 } >>
	     NEG_SEXT_requestR_3_BITS_190_TO_180_629_MINUS__ETC___d1741 ;
  assign x__h50216 =
	     { requestR[191] ?
		 requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d1791 :
		 requestR_3_BITS_190_TO_180_629_EQ_2047_630_AND_ETC___d1780,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_3_BITS_190_TO_180_629_EQ_0_640_64_ETC___d1785 } ;
  assign x__h50460 =
	     (x__h50469 == 8'd255 &&
	      IF_requestR_3_BITS_190_TO_180_629_EQ_2047_630__ETC___d2831[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       res__h98061 ;
  assign x__h50469 =
	     (requestR[190:180] == 11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h97585 ;
  assign x__h80752 = sfd__h54690 << x__h80785 ;
  assign x__h80785 =
	     12'd57 -
	     _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_629_ETC___d2347 ;
  assign x__h8263 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281 +
	     9'd127 ;
  assign x__h8956 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d489,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d492,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d501 } ;
  assign x__h9244 =
	     { 33'h1FFFFFFFE,
	       IF_requestR_3_BITS_159_TO_128_47_EQ_0_48_OR_NO_ETC___d726,
	       (requestR[159:128] == 32'd0 ||
		!requestR[159] &&
		NOT_requestR_3_BIT_158_11_12_AND_NOT_requestR__ETC___d602 ||
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d640 ||
		_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d641) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h14963 } ;
  assign x__h98067 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
		(requestR[190:180] == 11'd2047 ||
		 requestR[190:180] == 11'd0) &&
		requestR[179:128] == 52'd0) ?
		 requestR[191] :
		 IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2873,
	       x__h50469,
	       IF_requestR_3_BITS_190_TO_180_629_EQ_2047_630__ETC___d2831 } ;
  assign x__h98182 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179] :
		 (requestR[190:180] != 11'd2047 ||
		  requestR[179:128] != 52'd0) &&
		 (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
		 IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2924,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2935,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2951,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2964,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_629_EQ_0_640_THE_ETC___d2977 } ;
  assign x__h99165 =
	     (x__h99174 == 11'd2047 &&
	      IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3647[51]) ?
	       64'h7FF8000000000000 :
	       res__h139866 ;
  assign x__h99174 =
	     (sV1_exp__h1205 == 8'd255) ?
	       11'd2047 :
	       _theResult___fst_exp__h139239 ;
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd254;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd255 : 8'd254;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd254 : 8'd255;
      default: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      23'd8388607;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd0 : 23'd8388607;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd8388607 : 23'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 = 23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd2046;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2047 :
		11'd2046;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2046 :
		11'd2047;
      default: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      52'hFFFFFFFFFFFFF;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 = 52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h0:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 =
	      requestR[194:192];
      3'h1: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd4;
      3'h2: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd3;
      3'h3: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd2;
      3'h4: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd1;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 =
		   3'd0;
    endcase
  end
  always@(guard__h7718 or requestR)
  begin
    case (guard__h7718)
      2'b0, 2'b01, 2'b10:
	  CASE_guard718_0b0_requestR_BIT_159_0b1_request_ETC__q8 =
	      requestR[159];
      2'd3:
	  CASE_guard718_0b0_requestR_BIT_159_0b1_request_ETC__q8 =
	      guard__h7718 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h7718)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
	      (guard__h7718 == 2'b0) ?
		requestR[159] :
		(guard__h7718 == 2'b01 || guard__h7718 == 2'b10 ||
		 guard__h7718 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h8248 or requestR)
  begin
    case (guard__h8248)
      2'b0, 2'b01, 2'b10:
	  CASE_guard248_0b0_requestR_BIT_159_0b1_request_ETC__q10 =
	      requestR[159];
      2'd3:
	  CASE_guard248_0b0_requestR_BIT_159_0b1_request_ETC__q10 =
	      guard__h8248 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h8248)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
	      (guard__h8248 == 2'b0) ?
		requestR[159] :
		(guard__h8248 == 2'b01 || guard__h8248 == 2'b10 ||
		 guard__h8248 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h7718 or _theResult___exp__h8134)
  begin
    case (guard__h7718)
      2'b0: CASE_guard718_0b0_0_0b1_theResult___exp134_0b1_ETC__q12 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard718_0b0_0_0b1_theResult___exp134_0b1_ETC__q12 =
	      _theResult___exp__h8134;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d370 or
	  guard__h7718 or
	  _theResult___exp__h8134 or
	  CASE_guard718_0b0_0_0b1_theResult___exp134_0b1_ETC__q12)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d373 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d370;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d373 =
	      (guard__h7718 == 2'b0 || requestR[159]) ?
		8'd0 :
		_theResult___exp__h8134;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d373 =
	      CASE_guard718_0b0_0_0b1_theResult___exp134_0b1_ETC__q12;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d373 =
		   8'd0;
    endcase
  end
  always@(guard__h7718 or out_exp__h8137 or _theResult___exp__h8134)
  begin
    case (guard__h7718)
      2'b0, 2'b01:
	  CASE_guard718_0b0_0_0b1_0_0b10_out_exp137_0b11_ETC__q13 = 8'd0;
      2'b10:
	  CASE_guard718_0b0_0_0b1_0_0b10_out_exp137_0b11_ETC__q13 =
	      out_exp__h8137;
      2'b11:
	  CASE_guard718_0b0_0_0b1_0_0b10_out_exp137_0b11_ETC__q13 =
	      _theResult___exp__h8134;
    endcase
  end
  always@(guard__h8248 or x__h8263 or _theResult___exp__h8687)
  begin
    case (guard__h8248)
      2'b0:
	  CASE_guard248_0b0_x263_BITS_7_TO_0_0b1_theResu_ETC__q14 =
	      x__h8263[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard248_0b0_x263_BITS_7_TO_0_0b1_theResu_ETC__q14 =
	      _theResult___exp__h8687;
    endcase
  end
  always@(requestR or
	  x__h8263 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d398 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d396 or
	  CASE_guard248_0b0_x263_BITS_7_TO_0_0b1_theResu_ETC__q14)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d402 =
	      x__h8263[7:0];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d402 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d398;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d402 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d396;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d402 =
	      CASE_guard248_0b0_x263_BITS_7_TO_0_0b1_theResu_ETC__q14;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d402 =
		   8'd0;
    endcase
  end
  always@(guard__h8248 or
	  x__h8263 or out_exp__h8690 or _theResult___exp__h8687)
  begin
    case (guard__h8248)
      2'b0, 2'b01:
	  CASE_guard248_0b0_x263_BITS_7_TO_0_0b1_x263_BI_ETC__q15 =
	      x__h8263[7:0];
      2'b10:
	  CASE_guard248_0b0_x263_BITS_7_TO_0_0b1_x263_BI_ETC__q15 =
	      out_exp__h8690;
      2'b11:
	  CASE_guard248_0b0_x263_BITS_7_TO_0_0b1_x263_BI_ETC__q15 =
	      _theResult___exp__h8687;
    endcase
  end
  always@(guard__h7718 or sfd___3__h7708 or _theResult___sfd__h8135)
  begin
    case (guard__h7718)
      2'b0:
	  CASE_guard718_0b0_sfd___3708_BITS_31_TO_9_0b1__ETC__q16 =
	      sfd___3__h7708[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard718_0b0_sfd___3708_BITS_31_TO_9_0b1__ETC__q16 =
	      _theResult___sfd__h8135;
    endcase
  end
  always@(requestR or
	  sfd___3__h7708 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d421 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d419 or
	  CASE_guard718_0b0_sfd___3708_BITS_31_TO_9_0b1__ETC__q16)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d425 =
	      sfd___3__h7708[31:9];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d425 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d421;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d425 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d419;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d425 =
	      CASE_guard718_0b0_sfd___3708_BITS_31_TO_9_0b1__ETC__q16;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d425 =
		   23'd0;
    endcase
  end
  always@(guard__h7718 or
	  sfd___3__h7708 or out_sfd__h8138 or _theResult___sfd__h8135)
  begin
    case (guard__h7718)
      2'b0, 2'b01:
	  CASE_guard718_0b0_sfd___3708_BITS_31_TO_9_0b1__ETC__q17 =
	      sfd___3__h7708[31:9];
      2'b10:
	  CASE_guard718_0b0_sfd___3708_BITS_31_TO_9_0b1__ETC__q17 =
	      out_sfd__h8138;
      2'b11:
	  CASE_guard718_0b0_sfd___3708_BITS_31_TO_9_0b1__ETC__q17 =
	      _theResult___sfd__h8135;
    endcase
  end
  always@(guard__h8248 or sfd___3__h7708 or _theResult___sfd__h8688)
  begin
    case (guard__h8248)
      2'b0:
	  CASE_guard248_0b0_sfd___3708_BITS_30_TO_8_0b1__ETC__q18 =
	      sfd___3__h7708[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard248_0b0_sfd___3708_BITS_30_TO_8_0b1__ETC__q18 =
	      _theResult___sfd__h8688;
    endcase
  end
  always@(requestR or
	  sfd___3__h7708 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d439 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d437 or
	  CASE_guard248_0b0_sfd___3708_BITS_30_TO_8_0b1__ETC__q18)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d443 =
	      sfd___3__h7708[30:8];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d443 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d439;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d443 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d437;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d443 =
	      CASE_guard248_0b0_sfd___3708_BITS_30_TO_8_0b1__ETC__q18;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d443 =
		   23'd0;
    endcase
  end
  always@(guard__h8248 or
	  sfd___3__h7708 or out_sfd__h8691 or _theResult___sfd__h8688)
  begin
    case (guard__h8248)
      2'b0, 2'b01:
	  CASE_guard248_0b0_sfd___3708_BITS_30_TO_8_0b1__ETC__q19 =
	      sfd___3__h7708[30:8];
      2'b10:
	  CASE_guard248_0b0_sfd___3708_BITS_30_TO_8_0b1__ETC__q19 =
	      out_sfd__h8691;
      2'b11:
	  CASE_guard248_0b0_sfd___3708_BITS_30_TO_8_0b1__ETC__q19 =
	      _theResult___sfd__h8688;
    endcase
  end
  always@(guard__h13895 or out_exp__h14311 or _theResult___exp__h14308)
  begin
    case (guard__h13895)
      2'b0, 2'b01:
	  CASE_guard3895_0b0_0_0b1_0_0b10_out_exp4311_0b_ETC__q22 = 8'd0;
      2'b10:
	  CASE_guard3895_0b0_0_0b1_0_0b10_out_exp4311_0b_ETC__q22 =
	      out_exp__h14311;
      2'b11:
	  CASE_guard3895_0b0_0_0b1_0_0b10_out_exp4311_0b_ETC__q22 =
	      _theResult___exp__h14308;
    endcase
  end
  always@(guard__h13895 or _theResult___exp__h14308)
  begin
    case (guard__h13895)
      2'b0: CASE_guard3895_0b0_0_0b1_theResult___exp4308_0_ETC__q23 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard3895_0b0_0_0b1_theResult___exp4308_0_ETC__q23 =
	      _theResult___exp__h14308;
    endcase
  end
  always@(requestR or
	  guard__h13895 or
	  _theResult___exp__h14308 or
	  CASE_guard3895_0b0_0_0b1_theResult___exp4308_0_ETC__q23)
  begin
    case (requestR[194:192])
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard3895_ETC__q24 =
	      (guard__h13895 == 2'b0) ? 8'd0 : _theResult___exp__h14308;
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard3895_ETC__q24 =
	      CASE_guard3895_0b0_0_0b1_theResult___exp4308_0_ETC__q23;
      default: CASE_requestR_BITS_194_TO_192_0x3_IF_guard3895_ETC__q24 = 8'd0;
    endcase
  end
  always@(guard__h14421 or x__h14436 or _theResult___exp__h14860)
  begin
    case (guard__h14421)
      2'b0:
	  CASE_guard4421_0b0_x4436_BITS_7_TO_0_0b1_theRe_ETC__q25 =
	      x__h14436[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard4421_0b0_x4436_BITS_7_TO_0_0b1_theRe_ETC__q25 =
	      _theResult___exp__h14860;
    endcase
  end
  always@(requestR or
	  x__h14436 or
	  guard__h14421 or
	  _theResult___exp__h14860 or
	  CASE_guard4421_0b0_x4436_BITS_7_TO_0_0b1_theRe_ETC__q25)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d720 =
	      x__h14436[7:0];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d720 =
	      (guard__h14421 == 2'b0) ?
		x__h14436[7:0] :
		_theResult___exp__h14860;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d720 =
	      CASE_guard4421_0b0_x4436_BITS_7_TO_0_0b1_theRe_ETC__q25;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d720 =
		   8'd0;
    endcase
  end
  always@(guard__h14421 or
	  x__h14436 or out_exp__h14863 or _theResult___exp__h14860)
  begin
    case (guard__h14421)
      2'b0, 2'b01:
	  CASE_guard4421_0b0_x4436_BITS_7_TO_0_0b1_x4436_ETC__q26 =
	      x__h14436[7:0];
      2'b10:
	  CASE_guard4421_0b0_x4436_BITS_7_TO_0_0b1_x4436_ETC__q26 =
	      out_exp__h14863;
      2'b11:
	  CASE_guard4421_0b0_x4436_BITS_7_TO_0_0b1_x4436_ETC__q26 =
	      _theResult___exp__h14860;
    endcase
  end
  always@(guard__h14421 or sfd___3__h13885 or _theResult___sfd__h14861)
  begin
    case (guard__h14421)
      2'b0:
	  CASE_guard4421_0b0_sfd___33885_BITS_30_TO_8_0b_ETC__q27 =
	      sfd___3__h13885[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard4421_0b0_sfd___33885_BITS_30_TO_8_0b_ETC__q27 =
	      _theResult___sfd__h14861;
    endcase
  end
  always@(requestR or
	  sfd___3__h13885 or
	  guard__h14421 or
	  _theResult___sfd__h14861 or
	  CASE_guard4421_0b0_sfd___33885_BITS_30_TO_8_0b_ETC__q27)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d758 =
	      sfd___3__h13885[30:8];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d758 =
	      (guard__h14421 == 2'b0) ?
		sfd___3__h13885[30:8] :
		_theResult___sfd__h14861;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d758 =
	      CASE_guard4421_0b0_sfd___33885_BITS_30_TO_8_0b_ETC__q27;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d758 =
		   23'd0;
    endcase
  end
  always@(guard__h14421 or
	  sfd___3__h13885 or out_sfd__h14864 or _theResult___sfd__h14861)
  begin
    case (guard__h14421)
      2'b0, 2'b01:
	  CASE_guard4421_0b0_sfd___33885_BITS_30_TO_8_0b_ETC__q28 =
	      sfd___3__h13885[30:8];
      2'b10:
	  CASE_guard4421_0b0_sfd___33885_BITS_30_TO_8_0b_ETC__q28 =
	      out_sfd__h14864;
      2'b11:
	  CASE_guard4421_0b0_sfd___33885_BITS_30_TO_8_0b_ETC__q28 =
	      _theResult___sfd__h14861;
    endcase
  end
  always@(guard__h13895 or sfd___3__h13885 or _theResult___sfd__h14309)
  begin
    case (guard__h13895)
      2'b0:
	  CASE_guard3895_0b0_sfd___33885_BITS_31_TO_9_0b_ETC__q29 =
	      sfd___3__h13885[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard3895_0b0_sfd___33885_BITS_31_TO_9_0b_ETC__q29 =
	      _theResult___sfd__h14309;
    endcase
  end
  always@(requestR or
	  sfd___3__h13885 or
	  guard__h13895 or
	  _theResult___sfd__h14309 or
	  CASE_guard3895_0b0_sfd___33885_BITS_31_TO_9_0b_ETC__q29)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d743 =
	      sfd___3__h13885[31:9];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d743 =
	      (guard__h13895 == 2'b0) ?
		sfd___3__h13885[31:9] :
		_theResult___sfd__h14309;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d743 =
	      CASE_guard3895_0b0_sfd___33885_BITS_31_TO_9_0b_ETC__q29;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d743 =
		   23'd0;
    endcase
  end
  always@(guard__h13895 or
	  sfd___3__h13885 or out_sfd__h14312 or _theResult___sfd__h14309)
  begin
    case (guard__h13895)
      2'b0, 2'b01:
	  CASE_guard3895_0b0_sfd___33885_BITS_31_TO_9_0b_ETC__q30 =
	      sfd___3__h13885[31:9];
      2'b10:
	  CASE_guard3895_0b0_sfd___33885_BITS_31_TO_9_0b_ETC__q30 =
	      out_sfd__h14312;
      2'b11:
	  CASE_guard3895_0b0_sfd___33885_BITS_31_TO_9_0b_ETC__q30 =
	      _theResult___sfd__h14309;
    endcase
  end
  always@(guard__h36549 or requestR)
  begin
    case (guard__h36549)
      2'b0, 2'b01, 2'b10:
	  CASE_guard6549_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      requestR[159];
      2'd3:
	  CASE_guard6549_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      guard__h36549 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h36549)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
	      (guard__h36549 == 2'b0) ?
		requestR[159] :
		(guard__h36549 == 2'b01 || guard__h36549 == 2'b10 ||
		 guard__h36549 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h37279 or requestR)
  begin
    case (guard__h37279)
      2'b0, 2'b01, 2'b10:
	  CASE_guard7279_0b0_requestR_BIT_159_0b1_reques_ETC__q37 =
	      requestR[159];
      2'd3:
	  CASE_guard7279_0b0_requestR_BIT_159_0b1_reques_ETC__q37 =
	      guard__h37279 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h37279)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
	      (guard__h37279 == 2'b0) ?
		requestR[159] :
		(guard__h37279 == 2'b01 || guard__h37279 == 2'b10 ||
		 guard__h37279 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h37279 or x__h37294 or _theResult___exp__h37921)
  begin
    case (guard__h37279)
      2'b0:
	  CASE_guard7279_0b0_x7294_BITS_10_TO_0_0b1_theR_ETC__q39 =
	      x__h37294[10:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard7279_0b0_x7294_BITS_10_TO_0_0b1_theR_ETC__q39 =
	      _theResult___exp__h37921;
    endcase
  end
  always@(requestR or
	  x__h37294 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1368 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1366 or
	  CASE_guard7279_0b0_x7294_BITS_10_TO_0_0b1_theR_ETC__q39)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 =
	      x__h37294[10:0];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1368;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1366;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 =
	      CASE_guard7279_0b0_x7294_BITS_10_TO_0_0b1_theR_ETC__q39;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1372 =
		   11'd0;
    endcase
  end
  always@(guard__h37279 or
	  x__h37294 or out_exp__h37924 or _theResult___exp__h37921)
  begin
    case (guard__h37279)
      2'b0, 2'b01:
	  CASE_guard7279_0b0_x7294_BITS_10_TO_0_0b1_x729_ETC__q40 =
	      x__h37294[10:0];
      2'b10:
	  CASE_guard7279_0b0_x7294_BITS_10_TO_0_0b1_x729_ETC__q40 =
	      out_exp__h37924;
      2'b11:
	  CASE_guard7279_0b0_x7294_BITS_10_TO_0_0b1_x729_ETC__q40 =
	      _theResult___exp__h37921;
    endcase
  end
  always@(guard__h37279 or sfd___3__h36539 or _theResult___sfd__h37922)
  begin
    case (guard__h37279)
      2'b0:
	  CASE_guard7279_0b0_sfd___36539_BITS_53_TO_2_0b_ETC__q41 =
	      sfd___3__h36539[53:2];
      2'b01, 2'b10, 2'b11:
	  CASE_guard7279_0b0_sfd___36539_BITS_53_TO_2_0b_ETC__q41 =
	      _theResult___sfd__h37922;
    endcase
  end
  always@(requestR or
	  sfd___3__h36539 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1409 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1407 or
	  CASE_guard7279_0b0_sfd___36539_BITS_53_TO_2_0b_ETC__q41)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1413 =
	      sfd___3__h36539[53:2];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1413 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1409;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1413 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1407;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1413 =
	      CASE_guard7279_0b0_sfd___36539_BITS_53_TO_2_0b_ETC__q41;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1413 =
		   52'd0;
    endcase
  end
  always@(guard__h37279 or
	  sfd___3__h36539 or out_sfd__h37925 or _theResult___sfd__h37922)
  begin
    case (guard__h37279)
      2'b0, 2'b01:
	  CASE_guard7279_0b0_sfd___36539_BITS_53_TO_2_0b_ETC__q42 =
	      sfd___3__h36539[53:2];
      2'b10:
	  CASE_guard7279_0b0_sfd___36539_BITS_53_TO_2_0b_ETC__q42 =
	      out_sfd__h37925;
      2'b11:
	  CASE_guard7279_0b0_sfd___36539_BITS_53_TO_2_0b_ETC__q42 =
	      _theResult___sfd__h37922;
    endcase
  end
  always@(guard__h36549 or _theResult___exp__h37165)
  begin
    case (guard__h36549)
      2'b0: CASE_guard6549_0b0_0_0b1_theResult___exp7165_0_ETC__q43 = 11'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard6549_0b0_0_0b1_theResult___exp7165_0_ETC__q43 =
	      _theResult___exp__h37165;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1340 or
	  guard__h36549 or
	  _theResult___exp__h37165 or
	  CASE_guard6549_0b0_0_0b1_theResult___exp7165_0_ETC__q43)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1343 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1340;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1343 =
	      (guard__h36549 == 2'b0 || requestR[159]) ?
		11'd0 :
		_theResult___exp__h37165;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1343 =
	      CASE_guard6549_0b0_0_0b1_theResult___exp7165_0_ETC__q43;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1343 =
		   11'd0;
    endcase
  end
  always@(guard__h36549 or out_exp__h37168 or _theResult___exp__h37165)
  begin
    case (guard__h36549)
      2'b0, 2'b01:
	  CASE_guard6549_0b0_0_0b1_0_0b10_out_exp7168_0b_ETC__q44 = 11'd0;
      2'b10:
	  CASE_guard6549_0b0_0_0b1_0_0b10_out_exp7168_0b_ETC__q44 =
	      out_exp__h37168;
      2'b11:
	  CASE_guard6549_0b0_0_0b1_0_0b10_out_exp7168_0b_ETC__q44 =
	      _theResult___exp__h37165;
    endcase
  end
  always@(guard__h36549 or sfd___3__h36539 or _theResult___sfd__h37166)
  begin
    case (guard__h36549)
      2'b0:
	  CASE_guard6549_0b0_sfd___36539_BITS_54_TO_3_0b_ETC__q45 =
	      sfd___3__h36539[54:3];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6549_0b0_sfd___36539_BITS_54_TO_3_0b_ETC__q45 =
	      _theResult___sfd__h37166;
    endcase
  end
  always@(requestR or
	  sfd___3__h36539 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1391 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1389 or
	  CASE_guard6549_0b0_sfd___36539_BITS_54_TO_3_0b_ETC__q45)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 =
	      sfd___3__h36539[54:3];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1391;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1389;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 =
	      CASE_guard6549_0b0_sfd___36539_BITS_54_TO_3_0b_ETC__q45;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 =
		   52'd0;
    endcase
  end
  always@(guard__h36549 or
	  sfd___3__h36539 or out_sfd__h37169 or _theResult___sfd__h37166)
  begin
    case (guard__h36549)
      2'b0, 2'b01:
	  CASE_guard6549_0b0_sfd___36539_BITS_54_TO_3_0b_ETC__q46 =
	      sfd___3__h36539[54:3];
      2'b10:
	  CASE_guard6549_0b0_sfd___36539_BITS_54_TO_3_0b_ETC__q46 =
	      out_sfd__h37169;
      2'b11:
	  CASE_guard6549_0b0_sfd___36539_BITS_54_TO_3_0b_ETC__q46 =
	      _theResult___sfd__h37166;
    endcase
  end
  always@(guard__h46245 or out_exp__h46864 or _theResult___exp__h46861)
  begin
    case (guard__h46245)
      2'b0, 2'b01:
	  CASE_guard6245_0b0_0_0b1_0_0b10_out_exp6864_0b_ETC__q49 = 11'd0;
      2'b10:
	  CASE_guard6245_0b0_0_0b1_0_0b10_out_exp6864_0b_ETC__q49 =
	      out_exp__h46864;
      2'b11:
	  CASE_guard6245_0b0_0_0b1_0_0b10_out_exp6864_0b_ETC__q49 =
	      _theResult___exp__h46861;
    endcase
  end
  always@(guard__h46245 or _theResult___exp__h46861)
  begin
    case (guard__h46245)
      2'b0: CASE_guard6245_0b0_0_0b1_theResult___exp6861_0_ETC__q50 = 11'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard6245_0b0_0_0b1_theResult___exp6861_0_ETC__q50 =
	      _theResult___exp__h46861;
    endcase
  end
  always@(requestR or
	  guard__h46245 or
	  _theResult___exp__h46861 or
	  CASE_guard6245_0b0_0_0b1_theResult___exp6861_0_ETC__q50)
  begin
    case (requestR[194:192])
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard6245_ETC__q51 =
	      (guard__h46245 == 2'b0) ? 11'd0 : _theResult___exp__h46861;
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard6245_ETC__q51 =
	      CASE_guard6245_0b0_0_0b1_theResult___exp6861_0_ETC__q50;
      default: CASE_requestR_BITS_194_TO_192_0x3_IF_guard6245_ETC__q51 =
		   11'd0;
    endcase
  end
  always@(guard__h46974 or x__h46989 or _theResult___exp__h47616)
  begin
    case (guard__h46974)
      2'b0:
	  CASE_guard6974_0b0_x6989_BITS_10_TO_0_0b1_theR_ETC__q52 =
	      x__h46989[10:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6974_0b0_x6989_BITS_10_TO_0_0b1_theR_ETC__q52 =
	      _theResult___exp__h47616;
    endcase
  end
  always@(requestR or
	  x__h46989 or
	  guard__h46974 or
	  _theResult___exp__h47616 or
	  CASE_guard6974_0b0_x6989_BITS_10_TO_0_0b1_theR_ETC__q52)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1559 =
	      x__h46989[10:0];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1559 =
	      (guard__h46974 == 2'b0) ?
		x__h46989[10:0] :
		_theResult___exp__h47616;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1559 =
	      CASE_guard6974_0b0_x6989_BITS_10_TO_0_0b1_theR_ETC__q52;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1559 =
		   11'd0;
    endcase
  end
  always@(guard__h46974 or
	  x__h46989 or out_exp__h47619 or _theResult___exp__h47616)
  begin
    case (guard__h46974)
      2'b0, 2'b01:
	  CASE_guard6974_0b0_x6989_BITS_10_TO_0_0b1_x698_ETC__q53 =
	      x__h46989[10:0];
      2'b10:
	  CASE_guard6974_0b0_x6989_BITS_10_TO_0_0b1_x698_ETC__q53 =
	      out_exp__h47619;
      2'b11:
	  CASE_guard6974_0b0_x6989_BITS_10_TO_0_0b1_x698_ETC__q53 =
	      _theResult___exp__h47616;
    endcase
  end
  always@(guard__h46974 or sfd___3__h46235 or _theResult___sfd__h47617)
  begin
    case (guard__h46974)
      2'b0:
	  CASE_guard6974_0b0_sfd___36235_BITS_53_TO_2_0b_ETC__q54 =
	      sfd___3__h46235[53:2];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6974_0b0_sfd___36235_BITS_53_TO_2_0b_ETC__q54 =
	      _theResult___sfd__h47617;
    endcase
  end
  always@(requestR or
	  sfd___3__h46235 or
	  guard__h46974 or
	  _theResult___sfd__h47617 or
	  CASE_guard6974_0b0_sfd___36235_BITS_53_TO_2_0b_ETC__q54)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1596 =
	      sfd___3__h46235[53:2];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1596 =
	      (guard__h46974 == 2'b0) ?
		sfd___3__h46235[53:2] :
		_theResult___sfd__h47617;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1596 =
	      CASE_guard6974_0b0_sfd___36235_BITS_53_TO_2_0b_ETC__q54;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1596 =
		   52'd0;
    endcase
  end
  always@(guard__h46974 or
	  sfd___3__h46235 or out_sfd__h47620 or _theResult___sfd__h47617)
  begin
    case (guard__h46974)
      2'b0, 2'b01:
	  CASE_guard6974_0b0_sfd___36235_BITS_53_TO_2_0b_ETC__q55 =
	      sfd___3__h46235[53:2];
      2'b10:
	  CASE_guard6974_0b0_sfd___36235_BITS_53_TO_2_0b_ETC__q55 =
	      out_sfd__h47620;
      2'b11:
	  CASE_guard6974_0b0_sfd___36235_BITS_53_TO_2_0b_ETC__q55 =
	      _theResult___sfd__h47617;
    endcase
  end
  always@(guard__h46245 or sfd___3__h46235 or _theResult___sfd__h46862)
  begin
    case (guard__h46245)
      2'b0:
	  CASE_guard6245_0b0_sfd___36235_BITS_54_TO_3_0b_ETC__q56 =
	      sfd___3__h46235[54:3];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6245_0b0_sfd___36235_BITS_54_TO_3_0b_ETC__q56 =
	      _theResult___sfd__h46862;
    endcase
  end
  always@(requestR or
	  sfd___3__h46235 or
	  guard__h46245 or
	  _theResult___sfd__h46862 or
	  CASE_guard6245_0b0_sfd___36235_BITS_54_TO_3_0b_ETC__q56)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1581 =
	      sfd___3__h46235[54:3];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1581 =
	      (guard__h46245 == 2'b0) ?
		sfd___3__h46235[54:3] :
		_theResult___sfd__h46862;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1581 =
	      CASE_guard6245_0b0_sfd___36235_BITS_54_TO_3_0b_ETC__q56;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1581 =
		   52'd0;
    endcase
  end
  always@(guard__h46245 or
	  sfd___3__h46235 or out_sfd__h46865 or _theResult___sfd__h46862)
  begin
    case (guard__h46245)
      2'b0, 2'b01:
	  CASE_guard6245_0b0_sfd___36235_BITS_54_TO_3_0b_ETC__q57 =
	      sfd___3__h46235[54:3];
      2'b10:
	  CASE_guard6245_0b0_sfd___36235_BITS_54_TO_3_0b_ETC__q57 =
	      out_sfd__h46865;
      2'b11:
	  CASE_guard6245_0b0_sfd___36235_BITS_54_TO_3_0b_ETC__q57 =
	      _theResult___sfd__h46862;
    endcase
  end
  always@(guard__h62330 or
	  _theResult___fst_exp__h70427 or _theResult___exp__h70953)
  begin
    case (guard__h62330)
      2'b0:
	  CASE_guard2330_0b0_theResult___fst_exp0427_0b1_ETC__q70 =
	      _theResult___fst_exp__h70427;
      2'b01, 2'b10, 2'b11:
	  CASE_guard2330_0b0_theResult___fst_exp0427_0b1_ETC__q70 =
	      _theResult___exp__h70953;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h70427 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2168 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2166 or
	  CASE_guard2330_0b0_theResult___fst_exp0427_0b1_ETC__q70)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2172 =
	      _theResult___fst_exp__h70427;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2172 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2168;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2172 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2166;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2172 =
	      CASE_guard2330_0b0_theResult___fst_exp0427_0b1_ETC__q70;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2172 =
		   8'd0;
    endcase
  end
  always@(guard__h62330 or
	  _theResult___fst_exp__h70427 or
	  out_exp__h70956 or _theResult___exp__h70953)
  begin
    case (guard__h62330)
      2'b0, 2'b01:
	  CASE_guard2330_0b0_theResult___fst_exp0427_0b1_ETC__q71 =
	      _theResult___fst_exp__h70427;
      2'b10:
	  CASE_guard2330_0b0_theResult___fst_exp0427_0b1_ETC__q71 =
	      out_exp__h70956;
      2'b11:
	  CASE_guard2330_0b0_theResult___fst_exp0427_0b1_ETC__q71 =
	      _theResult___exp__h70953;
    endcase
  end
  always@(guard__h71065 or
	  _theResult___fst_exp__h79113 or _theResult___exp__h79565)
  begin
    case (guard__h71065)
      2'b0:
	  CASE_guard1065_0b0_theResult___fst_exp9113_0b1_ETC__q72 =
	      _theResult___fst_exp__h79113;
      2'b01, 2'b10, 2'b11:
	  CASE_guard1065_0b0_theResult___fst_exp9113_0b1_ETC__q72 =
	      _theResult___exp__h79565;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h79113 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2325 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2323 or
	  CASE_guard1065_0b0_theResult___fst_exp9113_0b1_ETC__q72)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2329 =
	      _theResult___fst_exp__h79113;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2329 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2325;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2329 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2323;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2329 =
	      CASE_guard1065_0b0_theResult___fst_exp9113_0b1_ETC__q72;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2329 =
		   8'd0;
    endcase
  end
  always@(guard__h71065 or
	  _theResult___fst_exp__h79113 or
	  out_exp__h79568 or _theResult___exp__h79565)
  begin
    case (guard__h71065)
      2'b0, 2'b01:
	  CASE_guard1065_0b0_theResult___fst_exp9113_0b1_ETC__q73 =
	      _theResult___fst_exp__h79113;
      2'b10:
	  CASE_guard1065_0b0_theResult___fst_exp9113_0b1_ETC__q73 =
	      out_exp__h79568;
      2'b11:
	  CASE_guard1065_0b0_theResult___fst_exp9113_0b1_ETC__q73 =
	      _theResult___exp__h79565;
    endcase
  end
  always@(guard__h80054 or
	  _theResult___fst_exp__h88280 or _theResult___exp__h88806)
  begin
    case (guard__h80054)
      2'b0:
	  CASE_guard0054_0b0_theResult___fst_exp8280_0b1_ETC__q74 =
	      _theResult___fst_exp__h88280;
      2'b01, 2'b10, 2'b11:
	  CASE_guard0054_0b0_theResult___fst_exp8280_0b1_ETC__q74 =
	      _theResult___exp__h88806;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h88280 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2652 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2650 or
	  CASE_guard0054_0b0_theResult___fst_exp8280_0b1_ETC__q74)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2656 =
	      _theResult___fst_exp__h88280;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2656 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2652;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2656 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2650;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2656 =
	      CASE_guard0054_0b0_theResult___fst_exp8280_0b1_ETC__q74;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2656 =
		   8'd0;
    endcase
  end
  always@(guard__h80054 or
	  _theResult___fst_exp__h88280 or
	  out_exp__h88809 or _theResult___exp__h88806)
  begin
    case (guard__h80054)
      2'b0, 2'b01:
	  CASE_guard0054_0b0_theResult___fst_exp8280_0b1_ETC__q75 =
	      _theResult___fst_exp__h88280;
      2'b10:
	  CASE_guard0054_0b0_theResult___fst_exp8280_0b1_ETC__q75 =
	      out_exp__h88809;
      2'b11:
	  CASE_guard0054_0b0_theResult___fst_exp8280_0b1_ETC__q75 =
	      _theResult___exp__h88806;
    endcase
  end
  always@(guard__h88918 or
	  _theResult___fst_exp__h96995 or _theResult___exp__h97472)
  begin
    case (guard__h88918)
      2'b0:
	  CASE_guard8918_0b0_theResult___fst_exp6995_0b1_ETC__q76 =
	      _theResult___fst_exp__h96995;
      2'b01, 2'b10, 2'b11:
	  CASE_guard8918_0b0_theResult___fst_exp6995_0b1_ETC__q76 =
	      _theResult___exp__h97472;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h96995 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2721 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2719 or
	  CASE_guard8918_0b0_theResult___fst_exp6995_0b1_ETC__q76)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2725 =
	      _theResult___fst_exp__h96995;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2725 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2721;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2725 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2719;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2725 =
	      CASE_guard8918_0b0_theResult___fst_exp6995_0b1_ETC__q76;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2725 =
		   8'd0;
    endcase
  end
  always@(guard__h88918 or
	  _theResult___fst_exp__h96995 or
	  out_exp__h97475 or _theResult___exp__h97472)
  begin
    case (guard__h88918)
      2'b0, 2'b01:
	  CASE_guard8918_0b0_theResult___fst_exp6995_0b1_ETC__q77 =
	      _theResult___fst_exp__h96995;
      2'b10:
	  CASE_guard8918_0b0_theResult___fst_exp6995_0b1_ETC__q77 =
	      out_exp__h97475;
      2'b11:
	  CASE_guard8918_0b0_theResult___fst_exp6995_0b1_ETC__q77 =
	      _theResult___exp__h97472;
    endcase
  end
  always@(guard__h71065 or
	  _theResult___snd__h79064 or _theResult___sfd__h79566)
  begin
    case (guard__h71065)
      2'b0:
	  CASE_guard1065_0b0_theResult___snd9064_BITS_56_ETC__q78 =
	      _theResult___snd__h79064[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard1065_0b0_theResult___snd9064_BITS_56_ETC__q78 =
	      _theResult___sfd__h79566;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h79064 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2774 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2772 or
	  CASE_guard1065_0b0_theResult___snd9064_BITS_56_ETC__q78)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2778 =
	      _theResult___snd__h79064[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2778 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2774;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2778 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2772;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2778 =
	      CASE_guard1065_0b0_theResult___snd9064_BITS_56_ETC__q78;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2778 =
		   23'd0;
    endcase
  end
  always@(guard__h71065 or
	  _theResult___snd__h79064 or
	  out_sfd__h79569 or _theResult___sfd__h79566)
  begin
    case (guard__h71065)
      2'b0, 2'b01:
	  CASE_guard1065_0b0_theResult___snd9064_BITS_56_ETC__q79 =
	      _theResult___snd__h79064[56:34];
      2'b10:
	  CASE_guard1065_0b0_theResult___snd9064_BITS_56_ETC__q79 =
	      out_sfd__h79569;
      2'b11:
	  CASE_guard1065_0b0_theResult___snd9064_BITS_56_ETC__q79 =
	      _theResult___sfd__h79566;
    endcase
  end
  always@(guard__h62330 or sfdin__h70421 or _theResult___sfd__h70954)
  begin
    case (guard__h62330)
      2'b0:
	  CASE_guard2330_0b0_sfdin0421_BITS_56_TO_34_0b1_ETC__q80 =
	      sfdin__h70421[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard2330_0b0_sfdin0421_BITS_56_TO_34_0b1_ETC__q80 =
	      _theResult___sfd__h70954;
    endcase
  end
  always@(requestR or
	  sfdin__h70421 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2755 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2753 or
	  CASE_guard2330_0b0_sfdin0421_BITS_56_TO_34_0b1_ETC__q80)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2759 =
	      sfdin__h70421[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2759 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2755;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2759 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2753;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2759 =
	      CASE_guard2330_0b0_sfdin0421_BITS_56_TO_34_0b1_ETC__q80;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2759 =
		   23'd0;
    endcase
  end
  always@(guard__h62330 or
	  sfdin__h70421 or out_sfd__h70957 or _theResult___sfd__h70954)
  begin
    case (guard__h62330)
      2'b0, 2'b01:
	  CASE_guard2330_0b0_sfdin0421_BITS_56_TO_34_0b1_ETC__q81 =
	      sfdin__h70421[56:34];
      2'b10:
	  CASE_guard2330_0b0_sfdin0421_BITS_56_TO_34_0b1_ETC__q81 =
	      out_sfd__h70957;
      2'b11:
	  CASE_guard2330_0b0_sfdin0421_BITS_56_TO_34_0b1_ETC__q81 =
	      _theResult___sfd__h70954;
    endcase
  end
  always@(guard__h80054 or sfdin__h88274 or _theResult___sfd__h88807)
  begin
    case (guard__h80054)
      2'b0:
	  CASE_guard0054_0b0_sfdin8274_BITS_56_TO_34_0b1_ETC__q82 =
	      sfdin__h88274[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard0054_0b0_sfdin8274_BITS_56_TO_34_0b1_ETC__q82 =
	      _theResult___sfd__h88807;
    endcase
  end
  always@(requestR or
	  sfdin__h88274 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2801 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2799 or
	  CASE_guard0054_0b0_sfdin8274_BITS_56_TO_34_0b1_ETC__q82)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2805 =
	      sfdin__h88274[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2805 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2801;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2805 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2799;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2805 =
	      CASE_guard0054_0b0_sfdin8274_BITS_56_TO_34_0b1_ETC__q82;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2805 =
		   23'd0;
    endcase
  end
  always@(guard__h80054 or
	  sfdin__h88274 or out_sfd__h88810 or _theResult___sfd__h88807)
  begin
    case (guard__h80054)
      2'b0, 2'b01:
	  CASE_guard0054_0b0_sfdin8274_BITS_56_TO_34_0b1_ETC__q83 =
	      sfdin__h88274[56:34];
      2'b10:
	  CASE_guard0054_0b0_sfdin8274_BITS_56_TO_34_0b1_ETC__q83 =
	      out_sfd__h88810;
      2'b11:
	  CASE_guard0054_0b0_sfdin8274_BITS_56_TO_34_0b1_ETC__q83 =
	      _theResult___sfd__h88807;
    endcase
  end
  always@(guard__h88918 or
	  _theResult___snd__h96941 or _theResult___sfd__h97473)
  begin
    case (guard__h88918)
      2'b0:
	  CASE_guard8918_0b0_theResult___snd6941_BITS_56_ETC__q84 =
	      _theResult___snd__h96941[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard8918_0b0_theResult___snd6941_BITS_56_ETC__q84 =
	      _theResult___sfd__h97473;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h96941 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2820 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2818 or
	  CASE_guard8918_0b0_theResult___snd6941_BITS_56_ETC__q84)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2824 =
	      _theResult___snd__h96941[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2824 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2820;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2824 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_629_EQ_0_6_ETC___d2818;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2824 =
	      CASE_guard8918_0b0_theResult___snd6941_BITS_56_ETC__q84;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2824 =
		   23'd0;
    endcase
  end
  always@(guard__h88918 or
	  _theResult___snd__h96941 or
	  out_sfd__h97476 or _theResult___sfd__h97473)
  begin
    case (guard__h88918)
      2'b0, 2'b01:
	  CASE_guard8918_0b0_theResult___snd6941_BITS_56_ETC__q85 =
	      _theResult___snd__h96941[56:34];
      2'b10:
	  CASE_guard8918_0b0_theResult___snd6941_BITS_56_ETC__q85 =
	      out_sfd__h97476;
      2'b11:
	  CASE_guard8918_0b0_theResult___snd6941_BITS_56_ETC__q85 =
	      _theResult___sfd__h97473;
    endcase
  end
  always@(guard__h62330 or requestR)
  begin
    case (guard__h62330)
      2'b0, 2'b01, 2'b10:
	  CASE_guard2330_0b0_requestR_BIT_191_0b1_reques_ETC__q86 =
	      requestR[191];
      2'd3:
	  CASE_guard2330_0b0_requestR_BIT_191_0b1_reques_ETC__q86 =
	      guard__h62330 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h62330)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
	      (guard__h62330 == 2'b0) ?
		requestR[191] :
		(guard__h62330 == 2'b01 || guard__h62330 == 2'b10 ||
		 guard__h62330 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h71065 or requestR)
  begin
    case (guard__h71065)
      2'b0, 2'b01, 2'b10:
	  CASE_guard1065_0b0_requestR_BIT_191_0b1_reques_ETC__q88 =
	      requestR[191];
      2'd3:
	  CASE_guard1065_0b0_requestR_BIT_191_0b1_reques_ETC__q88 =
	      guard__h71065 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h71065)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
	      (guard__h71065 == 2'b0) ?
		requestR[191] :
		(guard__h71065 == 2'b01 || guard__h71065 == 2'b10 ||
		 guard__h71065 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h80054 or requestR)
  begin
    case (guard__h80054)
      2'b0, 2'b01, 2'b10:
	  CASE_guard0054_0b0_requestR_BIT_191_0b1_reques_ETC__q90 =
	      requestR[191];
      2'd3:
	  CASE_guard0054_0b0_requestR_BIT_191_0b1_reques_ETC__q90 =
	      guard__h80054 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h80054)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
	      (guard__h80054 == 2'b0) ?
		requestR[191] :
		(guard__h80054 == 2'b01 || guard__h80054 == 2'b10 ||
		 guard__h80054 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h88918 or requestR)
  begin
    case (guard__h88918)
      2'b0, 2'b01, 2'b10:
	  CASE_guard8918_0b0_requestR_BIT_191_0b1_reques_ETC__q92 =
	      requestR[191];
      2'd3:
	  CASE_guard8918_0b0_requestR_BIT_191_0b1_reques_ETC__q92 =
	      guard__h88918 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h88918)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
	      (guard__h88918 == 2'b0) ?
		requestR[191] :
		(guard__h88918 == 2'b01 || guard__h88918 == 2'b10 ||
		 guard__h88918 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h112081 or
	  _theResult___fst_exp__h120042 or _theResult___exp__h120697)
  begin
    case (guard__h112081)
      2'b0:
	  CASE_guard12081_0b0_theResult___fst_exp20042_0_ETC__q102 =
	      _theResult___fst_exp__h120042;
      2'b01, 2'b10, 2'b11:
	  CASE_guard12081_0b0_theResult___fst_exp20042_0_ETC__q102 =
	      _theResult___exp__h120697;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h120042 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3163 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3161 or
	  CASE_guard12081_0b0_theResult___fst_exp20042_0_ETC__q102)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3167 =
	      _theResult___fst_exp__h120042;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3167 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3163;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3167 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3161;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3167 =
	      CASE_guard12081_0b0_theResult___fst_exp20042_0_ETC__q102;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3167 =
		   11'd0;
    endcase
  end
  always@(guard__h112081 or
	  _theResult___fst_exp__h120042 or
	  out_exp__h120700 or _theResult___exp__h120697)
  begin
    case (guard__h112081)
      2'b0, 2'b01:
	  CASE_guard12081_0b0_theResult___fst_exp20042_0_ETC__q103 =
	      _theResult___fst_exp__h120042;
      2'b10:
	  CASE_guard12081_0b0_theResult___fst_exp20042_0_ETC__q103 =
	      out_exp__h120700;
      2'b11:
	  CASE_guard12081_0b0_theResult___fst_exp20042_0_ETC__q103 =
	      _theResult___exp__h120697;
    endcase
  end
  always@(guard__h121389 or
	  _theResult___fst_exp__h129615 or _theResult___exp__h130344)
  begin
    case (guard__h121389)
      2'b0:
	  CASE_guard21389_0b0_theResult___fst_exp29615_0_ETC__q104 =
	      _theResult___fst_exp__h129615;
      2'b01, 2'b10, 2'b11:
	  CASE_guard21389_0b0_theResult___fst_exp29615_0_ETC__q104 =
	      _theResult___exp__h130344;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h129615 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3488 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3486 or
	  CASE_guard21389_0b0_theResult___fst_exp29615_0_ETC__q104)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3492 =
	      _theResult___fst_exp__h129615;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3492 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3488;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3492 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3486;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3492 =
	      CASE_guard21389_0b0_theResult___fst_exp29615_0_ETC__q104;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3492 =
		   11'd0;
    endcase
  end
  always@(guard__h121389 or
	  _theResult___fst_exp__h129615 or
	  out_exp__h130347 or _theResult___exp__h130344)
  begin
    case (guard__h121389)
      2'b0, 2'b01:
	  CASE_guard21389_0b0_theResult___fst_exp29615_0_ETC__q105 =
	      _theResult___fst_exp__h129615;
      2'b10:
	  CASE_guard21389_0b0_theResult___fst_exp29615_0_ETC__q105 =
	      out_exp__h130347;
      2'b11:
	  CASE_guard21389_0b0_theResult___fst_exp29615_0_ETC__q105 =
	      _theResult___exp__h130344;
    endcase
  end
  always@(guard__h130456 or
	  _theResult___fst_exp__h138446 or _theResult___exp__h139126)
  begin
    case (guard__h130456)
      2'b0:
	  CASE_guard30456_0b0_theResult___fst_exp38446_0_ETC__q106 =
	      _theResult___fst_exp__h138446;
      2'b01, 2'b10, 2'b11:
	  CASE_guard30456_0b0_theResult___fst_exp38446_0_ETC__q106 =
	      _theResult___exp__h139126;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h138446 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3557 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3555 or
	  CASE_guard30456_0b0_theResult___fst_exp38446_0_ETC__q106)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3561 =
	      _theResult___fst_exp__h138446;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3561 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3557;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3561 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3555;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3561 =
	      CASE_guard30456_0b0_theResult___fst_exp38446_0_ETC__q106;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3561 =
		   11'd0;
    endcase
  end
  always@(guard__h130456 or
	  _theResult___fst_exp__h138446 or
	  out_exp__h139129 or _theResult___exp__h139126)
  begin
    case (guard__h130456)
      2'b0, 2'b01:
	  CASE_guard30456_0b0_theResult___fst_exp38446_0_ETC__q107 =
	      _theResult___fst_exp__h138446;
      2'b10:
	  CASE_guard30456_0b0_theResult___fst_exp38446_0_ETC__q107 =
	      out_exp__h139129;
      2'b11:
	  CASE_guard30456_0b0_theResult___fst_exp38446_0_ETC__q107 =
	      _theResult___exp__h139126;
    endcase
  end
  always@(guard__h112081 or requestR)
  begin
    case (guard__h112081)
      2'b0, 2'b01, 2'b10:
	  CASE_guard12081_0b0_requestR_BITS_191_TO_160_E_ETC__q108 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard12081_0b0_requestR_BITS_191_TO_160_E_ETC__q108 =
	      guard__h112081 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h112081)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
	      (guard__h112081 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h112081 == 2'b01 || guard__h112081 == 2'b10 ||
		 guard__h112081 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h121389 or requestR)
  begin
    case (guard__h121389)
      2'b0, 2'b01, 2'b10:
	  CASE_guard21389_0b0_requestR_BITS_191_TO_160_E_ETC__q110 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard21389_0b0_requestR_BITS_191_TO_160_E_ETC__q110 =
	      guard__h121389 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h121389)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
	      (guard__h121389 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h121389 == 2'b01 || guard__h121389 == 2'b10 ||
		 guard__h121389 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h130456 or requestR)
  begin
    case (guard__h130456)
      2'b0, 2'b01, 2'b10:
	  CASE_guard30456_0b0_requestR_BITS_191_TO_160_E_ETC__q112 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard30456_0b0_requestR_BITS_191_TO_160_E_ETC__q112 =
	      guard__h130456 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h130456)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
	      (guard__h130456 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h130456 == 2'b01 || guard__h130456 == 2'b10 ||
		 guard__h130456 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h112081 or
	  _theResult___snd__h119993 or _theResult___sfd__h120698)
  begin
    case (guard__h112081)
      2'b0:
	  CASE_guard12081_0b0_theResult___snd19993_BITS__ETC__q114 =
	      _theResult___snd__h119993[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard12081_0b0_theResult___snd19993_BITS__ETC__q114 =
	      _theResult___sfd__h120698;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h119993 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3590 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3588 or
	  CASE_guard12081_0b0_theResult___snd19993_BITS__ETC__q114)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3594 =
	      _theResult___snd__h119993[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3594 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3590;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3594 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3588;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3594 =
	      CASE_guard12081_0b0_theResult___snd19993_BITS__ETC__q114;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3594 =
		   52'd0;
    endcase
  end
  always@(guard__h112081 or
	  _theResult___snd__h119993 or
	  out_sfd__h120701 or _theResult___sfd__h120698)
  begin
    case (guard__h112081)
      2'b0, 2'b01:
	  CASE_guard12081_0b0_theResult___snd19993_BITS__ETC__q115 =
	      _theResult___snd__h119993[56:5];
      2'b10:
	  CASE_guard12081_0b0_theResult___snd19993_BITS__ETC__q115 =
	      out_sfd__h120701;
      2'b11:
	  CASE_guard12081_0b0_theResult___snd19993_BITS__ETC__q115 =
	      _theResult___sfd__h120698;
    endcase
  end
  always@(guard__h121389 or sfdin__h129609 or _theResult___sfd__h130345)
  begin
    case (guard__h121389)
      2'b0:
	  CASE_guard21389_0b0_sfdin29609_BITS_56_TO_5_0b_ETC__q116 =
	      sfdin__h129609[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard21389_0b0_sfdin29609_BITS_56_TO_5_0b_ETC__q116 =
	      _theResult___sfd__h130345;
    endcase
  end
  always@(requestR or
	  sfdin__h129609 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3617 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3615 or
	  CASE_guard21389_0b0_sfdin29609_BITS_56_TO_5_0b_ETC__q116)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3621 =
	      sfdin__h129609[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3621 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3617;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3621 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3615;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3621 =
	      CASE_guard21389_0b0_sfdin29609_BITS_56_TO_5_0b_ETC__q116;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3621 =
		   52'd0;
    endcase
  end
  always@(guard__h121389 or
	  sfdin__h129609 or out_sfd__h130348 or _theResult___sfd__h130345)
  begin
    case (guard__h121389)
      2'b0, 2'b01:
	  CASE_guard21389_0b0_sfdin29609_BITS_56_TO_5_0b_ETC__q117 =
	      sfdin__h129609[56:5];
      2'b10:
	  CASE_guard21389_0b0_sfdin29609_BITS_56_TO_5_0b_ETC__q117 =
	      out_sfd__h130348;
      2'b11:
	  CASE_guard21389_0b0_sfdin29609_BITS_56_TO_5_0b_ETC__q117 =
	      _theResult___sfd__h130345;
    endcase
  end
  always@(guard__h130456 or
	  _theResult___snd__h138392 or _theResult___sfd__h139127)
  begin
    case (guard__h130456)
      2'b0:
	  CASE_guard30456_0b0_theResult___snd38392_BITS__ETC__q118 =
	      _theResult___snd__h138392[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard30456_0b0_theResult___snd38392_BITS__ETC__q118 =
	      _theResult___sfd__h139127;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h138392 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3636 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3634 or
	  CASE_guard30456_0b0_theResult___snd38392_BITS__ETC__q118)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3640 =
	      _theResult___snd__h138392[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3640 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3636;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3640 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3634;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3640 =
	      CASE_guard30456_0b0_theResult___snd38392_BITS__ETC__q118;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3640 =
		   52'd0;
    endcase
  end
  always@(guard__h130456 or
	  _theResult___snd__h138392 or
	  out_sfd__h139130 or _theResult___sfd__h139127)
  begin
    case (guard__h130456)
      2'b0, 2'b01:
	  CASE_guard30456_0b0_theResult___snd38392_BITS__ETC__q119 =
	      _theResult___snd__h138392[56:5];
      2'b10:
	  CASE_guard30456_0b0_theResult___snd38392_BITS__ETC__q119 =
	      out_sfd__h139130;
      2'b11:
	  CASE_guard30456_0b0_theResult___snd38392_BITS__ETC__q119 =
	      _theResult___sfd__h139127;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        stateR <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (stateR$EN) stateR <= `BSV_ASSIGNMENT_DELAY stateR$D_IN;
      end
    if (requestR$EN) requestR <= `BSV_ASSIGNMENT_DELAY requestR$D_IN;
    if (resultR$EN) resultR <= `BSV_ASSIGNMENT_DELAY resultR$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    requestR = 215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    resultR = 70'h2AAAAAAAAAAAAAAAAA;
    stateR = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkFBox_Core

