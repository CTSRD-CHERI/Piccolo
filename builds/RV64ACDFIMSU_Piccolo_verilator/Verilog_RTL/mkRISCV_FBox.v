//
// Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
//
// On Fri Jan 18 12:49:19 EST 2019
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// valid                          O     1
// word_fst                       O    64
// word_snd                       O     5
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_opcode                     I     7 reg
// req_f7                         I     7 reg
// req_rm                         I     3 reg
// req_rs2                        I     5 reg
// req_v1                         I    64 reg
// req_v2                         I    64 reg
// req_v3                         I    64 reg
// EN_set_verbosity               I     1
// EN_req                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkRISCV_FBox(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    req_opcode,
		    req_f7,
		    req_rm,
		    req_rs2,
		    req_v1,
		    req_v2,
		    req_v3,
		    EN_req,

		    valid,

		    word_fst,

		    word_snd);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method req
  input  [6 : 0] req_opcode;
  input  [6 : 0] req_f7;
  input  [2 : 0] req_rm;
  input  [4 : 0] req_rs2;
  input  [63 : 0] req_v1;
  input  [63 : 0] req_v2;
  input  [63 : 0] req_v3;
  input  EN_req;

  // value method valid
  output valid;

  // value method word_fst
  output [63 : 0] word_fst;

  // value method word_snd
  output [4 : 0] word_snd;

  // signals for module outputs
  wire [63 : 0] word_fst;
  wire [4 : 0] word_snd;
  wire RDY_set_verbosity, valid;

  // inlined wires
  reg [68 : 0] dw_result$wget;
  wire dw_valid$wget, dw_valid$whas;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register requestR
  reg [214 : 0] requestR;
  wire [214 : 0] requestR$D_IN;
  wire requestR$EN;

  // register resultR
  reg [69 : 0] resultR;
  reg [69 : 0] resultR$D_IN;
  wire resultR$EN;

  // register stateR
  reg [1 : 0] stateR;
  reg [1 : 0] stateR$D_IN;
  wire stateR$EN;

  // ports of submodule fpu
  reg [201 : 0] fpu$request_put;
  wire [69 : 0] fpu$response_get;
  wire fpu$EN_request_put,
       fpu$EN_response_get,
       fpu$RDY_request_put,
       fpu$RDY_response_get;

  // ports of submodule frmFpuF
  wire frmFpuF$CLR, frmFpuF$DEQ, frmFpuF$D_IN, frmFpuF$ENQ;

  // rule scheduling signals
  wire CAN_FIRE_RL_doFADD_D,
       CAN_FIRE_RL_doFADD_S,
       CAN_FIRE_RL_doFCLASS_D,
       CAN_FIRE_RL_doFCLASS_S,
       CAN_FIRE_RL_doFCVT_D_L,
       CAN_FIRE_RL_doFCVT_D_LU,
       CAN_FIRE_RL_doFCVT_D_S,
       CAN_FIRE_RL_doFCVT_D_W,
       CAN_FIRE_RL_doFCVT_D_WU,
       CAN_FIRE_RL_doFCVT_LU_D,
       CAN_FIRE_RL_doFCVT_LU_S,
       CAN_FIRE_RL_doFCVT_L_D,
       CAN_FIRE_RL_doFCVT_L_S,
       CAN_FIRE_RL_doFCVT_S_D,
       CAN_FIRE_RL_doFCVT_S_L,
       CAN_FIRE_RL_doFCVT_S_LU,
       CAN_FIRE_RL_doFCVT_S_W,
       CAN_FIRE_RL_doFCVT_S_WU,
       CAN_FIRE_RL_doFCVT_WU_D,
       CAN_FIRE_RL_doFCVT_WU_S,
       CAN_FIRE_RL_doFCVT_W_D,
       CAN_FIRE_RL_doFCVT_W_S,
       CAN_FIRE_RL_doFEQ_D,
       CAN_FIRE_RL_doFEQ_S,
       CAN_FIRE_RL_doFLE_D,
       CAN_FIRE_RL_doFLE_S,
       CAN_FIRE_RL_doFLT_D,
       CAN_FIRE_RL_doFLT_S,
       CAN_FIRE_RL_doFMADD_D,
       CAN_FIRE_RL_doFMADD_S,
       CAN_FIRE_RL_doFMAX_D,
       CAN_FIRE_RL_doFMAX_S,
       CAN_FIRE_RL_doFMIN_D,
       CAN_FIRE_RL_doFMIN_S,
       CAN_FIRE_RL_doFMSUB_D,
       CAN_FIRE_RL_doFMSUB_S,
       CAN_FIRE_RL_doFMUL_D,
       CAN_FIRE_RL_doFMUL_S,
       CAN_FIRE_RL_doFMV_D_X,
       CAN_FIRE_RL_doFMV_W_X,
       CAN_FIRE_RL_doFMV_X_D,
       CAN_FIRE_RL_doFMV_X_W,
       CAN_FIRE_RL_doFNMADD_D,
       CAN_FIRE_RL_doFNMADD_S,
       CAN_FIRE_RL_doFNMSUB_D,
       CAN_FIRE_RL_doFNMSUB_S,
       CAN_FIRE_RL_doFSGNJN_D,
       CAN_FIRE_RL_doFSGNJN_S,
       CAN_FIRE_RL_doFSGNJX_D,
       CAN_FIRE_RL_doFSGNJX_S,
       CAN_FIRE_RL_doFSGNJ_D,
       CAN_FIRE_RL_doFSGNJ_S,
       CAN_FIRE_RL_doFSUB_D,
       CAN_FIRE_RL_doFSUB_S,
       CAN_FIRE_RL_rl_drive_fpu_result,
       CAN_FIRE_RL_rl_get_fpu_result,
       CAN_FIRE_req,
       CAN_FIRE_set_verbosity,
       WILL_FIRE_RL_doFADD_D,
       WILL_FIRE_RL_doFADD_S,
       WILL_FIRE_RL_doFCLASS_D,
       WILL_FIRE_RL_doFCLASS_S,
       WILL_FIRE_RL_doFCVT_D_L,
       WILL_FIRE_RL_doFCVT_D_LU,
       WILL_FIRE_RL_doFCVT_D_S,
       WILL_FIRE_RL_doFCVT_D_W,
       WILL_FIRE_RL_doFCVT_D_WU,
       WILL_FIRE_RL_doFCVT_LU_D,
       WILL_FIRE_RL_doFCVT_LU_S,
       WILL_FIRE_RL_doFCVT_L_D,
       WILL_FIRE_RL_doFCVT_L_S,
       WILL_FIRE_RL_doFCVT_S_D,
       WILL_FIRE_RL_doFCVT_S_L,
       WILL_FIRE_RL_doFCVT_S_LU,
       WILL_FIRE_RL_doFCVT_S_W,
       WILL_FIRE_RL_doFCVT_S_WU,
       WILL_FIRE_RL_doFCVT_WU_D,
       WILL_FIRE_RL_doFCVT_WU_S,
       WILL_FIRE_RL_doFCVT_W_D,
       WILL_FIRE_RL_doFCVT_W_S,
       WILL_FIRE_RL_doFEQ_D,
       WILL_FIRE_RL_doFEQ_S,
       WILL_FIRE_RL_doFLE_D,
       WILL_FIRE_RL_doFLE_S,
       WILL_FIRE_RL_doFLT_D,
       WILL_FIRE_RL_doFLT_S,
       WILL_FIRE_RL_doFMADD_D,
       WILL_FIRE_RL_doFMADD_S,
       WILL_FIRE_RL_doFMAX_D,
       WILL_FIRE_RL_doFMAX_S,
       WILL_FIRE_RL_doFMIN_D,
       WILL_FIRE_RL_doFMIN_S,
       WILL_FIRE_RL_doFMSUB_D,
       WILL_FIRE_RL_doFMSUB_S,
       WILL_FIRE_RL_doFMUL_D,
       WILL_FIRE_RL_doFMUL_S,
       WILL_FIRE_RL_doFMV_D_X,
       WILL_FIRE_RL_doFMV_W_X,
       WILL_FIRE_RL_doFMV_X_D,
       WILL_FIRE_RL_doFMV_X_W,
       WILL_FIRE_RL_doFNMADD_D,
       WILL_FIRE_RL_doFNMADD_S,
       WILL_FIRE_RL_doFNMSUB_D,
       WILL_FIRE_RL_doFNMSUB_S,
       WILL_FIRE_RL_doFSGNJN_D,
       WILL_FIRE_RL_doFSGNJN_S,
       WILL_FIRE_RL_doFSGNJX_D,
       WILL_FIRE_RL_doFSGNJX_S,
       WILL_FIRE_RL_doFSGNJ_D,
       WILL_FIRE_RL_doFSGNJ_S,
       WILL_FIRE_RL_doFSUB_D,
       WILL_FIRE_RL_doFSUB_S,
       WILL_FIRE_RL_rl_drive_fpu_result,
       WILL_FIRE_RL_rl_get_fpu_result,
       WILL_FIRE_req,
       WILL_FIRE_set_verbosity;

  // inputs to muxes for submodule ports
  wire [201 : 0] MUX_fpu$request_put_1__VAL_1,
		 MUX_fpu$request_put_1__VAL_10,
		 MUX_fpu$request_put_1__VAL_11,
		 MUX_fpu$request_put_1__VAL_12,
		 MUX_fpu$request_put_1__VAL_13,
		 MUX_fpu$request_put_1__VAL_14,
		 MUX_fpu$request_put_1__VAL_2,
		 MUX_fpu$request_put_1__VAL_3,
		 MUX_fpu$request_put_1__VAL_4,
		 MUX_fpu$request_put_1__VAL_5,
		 MUX_fpu$request_put_1__VAL_6,
		 MUX_fpu$request_put_1__VAL_7,
		 MUX_fpu$request_put_1__VAL_8,
		 MUX_fpu$request_put_1__VAL_9;
  wire [69 : 0] MUX_resultR$write_1__VAL_10,
		MUX_resultR$write_1__VAL_11,
		MUX_resultR$write_1__VAL_12,
		MUX_resultR$write_1__VAL_13,
		MUX_resultR$write_1__VAL_14,
		MUX_resultR$write_1__VAL_15,
		MUX_resultR$write_1__VAL_16,
		MUX_resultR$write_1__VAL_17,
		MUX_resultR$write_1__VAL_18,
		MUX_resultR$write_1__VAL_19,
		MUX_resultR$write_1__VAL_2,
		MUX_resultR$write_1__VAL_20,
		MUX_resultR$write_1__VAL_21,
		MUX_resultR$write_1__VAL_22,
		MUX_resultR$write_1__VAL_23,
		MUX_resultR$write_1__VAL_24,
		MUX_resultR$write_1__VAL_25,
		MUX_resultR$write_1__VAL_26,
		MUX_resultR$write_1__VAL_27,
		MUX_resultR$write_1__VAL_28,
		MUX_resultR$write_1__VAL_29,
		MUX_resultR$write_1__VAL_3,
		MUX_resultR$write_1__VAL_30,
		MUX_resultR$write_1__VAL_31,
		MUX_resultR$write_1__VAL_32,
		MUX_resultR$write_1__VAL_33,
		MUX_resultR$write_1__VAL_34,
		MUX_resultR$write_1__VAL_35,
		MUX_resultR$write_1__VAL_36,
		MUX_resultR$write_1__VAL_37,
		MUX_resultR$write_1__VAL_38,
		MUX_resultR$write_1__VAL_39,
		MUX_resultR$write_1__VAL_40,
		MUX_resultR$write_1__VAL_41,
		MUX_resultR$write_1__VAL_42,
		MUX_resultR$write_1__VAL_5,
		MUX_resultR$write_1__VAL_6,
		MUX_resultR$write_1__VAL_7,
		MUX_resultR$write_1__VAL_8,
		MUX_resultR$write_1__VAL_9;
  wire [68 : 0] MUX_dw_result$wset_1__VAL_1,
		MUX_dw_result$wset_1__VAL_10,
		MUX_dw_result$wset_1__VAL_11,
		MUX_dw_result$wset_1__VAL_12,
		MUX_dw_result$wset_1__VAL_13,
		MUX_dw_result$wset_1__VAL_14,
		MUX_dw_result$wset_1__VAL_15,
		MUX_dw_result$wset_1__VAL_16,
		MUX_dw_result$wset_1__VAL_17,
		MUX_dw_result$wset_1__VAL_18,
		MUX_dw_result$wset_1__VAL_19,
		MUX_dw_result$wset_1__VAL_2,
		MUX_dw_result$wset_1__VAL_20,
		MUX_dw_result$wset_1__VAL_21,
		MUX_dw_result$wset_1__VAL_22,
		MUX_dw_result$wset_1__VAL_23,
		MUX_dw_result$wset_1__VAL_24,
		MUX_dw_result$wset_1__VAL_25,
		MUX_dw_result$wset_1__VAL_26,
		MUX_dw_result$wset_1__VAL_27,
		MUX_dw_result$wset_1__VAL_28,
		MUX_dw_result$wset_1__VAL_29,
		MUX_dw_result$wset_1__VAL_3,
		MUX_dw_result$wset_1__VAL_30,
		MUX_dw_result$wset_1__VAL_31,
		MUX_dw_result$wset_1__VAL_32,
		MUX_dw_result$wset_1__VAL_33,
		MUX_dw_result$wset_1__VAL_34,
		MUX_dw_result$wset_1__VAL_35,
		MUX_dw_result$wset_1__VAL_36,
		MUX_dw_result$wset_1__VAL_37,
		MUX_dw_result$wset_1__VAL_38,
		MUX_dw_result$wset_1__VAL_39,
		MUX_dw_result$wset_1__VAL_4,
		MUX_dw_result$wset_1__VAL_40,
		MUX_dw_result$wset_1__VAL_5,
		MUX_dw_result$wset_1__VAL_6,
		MUX_dw_result$wset_1__VAL_7,
		MUX_dw_result$wset_1__VAL_8,
		MUX_dw_result$wset_1__VAL_9;
  wire MUX_dw_result$wset_1__SEL_1,
       MUX_dw_result$wset_1__SEL_2,
       MUX_dw_result$wset_1__SEL_38;

  // remaining internal signals
  reg [51 : 0] CASE_guard0080_0b0_sfd___39383_BITS_53_TO_2_0b_ETC__q63,
	       CASE_guard0499_0b0_sfd___39801_BITS_53_TO_2_0b_ETC__q54,
	       CASE_guard3115_0b0_sfd___31833_BITS_63_TO_12_0_ETC__q71,
	       CASE_guard3803_0b0_sfd___31833_BITS_62_TO_11_0_ETC__q73,
	       CASE_guard4013_0b0_sfd___32341_BITS_63_TO_12_0_ETC__q79,
	       CASE_guard4700_0b0_sfd___32341_BITS_62_TO_11_0_ETC__q78,
	       CASE_guard59820_0b0_theResult___snd67732_BITS__ETC__q126,
	       CASE_guard69056_0b0_sfdin77276_BITS_56_TO_5_0b_ETC__q128,
	       CASE_guard78081_0b0_theResult___snd86017_BITS__ETC__q130,
	       CASE_guard9393_0b0_sfd___39383_BITS_54_TO_3_0b_ETC__q64,
	       CASE_guard9811_0b0_sfd___39801_BITS_54_TO_3_0b_ETC__q56,
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q55,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q57,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin77276_B_ETC__q129,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2436,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2448,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2903,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2915;
  reg [22 : 0] CASE_guard10387_0b0_sfdin18478_BITS_56_TO_34_0_ETC__q100,
	       CASE_guard1843_0b0_sfd___31833_BITS_63_TO_41_0_ETC__q14,
	       CASE_guard19080_0b0_theResult___snd27079_BITS__ETC__q102,
	       CASE_guard2331_0b0_sfd___31833_BITS_62_TO_40_0_ETC__q12,
	       CASE_guard2351_0b0_sfd___32341_BITS_63_TO_41_0_ETC__q28,
	       CASE_guard27997_0b0_sfdin36217_BITS_56_TO_34_0_ETC__q104,
	       CASE_guard2835_0b0_sfd___32341_BITS_62_TO_40_0_ETC__q24,
	       CASE_guard36819_0b0_theResult___snd44842_BITS__ETC__q106,
	       CASE_guard4721_0b0_sfd___34711_BITS_31_TO_9_0b_ETC__q43,
	       CASE_guard5205_0b0_sfd___34711_BITS_30_TO_8_0b_ETC__q42,
	       CASE_guard8664_0b0_sfd___38654_BITS_31_TO_9_0b_ETC__q31,
	       CASE_guard9149_0b0_sfd___38654_BITS_30_TO_8_0b_ETC__q33,
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin18478_B_ETC__q101,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin36217_B_ETC__q105,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1536,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1548,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d969,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d981;
  reg [10 : 0] CASE_guard0080_0b0_x0095_BITS_10_TO_0_0b1_x009_ETC__q62,
	       CASE_guard0499_0b0_x0514_BITS_10_TO_0_0b1_x051_ETC__q52,
	       CASE_guard3115_0b0_0_0b1_0_0b10_out_exp3731_0b_ETC__q75,
	       CASE_guard3803_0b0_x3818_BITS_10_TO_0_0b1_x381_ETC__q69,
	       CASE_guard4013_0b0_0_0b1_0_0b10_out_exp4629_0b_ETC__q76,
	       CASE_guard4700_0b0_x4715_BITS_10_TO_0_0b1_x471_ETC__q77,
	       CASE_guard59820_0b0_theResult___fst_exp67781_0_ETC__q114,
	       CASE_guard69056_0b0_theResult___fst_exp77282_0_ETC__q119,
	       CASE_guard78081_0b0_theResult___fst_exp86071_0_ETC__q124,
	       CASE_guard9393_0b0_0_0b1_0_0b10_out_exp0009_0b_ETC__q61,
	       CASE_guard9811_0b0_0_0b1_0_0b10_out_exp0427_0b_ETC__q58,
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q115,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q120,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125,
	       CASE_requestR_BITS_194_TO_192_0x1_x0514_BITS_1_ETC__q53,
	       CASE_requestR_BITS_194_TO_192_0x1_x3818_BITS_1_ETC__q70,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2220,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2417,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2717,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2883;
  reg [7 : 0] CASE_guard10387_0b0_theResult___fst_exp18484_0_ETC__q84,
	      CASE_guard1843_0b0_0_0b1_0_0b10_out_exp2259_0b_ETC__q18,
	      CASE_guard19080_0b0_theResult___fst_exp27128_0_ETC__q88,
	      CASE_guard2331_0b0_x2346_BITS_7_TO_0_0b1_x2346_ETC__q10,
	      CASE_guard2351_0b0_0_0b1_0_0b10_out_exp2764_0b_ETC__q25,
	      CASE_guard27997_0b0_theResult___fst_exp36223_0_ETC__q93,
	      CASE_guard2835_0b0_x2850_BITS_7_TO_0_0b1_x2850_ETC__q23,
	      CASE_guard36819_0b0_theResult___fst_exp44896_0_ETC__q98,
	      CASE_guard4721_0b0_0_0b1_0_0b10_out_exp5134_0b_ETC__q40,
	      CASE_guard5205_0b0_x5220_BITS_7_TO_0_0b1_x5220_ETC__q41,
	      CASE_guard8664_0b0_0_0b1_0_0b10_out_exp9077_0b_ETC__q37,
	      CASE_guard9149_0b0_x9164_BITS_7_TO_0_0b1_x9164_ETC__q29,
	      CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q94,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99,
	      CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11,
	      CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1283,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1516,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d462,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d949;
  reg [2 : 0] IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38;
  reg CASE_guard0499_0b0_requestR_BIT_159_0b1_reques_ETC__q51,
      CASE_guard10387_0b0_requestR_BIT_191_0b1_reque_ETC__q108,
      CASE_guard1843_0b0_requestR_BIT_191_0b1_reques_ETC__q16,
      CASE_guard19080_0b0_requestR_BIT_191_0b1_reque_ETC__q109,
      CASE_guard2331_0b0_requestR_BIT_191_0b1_reques_ETC__q17,
      CASE_guard27997_0b0_requestR_BIT_191_0b1_reque_ETC__q110,
      CASE_guard3115_0b0_requestR_BIT_191_0b1_reques_ETC__q67,
      CASE_guard36819_0b0_requestR_BIT_191_0b1_reque_ETC__q111,
      CASE_guard3803_0b0_requestR_BIT_191_0b1_reques_ETC__q68,
      CASE_guard59820_0b0_requestR_BITS_191_TO_160_E_ETC__q132,
      CASE_guard69056_0b0_requestR_BITS_191_TO_160_E_ETC__q133,
      CASE_guard78081_0b0_requestR_BITS_191_TO_160_E_ETC__q134,
      CASE_guard8664_0b0_requestR_BIT_159_0b1_reques_ETC__q35,
      CASE_guard9149_0b0_requestR_BIT_159_0b1_reques_ETC__q36,
      CASE_guard9811_0b0_requestR_BIT_159_0b1_reques_ETC__q50,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4818;
  wire [117 : 0] IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2953,
		 b__h96032,
		 x__h96929,
		 x__h98225;
  wire [88 : 0] IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1609,
		b__h36338,
		x__h37235,
		x__h38548;
  wire [85 : 0] IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2502,
		b__h71415,
		x__h72088,
		x__h73163;
  wire [68 : 0] ab__h205220;
  wire [64 : 0] _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
		_theResult_____2__h36276,
		_theResult_____2__h95970,
		out1___1__h36989,
		out1___1__h96683;
  wire [63 : 0] IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1960,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1976,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1668,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1727,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1959,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1961,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1975,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1977,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2047,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2048,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1664,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1666,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1725,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3008,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3010,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3063,
		IF_requestR_BITS_126_TO_116_929_EQ_2047_930_AN_ETC___d4977,
		IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d3065,
		IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d4991,
		IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d5062,
		IF_requestR_BITS_190_TO_180_481_EQ_2047_482_AN_ETC___d3012,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1597,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1729,
		IF_requestR_BIT_191_25_THEN_922337203685477580_ETC___d2949,
		res___1__h204129,
		res___1__h204567,
		res___1__h204577,
		res___1__h204596,
		res___1__h50260,
		res___1__h50496,
		res___1__h50506,
		res___1__h50525,
		res__h145876,
		res__h187413,
		res__h191837,
		res__h196385,
		res__h199089,
		res__h201784,
		res__h203661,
		res__h204612,
		res__h204793,
		res__h41864,
		res__h42101,
		res__h47473,
		res__h48956,
		res__h50025,
		res__h50541,
		sfd___3__h11833,
		sfd___3__h22341,
		sfd__h2228,
		x__h13255,
		x__h146958,
		x__h1779,
		x__h188420,
		x__h1925,
		x__h192968,
		x__h197412,
		x__h200107,
		x__h201984,
		x__h204111,
		x__h204761,
		x__h2059,
		x__h2207,
		x__h23729,
		x__h30070,
		x__h36098,
		x__h38130,
		x__h38869,
		x__h40439,
		x__h41186,
		x__h43820,
		x__h46345,
		x__h46466,
		x__h46604,
		x__h48087,
		x__h49156,
		x__h50242,
		x__h51409,
		x__h51531,
		x__h51655,
		x__h51785,
		x__h61619,
		x__h71172,
		x__h72742,
		x__h73485,
		x__h84923,
		x__h95792,
		x__h97807,
		x__h98547;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q82,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q117,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q91,
		IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q112,
		IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q122,
		IF_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_ETC__q86,
		IF_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_ETC__q96,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1758,
		_0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d4364,
		_0b0_CONCAT_NOT_requestR_BITS_190_TO_180_481_EQ_ETC___d3571,
		_theResult____h110377,
		_theResult____h127987,
		_theResult____h169046,
		_theResult___snd__h118495,
		_theResult___snd__h118506,
		_theResult___snd__h118508,
		_theResult___snd__h118518,
		_theResult___snd__h118524,
		_theResult___snd__h118547,
		_theResult___snd__h127079,
		_theResult___snd__h127081,
		_theResult___snd__h127088,
		_theResult___snd__h127094,
		_theResult___snd__h127117,
		_theResult___snd__h136234,
		_theResult___snd__h136245,
		_theResult___snd__h136247,
		_theResult___snd__h136257,
		_theResult___snd__h136263,
		_theResult___snd__h136286,
		_theResult___snd__h144842,
		_theResult___snd__h144856,
		_theResult___snd__h144862,
		_theResult___snd__h144880,
		_theResult___snd__h167732,
		_theResult___snd__h167734,
		_theResult___snd__h167741,
		_theResult___snd__h167747,
		_theResult___snd__h167770,
		_theResult___snd__h177293,
		_theResult___snd__h177304,
		_theResult___snd__h177306,
		_theResult___snd__h177316,
		_theResult___snd__h177322,
		_theResult___snd__h177345,
		_theResult___snd__h186017,
		_theResult___snd__h186031,
		_theResult___snd__h186037,
		_theResult___snd__h186055,
		b__h39112,
		result__h128600,
		result__h169659,
		sfd__h102777,
		sfdin__h118478,
		sfdin__h136217,
		sfdin__h177276,
		x__h128695,
		x__h169754,
		x__h39785,
		x__h40860;
  wire [54 : 0] sfd___3__h59801, sfd___3__h69383, sfd__h51800, sfd__h61631;
  wire [53 : 0] sfd__h167799,
		sfd__h177374,
		sfd__h186090,
		sfd__h59828,
		sfd__h60529,
		sfd__h69410,
		sfd__h70110,
		sfd__h83132,
		sfd__h83833,
		sfd__h94030,
		sfd__h94730,
		value__h71417;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4779,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4781,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4755,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4757,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4795,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4797,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2261,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2263,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2276,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2278,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2758,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2760,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2773,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2775,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4807,
		IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2285,
		IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2452,
		_theResult___fst_sfd__h152733,
		_theResult___fst_sfd__h168493,
		_theResult___fst_sfd__h168496,
		_theResult___fst_sfd__h178068,
		_theResult___fst_sfd__h178071,
		_theResult___fst_sfd__h186808,
		_theResult___fst_sfd__h186811,
		_theResult___fst_sfd__h186820,
		_theResult___fst_sfd__h186826,
		_theResult___fst_sfd__h60483,
		_theResult___fst_sfd__h61197,
		_theResult___fst_sfd__h61200,
		_theResult___fst_sfd__h70064,
		_theResult___fst_sfd__h70777,
		_theResult___fst_sfd__h70780,
		_theResult___fst_sfd__h83787,
		_theResult___fst_sfd__h84501,
		_theResult___fst_sfd__h84504,
		_theResult___fst_sfd__h94684,
		_theResult___fst_sfd__h95397,
		_theResult___fst_sfd__h95400,
		_theResult___fst_sfd__h99073,
		_theResult___sfd__h168434,
		_theResult___sfd__h178009,
		_theResult___sfd__h186749,
		_theResult___sfd__h60425,
		_theResult___sfd__h61139,
		_theResult___sfd__h70007,
		_theResult___sfd__h70720,
		_theResult___sfd__h83729,
		_theResult___sfd__h84443,
		_theResult___sfd__h94627,
		_theResult___sfd__h95340,
		_theResult___snd_fst_sfd__h148909,
		_theResult___snd_fst_sfd__h168499,
		_theResult___snd_fst_sfd__h186814,
		_theResult___snd_fst_sfd__h61203,
		_theResult___snd_fst_sfd__h70783,
		_theResult___snd_fst_sfd__h84507,
		_theResult___snd_fst_sfd__h95403,
		out___1_sfd__h147023,
		out_sfd__h168437,
		out_sfd__h178012,
		out_sfd__h186752,
		out_sfd__h60428,
		out_sfd__h61142,
		out_sfd__h70010,
		out_sfd__h70723,
		out_sfd__h83732,
		out_sfd__h84446,
		out_sfd__h94630,
		out_sfd__h95343,
		value__h98616;
  wire [32 : 0] _theResult_____2__h39050,
		_theResult_____2__h71353,
		out1___1__h39539,
		out1___1__h71842;
  wire [31 : 0] IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1956,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1970,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1972,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1817,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1871,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1957,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1973,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1813,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1815,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1869,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2557,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2559,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2619,
		IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1954,
		IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1969,
		IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d2621,
		IF_requestR_BITS_190_TO_180_481_EQ_2047_482_AN_ETC___d2561,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1754,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1873,
		IF_requestR_BIT_191_25_THEN_2147483648_ELSE_21_ETC___d2490,
		requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
		requestR_BITS_159_TO_128__q1,
		sfd___3__h28654,
		sfd___3__h34711,
		sfd__h23750,
		x__h145882,
		x__h1785,
		x__h1931,
		x__h2065,
		x__h2213,
		x__h23735,
		x__h38872,
		x__h40442,
		x__h71175,
		x__h72745;
  wire [30 : 0] IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19;
  wire [24 : 0] sfd__h118576,
		sfd__h11860,
		sfd__h12361,
		sfd__h127146,
		sfd__h136315,
		sfd__h144915,
		sfd__h22368,
		sfd__h22865,
		sfd__h28681,
		sfd__h29179,
		sfd__h34738,
		sfd__h35235,
		value__h36340;
  wire [23 : 0] NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2495,
		NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2527,
		NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2528,
		NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2592,
		NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2978,
		NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2979,
		NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3036;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3961,
		IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3963,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4001,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4003,
		IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3977,
		IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3979,
		IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d4017,
		IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d4019,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1324,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1326,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1339,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1341,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d503,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d505,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d518,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d520,
		IF_requestR_BITS_190_TO_180_481_EQ_2047_482_AN_ETC___d4029,
		_theResult___fst_sfd__h110360,
		_theResult___fst_sfd__h119067,
		_theResult___fst_sfd__h119070,
		_theResult___fst_sfd__h12315,
		_theResult___fst_sfd__h127637,
		_theResult___fst_sfd__h127640,
		_theResult___fst_sfd__h12826,
		_theResult___fst_sfd__h12829,
		_theResult___fst_sfd__h136806,
		_theResult___fst_sfd__h136809,
		_theResult___fst_sfd__h145430,
		_theResult___fst_sfd__h145433,
		_theResult___fst_sfd__h145442,
		_theResult___fst_sfd__h145448,
		_theResult___fst_sfd__h147281,
		_theResult___fst_sfd__h22819,
		_theResult___fst_sfd__h23329,
		_theResult___fst_sfd__h23332,
		_theResult___fst_sfd__h29133,
		_theResult___fst_sfd__h29644,
		_theResult___fst_sfd__h29647,
		_theResult___fst_sfd__h35189,
		_theResult___fst_sfd__h35699,
		_theResult___fst_sfd__h35702,
		_theResult___sfd__h119008,
		_theResult___sfd__h12257,
		_theResult___sfd__h127578,
		_theResult___sfd__h12768,
		_theResult___sfd__h136747,
		_theResult___sfd__h145371,
		_theResult___sfd__h22762,
		_theResult___sfd__h23272,
		_theResult___sfd__h29075,
		_theResult___sfd__h29586,
		_theResult___sfd__h35132,
		_theResult___sfd__h35642,
		_theResult___snd_fst_sfd__h102731,
		_theResult___snd_fst_sfd__h127643,
		_theResult___snd_fst_sfd__h12832,
		_theResult___snd_fst_sfd__h145436,
		_theResult___snd_fst_sfd__h23335,
		_theResult___snd_fst_sfd__h29650,
		_theResult___snd_fst_sfd__h35705,
		out_sfd__h119011,
		out_sfd__h12260,
		out_sfd__h127581,
		out_sfd__h12771,
		out_sfd__h136750,
		out_sfd__h145374,
		out_sfd__h22765,
		out_sfd__h23275,
		out_sfd__h29078,
		out_sfd__h29589,
		out_sfd__h35135,
		out_sfd__h35645,
		sV1_sfd__h824,
		sV2_sfd__h927,
		value__h147026;
  wire [19 : 0] NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1602,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1634,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1635,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1698,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1783,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1784,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1842;
  wire [11 : 0] IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4675,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4357,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q116,
		SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_493___d3564,
		SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC__q90,
		_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3147,
		_3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d4360,
		_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2153,
		_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2346,
		_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4219,
		_3970_MINUS_SEXT_requestR_BITS_190_TO_180_481_M_ETC___d3567,
		_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2651,
		_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2814,
		x__h128728,
		x__h169787,
		x__h60514,
		x__h70095,
		x__h83818,
		x__h94715;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4661,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4663,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4341,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4343,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4725,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4727,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2218,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2241,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2243,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2715,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2738,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2740,
		IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d2749,
		IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2379,
		IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2845,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q121,
		_theResult___exp__h168433,
		_theResult___exp__h178008,
		_theResult___exp__h186748,
		_theResult___exp__h60424,
		_theResult___exp__h61138,
		_theResult___exp__h70006,
		_theResult___exp__h70719,
		_theResult___exp__h83728,
		_theResult___exp__h84442,
		_theResult___exp__h94626,
		_theResult___exp__h95339,
		_theResult___fst_exp__h152732,
		_theResult___fst_exp__h167772,
		_theResult___fst_exp__h167778,
		_theResult___fst_exp__h167781,
		_theResult___fst_exp__h168492,
		_theResult___fst_exp__h168495,
		_theResult___fst_exp__h177282,
		_theResult___fst_exp__h177347,
		_theResult___fst_exp__h177353,
		_theResult___fst_exp__h177356,
		_theResult___fst_exp__h178067,
		_theResult___fst_exp__h178070,
		_theResult___fst_exp__h186023,
		_theResult___fst_exp__h186062,
		_theResult___fst_exp__h186068,
		_theResult___fst_exp__h186071,
		_theResult___fst_exp__h186807,
		_theResult___fst_exp__h186810,
		_theResult___fst_exp__h186819,
		_theResult___fst_exp__h186822,
		_theResult___fst_exp__h60482,
		_theResult___fst_exp__h61196,
		_theResult___fst_exp__h61199,
		_theResult___fst_exp__h70063,
		_theResult___fst_exp__h70776,
		_theResult___fst_exp__h70779,
		_theResult___fst_exp__h83786,
		_theResult___fst_exp__h84500,
		_theResult___fst_exp__h84503,
		_theResult___fst_exp__h94683,
		_theResult___fst_exp__h95396,
		_theResult___fst_exp__h95399,
		_theResult___snd_fst_exp__h168498,
		_theResult___snd_fst_exp__h186813,
		_theResult___snd_fst_exp__h61202,
		_theResult___snd_fst_exp__h61205,
		_theResult___snd_fst_exp__h61208,
		_theResult___snd_fst_exp__h70782,
		_theResult___snd_fst_exp__h70785,
		_theResult___snd_fst_exp__h70788,
		_theResult___snd_fst_exp__h84506,
		_theResult___snd_fst_exp__h84509,
		_theResult___snd_fst_exp__h84512,
		_theResult___snd_fst_exp__h95402,
		_theResult___snd_fst_exp__h95405,
		_theResult___snd_fst_exp__h95408,
		din_inc___2_exp__h186843,
		din_inc___2_exp__h186867,
		din_inc___2_exp__h186886,
		din_inc___2_exp__h61237,
		din_inc___2_exp__h70813,
		din_inc___2_exp__h84541,
		din_inc___2_exp__h95433,
		out_exp__h168436,
		out_exp__h178011,
		out_exp__h186751,
		out_exp__h60427,
		out_exp__h61141,
		out_exp__h70009,
		out_exp__h70722,
		out_exp__h83731,
		out_exp__h84445,
		out_exp__h94629,
		out_exp__h95342,
		requestR_BITS_190_TO_180_481_MINUS_1023___d2493,
		x__h146967;
  wire [8 : 0] IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d3880,
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213,
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446,
	       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385,
	       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878,
	       x__h12346,
	       x__h22850,
	       x__h29164,
	       x__h35220;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3436,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3438,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3866,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3868,
	       IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3548,
	       IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3550,
	       IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3930,
	       IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3932,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1281,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1304,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306,
	       IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d460,
	       IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d483,
	       IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d485,
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1315,
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1522,
	       IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d494,
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1600,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1478,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d910,
	       SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC__q95,
	       _theResult___exp__h119007,
	       _theResult___exp__h12256,
	       _theResult___exp__h127577,
	       _theResult___exp__h12767,
	       _theResult___exp__h136746,
	       _theResult___exp__h145370,
	       _theResult___exp__h22761,
	       _theResult___exp__h23271,
	       _theResult___exp__h29074,
	       _theResult___exp__h29585,
	       _theResult___exp__h35131,
	       _theResult___exp__h35641,
	       _theResult___fst_exp__h110359,
	       _theResult___fst_exp__h118484,
	       _theResult___fst_exp__h118549,
	       _theResult___fst_exp__h118555,
	       _theResult___fst_exp__h118558,
	       _theResult___fst_exp__h119066,
	       _theResult___fst_exp__h119069,
	       _theResult___fst_exp__h12314,
	       _theResult___fst_exp__h127119,
	       _theResult___fst_exp__h127125,
	       _theResult___fst_exp__h127128,
	       _theResult___fst_exp__h127636,
	       _theResult___fst_exp__h127639,
	       _theResult___fst_exp__h12825,
	       _theResult___fst_exp__h12828,
	       _theResult___fst_exp__h136223,
	       _theResult___fst_exp__h136288,
	       _theResult___fst_exp__h136294,
	       _theResult___fst_exp__h136297,
	       _theResult___fst_exp__h136805,
	       _theResult___fst_exp__h136808,
	       _theResult___fst_exp__h144848,
	       _theResult___fst_exp__h144887,
	       _theResult___fst_exp__h144893,
	       _theResult___fst_exp__h144896,
	       _theResult___fst_exp__h145429,
	       _theResult___fst_exp__h145432,
	       _theResult___fst_exp__h145441,
	       _theResult___fst_exp__h145444,
	       _theResult___fst_exp__h22818,
	       _theResult___fst_exp__h23328,
	       _theResult___fst_exp__h23331,
	       _theResult___fst_exp__h29132,
	       _theResult___fst_exp__h29643,
	       _theResult___fst_exp__h29646,
	       _theResult___fst_exp__h35188,
	       _theResult___fst_exp__h35698,
	       _theResult___fst_exp__h35701,
	       _theResult___snd_fst_exp__h127642,
	       _theResult___snd_fst_exp__h12831,
	       _theResult___snd_fst_exp__h12834,
	       _theResult___snd_fst_exp__h12837,
	       _theResult___snd_fst_exp__h145435,
	       _theResult___snd_fst_exp__h23334,
	       _theResult___snd_fst_exp__h23337,
	       _theResult___snd_fst_exp__h23340,
	       _theResult___snd_fst_exp__h29649,
	       _theResult___snd_fst_exp__h29652,
	       _theResult___snd_fst_exp__h29655,
	       _theResult___snd_fst_exp__h35704,
	       _theResult___snd_fst_exp__h35707,
	       _theResult___snd_fst_exp__h35710,
	       din_inc___2_exp__h12866,
	       din_inc___2_exp__h145462,
	       din_inc___2_exp__h145481,
	       din_inc___2_exp__h145505,
	       din_inc___2_exp__h145524,
	       din_inc___2_exp__h23365,
	       din_inc___2_exp__h29684,
	       din_inc___2_exp__h35735,
	       out_exp__h119010,
	       out_exp__h12259,
	       out_exp__h127580,
	       out_exp__h12770,
	       out_exp__h136749,
	       out_exp__h145373,
	       out_exp__h22764,
	       out_exp__h23274,
	       out_exp__h29077,
	       out_exp__h29588,
	       out_exp__h35134,
	       out_exp__h35644,
	       sV1_exp__h823,
	       sV2_exp__h926,
	       x__h98556;
  wire [6 : 0] IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_BI_ETC___d382,
	       IF_requestR_BIT_191_25_THEN_0_ELSE_IF_requestR_ETC___d875;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d3381,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d4606,
	       IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d3811,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4291,
	       IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1210,
	       IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d2150,
	       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d3498,
	       IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1443,
	       IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d2343;
  wire [4 : 0] _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4075,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4865,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4104,
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4848,
	       _0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d4087,
	       x__h12967,
	       x__h145975,
	       x__h187497,
	       x__h191969,
	       x__h201803,
	       x__h23444,
	       x__h29785,
	       x__h35814,
	       x__h37873,
	       x__h38626,
	       x__h40182,
	       x__h40938,
	       x__h43225,
	       x__h48975,
	       x__h61334,
	       x__h70888,
	       x__h72485,
	       x__h73241,
	       x__h84638,
	       x__h95508,
	       x__h97550,
	       x__h98303;
  wire [1 : 0] IF_sfd___31833_BIT_10_THEN_2_ELSE_0__q9,
	       IF_sfd___31833_BIT_11_THEN_2_ELSE_0__q8,
	       IF_sfd___31833_BIT_39_THEN_2_ELSE_0__q7,
	       IF_sfd___31833_BIT_40_THEN_2_ELSE_0__q6,
	       IF_sfd___32341_BIT_10_THEN_2_ELSE_0__q22,
	       IF_sfd___32341_BIT_11_THEN_2_ELSE_0__q21,
	       IF_sfd___32341_BIT_39_THEN_2_ELSE_0__q20,
	       IF_sfd___32341_BIT_40_THEN_2_ELSE_0__q19,
	       IF_sfd___34711_BIT_7_THEN_2_ELSE_0__q39,
	       IF_sfd___34711_BIT_8_THEN_2_ELSE_0__q38,
	       IF_sfd___38654_BIT_7_THEN_2_ELSE_0__q27,
	       IF_sfd___38654_BIT_8_THEN_2_ELSE_0__q26,
	       IF_sfd___39383_BIT_1_THEN_2_ELSE_0__q60,
	       IF_sfd___39383_BIT_2_THEN_2_ELSE_0__q59,
	       IF_sfd___39801_BIT_1_THEN_2_ELSE_0__q49,
	       IF_sfd___39801_BIT_2_THEN_2_ELSE_0__q48,
	       IF_sfdin18478_BIT_33_THEN_2_ELSE_0__q83,
	       IF_sfdin36217_BIT_33_THEN_2_ELSE_0__q92,
	       IF_sfdin77276_BIT_4_THEN_2_ELSE_0__q118,
	       IF_theResult___snd27079_BIT_33_THEN_2_ELSE_0__q87,
	       IF_theResult___snd44842_BIT_33_THEN_2_ELSE_0__q97,
	       IF_theResult___snd67732_BIT_4_THEN_2_ELSE_0__q113,
	       IF_theResult___snd86017_BIT_4_THEN_2_ELSE_0__q123,
	       IF_x0860_BIT_24_THEN_2_ELSE_0__q47,
	       IF_x2088_BIT_53_THEN_2_ELSE_0__q65,
	       IF_x3163_BIT_53_THEN_2_ELSE_0__q66,
	       IF_x6929_BIT_53_THEN_2_ELSE_0__q80,
	       IF_x7235_BIT_24_THEN_2_ELSE_0__q44,
	       IF_x8225_BIT_53_THEN_2_ELSE_0__q81,
	       IF_x8548_BIT_24_THEN_2_ELSE_0__q45,
	       IF_x9785_BIT_24_THEN_2_ELSE_0__q46,
	       guard__h110387,
	       guard__h11843,
	       guard__h119080,
	       guard__h12331,
	       guard__h127997,
	       guard__h136819,
	       guard__h159820,
	       guard__h169056,
	       guard__h178081,
	       guard__h22351,
	       guard__h22835,
	       guard__h28664,
	       guard__h29149,
	       guard__h34721,
	       guard__h35205,
	       guard__h36274,
	       guard__h37049,
	       guard__h38330,
	       guard__h39048,
	       guard__h39599,
	       guard__h40642,
	       guard__h59811,
	       guard__h60499,
	       guard__h69393,
	       guard__h70080,
	       guard__h71351,
	       guard__h71902,
	       guard__h72945,
	       guard__h83115,
	       guard__h83803,
	       guard__h94013,
	       guard__h94700,
	       guard__h95968,
	       guard__h96743,
	       guard__h98007;
  wire IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45__ETC___d4043,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1261,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1399,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2199,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2302,
       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1571,
       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d2469,
       IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2696,
       IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2801,
       IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d440,
       IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d610,
       IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d1067,
       IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d2938,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4834,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4869,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4872,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4879,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4893,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4905,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4917,
       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1689,
       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1833,
       IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2583,
       IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3027,
       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d2200,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d4820,
       IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1949,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4832,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4891,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4903,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4915,
       IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4055,
       IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4133,
       IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4146,
       IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4159,
       IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d1929,
       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4057,
       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4108,
       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4119,
       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4135,
       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4148,
       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4161,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1736,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1747,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1881,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1892,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1915,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1925,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1938,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1939,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1940,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1943,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1945,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1963,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2000,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2011,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2015,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1239,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1259,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1626,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1658,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1719,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1775,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1807,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1863,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2177,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2197,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2519,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2551,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2613,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2674,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2694,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2970,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3002,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3057,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4036,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4041,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4048,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4053,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d418,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d438,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4819,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4824,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4829,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1390,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1393,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1402,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2792,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2795,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2804,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d601,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d604,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d613,
       IF_requestR_BIT_191_25_THEN_NOT_requestR_BITS__ETC___d4970,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1637,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1700,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1786,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1844,
       NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2530,
       NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2594,
       NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2981,
       NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3038,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4127,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4155,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1678,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1741,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1825,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1886,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1952,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1953,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2010,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2016,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2034,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4264,
       NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d1218,
       NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d2656,
       NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d390,
       NOT_requestR_BITS_159_TO_128_079_EQ_0_080_081__ETC___d1563,
       NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d2572,
       NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d2636,
       NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d3019,
       NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d3079,
       NOT_requestR_BITS_190_TO_180_481_EQ_2047_482_5_ETC___d4974,
       NOT_requestR_BITS_190_TO_180_481_EQ_2047_482_5_ETC___d5039,
       NOT_requestR_BITS_190_TO_180_481_ULT_requestR__ETC___d5016,
       NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d2014,
       NOT_requestR_BIT_158_86_87_AND_NOT_requestR_BI_ETC___d777,
       NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798,
       NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d2892,
       NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d958,
       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4358,
       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4359,
       SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3565,
       SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3566,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d3383,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4608,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d3813,
       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4293,
       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4676,
       _0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d3500,
       _0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d3881,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3148,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3149,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4090,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4115,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4142,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2154,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2156,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2158,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2347,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2348,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2349,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4220,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4221,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2652,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2654,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2657,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2815,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2816,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2817,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881,
       guard__h128595,
       guard__h169654,
       requestR_BITS_126_TO_116_929_EQ_0_943_AND_requ_ETC___d4950,
       requestR_BITS_179_TO_128_483_ULE_requestR_BITS_ETC___d4962,
       requestR_BITS_179_TO_128_483_ULT_requestR_BITS_ETC___d4967,
       requestR_BITS_190_TO_180_481_EQ_0_491_AND_requ_ETC___d4946,
       requestR_BITS_190_TO_180_481_EQ_0_491_AND_requ_ETC___d5020,
       requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d2631,
       requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d2642,
       requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d3074,
       requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d3085,
       requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d4938,
       requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d4983,
       requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d5005,
       requestR_BITS_190_TO_180_481_EQ_requestR_BITS__ETC___d4961,
       requestR_BITS_190_TO_180_481_ULE_requestR_BITS_ETC___d4959,
       requestR_BITS_190_TO_180_481_ULE_requestR_BITS_ETC___d5015,
       requestR_BITS_190_TO_180_481_ULT_requestR_BITS_ETC___d4966,
       requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT_req_ETC___d811,
       requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1951,
       requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016,
       requestR_BIT_159_6_OR_requestR_BIT_158_86_OR_r_ETC___d1574,
       requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1058,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1061,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1070,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2929,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2932,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2941;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // value method valid
  assign valid = dw_valid$whas && dw_valid$wget ;

  // value method word_fst
  assign word_fst = ab__h205220[68:5] ;

  // value method word_snd
  assign word_snd = ab__h205220[4:0] ;

  // submodule fpu
  mkFPU fpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .request_put(fpu$request_put),
	    .EN_request_put(fpu$EN_request_put),
	    .EN_response_get(fpu$EN_response_get),
	    .RDY_request_put(fpu$RDY_request_put),
	    .response_get(fpu$response_get),
	    .RDY_response_get(fpu$RDY_response_get));

  // submodule frmFpuF
  FIFO2 #(.width(32'd1), .guarded(32'd1)) frmFpuF(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(frmFpuF$D_IN),
						  .ENQ(frmFpuF$ENQ),
						  .DEQ(frmFpuF$DEQ),
						  .CLR(frmFpuF$CLR),
						  .D_OUT(),
						  .FULL_N(),
						  .EMPTY_N());

  // rule RL_doFADD_S
  assign CAN_FIRE_RL_doFADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0 ;
  assign WILL_FIRE_RL_doFADD_S = CAN_FIRE_RL_doFADD_S ;

  // rule RL_doFSUB_S
  assign CAN_FIRE_RL_doFSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h04 ;
  assign WILL_FIRE_RL_doFSUB_S = CAN_FIRE_RL_doFSUB_S ;

  // rule RL_doFMUL_S
  assign CAN_FIRE_RL_doFMUL_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h08 ;
  assign WILL_FIRE_RL_doFMUL_S = CAN_FIRE_RL_doFMUL_S ;

  // rule RL_doFMADD_S
  assign CAN_FIRE_RL_doFMADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMADD_S = CAN_FIRE_RL_doFMADD_S ;

  // rule RL_doFMSUB_S
  assign CAN_FIRE_RL_doFMSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMSUB_S = CAN_FIRE_RL_doFMSUB_S ;

  // rule RL_doFNMADD_S
  assign CAN_FIRE_RL_doFNMADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMADD_S = CAN_FIRE_RL_doFNMADD_S ;

  // rule RL_doFNMSUB_S
  assign CAN_FIRE_RL_doFNMSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMSUB_S = CAN_FIRE_RL_doFNMSUB_S ;

  // rule RL_doFSGNJ_S
  assign CAN_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;
  assign WILL_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;

  // rule RL_doFSGNJN_S
  assign CAN_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;
  assign WILL_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;

  // rule RL_doFSGNJX_S
  assign CAN_FIRE_RL_doFSGNJX_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_S = CAN_FIRE_RL_doFSGNJX_S ;

  // rule RL_doFCVT_S_L
  assign CAN_FIRE_RL_doFCVT_S_L =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd2 ;
  assign WILL_FIRE_RL_doFCVT_S_L = CAN_FIRE_RL_doFCVT_S_L ;

  // rule RL_doFCVT_S_LU
  assign CAN_FIRE_RL_doFCVT_S_LU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd3 ;
  assign WILL_FIRE_RL_doFCVT_S_LU = CAN_FIRE_RL_doFCVT_S_LU ;

  // rule RL_doFCVT_S_W
  assign CAN_FIRE_RL_doFCVT_S_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_S_W = CAN_FIRE_RL_doFCVT_S_W ;

  // rule RL_doFCVT_S_WU
  assign CAN_FIRE_RL_doFCVT_S_WU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_WU = CAN_FIRE_RL_doFCVT_S_WU ;

  // rule RL_doFCVT_L_S
  assign CAN_FIRE_RL_doFCVT_L_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd2 ;
  assign WILL_FIRE_RL_doFCVT_L_S = CAN_FIRE_RL_doFCVT_L_S ;

  // rule RL_doFCVT_LU_S
  assign CAN_FIRE_RL_doFCVT_LU_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd3 ;
  assign WILL_FIRE_RL_doFCVT_LU_S = CAN_FIRE_RL_doFCVT_LU_S ;

  // rule RL_doFCVT_W_S
  assign CAN_FIRE_RL_doFCVT_W_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_S = CAN_FIRE_RL_doFCVT_W_S ;

  // rule RL_doFCVT_WU_S
  assign CAN_FIRE_RL_doFCVT_WU_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_S = CAN_FIRE_RL_doFCVT_WU_S ;

  // rule RL_doFMIN_S
  assign CAN_FIRE_RL_doFMIN_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_S = CAN_FIRE_RL_doFMIN_S ;

  // rule RL_doFMAX_S
  assign CAN_FIRE_RL_doFMAX_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_S = CAN_FIRE_RL_doFMAX_S ;

  // rule RL_doFMV_W_X
  assign CAN_FIRE_RL_doFMV_W_X =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h78 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_W_X = CAN_FIRE_RL_doFMV_W_X ;

  // rule RL_doFMV_X_W
  assign CAN_FIRE_RL_doFMV_X_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_W = CAN_FIRE_RL_doFMV_X_W ;

  // rule RL_doFEQ_S
  assign CAN_FIRE_RL_doFEQ_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_S = CAN_FIRE_RL_doFEQ_S ;

  // rule RL_doFLT_S
  assign CAN_FIRE_RL_doFLT_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_S = CAN_FIRE_RL_doFLT_S ;

  // rule RL_doFLE_S
  assign CAN_FIRE_RL_doFLE_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_S = CAN_FIRE_RL_doFLE_S ;

  // rule RL_doFCLASS_S
  assign CAN_FIRE_RL_doFCLASS_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_S = CAN_FIRE_RL_doFCLASS_S ;

  // rule RL_doFADD_D
  assign CAN_FIRE_RL_doFADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h01 ;
  assign WILL_FIRE_RL_doFADD_D = CAN_FIRE_RL_doFADD_D ;

  // rule RL_doFSUB_D
  assign CAN_FIRE_RL_doFSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h05 ;
  assign WILL_FIRE_RL_doFSUB_D = CAN_FIRE_RL_doFSUB_D ;

  // rule RL_doFMUL_D
  assign CAN_FIRE_RL_doFMUL_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h09 ;
  assign WILL_FIRE_RL_doFMUL_D = CAN_FIRE_RL_doFMUL_D ;

  // rule RL_doFMADD_D
  assign CAN_FIRE_RL_doFMADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMADD_D = CAN_FIRE_RL_doFMADD_D ;

  // rule RL_doFMSUB_D
  assign CAN_FIRE_RL_doFMSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMSUB_D = CAN_FIRE_RL_doFMSUB_D ;

  // rule RL_doFNMADD_D
  assign CAN_FIRE_RL_doFNMADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMADD_D = CAN_FIRE_RL_doFNMADD_D ;

  // rule RL_doFNMSUB_D
  assign CAN_FIRE_RL_doFNMSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMSUB_D = CAN_FIRE_RL_doFNMSUB_D ;

  // rule RL_doFSGNJ_D
  assign CAN_FIRE_RL_doFSGNJ_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_D = CAN_FIRE_RL_doFSGNJ_D ;

  // rule RL_doFSGNJN_D
  assign CAN_FIRE_RL_doFSGNJN_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_D = CAN_FIRE_RL_doFSGNJN_D ;

  // rule RL_doFSGNJX_D
  assign CAN_FIRE_RL_doFSGNJX_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_D = CAN_FIRE_RL_doFSGNJX_D ;

  // rule RL_doFCVT_D_W
  assign CAN_FIRE_RL_doFCVT_D_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_W = CAN_FIRE_RL_doFCVT_D_W ;

  // rule RL_doFCVT_D_WU
  assign CAN_FIRE_RL_doFCVT_D_WU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_D_WU = CAN_FIRE_RL_doFCVT_D_WU ;

  // rule RL_doFCVT_W_D
  assign CAN_FIRE_RL_doFCVT_W_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_D = CAN_FIRE_RL_doFCVT_W_D ;

  // rule RL_doFCVT_WU_D
  assign CAN_FIRE_RL_doFCVT_WU_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_D = CAN_FIRE_RL_doFCVT_WU_D ;

  // rule RL_doFCVT_D_L
  assign CAN_FIRE_RL_doFCVT_D_L =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd2 ;
  assign WILL_FIRE_RL_doFCVT_D_L = CAN_FIRE_RL_doFCVT_D_L ;

  // rule RL_doFCVT_D_LU
  assign CAN_FIRE_RL_doFCVT_D_LU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd3 ;
  assign WILL_FIRE_RL_doFCVT_D_LU = CAN_FIRE_RL_doFCVT_D_LU ;

  // rule RL_doFCVT_L_D
  assign CAN_FIRE_RL_doFCVT_L_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd2 ;
  assign WILL_FIRE_RL_doFCVT_L_D = CAN_FIRE_RL_doFCVT_L_D ;

  // rule RL_doFCVT_LU_D
  assign CAN_FIRE_RL_doFCVT_LU_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd3 ;
  assign WILL_FIRE_RL_doFCVT_LU_D = CAN_FIRE_RL_doFCVT_LU_D ;

  // rule RL_doFCVT_S_D
  assign CAN_FIRE_RL_doFCVT_S_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h20 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_D = CAN_FIRE_RL_doFCVT_S_D ;

  // rule RL_doFCVT_D_S
  assign CAN_FIRE_RL_doFCVT_D_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h21 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_S = CAN_FIRE_RL_doFCVT_D_S ;

  // rule RL_doFMIN_D
  assign CAN_FIRE_RL_doFMIN_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_D = CAN_FIRE_RL_doFMIN_D ;

  // rule RL_doFMAX_D
  assign CAN_FIRE_RL_doFMAX_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_D = CAN_FIRE_RL_doFMAX_D ;

  // rule RL_doFEQ_D
  assign CAN_FIRE_RL_doFEQ_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_D = CAN_FIRE_RL_doFEQ_D ;

  // rule RL_doFLT_D
  assign CAN_FIRE_RL_doFLT_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_D = CAN_FIRE_RL_doFLT_D ;

  // rule RL_doFLE_D
  assign CAN_FIRE_RL_doFLE_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_D = CAN_FIRE_RL_doFLE_D ;

  // rule RL_doFMV_D_X
  assign CAN_FIRE_RL_doFMV_D_X =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h79 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_D_X = CAN_FIRE_RL_doFMV_D_X ;

  // rule RL_doFMV_X_D
  assign CAN_FIRE_RL_doFMV_X_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_D = CAN_FIRE_RL_doFMV_X_D ;

  // rule RL_doFCLASS_D
  assign CAN_FIRE_RL_doFCLASS_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_D = CAN_FIRE_RL_doFCLASS_D ;

  // rule RL_rl_get_fpu_result
  assign CAN_FIRE_RL_rl_get_fpu_result =
	     fpu$RDY_response_get && stateR == 2'd1 ;
  assign WILL_FIRE_RL_rl_get_fpu_result = CAN_FIRE_RL_rl_get_fpu_result ;

  // rule RL_rl_drive_fpu_result
  assign CAN_FIRE_RL_rl_drive_fpu_result = stateR == 2'd2 ;
  assign WILL_FIRE_RL_rl_drive_fpu_result = stateR == 2'd2 ;

  // inputs to muxes for submodule ports
  assign MUX_dw_result$wset_1__SEL_1 =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h1 ;
  assign MUX_dw_result$wset_1__SEL_2 =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h0 ;
  assign MUX_dw_result$wset_1__SEL_38 =
	     WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ;
  assign MUX_dw_result$wset_1__VAL_1 = { x__h1925, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_2 = { x__h1779, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_3 = { x__h2059, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_4 = { x__h2207, x__h12967 } ;
  assign MUX_dw_result$wset_1__VAL_5 = { x__h13255, x__h23444 } ;
  assign MUX_dw_result$wset_1__VAL_6 = { x__h23729, x__h29785 } ;
  assign MUX_dw_result$wset_1__VAL_7 = { x__h30070, x__h35814 } ;
  assign MUX_dw_result$wset_1__VAL_8 = { x__h36098, x__h37873 } ;
  assign MUX_dw_result$wset_1__VAL_9 = { x__h38130, x__h38626 } ;
  assign MUX_dw_result$wset_1__VAL_10 = { x__h38869, x__h40182 } ;
  assign MUX_dw_result$wset_1__VAL_11 = { x__h40439, x__h40938 } ;
  assign MUX_dw_result$wset_1__VAL_12 = { x__h41186, x__h43225 } ;
  assign MUX_dw_result$wset_1__VAL_13 = { x__h43820, x__h43225 } ;
  assign MUX_dw_result$wset_1__VAL_14 = { x__h46345, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_15 = { x__h46466, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_16 = { x__h46604, x__h43225 } ;
  assign MUX_dw_result$wset_1__VAL_17 = { x__h48087, x__h48975 } ;
  assign MUX_dw_result$wset_1__VAL_18 = { x__h49156, x__h48975 } ;
  assign MUX_dw_result$wset_1__VAL_19 = { x__h50242, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_20 = { x__h51409, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_21 = { x__h51531, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_22 = { x__h51655, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_23 = { x__h51785, x__h61334 } ;
  assign MUX_dw_result$wset_1__VAL_24 = { x__h61619, x__h70888 } ;
  assign MUX_dw_result$wset_1__VAL_25 = { x__h71172, x__h72485 } ;
  assign MUX_dw_result$wset_1__VAL_26 = { x__h72742, x__h73241 } ;
  assign MUX_dw_result$wset_1__VAL_27 = { x__h73485, x__h84638 } ;
  assign MUX_dw_result$wset_1__VAL_28 = { x__h84923, x__h95508 } ;
  assign MUX_dw_result$wset_1__VAL_29 = { x__h95792, x__h97550 } ;
  assign MUX_dw_result$wset_1__VAL_30 = { x__h97807, x__h98303 } ;
  assign MUX_dw_result$wset_1__VAL_31 = { x__h98547, x__h145975 } ;
  assign MUX_dw_result$wset_1__VAL_32 = { x__h146958, x__h187497 } ;
  assign MUX_dw_result$wset_1__VAL_33 = { x__h188420, x__h191969 } ;
  assign MUX_dw_result$wset_1__VAL_34 = { x__h192968, x__h191969 } ;
  assign MUX_dw_result$wset_1__VAL_35 = { x__h197412, x__h191969 } ;
  assign MUX_dw_result$wset_1__VAL_36 = { x__h200107, x__h201803 } ;
  assign MUX_dw_result$wset_1__VAL_37 = { x__h201984, x__h201803 } ;
  assign MUX_dw_result$wset_1__VAL_38 = { requestR[191:128], 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_39 = { x__h204111, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_40 =
	     { x__h204761, fpu$response_get[4:0] } ;
  assign MUX_fpu$request_put_1__VAL_1 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd0 } ;
  assign MUX_fpu$request_put_1__VAL_2 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd1 } ;
  assign MUX_fpu$request_put_1__VAL_3 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd2 } ;
  assign MUX_fpu$request_put_1__VAL_4 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd5 } ;
  assign MUX_fpu$request_put_1__VAL_5 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd6 } ;
  assign MUX_fpu$request_put_1__VAL_6 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd7 } ;
  assign MUX_fpu$request_put_1__VAL_7 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd8 } ;
  assign MUX_fpu$request_put_1__VAL_8 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd0 } ;
  assign MUX_fpu$request_put_1__VAL_9 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd1 } ;
  assign MUX_fpu$request_put_1__VAL_10 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd2 } ;
  assign MUX_fpu$request_put_1__VAL_11 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd5 } ;
  assign MUX_fpu$request_put_1__VAL_12 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd6 } ;
  assign MUX_fpu$request_put_1__VAL_13 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd7 } ;
  assign MUX_fpu$request_put_1__VAL_14 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd8 } ;
  assign MUX_resultR$write_1__VAL_2 =
	     { 1'd1, x__h204761, fpu$response_get[4:0] } ;
  assign MUX_resultR$write_1__VAL_3 = { 1'd1, x__h204111, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_5 = { 1'd1, requestR[191:128], 5'd0 } ;
  assign MUX_resultR$write_1__VAL_6 = { 1'd1, x__h201984, x__h201803 } ;
  assign MUX_resultR$write_1__VAL_7 = { 1'd1, x__h200107, x__h201803 } ;
  assign MUX_resultR$write_1__VAL_8 = { 1'd1, x__h197412, x__h191969 } ;
  assign MUX_resultR$write_1__VAL_9 = { 1'd1, x__h192968, x__h191969 } ;
  assign MUX_resultR$write_1__VAL_10 = { 1'd1, x__h188420, x__h191969 } ;
  assign MUX_resultR$write_1__VAL_11 = { 1'd1, x__h146958, x__h187497 } ;
  assign MUX_resultR$write_1__VAL_12 = { 1'd1, x__h98547, x__h145975 } ;
  assign MUX_resultR$write_1__VAL_13 = { 1'd1, x__h97807, x__h98303 } ;
  assign MUX_resultR$write_1__VAL_14 = { 1'd1, x__h95792, x__h97550 } ;
  assign MUX_resultR$write_1__VAL_15 = { 1'd1, x__h84923, x__h95508 } ;
  assign MUX_resultR$write_1__VAL_16 = { 1'd1, x__h73485, x__h84638 } ;
  assign MUX_resultR$write_1__VAL_17 = { 1'd1, x__h72742, x__h73241 } ;
  assign MUX_resultR$write_1__VAL_18 = { 1'd1, x__h71172, x__h72485 } ;
  assign MUX_resultR$write_1__VAL_19 = { 1'd1, x__h61619, x__h70888 } ;
  assign MUX_resultR$write_1__VAL_20 = { 1'd1, x__h51785, x__h61334 } ;
  assign MUX_resultR$write_1__VAL_21 = { 1'd1, x__h51655, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_22 = { 1'd1, x__h51531, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_23 = { 1'd1, x__h51409, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_24 = { 1'd1, x__h50242, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_25 = { 1'd1, x__h49156, x__h48975 } ;
  assign MUX_resultR$write_1__VAL_26 = { 1'd1, x__h48087, x__h48975 } ;
  assign MUX_resultR$write_1__VAL_27 = { 1'd1, x__h46604, x__h43225 } ;
  assign MUX_resultR$write_1__VAL_28 = { 1'd1, x__h46466, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_29 = { 1'd1, x__h46345, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_30 = { 1'd1, x__h43820, x__h43225 } ;
  assign MUX_resultR$write_1__VAL_31 = { 1'd1, x__h41186, x__h43225 } ;
  assign MUX_resultR$write_1__VAL_32 = { 1'd1, x__h40439, x__h40938 } ;
  assign MUX_resultR$write_1__VAL_33 = { 1'd1, x__h38869, x__h40182 } ;
  assign MUX_resultR$write_1__VAL_34 = { 1'd1, x__h38130, x__h38626 } ;
  assign MUX_resultR$write_1__VAL_35 = { 1'd1, x__h36098, x__h37873 } ;
  assign MUX_resultR$write_1__VAL_36 = { 1'd1, x__h30070, x__h35814 } ;
  assign MUX_resultR$write_1__VAL_37 = { 1'd1, x__h23729, x__h29785 } ;
  assign MUX_resultR$write_1__VAL_38 = { 1'd1, x__h13255, x__h23444 } ;
  assign MUX_resultR$write_1__VAL_39 = { 1'd1, x__h2207, x__h12967 } ;
  assign MUX_resultR$write_1__VAL_40 = { 1'd1, x__h2059, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_41 = { 1'd1, x__h1925, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_42 = { 1'd1, x__h1779, 5'd0 } ;

  // inlined wires
  assign dw_valid$wget = !WILL_FIRE_RL_rl_drive_fpu_result || resultR[69] ;
  assign dw_valid$whas =
	     WILL_FIRE_RL_rl_drive_fpu_result ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_LU_D ||
	     WILL_FIRE_RL_doFCVT_L_D ||
	     WILL_FIRE_RL_doFCVT_D_LU ||
	     WILL_FIRE_RL_doFCVT_D_L ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_LU_S ||
	     WILL_FIRE_RL_doFCVT_L_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_LU ||
	     WILL_FIRE_RL_doFCVT_S_L ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;
  always@(WILL_FIRE_RL_doFSGNJN_S or
	  MUX_dw_result$wset_1__VAL_1 or
	  WILL_FIRE_RL_doFSGNJ_S or
	  MUX_dw_result$wset_1__VAL_2 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_dw_result$wset_1__VAL_3 or
	  WILL_FIRE_RL_doFCVT_S_L or
	  MUX_dw_result$wset_1__VAL_4 or
	  WILL_FIRE_RL_doFCVT_S_LU or
	  MUX_dw_result$wset_1__VAL_5 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_dw_result$wset_1__VAL_6 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_dw_result$wset_1__VAL_7 or
	  WILL_FIRE_RL_doFCVT_L_S or
	  MUX_dw_result$wset_1__VAL_8 or
	  WILL_FIRE_RL_doFCVT_LU_S or
	  MUX_dw_result$wset_1__VAL_9 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_dw_result$wset_1__VAL_10 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_dw_result$wset_1__VAL_11 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_dw_result$wset_1__VAL_12 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_dw_result$wset_1__VAL_13 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_dw_result$wset_1__VAL_14 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_dw_result$wset_1__VAL_15 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_dw_result$wset_1__VAL_16 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_dw_result$wset_1__VAL_17 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_dw_result$wset_1__VAL_18 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_dw_result$wset_1__VAL_19 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_dw_result$wset_1__VAL_20 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_dw_result$wset_1__VAL_21 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_dw_result$wset_1__VAL_22 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_dw_result$wset_1__VAL_23 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_dw_result$wset_1__VAL_24 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_dw_result$wset_1__VAL_25 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_dw_result$wset_1__VAL_26 or
	  WILL_FIRE_RL_doFCVT_D_L or
	  MUX_dw_result$wset_1__VAL_27 or
	  WILL_FIRE_RL_doFCVT_D_LU or
	  MUX_dw_result$wset_1__VAL_28 or
	  WILL_FIRE_RL_doFCVT_L_D or
	  MUX_dw_result$wset_1__VAL_29 or
	  WILL_FIRE_RL_doFCVT_LU_D or
	  MUX_dw_result$wset_1__VAL_30 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_dw_result$wset_1__VAL_31 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_dw_result$wset_1__VAL_32 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_dw_result$wset_1__VAL_33 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_dw_result$wset_1__VAL_34 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_dw_result$wset_1__VAL_35 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_dw_result$wset_1__VAL_36 or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_dw_result$wset_1__VAL_37 or
	  MUX_dw_result$wset_1__SEL_38 or
	  MUX_dw_result$wset_1__VAL_38 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_dw_result$wset_1__VAL_39 or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_dw_result$wset_1__VAL_40 or
	  WILL_FIRE_RL_rl_drive_fpu_result or resultR)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFSGNJN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_1;
      WILL_FIRE_RL_doFSGNJ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_2;
      WILL_FIRE_RL_doFSGNJX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_3;
      WILL_FIRE_RL_doFCVT_S_L: dw_result$wget = MUX_dw_result$wset_1__VAL_4;
      WILL_FIRE_RL_doFCVT_S_LU: dw_result$wget = MUX_dw_result$wset_1__VAL_5;
      WILL_FIRE_RL_doFCVT_S_W: dw_result$wget = MUX_dw_result$wset_1__VAL_6;
      WILL_FIRE_RL_doFCVT_S_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_7;
      WILL_FIRE_RL_doFCVT_L_S: dw_result$wget = MUX_dw_result$wset_1__VAL_8;
      WILL_FIRE_RL_doFCVT_LU_S: dw_result$wget = MUX_dw_result$wset_1__VAL_9;
      WILL_FIRE_RL_doFCVT_W_S: dw_result$wget = MUX_dw_result$wset_1__VAL_10;
      WILL_FIRE_RL_doFCVT_WU_S: dw_result$wget = MUX_dw_result$wset_1__VAL_11;
      WILL_FIRE_RL_doFMIN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_12;
      WILL_FIRE_RL_doFMAX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_13;
      WILL_FIRE_RL_doFMV_W_X: dw_result$wget = MUX_dw_result$wset_1__VAL_14;
      WILL_FIRE_RL_doFMV_X_W: dw_result$wget = MUX_dw_result$wset_1__VAL_15;
      WILL_FIRE_RL_doFEQ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_16;
      WILL_FIRE_RL_doFLT_S: dw_result$wget = MUX_dw_result$wset_1__VAL_17;
      WILL_FIRE_RL_doFLE_S: dw_result$wget = MUX_dw_result$wset_1__VAL_18;
      WILL_FIRE_RL_doFCLASS_S: dw_result$wget = MUX_dw_result$wset_1__VAL_19;
      WILL_FIRE_RL_doFSGNJ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_20;
      WILL_FIRE_RL_doFSGNJN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_21;
      WILL_FIRE_RL_doFSGNJX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_22;
      WILL_FIRE_RL_doFCVT_D_W: dw_result$wget = MUX_dw_result$wset_1__VAL_23;
      WILL_FIRE_RL_doFCVT_D_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_24;
      WILL_FIRE_RL_doFCVT_W_D: dw_result$wget = MUX_dw_result$wset_1__VAL_25;
      WILL_FIRE_RL_doFCVT_WU_D: dw_result$wget = MUX_dw_result$wset_1__VAL_26;
      WILL_FIRE_RL_doFCVT_D_L: dw_result$wget = MUX_dw_result$wset_1__VAL_27;
      WILL_FIRE_RL_doFCVT_D_LU: dw_result$wget = MUX_dw_result$wset_1__VAL_28;
      WILL_FIRE_RL_doFCVT_L_D: dw_result$wget = MUX_dw_result$wset_1__VAL_29;
      WILL_FIRE_RL_doFCVT_LU_D: dw_result$wget = MUX_dw_result$wset_1__VAL_30;
      WILL_FIRE_RL_doFCVT_S_D: dw_result$wget = MUX_dw_result$wset_1__VAL_31;
      WILL_FIRE_RL_doFCVT_D_S: dw_result$wget = MUX_dw_result$wset_1__VAL_32;
      WILL_FIRE_RL_doFMIN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_33;
      WILL_FIRE_RL_doFMAX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_34;
      WILL_FIRE_RL_doFEQ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_35;
      WILL_FIRE_RL_doFLT_D: dw_result$wget = MUX_dw_result$wset_1__VAL_36;
      WILL_FIRE_RL_doFLE_D: dw_result$wget = MUX_dw_result$wset_1__VAL_37;
      MUX_dw_result$wset_1__SEL_38:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_38;
      WILL_FIRE_RL_doFCLASS_D: dw_result$wget = MUX_dw_result$wset_1__VAL_39;
      WILL_FIRE_RL_rl_get_fpu_result:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_40;
      WILL_FIRE_RL_rl_drive_fpu_result: dw_result$wget = resultR[68:0];
      default: dw_result$wget =
		   69'h0AAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end

  // register cfg_verbosity
  assign cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cfg_verbosity$EN = EN_set_verbosity ;

  // register requestR
  assign requestR$D_IN =
	     { 1'd1,
	       req_opcode,
	       req_f7,
	       req_rs2,
	       req_rm,
	       req_v1,
	       req_v2,
	       req_v3 } ;
  assign requestR$EN = EN_req ;

  // register resultR
  always@(EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_resultR$write_1__VAL_2 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_resultR$write_1__VAL_3 or
	  WILL_FIRE_RL_doFMV_X_D or
	  MUX_resultR$write_1__VAL_5 or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_resultR$write_1__VAL_6 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_resultR$write_1__VAL_7 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_resultR$write_1__VAL_8 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_resultR$write_1__VAL_9 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_resultR$write_1__VAL_10 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_resultR$write_1__VAL_11 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_resultR$write_1__VAL_12 or
	  WILL_FIRE_RL_doFCVT_LU_D or
	  MUX_resultR$write_1__VAL_13 or
	  WILL_FIRE_RL_doFCVT_L_D or
	  MUX_resultR$write_1__VAL_14 or
	  WILL_FIRE_RL_doFCVT_D_LU or
	  MUX_resultR$write_1__VAL_15 or
	  WILL_FIRE_RL_doFCVT_D_L or
	  MUX_resultR$write_1__VAL_16 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_resultR$write_1__VAL_17 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_resultR$write_1__VAL_18 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_resultR$write_1__VAL_19 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_resultR$write_1__VAL_20 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_resultR$write_1__VAL_21 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_resultR$write_1__VAL_22 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_resultR$write_1__VAL_23 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_resultR$write_1__VAL_24 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_resultR$write_1__VAL_25 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_resultR$write_1__VAL_26 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_resultR$write_1__VAL_27 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_resultR$write_1__VAL_28 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_resultR$write_1__VAL_29 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_resultR$write_1__VAL_30 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_resultR$write_1__VAL_31 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_resultR$write_1__VAL_32 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_resultR$write_1__VAL_33 or
	  WILL_FIRE_RL_doFCVT_LU_S or
	  MUX_resultR$write_1__VAL_34 or
	  WILL_FIRE_RL_doFCVT_L_S or
	  MUX_resultR$write_1__VAL_35 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_resultR$write_1__VAL_36 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_resultR$write_1__VAL_37 or
	  WILL_FIRE_RL_doFCVT_S_LU or
	  MUX_resultR$write_1__VAL_38 or
	  WILL_FIRE_RL_doFCVT_S_L or
	  MUX_resultR$write_1__VAL_39 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_resultR$write_1__VAL_40 or
	  WILL_FIRE_RL_doFSGNJN_S or
	  MUX_resultR$write_1__VAL_41 or
	  WILL_FIRE_RL_doFSGNJ_S or MUX_resultR$write_1__VAL_42)
  case (1'b1)
    EN_req: resultR$D_IN = 70'h0AAAAAAAAAAAAAAAAA;
    WILL_FIRE_RL_rl_get_fpu_result: resultR$D_IN = MUX_resultR$write_1__VAL_2;
    WILL_FIRE_RL_doFCLASS_D: resultR$D_IN = MUX_resultR$write_1__VAL_3;
    WILL_FIRE_RL_doFMV_X_D: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFMV_D_X: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFLE_D: resultR$D_IN = MUX_resultR$write_1__VAL_6;
    WILL_FIRE_RL_doFLT_D: resultR$D_IN = MUX_resultR$write_1__VAL_7;
    WILL_FIRE_RL_doFEQ_D: resultR$D_IN = MUX_resultR$write_1__VAL_8;
    WILL_FIRE_RL_doFMAX_D: resultR$D_IN = MUX_resultR$write_1__VAL_9;
    WILL_FIRE_RL_doFMIN_D: resultR$D_IN = MUX_resultR$write_1__VAL_10;
    WILL_FIRE_RL_doFCVT_D_S: resultR$D_IN = MUX_resultR$write_1__VAL_11;
    WILL_FIRE_RL_doFCVT_S_D: resultR$D_IN = MUX_resultR$write_1__VAL_12;
    WILL_FIRE_RL_doFCVT_LU_D: resultR$D_IN = MUX_resultR$write_1__VAL_13;
    WILL_FIRE_RL_doFCVT_L_D: resultR$D_IN = MUX_resultR$write_1__VAL_14;
    WILL_FIRE_RL_doFCVT_D_LU: resultR$D_IN = MUX_resultR$write_1__VAL_15;
    WILL_FIRE_RL_doFCVT_D_L: resultR$D_IN = MUX_resultR$write_1__VAL_16;
    WILL_FIRE_RL_doFCVT_WU_D: resultR$D_IN = MUX_resultR$write_1__VAL_17;
    WILL_FIRE_RL_doFCVT_W_D: resultR$D_IN = MUX_resultR$write_1__VAL_18;
    WILL_FIRE_RL_doFCVT_D_WU: resultR$D_IN = MUX_resultR$write_1__VAL_19;
    WILL_FIRE_RL_doFCVT_D_W: resultR$D_IN = MUX_resultR$write_1__VAL_20;
    WILL_FIRE_RL_doFSGNJX_D: resultR$D_IN = MUX_resultR$write_1__VAL_21;
    WILL_FIRE_RL_doFSGNJN_D: resultR$D_IN = MUX_resultR$write_1__VAL_22;
    WILL_FIRE_RL_doFSGNJ_D: resultR$D_IN = MUX_resultR$write_1__VAL_23;
    WILL_FIRE_RL_doFCLASS_S: resultR$D_IN = MUX_resultR$write_1__VAL_24;
    WILL_FIRE_RL_doFLE_S: resultR$D_IN = MUX_resultR$write_1__VAL_25;
    WILL_FIRE_RL_doFLT_S: resultR$D_IN = MUX_resultR$write_1__VAL_26;
    WILL_FIRE_RL_doFEQ_S: resultR$D_IN = MUX_resultR$write_1__VAL_27;
    WILL_FIRE_RL_doFMV_X_W: resultR$D_IN = MUX_resultR$write_1__VAL_28;
    WILL_FIRE_RL_doFMV_W_X: resultR$D_IN = MUX_resultR$write_1__VAL_29;
    WILL_FIRE_RL_doFMAX_S: resultR$D_IN = MUX_resultR$write_1__VAL_30;
    WILL_FIRE_RL_doFMIN_S: resultR$D_IN = MUX_resultR$write_1__VAL_31;
    WILL_FIRE_RL_doFCVT_WU_S: resultR$D_IN = MUX_resultR$write_1__VAL_32;
    WILL_FIRE_RL_doFCVT_W_S: resultR$D_IN = MUX_resultR$write_1__VAL_33;
    WILL_FIRE_RL_doFCVT_LU_S: resultR$D_IN = MUX_resultR$write_1__VAL_34;
    WILL_FIRE_RL_doFCVT_L_S: resultR$D_IN = MUX_resultR$write_1__VAL_35;
    WILL_FIRE_RL_doFCVT_S_WU: resultR$D_IN = MUX_resultR$write_1__VAL_36;
    WILL_FIRE_RL_doFCVT_S_W: resultR$D_IN = MUX_resultR$write_1__VAL_37;
    WILL_FIRE_RL_doFCVT_S_LU: resultR$D_IN = MUX_resultR$write_1__VAL_38;
    WILL_FIRE_RL_doFCVT_S_L: resultR$D_IN = MUX_resultR$write_1__VAL_39;
    WILL_FIRE_RL_doFSGNJX_S: resultR$D_IN = MUX_resultR$write_1__VAL_40;
    WILL_FIRE_RL_doFSGNJN_S: resultR$D_IN = MUX_resultR$write_1__VAL_41;
    WILL_FIRE_RL_doFSGNJ_S: resultR$D_IN = MUX_resultR$write_1__VAL_42;
    default: resultR$D_IN = 70'h2AAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign resultR$EN =
	     EN_req || WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFSGNJ_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFCVT_S_L ||
	     WILL_FIRE_RL_doFCVT_S_LU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_L_S ||
	     WILL_FIRE_RL_doFCVT_LU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_D_L ||
	     WILL_FIRE_RL_doFCVT_D_LU ||
	     WILL_FIRE_RL_doFCVT_L_D ||
	     WILL_FIRE_RL_doFCVT_LU_D ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_rl_get_fpu_result ;

  // register stateR
  always@(EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  WILL_FIRE_RL_doFCLASS_D or
	  WILL_FIRE_RL_doFMV_X_D or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  WILL_FIRE_RL_doFLT_D or
	  WILL_FIRE_RL_doFEQ_D or
	  WILL_FIRE_RL_doFMAX_D or
	  WILL_FIRE_RL_doFMIN_D or
	  WILL_FIRE_RL_doFCVT_D_S or
	  WILL_FIRE_RL_doFCVT_S_D or
	  WILL_FIRE_RL_doFCVT_LU_D or
	  WILL_FIRE_RL_doFCVT_L_D or
	  WILL_FIRE_RL_doFCVT_D_LU or
	  WILL_FIRE_RL_doFCVT_D_L or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  WILL_FIRE_RL_doFCVT_W_D or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  WILL_FIRE_RL_doFCVT_D_W or
	  WILL_FIRE_RL_doFSGNJX_D or
	  WILL_FIRE_RL_doFSGNJN_D or
	  WILL_FIRE_RL_doFSGNJ_D or
	  WILL_FIRE_RL_doFNMSUB_D or
	  WILL_FIRE_RL_doFNMADD_D or
	  WILL_FIRE_RL_doFMSUB_D or
	  WILL_FIRE_RL_doFMADD_D or
	  WILL_FIRE_RL_doFMUL_D or
	  WILL_FIRE_RL_doFSUB_D or
	  WILL_FIRE_RL_doFADD_D or
	  WILL_FIRE_RL_doFCLASS_S or
	  WILL_FIRE_RL_doFLE_S or
	  WILL_FIRE_RL_doFLT_S or
	  WILL_FIRE_RL_doFEQ_S or
	  WILL_FIRE_RL_doFMV_X_W or
	  WILL_FIRE_RL_doFMV_W_X or
	  WILL_FIRE_RL_doFMAX_S or
	  WILL_FIRE_RL_doFMIN_S or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  WILL_FIRE_RL_doFCVT_W_S or
	  WILL_FIRE_RL_doFCVT_LU_S or
	  WILL_FIRE_RL_doFCVT_L_S or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  WILL_FIRE_RL_doFCVT_S_W or
	  WILL_FIRE_RL_doFCVT_S_LU or
	  WILL_FIRE_RL_doFCVT_S_L or
	  WILL_FIRE_RL_doFSGNJX_S or
	  WILL_FIRE_RL_doFSGNJN_S or
	  WILL_FIRE_RL_doFSGNJ_S or
	  WILL_FIRE_RL_doFNMSUB_S or
	  WILL_FIRE_RL_doFNMADD_S or
	  WILL_FIRE_RL_doFMSUB_S or
	  WILL_FIRE_RL_doFMADD_S or
	  WILL_FIRE_RL_doFMUL_S or
	  WILL_FIRE_RL_doFSUB_S or WILL_FIRE_RL_doFADD_S)
  case (1'b1)
    EN_req: stateR$D_IN = 2'd0;
    WILL_FIRE_RL_rl_get_fpu_result || WILL_FIRE_RL_doFCLASS_D ||
    WILL_FIRE_RL_doFMV_X_D ||
    WILL_FIRE_RL_doFMV_D_X ||
    WILL_FIRE_RL_doFLE_D ||
    WILL_FIRE_RL_doFLT_D ||
    WILL_FIRE_RL_doFEQ_D ||
    WILL_FIRE_RL_doFMAX_D ||
    WILL_FIRE_RL_doFMIN_D ||
    WILL_FIRE_RL_doFCVT_D_S ||
    WILL_FIRE_RL_doFCVT_S_D ||
    WILL_FIRE_RL_doFCVT_LU_D ||
    WILL_FIRE_RL_doFCVT_L_D ||
    WILL_FIRE_RL_doFCVT_D_LU ||
    WILL_FIRE_RL_doFCVT_D_L ||
    WILL_FIRE_RL_doFCVT_WU_D ||
    WILL_FIRE_RL_doFCVT_W_D ||
    WILL_FIRE_RL_doFCVT_D_WU ||
    WILL_FIRE_RL_doFCVT_D_W ||
    WILL_FIRE_RL_doFSGNJX_D ||
    WILL_FIRE_RL_doFSGNJN_D ||
    WILL_FIRE_RL_doFSGNJ_D:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFNMSUB_D || WILL_FIRE_RL_doFNMADD_D ||
    WILL_FIRE_RL_doFMSUB_D ||
    WILL_FIRE_RL_doFMADD_D ||
    WILL_FIRE_RL_doFMUL_D ||
    WILL_FIRE_RL_doFSUB_D ||
    WILL_FIRE_RL_doFADD_D:
	stateR$D_IN = 2'd1;
    WILL_FIRE_RL_doFCLASS_S || WILL_FIRE_RL_doFLE_S || WILL_FIRE_RL_doFLT_S ||
    WILL_FIRE_RL_doFEQ_S ||
    WILL_FIRE_RL_doFMV_X_W ||
    WILL_FIRE_RL_doFMV_W_X ||
    WILL_FIRE_RL_doFMAX_S ||
    WILL_FIRE_RL_doFMIN_S ||
    WILL_FIRE_RL_doFCVT_WU_S ||
    WILL_FIRE_RL_doFCVT_W_S ||
    WILL_FIRE_RL_doFCVT_LU_S ||
    WILL_FIRE_RL_doFCVT_L_S ||
    WILL_FIRE_RL_doFCVT_S_WU ||
    WILL_FIRE_RL_doFCVT_S_W ||
    WILL_FIRE_RL_doFCVT_S_LU ||
    WILL_FIRE_RL_doFCVT_S_L ||
    WILL_FIRE_RL_doFSGNJX_S ||
    WILL_FIRE_RL_doFSGNJN_S ||
    WILL_FIRE_RL_doFSGNJ_S:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFNMSUB_S || WILL_FIRE_RL_doFNMADD_S ||
    WILL_FIRE_RL_doFMSUB_S ||
    WILL_FIRE_RL_doFMADD_S ||
    WILL_FIRE_RL_doFMUL_S ||
    WILL_FIRE_RL_doFSUB_S ||
    WILL_FIRE_RL_doFADD_S:
	stateR$D_IN = 2'd1;
    default: stateR$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign stateR$EN =
	     EN_req || WILL_FIRE_RL_doFNMSUB_D || WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFADD_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_LU_D ||
	     WILL_FIRE_RL_doFCVT_L_D ||
	     WILL_FIRE_RL_doFCVT_D_LU ||
	     WILL_FIRE_RL_doFCVT_D_L ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_LU_S ||
	     WILL_FIRE_RL_doFCVT_L_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_LU ||
	     WILL_FIRE_RL_doFCVT_S_L ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;

  // submodule fpu
  always@(WILL_FIRE_RL_doFADD_S or
	  MUX_fpu$request_put_1__VAL_1 or
	  WILL_FIRE_RL_doFSUB_S or
	  MUX_fpu$request_put_1__VAL_2 or
	  WILL_FIRE_RL_doFMUL_S or
	  MUX_fpu$request_put_1__VAL_3 or
	  WILL_FIRE_RL_doFMADD_S or
	  MUX_fpu$request_put_1__VAL_4 or
	  WILL_FIRE_RL_doFMSUB_S or
	  MUX_fpu$request_put_1__VAL_5 or
	  WILL_FIRE_RL_doFNMADD_S or
	  MUX_fpu$request_put_1__VAL_6 or
	  WILL_FIRE_RL_doFNMSUB_S or
	  MUX_fpu$request_put_1__VAL_7 or
	  WILL_FIRE_RL_doFADD_D or
	  MUX_fpu$request_put_1__VAL_8 or
	  WILL_FIRE_RL_doFSUB_D or
	  MUX_fpu$request_put_1__VAL_9 or
	  WILL_FIRE_RL_doFMUL_D or
	  MUX_fpu$request_put_1__VAL_10 or
	  WILL_FIRE_RL_doFMADD_D or
	  MUX_fpu$request_put_1__VAL_11 or
	  WILL_FIRE_RL_doFMSUB_D or
	  MUX_fpu$request_put_1__VAL_12 or
	  WILL_FIRE_RL_doFNMADD_D or
	  MUX_fpu$request_put_1__VAL_13 or
	  WILL_FIRE_RL_doFNMSUB_D or MUX_fpu$request_put_1__VAL_14)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_1;
      WILL_FIRE_RL_doFSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_2;
      WILL_FIRE_RL_doFMUL_S: fpu$request_put = MUX_fpu$request_put_1__VAL_3;
      WILL_FIRE_RL_doFMADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_4;
      WILL_FIRE_RL_doFMSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_5;
      WILL_FIRE_RL_doFNMADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_6;
      WILL_FIRE_RL_doFNMSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_7;
      WILL_FIRE_RL_doFADD_D: fpu$request_put = MUX_fpu$request_put_1__VAL_8;
      WILL_FIRE_RL_doFSUB_D: fpu$request_put = MUX_fpu$request_put_1__VAL_9;
      WILL_FIRE_RL_doFMUL_D: fpu$request_put = MUX_fpu$request_put_1__VAL_10;
      WILL_FIRE_RL_doFMADD_D: fpu$request_put = MUX_fpu$request_put_1__VAL_11;
      WILL_FIRE_RL_doFMSUB_D: fpu$request_put = MUX_fpu$request_put_1__VAL_12;
      WILL_FIRE_RL_doFNMADD_D:
	  fpu$request_put = MUX_fpu$request_put_1__VAL_13;
      WILL_FIRE_RL_doFNMSUB_D:
	  fpu$request_put = MUX_fpu$request_put_1__VAL_14;
      default: fpu$request_put =
		   202'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fpu$EN_request_put =
	     WILL_FIRE_RL_doFADD_S || WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFNMSUB_D ;
  assign fpu$EN_response_get = CAN_FIRE_RL_rl_get_fpu_result ;

  // submodule frmFpuF
  assign frmFpuF$D_IN = 1'b0 ;
  assign frmFpuF$ENQ = 1'b0 ;
  assign frmFpuF$DEQ = 1'b0 ;
  assign frmFpuF$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q82 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d3383 ?
	       _theResult___snd__h118547 :
	       _theResult____h110377 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q117 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4608 ?
	       _theResult___snd__h177345 :
	       _theResult____h169046 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q91 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d3813 ?
	       _theResult___snd__h136286 :
	       _theResult____h127987 ;
  assign IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q112 =
	     _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4293 ?
	       _theResult___snd__h167770 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q122 =
	     _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4676 ?
	       _theResult___snd__h167770 :
	       _theResult___snd__h186055 ;
  assign IF_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_ETC__q86 =
	     _0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d3500 ?
	       _theResult___snd__h127117 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_ETC__q96 =
	     _0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d3881 ?
	       _theResult___snd__h127117 :
	       _theResult___snd__h144880 ;
  assign IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45__ETC___d4043 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3149 ?
	       ((_theResult___fst_exp__h118484 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4036) :
	       ((_theResult___fst_exp__h127128 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4041) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1261 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1239 :
	       ((x__h29164[7:0] == 8'd255) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1259) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1399 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 ?
	       guard__h28664 != 2'b0 :
	       x__h29164[7:0] != 8'd255 && guard__h29149 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2199 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2158 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2177 :
	       ((x__h60514[10:0] == 11'd2047) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2197) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2302 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2158 ?
	       guard__h59811 != 2'b0 :
	       x__h60514[10:0] != 11'd2047 && guard__h60499 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1571 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449 ?
	       guard__h34721 != 2'b0 :
	       x__h35220[7:0] != 8'd255 && guard__h35205 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d2469 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2349 ?
	       guard__h69393 != 2'b0 :
	       x__h70095[10:0] != 11'd2047 && guard__h70080 != 2'b0 ;
  assign IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2696 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2657 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2674 :
	       ((x__h83818[10:0] == 11'd2047) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2694) ;
  assign IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2801 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2657 ?
	       guard__h83115 != 2'b0 :
	       x__h83818[10:0] != 11'd2047 && guard__h83803 != 2'b0 ;
  assign IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d440 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d418 :
	       ((x__h12346[7:0] == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d438) ;
  assign IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d610 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 ?
	       guard__h11843 != 2'b0 :
	       x__h12346[7:0] != 8'd255 && guard__h12331 != 2'b0 ;
  assign IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d1067 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881 ?
	       guard__h22351 != 2'b0 :
	       x__h22850[7:0] != 8'd255 && guard__h22835 != 2'b0 ;
  assign IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d2938 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2817 ?
	       guard__h94013 != 2'b0 :
	       x__h94715[10:0] != 11'd2047 && guard__h94700 != 2'b0 ;
  assign IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d3381 =
	     (_theResult____h110377[56] ?
		6'd0 :
		(_theResult____h110377[55] ?
		   6'd1 :
		   (_theResult____h110377[54] ?
		      6'd2 :
		      (_theResult____h110377[53] ?
			 6'd3 :
			 (_theResult____h110377[52] ?
			    6'd4 :
			    (_theResult____h110377[51] ?
			       6'd5 :
			       (_theResult____h110377[50] ?
				  6'd6 :
				  (_theResult____h110377[49] ?
				     6'd7 :
				     (_theResult____h110377[48] ?
					6'd8 :
					(_theResult____h110377[47] ?
					   6'd9 :
					   (_theResult____h110377[46] ?
					      6'd10 :
					      (_theResult____h110377[45] ?
						 6'd11 :
						 (_theResult____h110377[44] ?
						    6'd12 :
						    (_theResult____h110377[43] ?
						       6'd13 :
						       (_theResult____h110377[42] ?
							  6'd14 :
							  (_theResult____h110377[41] ?
							     6'd15 :
							     (_theResult____h110377[40] ?
								6'd16 :
								(_theResult____h110377[39] ?
								   6'd17 :
								   (_theResult____h110377[38] ?
								      6'd18 :
								      (_theResult____h110377[37] ?
									 6'd19 :
									 (_theResult____h110377[36] ?
									    6'd20 :
									    (_theResult____h110377[35] ?
									       6'd21 :
									       (_theResult____h110377[34] ?
										  6'd22 :
										  (_theResult____h110377[33] ?
										     6'd23 :
										     (_theResult____h110377[32] ?
											6'd24 :
											(_theResult____h110377[31] ?
											   6'd25 :
											   (_theResult____h110377[30] ?
											      6'd26 :
											      (_theResult____h110377[29] ?
												 6'd27 :
												 (_theResult____h110377[28] ?
												    6'd28 :
												    (_theResult____h110377[27] ?
												       6'd29 :
												       (_theResult____h110377[26] ?
													  6'd30 :
													  (_theResult____h110377[25] ?
													     6'd31 :
													     (_theResult____h110377[24] ?
														6'd32 :
														(_theResult____h110377[23] ?
														   6'd33 :
														   (_theResult____h110377[22] ?
														      6'd34 :
														      (_theResult____h110377[21] ?
															 6'd35 :
															 (_theResult____h110377[20] ?
															    6'd36 :
															    (_theResult____h110377[19] ?
															       6'd37 :
															       (_theResult____h110377[18] ?
																  6'd38 :
																  (_theResult____h110377[17] ?
																     6'd39 :
																     (_theResult____h110377[16] ?
																	6'd40 :
																	(_theResult____h110377[15] ?
																	   6'd41 :
																	   (_theResult____h110377[14] ?
																	      6'd42 :
																	      (_theResult____h110377[13] ?
																		 6'd43 :
																		 (_theResult____h110377[12] ?
																		    6'd44 :
																		    (_theResult____h110377[11] ?
																		       6'd45 :
																		       (_theResult____h110377[10] ?
																			  6'd46 :
																			  (_theResult____h110377[9] ?
																			     6'd47 :
																			     (_theResult____h110377[8] ?
																				6'd48 :
																				(_theResult____h110377[7] ?
																				   6'd49 :
																				   (_theResult____h110377[6] ?
																				      6'd50 :
																				      (_theResult____h110377[5] ?
																					 6'd51 :
																					 (_theResult____h110377[4] ?
																					    6'd52 :
																					    (_theResult____h110377[3] ?
																					       6'd53 :
																					       (_theResult____h110377[2] ?
																						  6'd54 :
																						  (_theResult____h110377[1] ?
																						     6'd55 :
																						     (_theResult____h110377[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d4606 =
	     (_theResult____h169046[56] ?
		6'd0 :
		(_theResult____h169046[55] ?
		   6'd1 :
		   (_theResult____h169046[54] ?
		      6'd2 :
		      (_theResult____h169046[53] ?
			 6'd3 :
			 (_theResult____h169046[52] ?
			    6'd4 :
			    (_theResult____h169046[51] ?
			       6'd5 :
			       (_theResult____h169046[50] ?
				  6'd6 :
				  (_theResult____h169046[49] ?
				     6'd7 :
				     (_theResult____h169046[48] ?
					6'd8 :
					(_theResult____h169046[47] ?
					   6'd9 :
					   (_theResult____h169046[46] ?
					      6'd10 :
					      (_theResult____h169046[45] ?
						 6'd11 :
						 (_theResult____h169046[44] ?
						    6'd12 :
						    (_theResult____h169046[43] ?
						       6'd13 :
						       (_theResult____h169046[42] ?
							  6'd14 :
							  (_theResult____h169046[41] ?
							     6'd15 :
							     (_theResult____h169046[40] ?
								6'd16 :
								(_theResult____h169046[39] ?
								   6'd17 :
								   (_theResult____h169046[38] ?
								      6'd18 :
								      (_theResult____h169046[37] ?
									 6'd19 :
									 (_theResult____h169046[36] ?
									    6'd20 :
									    (_theResult____h169046[35] ?
									       6'd21 :
									       (_theResult____h169046[34] ?
										  6'd22 :
										  (_theResult____h169046[33] ?
										     6'd23 :
										     (_theResult____h169046[32] ?
											6'd24 :
											(_theResult____h169046[31] ?
											   6'd25 :
											   (_theResult____h169046[30] ?
											      6'd26 :
											      (_theResult____h169046[29] ?
												 6'd27 :
												 (_theResult____h169046[28] ?
												    6'd28 :
												    (_theResult____h169046[27] ?
												       6'd29 :
												       (_theResult____h169046[26] ?
													  6'd30 :
													  (_theResult____h169046[25] ?
													     6'd31 :
													     (_theResult____h169046[24] ?
														6'd32 :
														(_theResult____h169046[23] ?
														   6'd33 :
														   (_theResult____h169046[22] ?
														      6'd34 :
														      (_theResult____h169046[21] ?
															 6'd35 :
															 (_theResult____h169046[20] ?
															    6'd36 :
															    (_theResult____h169046[19] ?
															       6'd37 :
															       (_theResult____h169046[18] ?
																  6'd38 :
																  (_theResult____h169046[17] ?
																     6'd39 :
																     (_theResult____h169046[16] ?
																	6'd40 :
																	(_theResult____h169046[15] ?
																	   6'd41 :
																	   (_theResult____h169046[14] ?
																	      6'd42 :
																	      (_theResult____h169046[13] ?
																		 6'd43 :
																		 (_theResult____h169046[12] ?
																		    6'd44 :
																		    (_theResult____h169046[11] ?
																		       6'd45 :
																		       (_theResult____h169046[10] ?
																			  6'd46 :
																			  (_theResult____h169046[9] ?
																			     6'd47 :
																			     (_theResult____h169046[8] ?
																				6'd48 :
																				(_theResult____h169046[7] ?
																				   6'd49 :
																				   (_theResult____h169046[6] ?
																				      6'd50 :
																				      (_theResult____h169046[5] ?
																					 6'd51 :
																					 (_theResult____h169046[4] ?
																					    6'd52 :
																					    (_theResult____h169046[3] ?
																					       6'd53 :
																					       (_theResult____h169046[2] ?
																						  6'd54 :
																						  (_theResult____h169046[1] ?
																						     6'd55 :
																						     (_theResult____h169046[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d3811 =
	     (_theResult____h127987[56] ?
		6'd0 :
		(_theResult____h127987[55] ?
		   6'd1 :
		   (_theResult____h127987[54] ?
		      6'd2 :
		      (_theResult____h127987[53] ?
			 6'd3 :
			 (_theResult____h127987[52] ?
			    6'd4 :
			    (_theResult____h127987[51] ?
			       6'd5 :
			       (_theResult____h127987[50] ?
				  6'd6 :
				  (_theResult____h127987[49] ?
				     6'd7 :
				     (_theResult____h127987[48] ?
					6'd8 :
					(_theResult____h127987[47] ?
					   6'd9 :
					   (_theResult____h127987[46] ?
					      6'd10 :
					      (_theResult____h127987[45] ?
						 6'd11 :
						 (_theResult____h127987[44] ?
						    6'd12 :
						    (_theResult____h127987[43] ?
						       6'd13 :
						       (_theResult____h127987[42] ?
							  6'd14 :
							  (_theResult____h127987[41] ?
							     6'd15 :
							     (_theResult____h127987[40] ?
								6'd16 :
								(_theResult____h127987[39] ?
								   6'd17 :
								   (_theResult____h127987[38] ?
								      6'd18 :
								      (_theResult____h127987[37] ?
									 6'd19 :
									 (_theResult____h127987[36] ?
									    6'd20 :
									    (_theResult____h127987[35] ?
									       6'd21 :
									       (_theResult____h127987[34] ?
										  6'd22 :
										  (_theResult____h127987[33] ?
										     6'd23 :
										     (_theResult____h127987[32] ?
											6'd24 :
											(_theResult____h127987[31] ?
											   6'd25 :
											   (_theResult____h127987[30] ?
											      6'd26 :
											      (_theResult____h127987[29] ?
												 6'd27 :
												 (_theResult____h127987[28] ?
												    6'd28 :
												    (_theResult____h127987[27] ?
												       6'd29 :
												       (_theResult____h127987[26] ?
													  6'd30 :
													  (_theResult____h127987[25] ?
													     6'd31 :
													     (_theResult____h127987[24] ?
														6'd32 :
														(_theResult____h127987[23] ?
														   6'd33 :
														   (_theResult____h127987[22] ?
														      6'd34 :
														      (_theResult____h127987[21] ?
															 6'd35 :
															 (_theResult____h127987[20] ?
															    6'd36 :
															    (_theResult____h127987[19] ?
															       6'd37 :
															       (_theResult____h127987[18] ?
																  6'd38 :
																  (_theResult____h127987[17] ?
																     6'd39 :
																     (_theResult____h127987[16] ?
																	6'd40 :
																	(_theResult____h127987[15] ?
																	   6'd41 :
																	   (_theResult____h127987[14] ?
																	      6'd42 :
																	      (_theResult____h127987[13] ?
																		 6'd43 :
																		 (_theResult____h127987[12] ?
																		    6'd44 :
																		    (_theResult____h127987[11] ?
																		       6'd45 :
																		       (_theResult____h127987[10] ?
																			  6'd46 :
																			  (_theResult____h127987[9] ?
																			     6'd47 :
																			     (_theResult____h127987[8] ?
																				6'd48 :
																				(_theResult____h127987[7] ?
																				   6'd49 :
																				   (_theResult____h127987[6] ?
																				      6'd50 :
																				      (_theResult____h127987[5] ?
																					 6'd51 :
																					 (_theResult____h127987[4] ?
																					    6'd52 :
																					    (_theResult____h127987[3] ?
																					       6'd53 :
																					       (_theResult____h127987[2] ?
																						  6'd54 :
																						  (_theResult____h127987[1] ?
																						     6'd55 :
																						     (_theResult____h127987[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3436 =
	     (guard__h110387 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h118484 :
	       _theResult___exp__h119007 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3438 =
	     (guard__h110387 == 2'b0) ?
	       _theResult___fst_exp__h118484 :
	       (requestR[191] ?
		  _theResult___exp__h119007 :
		  _theResult___fst_exp__h118484) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3961 =
	     (guard__h110387 == 2'b0 || requestR[191]) ?
	       sfdin__h118478[56:34] :
	       _theResult___sfd__h119008 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3963 =
	     (guard__h110387 == 2'b0) ?
	       sfdin__h118478[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h119008 :
		  sfdin__h118478[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4661 =
	     (guard__h169056 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h177282 :
	       _theResult___exp__h178008 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4663 =
	     (guard__h169056 == 2'b0) ?
	       _theResult___fst_exp__h177282 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h178008 :
		  _theResult___fst_exp__h177282) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4779 =
	     (guard__h169056 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       sfdin__h177276[56:5] :
	       _theResult___sfd__h178009 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4781 =
	     (guard__h169056 == 2'b0) ?
	       sfdin__h177276[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h178009 :
		  sfdin__h177276[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3866 =
	     (guard__h127997 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h136223 :
	       _theResult___exp__h136746 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3868 =
	     (guard__h127997 == 2'b0) ?
	       _theResult___fst_exp__h136223 :
	       (requestR[191] ?
		  _theResult___exp__h136746 :
		  _theResult___fst_exp__h136223) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4001 =
	     (guard__h127997 == 2'b0 || requestR[191]) ?
	       sfdin__h136217[56:34] :
	       _theResult___sfd__h136747 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4003 =
	     (guard__h127997 == 2'b0) ?
	       sfdin__h136217[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h136747 :
		  sfdin__h136217[56:34]) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4341 =
	     (guard__h159820 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h167781 :
	       _theResult___exp__h168433 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4343 =
	     (guard__h159820 == 2'b0) ?
	       _theResult___fst_exp__h167781 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h168433 :
		  _theResult___fst_exp__h167781) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4725 =
	     (guard__h178081 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h186071 :
	       _theResult___exp__h186748 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4727 =
	     (guard__h178081 == 2'b0) ?
	       _theResult___fst_exp__h186071 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h186748 :
		  _theResult___fst_exp__h186071) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4755 =
	     (guard__h159820 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h167732[56:5] :
	       _theResult___sfd__h168434 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4757 =
	     (guard__h159820 == 2'b0) ?
	       _theResult___snd__h167732[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h168434 :
		  _theResult___snd__h167732[56:5]) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4795 =
	     (guard__h178081 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h186017[56:5] :
	       _theResult___sfd__h186749 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4797 =
	     (guard__h178081 == 2'b0) ?
	       _theResult___snd__h186017[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h186749 :
		  _theResult___snd__h186017[56:5]) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3548 =
	     (guard__h119080 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h127128 :
	       _theResult___exp__h127577 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3550 =
	     (guard__h119080 == 2'b0) ?
	       _theResult___fst_exp__h127128 :
	       (requestR[191] ?
		  _theResult___exp__h127577 :
		  _theResult___fst_exp__h127128) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3930 =
	     (guard__h136819 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h144896 :
	       _theResult___exp__h145370 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3932 =
	     (guard__h136819 == 2'b0) ?
	       _theResult___fst_exp__h144896 :
	       (requestR[191] ?
		  _theResult___exp__h145370 :
		  _theResult___fst_exp__h144896) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3977 =
	     (guard__h119080 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h127079[56:34] :
	       _theResult___sfd__h127578 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3979 =
	     (guard__h119080 == 2'b0) ?
	       _theResult___snd__h127079[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h127578 :
		  _theResult___snd__h127079[56:34]) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d4017 =
	     (guard__h136819 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h144842[56:34] :
	       _theResult___sfd__h145371 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d4019 =
	     (guard__h136819 == 2'b0) ?
	       _theResult___snd__h144842[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h145371 :
		  _theResult___snd__h144842[56:34]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1281 =
	     (guard__h28664 == 2'b0) ?
	       8'd0 :
	       (requestR[159] ? _theResult___exp__h29074 : 8'd0) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1304 =
	     (guard__h29149 == 2'b0 || requestR[159]) ?
	       x__h29164[7:0] :
	       _theResult___exp__h29585 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306 =
	     (guard__h29149 == 2'b0) ?
	       x__h29164[7:0] :
	       (requestR[159] ? _theResult___exp__h29585 : x__h29164[7:0]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1324 =
	     (guard__h28664 == 2'b0 || requestR[159]) ?
	       sfd___3__h28654[31:9] :
	       _theResult___sfd__h29075 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1326 =
	     (guard__h28664 == 2'b0) ?
	       sfd___3__h28654[31:9] :
	       (requestR[159] ?
		  _theResult___sfd__h29075 :
		  sfd___3__h28654[31:9]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1339 =
	     (guard__h29149 == 2'b0 || requestR[159]) ?
	       sfd___3__h28654[30:8] :
	       _theResult___sfd__h29586 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1341 =
	     (guard__h29149 == 2'b0) ?
	       sfd___3__h28654[30:8] :
	       (requestR[159] ?
		  _theResult___sfd__h29586 :
		  sfd___3__h28654[30:8]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2218 =
	     (guard__h59811 == 2'b0) ?
	       11'd0 :
	       (requestR[159] ? _theResult___exp__h60424 : 11'd0) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2241 =
	     (guard__h60499 == 2'b0 || requestR[159]) ?
	       x__h60514[10:0] :
	       _theResult___exp__h61138 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2243 =
	     (guard__h60499 == 2'b0) ?
	       x__h60514[10:0] :
	       (requestR[159] ? _theResult___exp__h61138 : x__h60514[10:0]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2261 =
	     (guard__h59811 == 2'b0 || requestR[159]) ?
	       sfd___3__h59801[54:3] :
	       _theResult___sfd__h60425 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2263 =
	     (guard__h59811 == 2'b0) ?
	       sfd___3__h59801[54:3] :
	       (requestR[159] ?
		  _theResult___sfd__h60425 :
		  sfd___3__h59801[54:3]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2276 =
	     (guard__h60499 == 2'b0 || requestR[159]) ?
	       sfd___3__h59801[53:2] :
	       _theResult___sfd__h61139 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2278 =
	     (guard__h60499 == 2'b0) ?
	       sfd___3__h59801[53:2] :
	       (requestR[159] ?
		  _theResult___sfd__h61139 :
		  sfd___3__h59801[53:2]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2715 =
	     (guard__h83115 == 2'b0) ?
	       11'd0 :
	       (requestR[191] ? _theResult___exp__h83728 : 11'd0) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2738 =
	     (guard__h83803 == 2'b0 || requestR[191]) ?
	       x__h83818[10:0] :
	       _theResult___exp__h84442 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2740 =
	     (guard__h83803 == 2'b0) ?
	       x__h83818[10:0] :
	       (requestR[191] ? _theResult___exp__h84442 : x__h83818[10:0]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2758 =
	     (guard__h83115 == 2'b0 || requestR[191]) ?
	       sfd___3__h11833[63:12] :
	       _theResult___sfd__h83729 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2760 =
	     (guard__h83115 == 2'b0) ?
	       sfd___3__h11833[63:12] :
	       (requestR[191] ?
		  _theResult___sfd__h83729 :
		  sfd___3__h11833[63:12]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2773 =
	     (guard__h83803 == 2'b0 || requestR[191]) ?
	       sfd___3__h11833[62:11] :
	       _theResult___sfd__h84443 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2775 =
	     (guard__h83803 == 2'b0) ?
	       sfd___3__h11833[62:11] :
	       (requestR[191] ?
		  _theResult___sfd__h84443 :
		  sfd___3__h11833[62:11]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d460 =
	     (guard__h11843 == 2'b0) ?
	       8'd0 :
	       (requestR[191] ? _theResult___exp__h12256 : 8'd0) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d483 =
	     (guard__h12331 == 2'b0 || requestR[191]) ?
	       x__h12346[7:0] :
	       _theResult___exp__h12767 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d485 =
	     (guard__h12331 == 2'b0) ?
	       x__h12346[7:0] :
	       (requestR[191] ? _theResult___exp__h12767 : x__h12346[7:0]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d503 =
	     (guard__h11843 == 2'b0 || requestR[191]) ?
	       sfd___3__h11833[63:41] :
	       _theResult___sfd__h12257 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d505 =
	     (guard__h11843 == 2'b0) ?
	       sfd___3__h11833[63:41] :
	       (requestR[191] ?
		  _theResult___sfd__h12257 :
		  sfd___3__h11833[63:41]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d518 =
	     (guard__h12331 == 2'b0 || requestR[191]) ?
	       sfd___3__h11833[62:40] :
	       _theResult___sfd__h12768 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d520 =
	     (guard__h12331 == 2'b0) ?
	       sfd___3__h11833[62:40] :
	       (requestR[191] ?
		  _theResult___sfd__h12768 :
		  sfd___3__h11833[62:40]) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1956 =
	     (sV2_exp__h926 == 8'd255 && sV2_sfd__h927[22] ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1925) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       (IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d1929 ?
		  requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
		  IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1954) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1960 =
	     (sV2_exp__h926 == 8'd255 && sV2_sfd__h927 != 23'd0 &&
	      !sV2_sfd__h927[22]) ?
	       res__h42101 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1959 ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1970 =
	     IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d1929 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1969 ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1972 =
	     (sV2_exp__h926 == 8'd255 && sV2_sfd__h927[22]) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       (IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1925 ?
		  requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
		  IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1970) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1976 =
	     (sV2_exp__h926 == 8'd255 && sV2_sfd__h927 != 23'd0 &&
	      !sV2_sfd__h927[22]) ?
	       res__h42101 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1975 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1668 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0) ?
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1597 :
	       ((sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
		  64'd0 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1666) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1727 =
	     (sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
	       64'd0 :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1698[19] ?
		  64'hFFFFFFFFFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1725) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1817 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0) ?
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1754 :
	       ((sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1815) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1871 =
	     (sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
	       32'd0 :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1842[19] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1869) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1957 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22]) ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1956 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1959 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22] &&
	      sV2_exp__h926 == 8'd255 &&
	      sV2_sfd__h927[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1957 } ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1961 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	      !sV1_sfd__h824[22]) ?
	       res__h41864 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1960 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1973 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22]) ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1972 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1975 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22] &&
	      sV2_exp__h926 == 8'd255 &&
	      sV2_sfd__h927[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1973 } ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1977 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	      !sV1_sfd__h824[22]) ?
	       res__h41864 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1976 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2047 =
	     (sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
	       res___1__h50506 :
	       ((sV1_exp__h823 == 8'd0) ? res___1__h50525 : res__h50541) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2048 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0) ?
	       res___1__h50496 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2047 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4291 =
	     ((sV1_exp__h823 == 8'd0) ?
		(sV1_sfd__h824[22] ?
		   6'd2 :
		   (sV1_sfd__h824[21] ?
		      6'd3 :
		      (sV1_sfd__h824[20] ?
			 6'd4 :
			 (sV1_sfd__h824[19] ?
			    6'd5 :
			    (sV1_sfd__h824[18] ?
			       6'd6 :
			       (sV1_sfd__h824[17] ?
				  6'd7 :
				  (sV1_sfd__h824[16] ?
				     6'd8 :
				     (sV1_sfd__h824[15] ?
					6'd9 :
					(sV1_sfd__h824[14] ?
					   6'd10 :
					   (sV1_sfd__h824[13] ?
					      6'd11 :
					      (sV1_sfd__h824[12] ?
						 6'd12 :
						 (sV1_sfd__h824[11] ?
						    6'd13 :
						    (sV1_sfd__h824[10] ?
						       6'd14 :
						       (sV1_sfd__h824[9] ?
							  6'd15 :
							  (sV1_sfd__h824[8] ?
							     6'd16 :
							     (sV1_sfd__h824[7] ?
								6'd17 :
								(sV1_sfd__h824[6] ?
								   6'd18 :
								   (sV1_sfd__h824[5] ?
								      6'd19 :
								      (sV1_sfd__h824[4] ?
									 6'd20 :
									 (sV1_sfd__h824[3] ?
									    6'd21 :
									    (sV1_sfd__h824[2] ?
									       6'd22 :
									       (sV1_sfd__h824[1] ?
										  6'd23 :
										  (sV1_sfd__h824[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4807 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0) ?
	       _theResult___snd_fst_sfd__h148909 :
	       _theResult___fst_sfd__h186826 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4834 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	      (sV1_exp__h823 == 8'd255 || sV1_exp__h823 == 8'd0) &&
	      sV1_sfd__h824 == 23'd0) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((sV1_exp__h823 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d4820 :
		  IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4832) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4869 =
	     (sV1_exp__h823 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4220 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4221 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4848[4] :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4358 &&
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4359 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4865[4] ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4872 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0) ?
	       sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	       !sV1_sfd__h824[22] :
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4869 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4879 =
	     (sV1_exp__h823 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4220 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4221 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4848[3] :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4358 &&
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4359 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4865[3] ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4893 =
	     (sV1_exp__h823 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4220 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4221 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4848[2] :
	       !SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4358 ||
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4891 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4905 =
	     (sV1_exp__h823 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4220 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4221 ||
		_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4848[1]) :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4358 &&
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4903 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4917 =
	     (sV1_exp__h823 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4220 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4221 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4848[0] :
	       !SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4358 ||
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4915 ;
  assign IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1210 =
	     sfd__h23750[31] ?
	       6'd0 :
	       (sfd__h23750[30] ?
		  6'd1 :
		  (sfd__h23750[29] ?
		     6'd2 :
		     (sfd__h23750[28] ?
			6'd3 :
			(sfd__h23750[27] ?
			   6'd4 :
			   (sfd__h23750[26] ?
			      6'd5 :
			      (sfd__h23750[25] ?
				 6'd6 :
				 (sfd__h23750[24] ?
				    6'd7 :
				    (sfd__h23750[23] ?
				       6'd8 :
				       (sfd__h23750[22] ?
					  6'd9 :
					  (sfd__h23750[21] ?
					     6'd10 :
					     (sfd__h23750[20] ?
						6'd11 :
						(sfd__h23750[19] ?
						   6'd12 :
						   (sfd__h23750[18] ?
						      6'd13 :
						      (sfd__h23750[17] ?
							 6'd14 :
							 (sfd__h23750[16] ?
							    6'd15 :
							    (sfd__h23750[15] ?
							       6'd16 :
							       (sfd__h23750[14] ?
								  6'd17 :
								  (sfd__h23750[13] ?
								     6'd18 :
								     (sfd__h23750[12] ?
									6'd19 :
									(sfd__h23750[11] ?
									   6'd20 :
									   (sfd__h23750[10] ?
									      6'd21 :
									      (sfd__h23750[9] ?
										 6'd22 :
										 (sfd__h23750[8] ?
										    6'd23 :
										    (sfd__h23750[7] ?
										       6'd24 :
										       (sfd__h23750[6] ?
											  6'd25 :
											  (sfd__h23750[5] ?
											     6'd26 :
											     (sfd__h23750[4] ?
												6'd27 :
												(sfd__h23750[3] ?
												   6'd28 :
												   (sfd__h23750[2] ?
												      6'd29 :
												      (sfd__h23750[1] ?
													 6'd30 :
													 (sfd__h23750[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d2150 =
	     sfd__h23750[31] ?
	       6'd0 :
	       (sfd__h23750[30] ?
		  6'd1 :
		  (sfd__h23750[29] ?
		     6'd2 :
		     (sfd__h23750[28] ?
			6'd3 :
			(sfd__h23750[27] ?
			   6'd4 :
			   (sfd__h23750[26] ?
			      6'd5 :
			      (sfd__h23750[25] ?
				 6'd6 :
				 (sfd__h23750[24] ?
				    6'd7 :
				    (sfd__h23750[23] ?
				       6'd8 :
				       (sfd__h23750[22] ?
					  6'd9 :
					  (sfd__h23750[21] ?
					     6'd10 :
					     (sfd__h23750[20] ?
						6'd11 :
						(sfd__h23750[19] ?
						   6'd12 :
						   (sfd__h23750[18] ?
						      6'd13 :
						      (sfd__h23750[17] ?
							 6'd14 :
							 (sfd__h23750[16] ?
							    6'd15 :
							    (sfd__h23750[15] ?
							       6'd16 :
							       (sfd__h23750[14] ?
								  6'd17 :
								  (sfd__h23750[13] ?
								     6'd18 :
								     (sfd__h23750[12] ?
									6'd19 :
									(sfd__h23750[11] ?
									   6'd20 :
									   (sfd__h23750[10] ?
									      6'd21 :
									      (sfd__h23750[9] ?
										 6'd22 :
										 (sfd__h23750[8] ?
										    6'd23 :
										    (sfd__h23750[7] ?
										       6'd24 :
										       (sfd__h23750[6] ?
											  6'd25 :
											  (sfd__h23750[5] ?
											     6'd26 :
											     (sfd__h23750[4] ?
												6'd27 :
												(sfd__h23750[3] ?
												   6'd28 :
												   (sfd__h23750[2] ?
												      6'd29 :
												      (sfd__h23750[1] ?
													 6'd30 :
													 (sfd__h23750[0] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_BI_ETC___d382 =
	     sfd__h2228[63] ?
	       7'd0 :
	       (sfd__h2228[62] ?
		  7'd1 :
		  (sfd__h2228[61] ?
		     7'd2 :
		     (sfd__h2228[60] ?
			7'd3 :
			(sfd__h2228[59] ?
			   7'd4 :
			   (sfd__h2228[58] ?
			      7'd5 :
			      (sfd__h2228[57] ?
				 7'd6 :
				 (sfd__h2228[56] ?
				    7'd7 :
				    (sfd__h2228[55] ?
				       7'd8 :
				       (sfd__h2228[54] ?
					  7'd9 :
					  (sfd__h2228[53] ?
					     7'd10 :
					     (sfd__h2228[52] ?
						7'd11 :
						(sfd__h2228[51] ?
						   7'd12 :
						   (sfd__h2228[50] ?
						      7'd13 :
						      (sfd__h2228[49] ?
							 7'd14 :
							 (sfd__h2228[48] ?
							    7'd15 :
							    (sfd__h2228[47] ?
							       7'd16 :
							       (sfd__h2228[46] ?
								  7'd17 :
								  (sfd__h2228[45] ?
								     7'd18 :
								     (sfd__h2228[44] ?
									7'd19 :
									(sfd__h2228[43] ?
									   7'd20 :
									   (sfd__h2228[42] ?
									      7'd21 :
									      (sfd__h2228[41] ?
										 7'd22 :
										 (sfd__h2228[40] ?
										    7'd23 :
										    (sfd__h2228[39] ?
										       7'd24 :
										       (sfd__h2228[38] ?
											  7'd25 :
											  (sfd__h2228[37] ?
											     7'd26 :
											     (sfd__h2228[36] ?
												7'd27 :
												(sfd__h2228[35] ?
												   7'd28 :
												   (sfd__h2228[34] ?
												      7'd29 :
												      (sfd__h2228[33] ?
													 7'd30 :
													 (sfd__h2228[32] ?
													    7'd31 :
													    (sfd__h2228[31] ?
													       7'd32 :
													       (sfd__h2228[30] ?
														  7'd33 :
														  (sfd__h2228[29] ?
														     7'd34 :
														     (sfd__h2228[28] ?
															7'd35 :
															(sfd__h2228[27] ?
															   7'd36 :
															   (sfd__h2228[26] ?
															      7'd37 :
															      (sfd__h2228[25] ?
																 7'd38 :
																 (sfd__h2228[24] ?
																    7'd39 :
																    (sfd__h2228[23] ?
																       7'd40 :
																       (sfd__h2228[22] ?
																	  7'd41 :
																	  (sfd__h2228[21] ?
																	     7'd42 :
																	     (sfd__h2228[20] ?
																		7'd43 :
																		(sfd__h2228[19] ?
																		   7'd44 :
																		   (sfd__h2228[18] ?
																		      7'd45 :
																		      (sfd__h2228[17] ?
																			 7'd46 :
																			 (sfd__h2228[16] ?
																			    7'd47 :
																			    (sfd__h2228[15] ?
																			       7'd48 :
																			       (sfd__h2228[14] ?
																				  7'd49 :
																				  (sfd__h2228[13] ?
																				     7'd50 :
																				     (sfd__h2228[12] ?
																					7'd51 :
																					(sfd__h2228[11] ?
																					   7'd52 :
																					   (sfd__h2228[10] ?
																					      7'd53 :
																					      (sfd__h2228[9] ?
																						 7'd54 :
																						 (sfd__h2228[8] ?
																						    7'd55 :
																						    (sfd__h2228[7] ?
																						       7'd56 :
																						       (sfd__h2228[6] ?
																							  7'd57 :
																							  (sfd__h2228[5] ?
																							     7'd58 :
																							     (sfd__h2228[4] ?
																								7'd59 :
																								(sfd__h2228[3] ?
																								   7'd60 :
																								   (sfd__h2228[2] ?
																								      7'd61 :
																								      (sfd__h2228[1] ?
																									 7'd62 :
																									 (sfd__h2228[0] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1664 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1637 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1658 ?
		  ((x__h37235[88:25] == 64'h7FFFFFFFFFFFFFFF) ?
		     x__h37235[88:25] :
		     x__h37235[88:25] + 64'd1) :
		  x__h37235[88:25]) :
	       64'd0 ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1666 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1602 ==
	      20'd1048513) ?
	       ((_theResult_____2__h36276[64:63] == 2'b11) ?
		  _theResult_____2__h36276[63:0] :
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1597) :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1635[19] ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1597 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1664) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1689 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1602 ==
	      20'd1048513) ?
	       _theResult_____2__h36276[64:63] == 2'b11 &&
	       guard__h36274 != 2'd0 :
	       !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1635[19] &&
	       (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1637 ||
		guard__h37049 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1725 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1700 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1719 ?
		  ((x__h38548[88:25] == 64'hFFFFFFFFFFFFFFFF) ?
		     x__h38548[88:25] :
		     x__h38548[88:25] + 64'd1) :
		  x__h38548[88:25]) :
	       64'd0 ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1813 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1786 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1807 ?
		  ((x__h39785[56:25] == 32'h7FFFFFFF) ?
		     x__h39785[56:25] :
		     x__h39785[56:25] + 32'd1) :
		  x__h39785[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1815 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1602 ==
	      20'd1048545) ?
	       ((_theResult_____2__h39050[32:31] == 2'b11) ?
		  _theResult_____2__h39050[31:0] :
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1754) :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1784[19] ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1754 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1813) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1833 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1602 ==
	      20'd1048545) ?
	       _theResult_____2__h39050[32:31] == 2'b11 &&
	       guard__h39048 != 2'd0 :
	       !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1784[19] &&
	       (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1786 ||
		guard__h39599 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1869 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1844 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1863 ?
		  ((x__h40860[56:25] == 32'hFFFFFFFF) ?
		     x__h40860[56:25] :
		     x__h40860[56:25] + 32'd1) :
		  x__h40860[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2557 =
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2530 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2551 ?
		  ((x__h72088[85:54] == 32'h7FFFFFFF) ?
		     x__h72088[85:54] :
		     x__h72088[85:54] + 32'd1) :
		  x__h72088[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2559 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2495 ==
	      24'd16777185) ?
	       ((_theResult_____2__h71353[32:31] == 2'b11) ?
		  _theResult_____2__h71353[31:0] :
		  IF_requestR_BIT_191_25_THEN_2147483648_ELSE_21_ETC___d2490) :
	       (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2528[23] ?
		  IF_requestR_BIT_191_25_THEN_2147483648_ELSE_21_ETC___d2490 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2557) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2583 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2495 ==
	      24'd16777185) ?
	       _theResult_____2__h71353[32:31] == 2'b11 &&
	       guard__h71351 != 2'd0 :
	       !NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2528[23] &&
	       (!NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2530 ||
		guard__h71902 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2619 =
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2594 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2613 ?
		  ((x__h73163[85:54] == 32'hFFFFFFFF) ?
		     x__h73163[85:54] :
		     x__h73163[85:54] + 32'd1) :
		  x__h73163[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3008 =
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2981 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3002 ?
		  ((x__h96929[117:54] == 64'h7FFFFFFFFFFFFFFF) ?
		     x__h96929[117:54] :
		     x__h96929[117:54] + 64'd1) :
		  x__h96929[117:54]) :
	       64'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3010 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2495 ==
	      24'd16777153) ?
	       ((_theResult_____2__h95970[64:63] == 2'b11) ?
		  _theResult_____2__h95970[63:0] :
		  IF_requestR_BIT_191_25_THEN_922337203685477580_ETC___d2949) :
	       (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2979[23] ?
		  IF_requestR_BIT_191_25_THEN_922337203685477580_ETC___d2949 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3008) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3027 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2495 ==
	      24'd16777153) ?
	       _theResult_____2__h95970[64:63] == 2'b11 &&
	       guard__h95968 != 2'd0 :
	       !NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2979[23] &&
	       (!NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2981 ||
		guard__h96743 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3063 =
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3038 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3057 ?
		  ((x__h98225[117:54] == 64'hFFFFFFFFFFFFFFFF) ?
		     x__h98225[117:54] :
		     x__h98225[117:54] + 64'd1) :
		  x__h98225[117:54]) :
	       64'd0 ;
  assign IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d2200 =
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2154 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2156) ?
	       requestR[159] :
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2199 ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d4820 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4220 ||
	      _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4221 ||
	      _theResult___fst_exp__h167781 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4819 ;
  assign IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1954 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1953 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 ;
  assign IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1969 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1953 ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1949 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1938 ||
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1939 &&
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1940 :
	       !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1943 ||
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1939 &&
	       !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1945 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4675 =
	     ((SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q116[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q121[10],
		  SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q121 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4832 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4358 ?
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4359 ?
		  ((_theResult___fst_exp__h177282 == 11'd2047) ?
		     requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4824) :
		  ((_theResult___fst_exp__h186071 == 11'd2047) ?
		     requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4829)) :
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4891 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4359 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4865[2] :
	       _theResult___fst_exp__h186810 == 11'd2047 &&
	       _theResult___fst_sfd__h186811 == 52'd0 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4903 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4359 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4865[1] :
	       _theResult___fst_exp__h186071 == 11'd0 &&
	       guard__h178081 != 2'b0 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4915 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4359 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4865[0] :
	       _theResult___fst_exp__h186071 != 11'd2047 &&
	       guard__h178081 != 2'b0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d3880 =
	     ((SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC__q90[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC__q95[7],
		  SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC__q95 }) -
	     9'd386 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4055 =
	     SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3566 ?
	       ((_theResult___fst_exp__h136223 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4048) :
	       ((_theResult___fst_exp__h144896 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4053) ;
  assign IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4133 =
	     SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3566 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4104[2] :
	       _theResult___fst_exp__h145432 == 8'd255 &&
	       _theResult___fst_sfd__h145433 == 23'd0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4146 =
	     SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3566 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4104[1] :
	       _theResult___fst_exp__h144896 == 8'd0 &&
	       guard__h136819 != 2'b0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4159 =
	     SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3566 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4104[0] :
	       _theResult___fst_exp__h144896 != 8'd255 &&
	       guard__h136819 != 2'b0 ;
  assign IF_requestR_BITS_126_TO_116_929_EQ_2047_930_AN_ETC___d4977 =
	     (requestR[126:116] == 11'd2047 && requestR[115] ||
	      requestR_BITS_190_TO_180_481_EQ_0_491_AND_requ_ETC___d4946) ?
	       requestR[191:128] :
	       (requestR_BITS_126_TO_116_929_EQ_0_943_AND_requ_ETC___d4950 ?
		  requestR[127:64] :
		  res__h191837) ;
  assign IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d1929 =
	     sV2_exp__h926 == 8'd0 && sV2_sfd__h927 == 23'd0 &&
	     requestR[127:96] == 32'hFFFFFFFF &&
	     requestR[95] &&
	     sV1_exp__h823 == 8'd0 &&
	     sV1_sfd__h824 == 23'd0 &&
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ;
  assign IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1315 =
	     (requestR[159:128] == 32'd0 ||
	      !sfd__h23750[31] && !sfd__h23750[30] && !sfd__h23750[29] &&
	      !sfd__h23750[28] &&
	      !sfd__h23750[27] &&
	      !sfd__h23750[26] &&
	      !sfd__h23750[25] &&
	      !sfd__h23750[24] &&
	      !sfd__h23750[23] &&
	      !sfd__h23750[22] &&
	      !sfd__h23750[21] &&
	      !sfd__h23750[20] &&
	      !sfd__h23750[19] &&
	      !sfd__h23750[18] &&
	      !sfd__h23750[17] &&
	      !sfd__h23750[16] &&
	      !sfd__h23750[15] &&
	      !sfd__h23750[14] &&
	      !sfd__h23750[13] &&
	      !sfd__h23750[12] &&
	      !sfd__h23750[11] &&
	      !sfd__h23750[10] &&
	      !sfd__h23750[9] &&
	      !sfd__h23750[8] &&
	      !sfd__h23750[7] &&
	      !sfd__h23750[6] &&
	      !sfd__h23750[5] &&
	      !sfd__h23750[4] &&
	      !sfd__h23750[3] &&
	      !sfd__h23750[2] &&
	      !sfd__h23750[1] &&
	      !sfd__h23750[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h29655 ;
  assign IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1522 =
	     (requestR[159:128] == 32'd0 ||
	      !requestR[159] &&
	      NOT_requestR_BIT_158_86_87_AND_NOT_requestR_BI_ETC___d777) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h35710 ;
  assign IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2285 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2154 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2156) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h61203 ;
  assign IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2452 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2347 ||
	      _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2348) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h70783 ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d2621 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       32'd0 :
	       (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2592[23] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2619) ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d3065 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       64'd0 :
	       (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3036[23] ?
		  64'hFFFFFFFFFFFFFFFF :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3063) ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d4991 =
	     requestR_BITS_190_TO_180_481_EQ_0_491_AND_requ_ETC___d4946 ?
	       requestR[127:64] :
	       (requestR_BITS_126_TO_116_929_EQ_0_943_AND_requ_ETC___d4950 ?
		  requestR[191:128] :
		  res__h196385) ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d5062 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       res___1__h204577 :
	       ((requestR[190:180] == 11'd0) ?
		  res___1__h204596 :
		  res__h204612) ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d3498 =
	     ((requestR[190:180] == 11'd0) ?
		(requestR[179] ?
		   6'd2 :
		   (requestR[178] ?
		      6'd3 :
		      (requestR[177] ?
			 6'd4 :
			 (requestR[176] ?
			    6'd5 :
			    (requestR[175] ?
			       6'd6 :
			       (requestR[174] ?
				  6'd7 :
				  (requestR[173] ?
				     6'd8 :
				     (requestR[172] ?
					6'd9 :
					(requestR[171] ?
					   6'd10 :
					   (requestR[170] ?
					      6'd11 :
					      (requestR[169] ?
						 6'd12 :
						 (requestR[168] ?
						    6'd13 :
						    (requestR[167] ?
						       6'd14 :
						       (requestR[166] ?
							  6'd15 :
							  (requestR[165] ?
							     6'd16 :
							     (requestR[164] ?
								6'd17 :
								(requestR[163] ?
								   6'd18 :
								   (requestR[162] ?
								      6'd19 :
								      (requestR[161] ?
									 6'd20 :
									 (requestR[160] ?
									    6'd21 :
									    (requestR[159] ?
									       6'd22 :
									       (requestR[158] ?
										  6'd23 :
										  (requestR[157] ?
										     6'd24 :
										     (requestR[156] ?
											6'd25 :
											(requestR[155] ?
											   6'd26 :
											   (requestR[154] ?
											      6'd27 :
											      (requestR[153] ?
												 6'd28 :
												 (requestR[152] ?
												    6'd29 :
												    (requestR[151] ?
												       6'd30 :
												       (requestR[150] ?
													  6'd31 :
													  (requestR[149] ?
													     6'd32 :
													     (requestR[148] ?
														6'd33 :
														(requestR[147] ?
														   6'd34 :
														   (requestR[146] ?
														      6'd35 :
														      (requestR[145] ?
															 6'd36 :
															 (requestR[144] ?
															    6'd37 :
															    (requestR[143] ?
															       6'd38 :
															       (requestR[142] ?
																  6'd39 :
																  (requestR[141] ?
																     6'd40 :
																     (requestR[140] ?
																	6'd41 :
																	(requestR[139] ?
																	   6'd42 :
																	   (requestR[138] ?
																	      6'd43 :
																	      (requestR[137] ?
																		 6'd44 :
																		 (requestR[136] ?
																		    6'd45 :
																		    (requestR[135] ?
																		       6'd46 :
																		       (requestR[134] ?
																			  6'd47 :
																			  (requestR[133] ?
																			     6'd48 :
																			     (requestR[132] ?
																				6'd49 :
																				(requestR[131] ?
																				   6'd50 :
																				   (requestR[130] ?
																				      6'd51 :
																				      (requestR[129] ?
																					 6'd52 :
																					 (requestR[128] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4057 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3148 ?
		  IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45__ETC___d4043 :
		  requestR[191]) :
	       (SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3565 ?
		  IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4055 :
		  requestR[191]) ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4108 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4090 :
	       SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3565 &&
	       SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3566 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4104[4] ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4119 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4115 :
	       SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3565 &&
	       SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3566 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4104[3] ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4135 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4127 :
	       !SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3565 ||
	       IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4133 ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4148 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4142 :
	       SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3565 &&
	       IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4146 ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4161 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4155 :
	       !SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3565 ||
	       IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d4159 ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_2047_482_AN_ETC___d2561 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_BIT_191_25_THEN_2147483648_ELSE_21_ETC___d2490 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2559) ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_2047_482_AN_ETC___d3012 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_BIT_191_25_THEN_922337203685477580_ETC___d2949 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  64'd0 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3010) ;
  assign IF_requestR_BITS_190_TO_180_481_EQ_2047_482_AN_ETC___d4029 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       _theResult___snd_fst_sfd__h102731 :
	       _theResult___fst_sfd__h145448 ;
  assign IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d2749 =
	     (requestR[191:128] == 64'd0 ||
	      !sfd__h2228[63] && !sfd__h2228[62] && !sfd__h2228[61] &&
	      !sfd__h2228[60] &&
	      !sfd__h2228[59] &&
	      !sfd__h2228[58] &&
	      !sfd__h2228[57] &&
	      !sfd__h2228[56] &&
	      !sfd__h2228[55] &&
	      !sfd__h2228[54] &&
	      !sfd__h2228[53] &&
	      !sfd__h2228[52] &&
	      !sfd__h2228[51] &&
	      !sfd__h2228[50] &&
	      !sfd__h2228[49] &&
	      !sfd__h2228[48] &&
	      !sfd__h2228[47] &&
	      !sfd__h2228[46] &&
	      !sfd__h2228[45] &&
	      !sfd__h2228[44] &&
	      !sfd__h2228[43] &&
	      !sfd__h2228[42] &&
	      !sfd__h2228[41] &&
	      !sfd__h2228[40] &&
	      !sfd__h2228[39] &&
	      !sfd__h2228[38] &&
	      !sfd__h2228[37] &&
	      !sfd__h2228[36] &&
	      !sfd__h2228[35] &&
	      !sfd__h2228[34] &&
	      !sfd__h2228[33] &&
	      !sfd__h2228[32] &&
	      !sfd__h2228[31] &&
	      !sfd__h2228[30] &&
	      !sfd__h2228[29] &&
	      !sfd__h2228[28] &&
	      !sfd__h2228[27] &&
	      !sfd__h2228[26] &&
	      !sfd__h2228[25] &&
	      !sfd__h2228[24] &&
	      !sfd__h2228[23] &&
	      !sfd__h2228[22] &&
	      !sfd__h2228[21] &&
	      !sfd__h2228[20] &&
	      !sfd__h2228[19] &&
	      !sfd__h2228[18] &&
	      !sfd__h2228[17] &&
	      !sfd__h2228[16] &&
	      !sfd__h2228[15] &&
	      !sfd__h2228[14] &&
	      !sfd__h2228[13] &&
	      !sfd__h2228[12] &&
	      !sfd__h2228[11] &&
	      !sfd__h2228[10] &&
	      !sfd__h2228[9] &&
	      !sfd__h2228[8] &&
	      !sfd__h2228[7] &&
	      !sfd__h2228[6] &&
	      !sfd__h2228[5] &&
	      !sfd__h2228[4] &&
	      !sfd__h2228[3] &&
	      !sfd__h2228[2] &&
	      !sfd__h2228[1] &&
	      !sfd__h2228[0]) ?
	       11'd0 :
	       _theResult___snd_fst_exp__h84512 ;
  assign IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d494 =
	     (requestR[191:128] == 64'd0 ||
	      !sfd__h2228[63] && !sfd__h2228[62] && !sfd__h2228[61] &&
	      !sfd__h2228[60] &&
	      !sfd__h2228[59] &&
	      !sfd__h2228[58] &&
	      !sfd__h2228[57] &&
	      !sfd__h2228[56] &&
	      !sfd__h2228[55] &&
	      !sfd__h2228[54] &&
	      !sfd__h2228[53] &&
	      !sfd__h2228[52] &&
	      !sfd__h2228[51] &&
	      !sfd__h2228[50] &&
	      !sfd__h2228[49] &&
	      !sfd__h2228[48] &&
	      !sfd__h2228[47] &&
	      !sfd__h2228[46] &&
	      !sfd__h2228[45] &&
	      !sfd__h2228[44] &&
	      !sfd__h2228[43] &&
	      !sfd__h2228[42] &&
	      !sfd__h2228[41] &&
	      !sfd__h2228[40] &&
	      !sfd__h2228[39] &&
	      !sfd__h2228[38] &&
	      !sfd__h2228[37] &&
	      !sfd__h2228[36] &&
	      !sfd__h2228[35] &&
	      !sfd__h2228[34] &&
	      !sfd__h2228[33] &&
	      !sfd__h2228[32] &&
	      !sfd__h2228[31] &&
	      !sfd__h2228[30] &&
	      !sfd__h2228[29] &&
	      !sfd__h2228[28] &&
	      !sfd__h2228[27] &&
	      !sfd__h2228[26] &&
	      !sfd__h2228[25] &&
	      !sfd__h2228[24] &&
	      !sfd__h2228[23] &&
	      !sfd__h2228[22] &&
	      !sfd__h2228[21] &&
	      !sfd__h2228[20] &&
	      !sfd__h2228[19] &&
	      !sfd__h2228[18] &&
	      !sfd__h2228[17] &&
	      !sfd__h2228[16] &&
	      !sfd__h2228[15] &&
	      !sfd__h2228[14] &&
	      !sfd__h2228[13] &&
	      !sfd__h2228[12] &&
	      !sfd__h2228[11] &&
	      !sfd__h2228[10] &&
	      !sfd__h2228[9] &&
	      !sfd__h2228[8] &&
	      !sfd__h2228[7] &&
	      !sfd__h2228[6] &&
	      !sfd__h2228[5] &&
	      !sfd__h2228[4] &&
	      !sfd__h2228[3] &&
	      !sfd__h2228[2] &&
	      !sfd__h2228[1] &&
	      !sfd__h2228[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h12837 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596 =
	     sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) &&
	     sV1_exp__h823 == 8'd255 &&
	     sV1_sfd__h824 == 23'd0 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1597 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'h8000000000000000 :
	       64'h7FFFFFFFFFFFFFFF ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1600 =
	     sV1_exp__h823 - 8'd127 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1609 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       -b__h36338 :
	       b__h36338 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1729 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd0 :
	       ((sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0) ?
		  64'hFFFFFFFFFFFFFFFF :
		  IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1727) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1736 =
	     sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	     sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0 ||
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1698[19] ||
	      NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1700 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1719 &&
	      x__h38548[88:25] == 64'hFFFFFFFFFFFFFFFF) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1747 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1736,
	       3'd0,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1741 } ==
	     5'd0 ||
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1736 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1754 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'h80000000 :
	       32'h7FFFFFFF ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1758 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       -b__h39112 :
	       b__h39112 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1873 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'd0 :
	       ((sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0) ?
		  32'hFFFFFFFF :
		  IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1871) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1881 =
	     sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	     sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0 ||
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1842[19] ||
	      NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1844 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1863 &&
	      x__h40860[56:25] == 32'hFFFFFFFF) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1892 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1881,
	       3'd0,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1886 } ==
	     5'd0 ||
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1881 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:128] :
	       31'h7FC00000 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1915 =
	     sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	     !sV1_sfd__h824[22] &&
	     sV2_exp__h926 == 8'd255 &&
	     sV2_sfd__h927 != 23'd0 &&
	     !sV2_sfd__h927[22] ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1925 =
	     sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0 &&
	     requestR[191:160] == 32'hFFFFFFFF &&
	     requestR[159] &&
	     sV2_exp__h926 == 8'd0 &&
	     sV2_sfd__h927 == 23'd0 &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1938 =
	     sV1_exp__h823 < sV2_exp__h926 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1939 =
	     sV1_exp__h823 == sV2_exp__h926 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1940 =
	     sV1_sfd__h824 < sV2_sfd__h927 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1943 =
	     sV1_exp__h823 <= sV2_exp__h926 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1945 =
	     sV1_sfd__h824 <= sV2_sfd__h927 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1963 =
	     sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	     !sV1_sfd__h824[22] ||
	     sV2_exp__h926 == 8'd255 && sV2_sfd__h927 != 23'd0 &&
	     !sV2_sfd__h927[22] ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2000 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1963 ||
	     sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22] ||
	     sV2_exp__h926 == 8'd255 && sV2_sfd__h927[22] ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2011 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1943 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1939 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1945) &&
	     !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1938 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1939 ||
	      !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1940) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2015 =
	     sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0 &&
	     sV2_exp__h926 == 8'd0 &&
	     sV2_sfd__h927 == 23'd0 ||
	     NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d2014 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1239 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8664_0b0_requestR_BIT_159_0b1_reques_ETC__q35 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1259 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9149_0b0_requestR_BIT_159_0b1_reques_ETC__q36 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1626 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h36274 == 2'b10) ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1609[24] :
		  guard__h36274 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h36274 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1609[88] &&
		  guard__h36274 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1658 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h37049 == 2'b10) ?
		  x__h37235[25] :
		  guard__h37049 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h37049 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h37235[88] &&
		  guard__h37049 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1719 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h38330 == 2'b10) ?
		  x__h38548[25] :
		  guard__h38330 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h38330 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1775 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h39048 == 2'b10) ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1758[24] :
		  guard__h39048 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h39048 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1758[56] &&
		  guard__h39048 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1807 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h39599 == 2'b10) ?
		  x__h39785[25] :
		  guard__h39599 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h39599 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h39785[56] &&
		  guard__h39599 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1863 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h40642 == 2'b10) ?
		  x__h40860[25] :
		  guard__h40642 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h40642 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2177 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9811_0b0_requestR_BIT_159_0b1_reques_ETC__q50 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2197 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0499_0b0_requestR_BIT_159_0b1_reques_ETC__q51 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2519 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h71351 == 2'b10) ?
		  IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2502[53] :
		  guard__h71351 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h71351 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2502[85] &&
		  guard__h71351 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2551 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h71902 == 2'b10) ?
		  x__h72088[54] :
		  guard__h71902 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h71902 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h72088[85] &&
		  guard__h71902 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2613 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h72945 == 2'b10) ?
		  x__h73163[54] :
		  guard__h72945 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h72945 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2674 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3115_0b0_requestR_BIT_191_0b1_reques_ETC__q67 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2694 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3803_0b0_requestR_BIT_191_0b1_reques_ETC__q68 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2970 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h95968 == 2'b10) ?
		  IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2953[53] :
		  guard__h95968 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h95968 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2953[117] &&
		  guard__h95968 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3002 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h96743 == 2'b10) ?
		  x__h96929[54] :
		  guard__h96743 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h96743 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h96929[117] &&
		  guard__h96743 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3057 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h98007 == 2'b10) ?
		  x__h98225[54] :
		  guard__h98007 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h98007 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4036 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10387_0b0_requestR_BIT_191_0b1_reque_ETC__q108 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4041 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19080_0b0_requestR_BIT_191_0b1_reque_ETC__q109 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4048 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard27997_0b0_requestR_BIT_191_0b1_reque_ETC__q110 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4053 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard36819_0b0_requestR_BIT_191_0b1_reque_ETC__q111 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d418 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard1843_0b0_requestR_BIT_191_0b1_reques_ETC__q16 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d438 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2331_0b0_requestR_BIT_191_0b1_reques_ETC__q17 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4819 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard59820_0b0_requestR_BITS_191_TO_160_E_ETC__q132 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4818 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4824 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard69056_0b0_requestR_BITS_191_TO_160_E_ETC__q133 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4818 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4829 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard78081_0b0_requestR_BITS_191_TO_160_E_ETC__q134 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4818 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1478 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h34721 == 2'b0) ? 8'd0 : _theResult___exp__h35131) :
	       8'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2379 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h69393 == 2'b0) ? 11'd0 : _theResult___exp__h70006) :
	       11'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2845 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h94013 == 2'b0) ? 11'd0 : _theResult___exp__h94626) :
	       11'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d910 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h22351 == 2'b0) ? 8'd0 : _theResult___exp__h22761) :
	       8'd0 ;
  assign IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1443 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d2343 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1390 =
	     (sfd__h23750[31] || sfd__h23750[30] || sfd__h23750[29] ||
	      sfd__h23750[28] ||
	      sfd__h23750[27] ||
	      sfd__h23750[26] ||
	      sfd__h23750[25] ||
	      sfd__h23750[24] ||
	      sfd__h23750[23] ||
	      sfd__h23750[22] ||
	      sfd__h23750[21] ||
	      sfd__h23750[20] ||
	      sfd__h23750[19] ||
	      sfd__h23750[18] ||
	      sfd__h23750[17] ||
	      sfd__h23750[16] ||
	      sfd__h23750[15] ||
	      sfd__h23750[14] ||
	      sfd__h23750[13] ||
	      sfd__h23750[12] ||
	      sfd__h23750[11] ||
	      sfd__h23750[10] ||
	      sfd__h23750[9] ||
	      sfd__h23750[8] ||
	      sfd__h23750[7] ||
	      sfd__h23750[6] ||
	      sfd__h23750[5] ||
	      sfd__h23750[4] ||
	      sfd__h23750[3] ||
	      sfd__h23750[2] ||
	      sfd__h23750[1] ||
	      sfd__h23750[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 &&
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 &&
	      _theResult___fst_exp__h29646 == 8'd255 &&
	      _theResult___fst_sfd__h29647 == 23'd0) ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1393 =
	     (sfd__h23750[31] || sfd__h23750[30] || sfd__h23750[29] ||
	      sfd__h23750[28] ||
	      sfd__h23750[27] ||
	      sfd__h23750[26] ||
	      sfd__h23750[25] ||
	      sfd__h23750[24] ||
	      sfd__h23750[23] ||
	      sfd__h23750[22] ||
	      sfd__h23750[21] ||
	      sfd__h23750[20] ||
	      sfd__h23750[19] ||
	      sfd__h23750[18] ||
	      sfd__h23750[17] ||
	      sfd__h23750[16] ||
	      sfd__h23750[15] ||
	      sfd__h23750[14] ||
	      sfd__h23750[13] ||
	      sfd__h23750[12] ||
	      sfd__h23750[11] ||
	      sfd__h23750[10] ||
	      sfd__h23750[9] ||
	      sfd__h23750[8] ||
	      sfd__h23750[7] ||
	      sfd__h23750[6] ||
	      sfd__h23750[5] ||
	      sfd__h23750[4] ||
	      sfd__h23750[3] ||
	      sfd__h23750[2] ||
	      sfd__h23750[1] ||
	      sfd__h23750[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1402 =
	     (sfd__h23750[31] || sfd__h23750[30] || sfd__h23750[29] ||
	      sfd__h23750[28] ||
	      sfd__h23750[27] ||
	      sfd__h23750[26] ||
	      sfd__h23750[25] ||
	      sfd__h23750[24] ||
	      sfd__h23750[23] ||
	      sfd__h23750[22] ||
	      sfd__h23750[21] ||
	      sfd__h23750[20] ||
	      sfd__h23750[19] ||
	      sfd__h23750[18] ||
	      sfd__h23750[17] ||
	      sfd__h23750[16] ||
	      sfd__h23750[15] ||
	      sfd__h23750[14] ||
	      sfd__h23750[13] ||
	      sfd__h23750[12] ||
	      sfd__h23750[11] ||
	      sfd__h23750[10] ||
	      sfd__h23750[9] ||
	      sfd__h23750[8] ||
	      sfd__h23750[7] ||
	      sfd__h23750[6] ||
	      sfd__h23750[5] ||
	      sfd__h23750[4] ||
	      sfd__h23750[3] ||
	      sfd__h23750[2] ||
	      sfd__h23750[1] ||
	      sfd__h23750[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 &&
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1399 ;
  assign IF_requestR_BIT_191_25_THEN_0_ELSE_IF_requestR_ETC___d875 =
	     requestR[191] ?
	       7'd0 :
	       (requestR[190] ?
		  7'd1 :
		  (requestR[189] ?
		     7'd2 :
		     (requestR[188] ?
			7'd3 :
			(requestR[187] ?
			   7'd4 :
			   (requestR[186] ?
			      7'd5 :
			      (requestR[185] ?
				 7'd6 :
				 (requestR[184] ?
				    7'd7 :
				    (requestR[183] ?
				       7'd8 :
				       (requestR[182] ?
					  7'd9 :
					  (requestR[181] ?
					     7'd10 :
					     (requestR[180] ?
						7'd11 :
						(requestR[179] ?
						   7'd12 :
						   (requestR[178] ?
						      7'd13 :
						      (requestR[177] ?
							 7'd14 :
							 (requestR[176] ?
							    7'd15 :
							    (requestR[175] ?
							       7'd16 :
							       (requestR[174] ?
								  7'd17 :
								  (requestR[173] ?
								     7'd18 :
								     (requestR[172] ?
									7'd19 :
									(requestR[171] ?
									   7'd20 :
									   (requestR[170] ?
									      7'd21 :
									      (requestR[169] ?
										 7'd22 :
										 (requestR[168] ?
										    7'd23 :
										    (requestR[167] ?
										       7'd24 :
										       (requestR[166] ?
											  7'd25 :
											  (requestR[165] ?
											     7'd26 :
											     (requestR[164] ?
												7'd27 :
												(requestR[163] ?
												   7'd28 :
												   (requestR[162] ?
												      7'd29 :
												      (requestR[161] ?
													 7'd30 :
													 (requestR[160] ?
													    7'd31 :
													    (requestR[159] ?
													       7'd32 :
													       (requestR[158] ?
														  7'd33 :
														  (requestR[157] ?
														     7'd34 :
														     (requestR[156] ?
															7'd35 :
															(requestR[155] ?
															   7'd36 :
															   (requestR[154] ?
															      7'd37 :
															      (requestR[153] ?
																 7'd38 :
																 (requestR[152] ?
																    7'd39 :
																    (requestR[151] ?
																       7'd40 :
																       (requestR[150] ?
																	  7'd41 :
																	  (requestR[149] ?
																	     7'd42 :
																	     (requestR[148] ?
																		7'd43 :
																		(requestR[147] ?
																		   7'd44 :
																		   (requestR[146] ?
																		      7'd45 :
																		      (requestR[145] ?
																			 7'd46 :
																			 (requestR[144] ?
																			    7'd47 :
																			    (requestR[143] ?
																			       7'd48 :
																			       (requestR[142] ?
																				  7'd49 :
																				  (requestR[141] ?
																				     7'd50 :
																				     (requestR[140] ?
																					7'd51 :
																					(requestR[139] ?
																					   7'd52 :
																					   (requestR[138] ?
																					      7'd53 :
																					      (requestR[137] ?
																						 7'd54 :
																						 (requestR[136] ?
																						    7'd55 :
																						    (requestR[135] ?
																						       7'd56 :
																						       (requestR[134] ?
																							  7'd57 :
																							  (requestR[133] ?
																							     7'd58 :
																							     (requestR[132] ?
																								7'd59 :
																								(requestR[131] ?
																								   7'd60 :
																								   (requestR[130] ?
																								      7'd61 :
																								      (requestR[129] ?
																									 7'd62 :
																									 (requestR[128] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_191_25_THEN_2147483648_ELSE_21_ETC___d2490 =
	     requestR[191] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_requestR_BIT_191_25_THEN_922337203685477580_ETC___d2949 =
	     requestR[191] ? 64'h8000000000000000 : 64'h7FFFFFFFFFFFFFFF ;
  assign IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2502 =
	     requestR[191] ? -b__h71415 : b__h71415 ;
  assign IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2953 =
	     requestR[191] ? -b__h96032 : b__h96032 ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2792 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     (!_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2652 ||
	      !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2654 &&
	      !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2657 &&
	      _theResult___fst_exp__h84503 == 11'd2047 &&
	      _theResult___fst_sfd__h84504 == 52'd0) ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2795 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2652 &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2654 ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2804 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2652 &&
	     !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2654 &&
	     IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2801 ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d601 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     (!_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 ||
	      !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 &&
	      !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 &&
	      _theResult___fst_exp__h12828 == 8'd255 &&
	      _theResult___fst_sfd__h12829 == 23'd0) ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d604 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d613 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 &&
	     !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 &&
	     IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d610 ;
  assign IF_requestR_BIT_191_25_THEN_NOT_requestR_BITS__ETC___d4970 =
	     requestR[191] ?
	       !requestR_BITS_190_TO_180_481_ULE_requestR_BITS_ETC___d4959 ||
	       requestR_BITS_190_TO_180_481_EQ_requestR_BITS__ETC___d4961 &&
	       !requestR_BITS_179_TO_128_483_ULE_requestR_BITS_ETC___d4962 :
	       requestR_BITS_190_TO_180_481_ULT_requestR_BITS_ETC___d4966 ||
	       requestR_BITS_190_TO_180_481_EQ_requestR_BITS__ETC___d4961 &&
	       requestR_BITS_179_TO_128_483_ULT_requestR_BITS_ETC___d4967 ;
  assign IF_sfd___31833_BIT_10_THEN_2_ELSE_0__q9 =
	     sfd___3__h11833[10] ? 2'd2 : 2'd0 ;
  assign IF_sfd___31833_BIT_11_THEN_2_ELSE_0__q8 =
	     sfd___3__h11833[11] ? 2'd2 : 2'd0 ;
  assign IF_sfd___31833_BIT_39_THEN_2_ELSE_0__q7 =
	     sfd___3__h11833[39] ? 2'd2 : 2'd0 ;
  assign IF_sfd___31833_BIT_40_THEN_2_ELSE_0__q6 =
	     sfd___3__h11833[40] ? 2'd2 : 2'd0 ;
  assign IF_sfd___32341_BIT_10_THEN_2_ELSE_0__q22 =
	     sfd___3__h22341[10] ? 2'd2 : 2'd0 ;
  assign IF_sfd___32341_BIT_11_THEN_2_ELSE_0__q21 =
	     sfd___3__h22341[11] ? 2'd2 : 2'd0 ;
  assign IF_sfd___32341_BIT_39_THEN_2_ELSE_0__q20 =
	     sfd___3__h22341[39] ? 2'd2 : 2'd0 ;
  assign IF_sfd___32341_BIT_40_THEN_2_ELSE_0__q19 =
	     sfd___3__h22341[40] ? 2'd2 : 2'd0 ;
  assign IF_sfd___34711_BIT_7_THEN_2_ELSE_0__q39 =
	     sfd___3__h34711[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___34711_BIT_8_THEN_2_ELSE_0__q38 =
	     sfd___3__h34711[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38654_BIT_7_THEN_2_ELSE_0__q27 =
	     sfd___3__h28654[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38654_BIT_8_THEN_2_ELSE_0__q26 =
	     sfd___3__h28654[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___39383_BIT_1_THEN_2_ELSE_0__q60 =
	     sfd___3__h69383[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___39383_BIT_2_THEN_2_ELSE_0__q59 =
	     sfd___3__h69383[2] ? 2'd2 : 2'd0 ;
  assign IF_sfd___39801_BIT_1_THEN_2_ELSE_0__q49 =
	     sfd___3__h59801[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___39801_BIT_2_THEN_2_ELSE_0__q48 =
	     sfd___3__h59801[2] ? 2'd2 : 2'd0 ;
  assign IF_sfdin18478_BIT_33_THEN_2_ELSE_0__q83 =
	     sfdin__h118478[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin36217_BIT_33_THEN_2_ELSE_0__q92 =
	     sfdin__h136217[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin77276_BIT_4_THEN_2_ELSE_0__q118 =
	     sfdin__h177276[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd27079_BIT_33_THEN_2_ELSE_0__q87 =
	     _theResult___snd__h127079[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd44842_BIT_33_THEN_2_ELSE_0__q97 =
	     _theResult___snd__h144842[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd67732_BIT_4_THEN_2_ELSE_0__q113 =
	     _theResult___snd__h167732[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd86017_BIT_4_THEN_2_ELSE_0__q123 =
	     _theResult___snd__h186017[4] ? 2'd2 : 2'd0 ;
  assign IF_x0860_BIT_24_THEN_2_ELSE_0__q47 = x__h40860[24] ? 2'd2 : 2'd0 ;
  assign IF_x2088_BIT_53_THEN_2_ELSE_0__q65 = x__h72088[53] ? 2'd2 : 2'd0 ;
  assign IF_x3163_BIT_53_THEN_2_ELSE_0__q66 = x__h73163[53] ? 2'd2 : 2'd0 ;
  assign IF_x6929_BIT_53_THEN_2_ELSE_0__q80 = x__h96929[53] ? 2'd2 : 2'd0 ;
  assign IF_x7235_BIT_24_THEN_2_ELSE_0__q44 = x__h37235[24] ? 2'd2 : 2'd0 ;
  assign IF_x8225_BIT_53_THEN_2_ELSE_0__q81 = x__h98225[53] ? 2'd2 : 2'd0 ;
  assign IF_x8548_BIT_24_THEN_2_ELSE_0__q45 = x__h38548[24] ? 2'd2 : 2'd0 ;
  assign IF_x9785_BIT_24_THEN_2_ELSE_0__q46 = x__h39785[24] ? 2'd2 : 2'd0 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1602 =
	     -{ {12{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1600[7]}},
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1600 } ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1634 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1602 +
	     20'd64 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1635 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1634 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1637 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1635 ^
	      20'h80000) <=
	     20'd524352 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1698 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1634 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1700 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1698 ^
	      20'h80000) <=
	     20'd524352 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1783 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1602 +
	     20'd32 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1784 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1783 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1786 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1784 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1842 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1783 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1844 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1842 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2495 =
	     -{ {13{requestR_BITS_190_TO_180_481_MINUS_1023___d2493[10]}},
		requestR_BITS_190_TO_180_481_MINUS_1023___d2493 } ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2527 =
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2495 +
	     24'd32 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2528 =
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2527 -
	     24'd2 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2530 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2528 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2592 =
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2527 -
	     24'd1 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2594 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2592 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2978 =
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2495 +
	     24'd64 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2979 =
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2978 -
	     24'd2 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2981 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2979 ^
	      24'h800000) <=
	     24'd8388672 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3036 =
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2978 -
	     24'd1 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3038 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3036 ^
	      24'h800000) <=
	     24'd8388672 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4127 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3148 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3149 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4075[2] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d4087[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4155 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3148 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3149 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4075[0] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d4087[0]) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1678 =
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1602 ==
	       20'd1048513) ?
		_theResult_____2__h36276[64:63] != 2'b11 :
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1635[19] ||
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1637 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1658 &&
		x__h37235[88:25] == 64'h7FFFFFFFFFFFFFFF) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1741 =
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1698[19] &&
	     (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1700 ||
	      guard__h38330 != 2'd0) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1825 =
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1602 ==
	       20'd1048545) ?
		_theResult_____2__h39050[32:31] != 2'b11 :
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1784[19] ||
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1786 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1807 &&
		x__h39785[56:25] == 32'h7FFFFFFF) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1886 =
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1842[19] &&
	     (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1844 ||
	      guard__h40642 != 2'd0) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1952 =
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0 ||
	      sV2_exp__h926 != 8'd0 ||
	      sV2_sfd__h927 != 23'd0) &&
	     requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1951 ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1953 =
	     (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	     (sV2_exp__h926 != 8'd255 || sV2_sfd__h927 == 23'd0) &&
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1952 ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2010 =
	     !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1938 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1939 ||
	      !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1940) &&
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1943 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1939 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1945) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2016 =
	     (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	     (sV2_exp__h926 != 8'd255 || sV2_sfd__h927 == 23'd0) &&
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2015 ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2034 =
	     (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	     (sV2_exp__h926 != 8'd255 || sV2_sfd__h927 == 23'd0) &&
	     (requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1951 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2015) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4264 =
	     !sV1_sfd__h824[21] && !sV1_sfd__h824[20] && !sV1_sfd__h824[19] &&
	     !sV1_sfd__h824[18] &&
	     !sV1_sfd__h824[17] &&
	     !sV1_sfd__h824[16] &&
	     !sV1_sfd__h824[15] &&
	     !sV1_sfd__h824[14] &&
	     !sV1_sfd__h824[13] &&
	     !sV1_sfd__h824[12] &&
	     !sV1_sfd__h824[11] &&
	     !sV1_sfd__h824[10] &&
	     !sV1_sfd__h824[9] &&
	     !sV1_sfd__h824[8] &&
	     !sV1_sfd__h824[7] &&
	     !sV1_sfd__h824[6] &&
	     !sV1_sfd__h824[5] &&
	     !sV1_sfd__h824[4] &&
	     !sV1_sfd__h824[3] &&
	     !sV1_sfd__h824[2] &&
	     !sV1_sfd__h824[1] &&
	     !sV1_sfd__h824[0] ;
  assign NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d1218 =
	     !sfd__h23750[31] && !sfd__h23750[30] && !sfd__h23750[29] &&
	     !sfd__h23750[28] &&
	     !sfd__h23750[27] &&
	     !sfd__h23750[26] &&
	     !sfd__h23750[25] &&
	     !sfd__h23750[24] &&
	     !sfd__h23750[23] &&
	     !sfd__h23750[22] &&
	     !sfd__h23750[21] &&
	     !sfd__h23750[20] &&
	     !sfd__h23750[19] &&
	     !sfd__h23750[18] &&
	     !sfd__h23750[17] &&
	     !sfd__h23750[16] &&
	     !sfd__h23750[15] &&
	     !sfd__h23750[14] &&
	     !sfd__h23750[13] &&
	     !sfd__h23750[12] &&
	     !sfd__h23750[11] &&
	     !sfd__h23750[10] &&
	     !sfd__h23750[9] &&
	     !sfd__h23750[8] &&
	     !sfd__h23750[7] &&
	     !sfd__h23750[6] &&
	     !sfd__h23750[5] &&
	     !sfd__h23750[4] &&
	     !sfd__h23750[3] &&
	     !sfd__h23750[2] &&
	     !sfd__h23750[1] &&
	     !sfd__h23750[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 ||
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 ;
  assign NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d2656 =
	     !sfd__h2228[63] && !sfd__h2228[62] && !sfd__h2228[61] &&
	     !sfd__h2228[60] &&
	     !sfd__h2228[59] &&
	     !sfd__h2228[58] &&
	     !sfd__h2228[57] &&
	     !sfd__h2228[56] &&
	     !sfd__h2228[55] &&
	     !sfd__h2228[54] &&
	     !sfd__h2228[53] &&
	     !sfd__h2228[52] &&
	     !sfd__h2228[51] &&
	     !sfd__h2228[50] &&
	     !sfd__h2228[49] &&
	     !sfd__h2228[48] &&
	     !sfd__h2228[47] &&
	     !sfd__h2228[46] &&
	     !sfd__h2228[45] &&
	     !sfd__h2228[44] &&
	     !sfd__h2228[43] &&
	     !sfd__h2228[42] &&
	     !sfd__h2228[41] &&
	     !sfd__h2228[40] &&
	     !sfd__h2228[39] &&
	     !sfd__h2228[38] &&
	     !sfd__h2228[37] &&
	     !sfd__h2228[36] &&
	     !sfd__h2228[35] &&
	     !sfd__h2228[34] &&
	     !sfd__h2228[33] &&
	     !sfd__h2228[32] &&
	     !sfd__h2228[31] &&
	     !sfd__h2228[30] &&
	     !sfd__h2228[29] &&
	     !sfd__h2228[28] &&
	     !sfd__h2228[27] &&
	     !sfd__h2228[26] &&
	     !sfd__h2228[25] &&
	     !sfd__h2228[24] &&
	     !sfd__h2228[23] &&
	     !sfd__h2228[22] &&
	     !sfd__h2228[21] &&
	     !sfd__h2228[20] &&
	     !sfd__h2228[19] &&
	     !sfd__h2228[18] &&
	     !sfd__h2228[17] &&
	     !sfd__h2228[16] &&
	     !sfd__h2228[15] &&
	     !sfd__h2228[14] &&
	     !sfd__h2228[13] &&
	     !sfd__h2228[12] &&
	     !sfd__h2228[11] &&
	     !sfd__h2228[10] &&
	     !sfd__h2228[9] &&
	     !sfd__h2228[8] &&
	     !sfd__h2228[7] &&
	     !sfd__h2228[6] &&
	     !sfd__h2228[5] &&
	     !sfd__h2228[4] &&
	     !sfd__h2228[3] &&
	     !sfd__h2228[2] &&
	     !sfd__h2228[1] &&
	     !sfd__h2228[0] ||
	     !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2652 ||
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2654 ;
  assign NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d390 =
	     !sfd__h2228[63] && !sfd__h2228[62] && !sfd__h2228[61] &&
	     !sfd__h2228[60] &&
	     !sfd__h2228[59] &&
	     !sfd__h2228[58] &&
	     !sfd__h2228[57] &&
	     !sfd__h2228[56] &&
	     !sfd__h2228[55] &&
	     !sfd__h2228[54] &&
	     !sfd__h2228[53] &&
	     !sfd__h2228[52] &&
	     !sfd__h2228[51] &&
	     !sfd__h2228[50] &&
	     !sfd__h2228[49] &&
	     !sfd__h2228[48] &&
	     !sfd__h2228[47] &&
	     !sfd__h2228[46] &&
	     !sfd__h2228[45] &&
	     !sfd__h2228[44] &&
	     !sfd__h2228[43] &&
	     !sfd__h2228[42] &&
	     !sfd__h2228[41] &&
	     !sfd__h2228[40] &&
	     !sfd__h2228[39] &&
	     !sfd__h2228[38] &&
	     !sfd__h2228[37] &&
	     !sfd__h2228[36] &&
	     !sfd__h2228[35] &&
	     !sfd__h2228[34] &&
	     !sfd__h2228[33] &&
	     !sfd__h2228[32] &&
	     !sfd__h2228[31] &&
	     !sfd__h2228[30] &&
	     !sfd__h2228[29] &&
	     !sfd__h2228[28] &&
	     !sfd__h2228[27] &&
	     !sfd__h2228[26] &&
	     !sfd__h2228[25] &&
	     !sfd__h2228[24] &&
	     !sfd__h2228[23] &&
	     !sfd__h2228[22] &&
	     !sfd__h2228[21] &&
	     !sfd__h2228[20] &&
	     !sfd__h2228[19] &&
	     !sfd__h2228[18] &&
	     !sfd__h2228[17] &&
	     !sfd__h2228[16] &&
	     !sfd__h2228[15] &&
	     !sfd__h2228[14] &&
	     !sfd__h2228[13] &&
	     !sfd__h2228[12] &&
	     !sfd__h2228[11] &&
	     !sfd__h2228[10] &&
	     !sfd__h2228[9] &&
	     !sfd__h2228[8] &&
	     !sfd__h2228[7] &&
	     !sfd__h2228[6] &&
	     !sfd__h2228[5] &&
	     !sfd__h2228[4] &&
	     !sfd__h2228[3] &&
	     !sfd__h2228[2] &&
	     !sfd__h2228[1] &&
	     !sfd__h2228[0] ||
	     !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 ||
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 ;
  assign NOT_requestR_BITS_159_TO_128_079_EQ_0_080_081__ETC___d1563 =
	     requestR[159:128] != 32'd0 &&
	     (requestR[159] ||
	      requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016) &&
	     (!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448 &&
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449 &&
	      _theResult___fst_exp__h35701 == 8'd255 &&
	      _theResult___fst_sfd__h35702 == 23'd0) ;
  assign NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d2572 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2495 ==
	       24'd16777185) ?
		_theResult_____2__h71353[32:31] != 2'b11 :
		NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2528[23] ||
		NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2530 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2551 &&
		x__h72088[85:54] == 32'h7FFFFFFF) ;
  assign NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d2636 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2592[23] &&
	     (!NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2594 ||
	      guard__h72945 != 2'd0) ;
  assign NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d3019 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2495 ==
	       24'd16777153) ?
		_theResult_____2__h95970[64:63] != 2'b11 :
		NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2979[23] ||
		NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2981 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3002 &&
		x__h96929[117:54] == 64'h7FFFFFFFFFFFFFFF) ;
  assign NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d3079 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3036[23] &&
	     (!NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3038 ||
	      guard__h98007 != 2'd0) ;
  assign NOT_requestR_BITS_190_TO_180_481_EQ_2047_482_5_ETC___d4974 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0 ||
	      requestR[126:116] != 11'd0 ||
	      requestR[115:64] != 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_BIT_191_25_THEN_NOT_requestR_BITS__ETC___d4970) ;
  assign NOT_requestR_BITS_190_TO_180_481_EQ_2047_482_5_ETC___d5039 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_BIT_191_25_THEN_NOT_requestR_BITS__ETC___d4970 ||
	      requestR_BITS_190_TO_180_481_EQ_0_491_AND_requ_ETC___d5020) ;
  assign NOT_requestR_BITS_190_TO_180_481_ULT_requestR__ETC___d5016 =
	     !requestR_BITS_190_TO_180_481_ULT_requestR_BITS_ETC___d4966 &&
	     (!requestR_BITS_190_TO_180_481_EQ_requestR_BITS__ETC___d4961 ||
	      !requestR_BITS_179_TO_128_483_ULT_requestR_BITS_ETC___d4967) &&
	     requestR_BITS_190_TO_180_481_ULE_requestR_BITS_ETC___d4959 &&
	     (!requestR_BITS_190_TO_180_481_EQ_requestR_BITS__ETC___d4961 ||
	      requestR_BITS_179_TO_128_483_ULE_requestR_BITS_ETC___d4962) ;
  assign NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d2014 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159] ||
	      requestR[127:96] == 32'hFFFFFFFF && requestR[95]) &&
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     ((requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
		NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2010 :
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2011) ;
  assign NOT_requestR_BIT_158_86_87_AND_NOT_requestR_BI_ETC___d777 =
	     !requestR[158] && !requestR[157] && !requestR[156] &&
	     !requestR[155] &&
	     !requestR[154] &&
	     !requestR[153] &&
	     !requestR[152] &&
	     !requestR[151] &&
	     !requestR[150] &&
	     !requestR[149] &&
	     !requestR[148] &&
	     !requestR[147] &&
	     !requestR[146] &&
	     !requestR[145] &&
	     !requestR[144] &&
	     !requestR[143] &&
	     !requestR[142] &&
	     !requestR[141] &&
	     !requestR[140] &&
	     !requestR[139] &&
	     !requestR[138] &&
	     !requestR[137] &&
	     !requestR[136] &&
	     !requestR[135] &&
	     !requestR[134] &&
	     !requestR[133] &&
	     !requestR[132] &&
	     !requestR[131] &&
	     !requestR[130] &&
	     !requestR[129] &&
	     !requestR[128] ;
  assign NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 =
	     !requestR[179] && !requestR[178] && !requestR[177] &&
	     !requestR[176] &&
	     !requestR[175] &&
	     !requestR[174] &&
	     !requestR[173] &&
	     !requestR[172] &&
	     !requestR[171] &&
	     !requestR[170] &&
	     !requestR[169] &&
	     !requestR[168] &&
	     !requestR[167] &&
	     !requestR[166] &&
	     !requestR[165] &&
	     !requestR[164] &&
	     !requestR[163] &&
	     !requestR[162] &&
	     !requestR[161] &&
	     !requestR[160] &&
	     !requestR[159] &&
	     NOT_requestR_BIT_158_86_87_AND_NOT_requestR_BI_ETC___d777 ;
  assign NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d2892 =
	     !requestR[191] && !requestR[190] && !requestR[189] &&
	     !requestR[188] &&
	     !requestR[187] &&
	     !requestR[186] &&
	     !requestR[185] &&
	     !requestR[184] &&
	     !requestR[183] &&
	     !requestR[182] &&
	     !requestR[181] &&
	     !requestR[180] &&
	     NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 ||
	     !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2815 ||
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2816 ;
  assign NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d958 =
	     !requestR[191] && !requestR[190] && !requestR[189] &&
	     !requestR[188] &&
	     !requestR[187] &&
	     !requestR[186] &&
	     !requestR[185] &&
	     !requestR[184] &&
	     !requestR[183] &&
	     !requestR[182] &&
	     !requestR[181] &&
	     !requestR[180] &&
	     NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 ||
	     !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 ||
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4357 =
	     { {4{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1600[7]}},
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1600 } ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4358 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4357 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4359 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4357 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q116 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4357 +
	     12'd1023 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q121 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q116[10:0] -
	     11'd1023 ;
  assign SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_493___d3564 =
	     { requestR_BITS_190_TO_180_481_MINUS_1023___d2493[10],
	       requestR_BITS_190_TO_180_481_MINUS_1023___d2493 } ;
  assign SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3565 =
	     (SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_493___d3564 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3566 =
	     (SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_493___d3564 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC__q90 =
	     SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_493___d3564 +
	     12'd127 ;
  assign SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC__q95 =
	     SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC__q90[7:0] -
	     8'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d3383 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d3381 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4075 =
	     { 3'd0,
	       _theResult___fst_exp__h118484 == 8'd0 &&
	       (sfdin__h118478[56:34] == 23'd0 || guard__h110387 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h119069 == 8'd255 &&
	       _theResult___fst_sfd__h119070 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h118484 != 8'd255 &&
	       guard__h110387 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4608 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d4606 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4865 =
	     { 3'd0,
	       _theResult___fst_exp__h177282 == 11'd0 &&
	       (sfdin__h177276[56:5] == 52'd0 || guard__h169056 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h178070 == 11'd2047 &&
	       _theResult___fst_sfd__h178071 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h177282 != 11'd2047 &&
	       guard__h169056 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d3813 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d3811 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4104 =
	     { 3'd0,
	       _theResult___fst_exp__h136223 == 8'd0 &&
	       (sfdin__h136217[56:34] == 23'd0 || guard__h127997 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h136808 == 8'd255 &&
	       _theResult___fst_sfd__h136809 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h136223 != 8'd255 &&
	       guard__h127997 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4293 =
	     ({ 6'd0,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4291 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4676 =
	     ({ 6'd0,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4291 } ^
	      12'h800) <=
	     (IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4675 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4848 =
	     { 3'd0,
	       _theResult___fst_exp__h167781 == 11'd0 &&
	       guard__h159820 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h168495 == 11'd2047 &&
	       _theResult___fst_sfd__h168496 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h167781 != 11'd2047 &&
	       guard__h159820 != 2'b0 } ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d3500 =
	     ({ 3'd0,
		IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d3498 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d3881 =
	     ({ 3'd0,
		IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d3498 } ^
	      9'h100) <=
	     (IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d3880 ^
	      9'h100) ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d4087 =
	     { 3'd0,
	       _theResult___fst_exp__h127128 == 8'd0 &&
	       guard__h119080 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h127639 == 8'd255 &&
	       _theResult___fst_sfd__h127640 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h127128 != 8'd255 &&
	       guard__h119080 != 2'b0 } ;
  assign _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d4364 =
	     b__h39112 >>
	     _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d4360 ;
  assign _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_481_EQ_ETC___d3571 =
	     sfd__h102777 >>
	     _3970_MINUS_SEXT_requestR_BITS_190_TO_180_481_M_ETC___d3567 ;
  assign _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66 =
	     { 33'h1AAAAAAAA,
	       requestR[63:32] == 32'hFFFFFFFF && requestR[31],
	       (requestR[63:32] == 32'hFFFFFFFF) ?
		 requestR[30:0] :
		 31'h7FC00000 } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3147 =
	     12'd3074 -
	     { 6'd0,
	       requestR[179] ?
		 6'd0 :
		 (requestR[178] ?
		    6'd1 :
		    (requestR[177] ?
		       6'd2 :
		       (requestR[176] ?
			  6'd3 :
			  (requestR[175] ?
			     6'd4 :
			     (requestR[174] ?
				6'd5 :
				(requestR[173] ?
				   6'd6 :
				   (requestR[172] ?
				      6'd7 :
				      (requestR[171] ?
					 6'd8 :
					 (requestR[170] ?
					    6'd9 :
					    (requestR[169] ?
					       6'd10 :
					       (requestR[168] ?
						  6'd11 :
						  (requestR[167] ?
						     6'd12 :
						     (requestR[166] ?
							6'd13 :
							(requestR[165] ?
							   6'd14 :
							   (requestR[164] ?
							      6'd15 :
							      (requestR[163] ?
								 6'd16 :
								 (requestR[162] ?
								    6'd17 :
								    (requestR[161] ?
								       6'd18 :
								       (requestR[160] ?
									  6'd19 :
									  (requestR[159] ?
									     6'd20 :
									     (requestR[158] ?
										6'd21 :
										(requestR[157] ?
										   6'd22 :
										   (requestR[156] ?
										      6'd23 :
										      (requestR[155] ?
											 6'd24 :
											 (requestR[154] ?
											    6'd25 :
											    (requestR[153] ?
											       6'd26 :
											       (requestR[152] ?
												  6'd27 :
												  (requestR[151] ?
												     6'd28 :
												     (requestR[150] ?
													6'd29 :
													(requestR[149] ?
													   6'd30 :
													   (requestR[148] ?
													      6'd31 :
													      (requestR[147] ?
														 6'd32 :
														 (requestR[146] ?
														    6'd33 :
														    (requestR[145] ?
														       6'd34 :
														       (requestR[144] ?
															  6'd35 :
															  (requestR[143] ?
															     6'd36 :
															     (requestR[142] ?
																6'd37 :
																(requestR[141] ?
																   6'd38 :
																   (requestR[140] ?
																      6'd39 :
																      (requestR[139] ?
																	 6'd40 :
																	 (requestR[138] ?
																	    6'd41 :
																	    (requestR[137] ?
																	       6'd42 :
																	       (requestR[136] ?
																		  6'd43 :
																		  (requestR[135] ?
																		     6'd44 :
																		     (requestR[134] ?
																			6'd45 :
																			(requestR[133] ?
																			   6'd46 :
																			   (requestR[132] ?
																			      6'd47 :
																			      (requestR[131] ?
																				 6'd48 :
																				 (requestR[130] ?
																				    6'd49 :
																				    (requestR[129] ?
																				       6'd50 :
																				       (requestR[128] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3148 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3147 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3149 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3147 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4090 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3148 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3149 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4075[4] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d4087[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4115 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3148 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3149 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4075[3] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d4087[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4142 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3148 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3149 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4075[1] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d4087[1]) ;
  assign _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d4360 =
	     12'd3074 -
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4357 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1210 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2153 =
	     (12'd32 -
	      { 6'd0,
		IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d2150 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2154 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2153 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2156 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2153 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2158 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2153 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446 =
	     (9'd32 -
	      { 3'd0,
		IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1443 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2346 =
	     (12'd32 -
	      { 6'd0,
		IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d2343 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2347 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2346 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2348 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2346 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2349 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2346 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4219 =
	     12'd3970 -
	     { 7'd0,
	       sV1_sfd__h824[22] ?
		 5'd0 :
		 (sV1_sfd__h824[21] ?
		    5'd1 :
		    (sV1_sfd__h824[20] ?
		       5'd2 :
		       (sV1_sfd__h824[19] ?
			  5'd3 :
			  (sV1_sfd__h824[18] ?
			     5'd4 :
			     (sV1_sfd__h824[17] ?
				5'd5 :
				(sV1_sfd__h824[16] ?
				   5'd6 :
				   (sV1_sfd__h824[15] ?
				      5'd7 :
				      (sV1_sfd__h824[14] ?
					 5'd8 :
					 (sV1_sfd__h824[13] ?
					    5'd9 :
					    (sV1_sfd__h824[12] ?
					       5'd10 :
					       (sV1_sfd__h824[11] ?
						  5'd11 :
						  (sV1_sfd__h824[10] ?
						     5'd12 :
						     (sV1_sfd__h824[9] ?
							5'd13 :
							(sV1_sfd__h824[8] ?
							   5'd14 :
							   (sV1_sfd__h824[7] ?
							      5'd15 :
							      (sV1_sfd__h824[6] ?
								 5'd16 :
								 (sV1_sfd__h824[5] ?
								    5'd17 :
								    (sV1_sfd__h824[4] ?
								       5'd18 :
								       (sV1_sfd__h824[3] ?
									  5'd19 :
									  (sV1_sfd__h824[2] ?
									     5'd20 :
									     (sV1_sfd__h824[1] ?
										5'd21 :
										(sV1_sfd__h824[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4220 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4219 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4221 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4219 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_requestR_BITS_190_TO_180_481_M_ETC___d3567 =
	     12'd3970 -
	     SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_493___d3564 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2651 =
	     (12'd64 -
	      { 5'd0,
		IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_BI_ETC___d382 }) -
	     12'd1 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2652 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2651 ^
	      12'h800) <=
	     12'd3071 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2654 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2651 ^
	      12'h800) <
	     12'd974 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2657 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2651 ^
	      12'h800) <
	     12'd1026 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385 =
	     (9'd64 -
	      { 2'd0,
		IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_BI_ETC___d382 }) -
	     9'd1 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385 ^
	      9'h100) <=
	     9'd383 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385 ^
	      9'h100) <
	     9'd107 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385 ^
	      9'h100) <
	     9'd130 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2814 =
	     (12'd64 -
	      { 5'd0,
		IF_requestR_BIT_191_25_THEN_0_ELSE_IF_requestR_ETC___d875 }) -
	     12'd1 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2815 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2814 ^
	      12'h800) <=
	     12'd3071 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2816 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2814 ^
	      12'h800) <
	     12'd974 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2817 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2814 ^
	      12'h800) <
	     12'd1026 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878 =
	     (9'd64 -
	      { 2'd0,
		IF_requestR_BIT_191_25_THEN_0_ELSE_IF_requestR_ETC___d875 }) -
	     9'd1 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878 ^
	      9'h100) <=
	     9'd383 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878 ^
	      9'h100) <
	     9'd107 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878 ^
	      9'h100) <
	     9'd130 ;
  assign _theResult_____2__h36276 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1626 ?
	       out1___1__h36989 :
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1609[88:24] ;
  assign _theResult_____2__h39050 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1775 ?
	       out1___1__h39539 :
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1758[56:24] ;
  assign _theResult_____2__h71353 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2519 ?
	       out1___1__h71842 :
	       IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2502[85:53] ;
  assign _theResult_____2__h95970 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2970 ?
	       out1___1__h96683 :
	       IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2953[117:53] ;
  assign _theResult____h110377 =
	     (value__h71417 == 54'd0) ? sfd__h102777 : 57'd1 ;
  assign _theResult____h127987 =
	     ((_3970_MINUS_SEXT_requestR_BITS_190_TO_180_481_M_ETC___d3567 ^
	       12'h800) <
	      12'd2105) ?
	       result__h128600 :
	       _theResult____h110377 ;
  assign _theResult____h169046 =
	     ((_3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d4360 ^
	       12'h800) <
	      12'd2105) ?
	       result__h169659 :
	       ((value__h36340 == 25'd0) ? b__h39112 : 57'd1) ;
  assign _theResult___exp__h119007 =
	     sfd__h118576[24] ?
	       ((_theResult___fst_exp__h118484 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h145462) :
	       ((_theResult___fst_exp__h118484 == 8'd0 &&
		 sfd__h118576[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h118484) ;
  assign _theResult___exp__h12256 =
	     (sfd__h11860[24] || sfd__h11860[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h127577 =
	     sfd__h127146[24] ?
	       ((_theResult___fst_exp__h127128 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h145481) :
	       ((_theResult___fst_exp__h127128 == 8'd0 &&
		 sfd__h127146[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h127128) ;
  assign _theResult___exp__h12767 =
	     sfd__h12361[24] ?
	       ((x__h12346[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h12866) :
	       ((x__h12346[7:0] == 8'd0 && sfd__h12361[24:23] == 2'b01) ?
		  8'd1 :
		  x__h12346[7:0]) ;
  assign _theResult___exp__h136746 =
	     sfd__h136315[24] ?
	       ((_theResult___fst_exp__h136223 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h145505) :
	       ((_theResult___fst_exp__h136223 == 8'd0 &&
		 sfd__h136315[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h136223) ;
  assign _theResult___exp__h145370 =
	     sfd__h144915[24] ?
	       ((_theResult___fst_exp__h144896 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h145524) :
	       ((_theResult___fst_exp__h144896 == 8'd0 &&
		 sfd__h144915[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h144896) ;
  assign _theResult___exp__h168433 =
	     sfd__h167799[53] ?
	       ((_theResult___fst_exp__h167781 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h186843) :
	       ((_theResult___fst_exp__h167781 == 11'd0 &&
		 sfd__h167799[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h167781) ;
  assign _theResult___exp__h178008 =
	     sfd__h177374[53] ?
	       ((_theResult___fst_exp__h177282 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h186867) :
	       ((_theResult___fst_exp__h177282 == 11'd0 &&
		 sfd__h177374[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h177282) ;
  assign _theResult___exp__h186748 =
	     sfd__h186090[53] ?
	       ((_theResult___fst_exp__h186071 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h186886) :
	       ((_theResult___fst_exp__h186071 == 11'd0 &&
		 sfd__h186090[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h186071) ;
  assign _theResult___exp__h22761 =
	     (sfd__h22368[24] || sfd__h22368[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h23271 =
	     sfd__h22865[24] ?
	       ((x__h22850[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h23365) :
	       ((x__h22850[7:0] == 8'd0 && sfd__h22865[24:23] == 2'b01) ?
		  8'd1 :
		  x__h22850[7:0]) ;
  assign _theResult___exp__h29074 =
	     (sfd__h28681[24] || sfd__h28681[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h29585 =
	     sfd__h29179[24] ?
	       ((x__h29164[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h29684) :
	       ((x__h29164[7:0] == 8'd0 && sfd__h29179[24:23] == 2'b01) ?
		  8'd1 :
		  x__h29164[7:0]) ;
  assign _theResult___exp__h35131 =
	     (sfd__h34738[24] || sfd__h34738[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h35641 =
	     sfd__h35235[24] ?
	       ((x__h35220[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h35735) :
	       ((x__h35220[7:0] == 8'd0 && sfd__h35235[24:23] == 2'b01) ?
		  8'd1 :
		  x__h35220[7:0]) ;
  assign _theResult___exp__h60424 =
	     (sfd__h59828[53] || sfd__h59828[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h61138 =
	     sfd__h60529[53] ?
	       ((x__h60514[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h61237) :
	       ((x__h60514[10:0] == 11'd0 && sfd__h60529[53:52] == 2'b01) ?
		  11'd1 :
		  x__h60514[10:0]) ;
  assign _theResult___exp__h70006 =
	     (sfd__h69410[53] || sfd__h69410[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h70719 =
	     sfd__h70110[53] ?
	       ((x__h70095[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h70813) :
	       ((x__h70095[10:0] == 11'd0 && sfd__h70110[53:52] == 2'b01) ?
		  11'd1 :
		  x__h70095[10:0]) ;
  assign _theResult___exp__h83728 =
	     (sfd__h83132[53] || sfd__h83132[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h84442 =
	     sfd__h83833[53] ?
	       ((x__h83818[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h84541) :
	       ((x__h83818[10:0] == 11'd0 && sfd__h83833[53:52] == 2'b01) ?
		  11'd1 :
		  x__h83818[10:0]) ;
  assign _theResult___exp__h94626 =
	     (sfd__h94030[53] || sfd__h94030[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h95339 =
	     sfd__h94730[53] ?
	       ((x__h94715[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h95433) :
	       ((x__h94715[10:0] == 11'd0 && sfd__h94730[53:52] == 2'b01) ?
		  11'd1 :
		  x__h94715[10:0]) ;
  assign _theResult___fst_exp__h110359 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       8'd255 :
	       CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 ;
  assign _theResult___fst_exp__h118484 =
	     _theResult____h110377[56] ?
	       8'd2 :
	       _theResult___fst_exp__h118558 ;
  assign _theResult___fst_exp__h118549 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d3381 } ;
  assign _theResult___fst_exp__h118555 =
	     (!_theResult____h110377[56] && !_theResult____h110377[55] &&
	      !_theResult____h110377[54] &&
	      !_theResult____h110377[53] &&
	      !_theResult____h110377[52] &&
	      !_theResult____h110377[51] &&
	      !_theResult____h110377[50] &&
	      !_theResult____h110377[49] &&
	      !_theResult____h110377[48] &&
	      !_theResult____h110377[47] &&
	      !_theResult____h110377[46] &&
	      !_theResult____h110377[45] &&
	      !_theResult____h110377[44] &&
	      !_theResult____h110377[43] &&
	      !_theResult____h110377[42] &&
	      !_theResult____h110377[41] &&
	      !_theResult____h110377[40] &&
	      !_theResult____h110377[39] &&
	      !_theResult____h110377[38] &&
	      !_theResult____h110377[37] &&
	      !_theResult____h110377[36] &&
	      !_theResult____h110377[35] &&
	      !_theResult____h110377[34] &&
	      !_theResult____h110377[33] &&
	      !_theResult____h110377[32] &&
	      !_theResult____h110377[31] &&
	      !_theResult____h110377[30] &&
	      !_theResult____h110377[29] &&
	      !_theResult____h110377[28] &&
	      !_theResult____h110377[27] &&
	      !_theResult____h110377[26] &&
	      !_theResult____h110377[25] &&
	      !_theResult____h110377[24] &&
	      !_theResult____h110377[23] &&
	      !_theResult____h110377[22] &&
	      !_theResult____h110377[21] &&
	      !_theResult____h110377[20] &&
	      !_theResult____h110377[19] &&
	      !_theResult____h110377[18] &&
	      !_theResult____h110377[17] &&
	      !_theResult____h110377[16] &&
	      !_theResult____h110377[15] &&
	      !_theResult____h110377[14] &&
	      !_theResult____h110377[13] &&
	      !_theResult____h110377[12] &&
	      !_theResult____h110377[11] &&
	      !_theResult____h110377[10] &&
	      !_theResult____h110377[9] &&
	      !_theResult____h110377[8] &&
	      !_theResult____h110377[7] &&
	      !_theResult____h110377[6] &&
	      !_theResult____h110377[5] &&
	      !_theResult____h110377[4] &&
	      !_theResult____h110377[3] &&
	      !_theResult____h110377[2] &&
	      !_theResult____h110377[1] &&
	      !_theResult____h110377[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d3383) ?
	       8'd0 :
	       _theResult___fst_exp__h118549 ;
  assign _theResult___fst_exp__h118558 =
	     (!_theResult____h110377[56] && _theResult____h110377[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h118555 ;
  assign _theResult___fst_exp__h119066 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10387_0b0_theResult___fst_exp18484_0_ETC__q84 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 ;
  assign _theResult___fst_exp__h119069 =
	     (_theResult___fst_exp__h118484 == 8'd255) ?
	       _theResult___fst_exp__h118484 :
	       _theResult___fst_exp__h119066 ;
  assign _theResult___fst_exp__h12314 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard1843_0b0_0_0b1_0_0b10_out_exp2259_0b_ETC__q18 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d462 ;
  assign _theResult___fst_exp__h127119 =
	     8'd129 -
	     { 2'd0,
	       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d3498 } ;
  assign _theResult___fst_exp__h127125 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 ||
	      !_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d3500) ?
	       8'd0 :
	       _theResult___fst_exp__h127119 ;
  assign _theResult___fst_exp__h127128 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h127125 :
	       8'd129 ;
  assign _theResult___fst_exp__h127636 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19080_0b0_theResult___fst_exp27128_0_ETC__q88 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 ;
  assign _theResult___fst_exp__h127639 =
	     (_theResult___fst_exp__h127128 == 8'd255) ?
	       _theResult___fst_exp__h127128 :
	       _theResult___fst_exp__h127636 ;
  assign _theResult___fst_exp__h12825 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2331_0b0_x2346_BITS_7_TO_0_0b1_x2346_ETC__q10 :
	       CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11 ;
  assign _theResult___fst_exp__h12828 =
	     (x__h12346[7:0] == 8'd255) ?
	       x__h12346[7:0] :
	       _theResult___fst_exp__h12825 ;
  assign _theResult___fst_exp__h136223 =
	     _theResult____h127987[56] ?
	       8'd2 :
	       _theResult___fst_exp__h136297 ;
  assign _theResult___fst_exp__h136288 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d3811 } ;
  assign _theResult___fst_exp__h136294 =
	     (!_theResult____h127987[56] && !_theResult____h127987[55] &&
	      !_theResult____h127987[54] &&
	      !_theResult____h127987[53] &&
	      !_theResult____h127987[52] &&
	      !_theResult____h127987[51] &&
	      !_theResult____h127987[50] &&
	      !_theResult____h127987[49] &&
	      !_theResult____h127987[48] &&
	      !_theResult____h127987[47] &&
	      !_theResult____h127987[46] &&
	      !_theResult____h127987[45] &&
	      !_theResult____h127987[44] &&
	      !_theResult____h127987[43] &&
	      !_theResult____h127987[42] &&
	      !_theResult____h127987[41] &&
	      !_theResult____h127987[40] &&
	      !_theResult____h127987[39] &&
	      !_theResult____h127987[38] &&
	      !_theResult____h127987[37] &&
	      !_theResult____h127987[36] &&
	      !_theResult____h127987[35] &&
	      !_theResult____h127987[34] &&
	      !_theResult____h127987[33] &&
	      !_theResult____h127987[32] &&
	      !_theResult____h127987[31] &&
	      !_theResult____h127987[30] &&
	      !_theResult____h127987[29] &&
	      !_theResult____h127987[28] &&
	      !_theResult____h127987[27] &&
	      !_theResult____h127987[26] &&
	      !_theResult____h127987[25] &&
	      !_theResult____h127987[24] &&
	      !_theResult____h127987[23] &&
	      !_theResult____h127987[22] &&
	      !_theResult____h127987[21] &&
	      !_theResult____h127987[20] &&
	      !_theResult____h127987[19] &&
	      !_theResult____h127987[18] &&
	      !_theResult____h127987[17] &&
	      !_theResult____h127987[16] &&
	      !_theResult____h127987[15] &&
	      !_theResult____h127987[14] &&
	      !_theResult____h127987[13] &&
	      !_theResult____h127987[12] &&
	      !_theResult____h127987[11] &&
	      !_theResult____h127987[10] &&
	      !_theResult____h127987[9] &&
	      !_theResult____h127987[8] &&
	      !_theResult____h127987[7] &&
	      !_theResult____h127987[6] &&
	      !_theResult____h127987[5] &&
	      !_theResult____h127987[4] &&
	      !_theResult____h127987[3] &&
	      !_theResult____h127987[2] &&
	      !_theResult____h127987[1] &&
	      !_theResult____h127987[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d3813) ?
	       8'd0 :
	       _theResult___fst_exp__h136288 ;
  assign _theResult___fst_exp__h136297 =
	     (!_theResult____h127987[56] && _theResult____h127987[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h136294 ;
  assign _theResult___fst_exp__h136805 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard27997_0b0_theResult___fst_exp36223_0_ETC__q93 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q94 ;
  assign _theResult___fst_exp__h136808 =
	     (_theResult___fst_exp__h136223 == 8'd255) ?
	       _theResult___fst_exp__h136223 :
	       _theResult___fst_exp__h136805 ;
  assign _theResult___fst_exp__h144848 =
	     (SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC__q90[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC__q90[7:0] ;
  assign _theResult___fst_exp__h144887 =
	     SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC__q90[7:0] -
	     { 2'd0,
	       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d3498 } ;
  assign _theResult___fst_exp__h144893 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 ||
	      !_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_0__ETC___d3881) ?
	       8'd0 :
	       _theResult___fst_exp__h144887 ;
  assign _theResult___fst_exp__h144896 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h144893 :
	       _theResult___fst_exp__h144848 ;
  assign _theResult___fst_exp__h145429 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard36819_0b0_theResult___fst_exp44896_0_ETC__q98 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99 ;
  assign _theResult___fst_exp__h145432 =
	     (_theResult___fst_exp__h144896 == 8'd255) ?
	       _theResult___fst_exp__h144896 :
	       _theResult___fst_exp__h145429 ;
  assign _theResult___fst_exp__h145441 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3148 ?
		  _theResult___snd_fst_exp__h127642 :
		  _theResult___fst_exp__h110359) :
	       (SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3565 ?
		  _theResult___snd_fst_exp__h145435 :
		  _theResult___fst_exp__h110359) ;
  assign _theResult___fst_exp__h145444 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h145441 ;
  assign _theResult___fst_exp__h152732 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       11'd2047 :
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 ;
  assign _theResult___fst_exp__h167772 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4291 } ;
  assign _theResult___fst_exp__h167778 =
	     (sV1_exp__h823 == 8'd0 && !sV1_sfd__h824[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4264 ||
	      !_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4293) ?
	       11'd0 :
	       _theResult___fst_exp__h167772 ;
  assign _theResult___fst_exp__h167781 =
	     (sV1_exp__h823 == 8'd0) ?
	       _theResult___fst_exp__h167778 :
	       11'd897 ;
  assign _theResult___fst_exp__h168492 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard59820_0b0_theResult___fst_exp67781_0_ETC__q114 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q115 ;
  assign _theResult___fst_exp__h168495 =
	     (_theResult___fst_exp__h167781 == 11'd2047) ?
	       _theResult___fst_exp__h167781 :
	       _theResult___fst_exp__h168492 ;
  assign _theResult___fst_exp__h177282 =
	     _theResult____h169046[56] ?
	       11'd2 :
	       _theResult___fst_exp__h177356 ;
  assign _theResult___fst_exp__h177347 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d4606 } ;
  assign _theResult___fst_exp__h177353 =
	     (!_theResult____h169046[56] && !_theResult____h169046[55] &&
	      !_theResult____h169046[54] &&
	      !_theResult____h169046[53] &&
	      !_theResult____h169046[52] &&
	      !_theResult____h169046[51] &&
	      !_theResult____h169046[50] &&
	      !_theResult____h169046[49] &&
	      !_theResult____h169046[48] &&
	      !_theResult____h169046[47] &&
	      !_theResult____h169046[46] &&
	      !_theResult____h169046[45] &&
	      !_theResult____h169046[44] &&
	      !_theResult____h169046[43] &&
	      !_theResult____h169046[42] &&
	      !_theResult____h169046[41] &&
	      !_theResult____h169046[40] &&
	      !_theResult____h169046[39] &&
	      !_theResult____h169046[38] &&
	      !_theResult____h169046[37] &&
	      !_theResult____h169046[36] &&
	      !_theResult____h169046[35] &&
	      !_theResult____h169046[34] &&
	      !_theResult____h169046[33] &&
	      !_theResult____h169046[32] &&
	      !_theResult____h169046[31] &&
	      !_theResult____h169046[30] &&
	      !_theResult____h169046[29] &&
	      !_theResult____h169046[28] &&
	      !_theResult____h169046[27] &&
	      !_theResult____h169046[26] &&
	      !_theResult____h169046[25] &&
	      !_theResult____h169046[24] &&
	      !_theResult____h169046[23] &&
	      !_theResult____h169046[22] &&
	      !_theResult____h169046[21] &&
	      !_theResult____h169046[20] &&
	      !_theResult____h169046[19] &&
	      !_theResult____h169046[18] &&
	      !_theResult____h169046[17] &&
	      !_theResult____h169046[16] &&
	      !_theResult____h169046[15] &&
	      !_theResult____h169046[14] &&
	      !_theResult____h169046[13] &&
	      !_theResult____h169046[12] &&
	      !_theResult____h169046[11] &&
	      !_theResult____h169046[10] &&
	      !_theResult____h169046[9] &&
	      !_theResult____h169046[8] &&
	      !_theResult____h169046[7] &&
	      !_theResult____h169046[6] &&
	      !_theResult____h169046[5] &&
	      !_theResult____h169046[4] &&
	      !_theResult____h169046[3] &&
	      !_theResult____h169046[2] &&
	      !_theResult____h169046[1] &&
	      !_theResult____h169046[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4608) ?
	       11'd0 :
	       _theResult___fst_exp__h177347 ;
  assign _theResult___fst_exp__h177356 =
	     (!_theResult____h169046[56] && _theResult____h169046[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h177353 ;
  assign _theResult___fst_exp__h178067 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard69056_0b0_theResult___fst_exp77282_0_ETC__q119 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q120 ;
  assign _theResult___fst_exp__h178070 =
	     (_theResult___fst_exp__h177282 == 11'd2047) ?
	       _theResult___fst_exp__h177282 :
	       _theResult___fst_exp__h178067 ;
  assign _theResult___fst_exp__h186023 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q116[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q116[10:0] ;
  assign _theResult___fst_exp__h186062 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q116[10:0] -
	     { 5'd0,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4291 } ;
  assign _theResult___fst_exp__h186068 =
	     (sV1_exp__h823 == 8'd0 && !sV1_sfd__h824[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4264 ||
	      !_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4676) ?
	       11'd0 :
	       _theResult___fst_exp__h186062 ;
  assign _theResult___fst_exp__h186071 =
	     (sV1_exp__h823 == 8'd0) ?
	       _theResult___fst_exp__h186068 :
	       _theResult___fst_exp__h186023 ;
  assign _theResult___fst_exp__h186807 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard78081_0b0_theResult___fst_exp86071_0_ETC__q124 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125 ;
  assign _theResult___fst_exp__h186810 =
	     (_theResult___fst_exp__h186071 == 11'd2047) ?
	       _theResult___fst_exp__h186071 :
	       _theResult___fst_exp__h186807 ;
  assign _theResult___fst_exp__h186819 =
	     (sV1_exp__h823 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4220 ?
		  _theResult___snd_fst_exp__h168498 :
		  _theResult___fst_exp__h152732) :
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4358 ?
		  _theResult___snd_fst_exp__h186813 :
		  _theResult___fst_exp__h152732) ;
  assign _theResult___fst_exp__h186822 =
	     (sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h186819 ;
  assign _theResult___fst_exp__h22818 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2351_0b0_0_0b1_0_0b10_out_exp2764_0b_ETC__q25 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d910 ;
  assign _theResult___fst_exp__h23328 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2835_0b0_x2850_BITS_7_TO_0_0b1_x2850_ETC__q23 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d949 ;
  assign _theResult___fst_exp__h23331 =
	     (x__h22850[7:0] == 8'd255) ?
	       x__h22850[7:0] :
	       _theResult___fst_exp__h23328 ;
  assign _theResult___fst_exp__h29132 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8664_0b0_0_0b1_0_0b10_out_exp9077_0b_ETC__q37 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1283 ;
  assign _theResult___fst_exp__h29643 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9149_0b0_x9164_BITS_7_TO_0_0b1_x9164_ETC__q29 :
	       CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30 ;
  assign _theResult___fst_exp__h29646 =
	     (x__h29164[7:0] == 8'd255) ?
	       x__h29164[7:0] :
	       _theResult___fst_exp__h29643 ;
  assign _theResult___fst_exp__h35188 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4721_0b0_0_0b1_0_0b10_out_exp5134_0b_ETC__q40 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1478 ;
  assign _theResult___fst_exp__h35698 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5205_0b0_x5220_BITS_7_TO_0_0b1_x5220_ETC__q41 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1516 ;
  assign _theResult___fst_exp__h35701 =
	     (x__h35220[7:0] == 8'd255) ?
	       x__h35220[7:0] :
	       _theResult___fst_exp__h35698 ;
  assign _theResult___fst_exp__h60482 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9811_0b0_0_0b1_0_0b10_out_exp0427_0b_ETC__q58 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2220 ;
  assign _theResult___fst_exp__h61196 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0499_0b0_x0514_BITS_10_TO_0_0b1_x051_ETC__q52 :
	       CASE_requestR_BITS_194_TO_192_0x1_x0514_BITS_1_ETC__q53 ;
  assign _theResult___fst_exp__h61199 =
	     (x__h60514[10:0] == 11'd2047) ?
	       x__h60514[10:0] :
	       _theResult___fst_exp__h61196 ;
  assign _theResult___fst_exp__h70063 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9393_0b0_0_0b1_0_0b10_out_exp0009_0b_ETC__q61 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2379 ;
  assign _theResult___fst_exp__h70776 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0080_0b0_x0095_BITS_10_TO_0_0b1_x009_ETC__q62 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2417 ;
  assign _theResult___fst_exp__h70779 =
	     (x__h70095[10:0] == 11'd2047) ?
	       x__h70095[10:0] :
	       _theResult___fst_exp__h70776 ;
  assign _theResult___fst_exp__h83786 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3115_0b0_0_0b1_0_0b10_out_exp3731_0b_ETC__q75 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2717 ;
  assign _theResult___fst_exp__h84500 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3803_0b0_x3818_BITS_10_TO_0_0b1_x381_ETC__q69 :
	       CASE_requestR_BITS_194_TO_192_0x1_x3818_BITS_1_ETC__q70 ;
  assign _theResult___fst_exp__h84503 =
	     (x__h83818[10:0] == 11'd2047) ?
	       x__h83818[10:0] :
	       _theResult___fst_exp__h84500 ;
  assign _theResult___fst_exp__h94683 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4013_0b0_0_0b1_0_0b10_out_exp4629_0b_ETC__q76 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2845 ;
  assign _theResult___fst_exp__h95396 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4700_0b0_x4715_BITS_10_TO_0_0b1_x471_ETC__q77 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2883 ;
  assign _theResult___fst_exp__h95399 =
	     (x__h94715[10:0] == 11'd2047) ?
	       x__h94715[10:0] :
	       _theResult___fst_exp__h95396 ;
  assign _theResult___fst_sfd__h110360 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       23'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 ;
  assign _theResult___fst_sfd__h119067 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10387_0b0_sfdin18478_BITS_56_TO_34_0_ETC__q100 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin18478_B_ETC__q101 ;
  assign _theResult___fst_sfd__h119070 =
	     (_theResult___fst_exp__h118484 == 8'd255) ?
	       sfdin__h118478[56:34] :
	       _theResult___fst_sfd__h119067 ;
  assign _theResult___fst_sfd__h12315 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard1843_0b0_sfd___31833_BITS_63_TO_41_0_ETC__q14 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15 ;
  assign _theResult___fst_sfd__h127637 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard19080_0b0_theResult___snd27079_BITS__ETC__q102 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103 ;
  assign _theResult___fst_sfd__h127640 =
	     (_theResult___fst_exp__h127128 == 8'd255) ?
	       _theResult___snd__h127079[56:34] :
	       _theResult___fst_sfd__h127637 ;
  assign _theResult___fst_sfd__h12826 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2331_0b0_sfd___31833_BITS_62_TO_40_0_ETC__q12 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13 ;
  assign _theResult___fst_sfd__h12829 =
	     (x__h12346[7:0] == 8'd255) ?
	       sfd___3__h11833[62:40] :
	       _theResult___fst_sfd__h12826 ;
  assign _theResult___fst_sfd__h136806 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard27997_0b0_sfdin36217_BITS_56_TO_34_0_ETC__q104 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin36217_B_ETC__q105 ;
  assign _theResult___fst_sfd__h136809 =
	     (_theResult___fst_exp__h136223 == 8'd255) ?
	       sfdin__h136217[56:34] :
	       _theResult___fst_sfd__h136806 ;
  assign _theResult___fst_sfd__h145430 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard36819_0b0_theResult___snd44842_BITS__ETC__q106 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107 ;
  assign _theResult___fst_sfd__h145433 =
	     (_theResult___fst_exp__h144896 == 8'd255) ?
	       _theResult___snd__h144842[56:34] :
	       _theResult___fst_sfd__h145430 ;
  assign _theResult___fst_sfd__h145442 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3148 ?
		  _theResult___snd_fst_sfd__h127643 :
		  _theResult___fst_sfd__h110360) :
	       (SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3565 ?
		  _theResult___snd_fst_sfd__h145436 :
		  _theResult___fst_sfd__h110360) ;
  assign _theResult___fst_sfd__h145448 =
	     ((requestR[190:180] == 11'd2047 || requestR[190:180] == 11'd0) &&
	      requestR[179:128] == 52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h145442 ;
  assign _theResult___fst_sfd__h147281 = { 1'd1, sV1_sfd__h824[21:0] } ;
  assign _theResult___fst_sfd__h152733 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       52'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 ;
  assign _theResult___fst_sfd__h168493 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard59820_0b0_theResult___snd67732_BITS__ETC__q126 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127 ;
  assign _theResult___fst_sfd__h168496 =
	     (_theResult___fst_exp__h167781 == 11'd2047) ?
	       _theResult___snd__h167732[56:5] :
	       _theResult___fst_sfd__h168493 ;
  assign _theResult___fst_sfd__h178068 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard69056_0b0_sfdin77276_BITS_56_TO_5_0b_ETC__q128 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin77276_B_ETC__q129 ;
  assign _theResult___fst_sfd__h178071 =
	     (_theResult___fst_exp__h177282 == 11'd2047) ?
	       sfdin__h177276[56:5] :
	       _theResult___fst_sfd__h178068 ;
  assign _theResult___fst_sfd__h186808 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard78081_0b0_theResult___snd86017_BITS__ETC__q130 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131 ;
  assign _theResult___fst_sfd__h186811 =
	     (_theResult___fst_exp__h186071 == 11'd2047) ?
	       _theResult___snd__h186017[56:5] :
	       _theResult___fst_sfd__h186808 ;
  assign _theResult___fst_sfd__h186820 =
	     (sV1_exp__h823 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4220 ?
		  _theResult___snd_fst_sfd__h168499 :
		  _theResult___fst_sfd__h152733) :
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4358 ?
		  _theResult___snd_fst_sfd__h186814 :
		  _theResult___fst_sfd__h152733) ;
  assign _theResult___fst_sfd__h186826 =
	     ((sV1_exp__h823 == 8'd255 || sV1_exp__h823 == 8'd0) &&
	      sV1_sfd__h824 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h186820 ;
  assign _theResult___fst_sfd__h22819 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2351_0b0_sfd___32341_BITS_63_TO_41_0_ETC__q28 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d969 ;
  assign _theResult___fst_sfd__h23329 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2835_0b0_sfd___32341_BITS_62_TO_40_0_ETC__q24 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d981 ;
  assign _theResult___fst_sfd__h23332 =
	     (x__h22850[7:0] == 8'd255) ?
	       sfd___3__h22341[62:40] :
	       _theResult___fst_sfd__h23329 ;
  assign _theResult___fst_sfd__h29133 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8664_0b0_sfd___38654_BITS_31_TO_9_0b_ETC__q31 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32 ;
  assign _theResult___fst_sfd__h29644 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9149_0b0_sfd___38654_BITS_30_TO_8_0b_ETC__q33 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34 ;
  assign _theResult___fst_sfd__h29647 =
	     (x__h29164[7:0] == 8'd255) ?
	       sfd___3__h28654[30:8] :
	       _theResult___fst_sfd__h29644 ;
  assign _theResult___fst_sfd__h35189 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4721_0b0_sfd___34711_BITS_31_TO_9_0b_ETC__q43 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1536 ;
  assign _theResult___fst_sfd__h35699 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5205_0b0_sfd___34711_BITS_30_TO_8_0b_ETC__q42 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1548 ;
  assign _theResult___fst_sfd__h35702 =
	     (x__h35220[7:0] == 8'd255) ?
	       sfd___3__h34711[30:8] :
	       _theResult___fst_sfd__h35699 ;
  assign _theResult___fst_sfd__h60483 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9811_0b0_sfd___39801_BITS_54_TO_3_0b_ETC__q56 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q57 ;
  assign _theResult___fst_sfd__h61197 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0499_0b0_sfd___39801_BITS_53_TO_2_0b_ETC__q54 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q55 ;
  assign _theResult___fst_sfd__h61200 =
	     (x__h60514[10:0] == 11'd2047) ?
	       sfd___3__h59801[53:2] :
	       _theResult___fst_sfd__h61197 ;
  assign _theResult___fst_sfd__h70064 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9393_0b0_sfd___39383_BITS_54_TO_3_0b_ETC__q64 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2436 ;
  assign _theResult___fst_sfd__h70777 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0080_0b0_sfd___39383_BITS_53_TO_2_0b_ETC__q63 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2448 ;
  assign _theResult___fst_sfd__h70780 =
	     (x__h70095[10:0] == 11'd2047) ?
	       sfd___3__h69383[53:2] :
	       _theResult___fst_sfd__h70777 ;
  assign _theResult___fst_sfd__h83787 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3115_0b0_sfd___31833_BITS_63_TO_12_0_ETC__q71 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72 ;
  assign _theResult___fst_sfd__h84501 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3803_0b0_sfd___31833_BITS_62_TO_11_0_ETC__q73 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74 ;
  assign _theResult___fst_sfd__h84504 =
	     (x__h83818[10:0] == 11'd2047) ?
	       sfd___3__h11833[62:11] :
	       _theResult___fst_sfd__h84501 ;
  assign _theResult___fst_sfd__h94684 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4013_0b0_sfd___32341_BITS_63_TO_12_0_ETC__q79 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2903 ;
  assign _theResult___fst_sfd__h95397 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4700_0b0_sfd___32341_BITS_62_TO_11_0_ETC__q78 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2915 ;
  assign _theResult___fst_sfd__h95400 =
	     (x__h94715[10:0] == 11'd2047) ?
	       sfd___3__h22341[62:11] :
	       _theResult___fst_sfd__h95397 ;
  assign _theResult___fst_sfd__h99073 = { 1'd1, requestR[178:128] } ;
  assign _theResult___sfd__h119008 =
	     sfd__h118576[24] ?
	       ((_theResult___fst_exp__h118484 == 8'd254) ?
		  23'd0 :
		  sfd__h118576[23:1]) :
	       sfd__h118576[22:0] ;
  assign _theResult___sfd__h12257 =
	     sfd__h11860[24] ? sfd__h11860[23:1] : sfd__h11860[22:0] ;
  assign _theResult___sfd__h127578 =
	     sfd__h127146[24] ?
	       ((_theResult___fst_exp__h127128 == 8'd254) ?
		  23'd0 :
		  sfd__h127146[23:1]) :
	       sfd__h127146[22:0] ;
  assign _theResult___sfd__h12768 =
	     sfd__h12361[24] ?
	       ((x__h12346[7:0] == 8'd254) ? 23'd0 : sfd__h12361[23:1]) :
	       sfd__h12361[22:0] ;
  assign _theResult___sfd__h136747 =
	     sfd__h136315[24] ?
	       ((_theResult___fst_exp__h136223 == 8'd254) ?
		  23'd0 :
		  sfd__h136315[23:1]) :
	       sfd__h136315[22:0] ;
  assign _theResult___sfd__h145371 =
	     sfd__h144915[24] ?
	       ((_theResult___fst_exp__h144896 == 8'd254) ?
		  23'd0 :
		  sfd__h144915[23:1]) :
	       sfd__h144915[22:0] ;
  assign _theResult___sfd__h168434 =
	     sfd__h167799[53] ?
	       ((_theResult___fst_exp__h167781 == 11'd2046) ?
		  52'd0 :
		  sfd__h167799[52:1]) :
	       sfd__h167799[51:0] ;
  assign _theResult___sfd__h178009 =
	     sfd__h177374[53] ?
	       ((_theResult___fst_exp__h177282 == 11'd2046) ?
		  52'd0 :
		  sfd__h177374[52:1]) :
	       sfd__h177374[51:0] ;
  assign _theResult___sfd__h186749 =
	     sfd__h186090[53] ?
	       ((_theResult___fst_exp__h186071 == 11'd2046) ?
		  52'd0 :
		  sfd__h186090[52:1]) :
	       sfd__h186090[51:0] ;
  assign _theResult___sfd__h22762 =
	     sfd__h22368[24] ? sfd__h22368[23:1] : sfd__h22368[22:0] ;
  assign _theResult___sfd__h23272 =
	     sfd__h22865[24] ?
	       ((x__h22850[7:0] == 8'd254) ? 23'd0 : sfd__h22865[23:1]) :
	       sfd__h22865[22:0] ;
  assign _theResult___sfd__h29075 =
	     sfd__h28681[24] ? sfd__h28681[23:1] : sfd__h28681[22:0] ;
  assign _theResult___sfd__h29586 =
	     sfd__h29179[24] ?
	       ((x__h29164[7:0] == 8'd254) ? 23'd0 : sfd__h29179[23:1]) :
	       sfd__h29179[22:0] ;
  assign _theResult___sfd__h35132 =
	     sfd__h34738[24] ? sfd__h34738[23:1] : sfd__h34738[22:0] ;
  assign _theResult___sfd__h35642 =
	     sfd__h35235[24] ?
	       ((x__h35220[7:0] == 8'd254) ? 23'd0 : sfd__h35235[23:1]) :
	       sfd__h35235[22:0] ;
  assign _theResult___sfd__h60425 =
	     sfd__h59828[53] ? sfd__h59828[52:1] : sfd__h59828[51:0] ;
  assign _theResult___sfd__h61139 =
	     sfd__h60529[53] ?
	       ((x__h60514[10:0] == 11'd2046) ? 52'd0 : sfd__h60529[52:1]) :
	       sfd__h60529[51:0] ;
  assign _theResult___sfd__h70007 =
	     sfd__h69410[53] ? sfd__h69410[52:1] : sfd__h69410[51:0] ;
  assign _theResult___sfd__h70720 =
	     sfd__h70110[53] ?
	       ((x__h70095[10:0] == 11'd2046) ? 52'd0 : sfd__h70110[52:1]) :
	       sfd__h70110[51:0] ;
  assign _theResult___sfd__h83729 =
	     sfd__h83132[53] ? sfd__h83132[52:1] : sfd__h83132[51:0] ;
  assign _theResult___sfd__h84443 =
	     sfd__h83833[53] ?
	       ((x__h83818[10:0] == 11'd2046) ? 52'd0 : sfd__h83833[52:1]) :
	       sfd__h83833[51:0] ;
  assign _theResult___sfd__h94627 =
	     sfd__h94030[53] ? sfd__h94030[52:1] : sfd__h94030[51:0] ;
  assign _theResult___sfd__h95340 =
	     sfd__h94730[53] ?
	       ((x__h94715[10:0] == 11'd2046) ? 52'd0 : sfd__h94730[52:1]) :
	       sfd__h94730[51:0] ;
  assign _theResult___snd__h118495 = { _theResult____h110377[55:0], 1'd0 } ;
  assign _theResult___snd__h118506 =
	     (!_theResult____h110377[56] && _theResult____h110377[55]) ?
	       _theResult___snd__h118508 :
	       _theResult___snd__h118518 ;
  assign _theResult___snd__h118508 = { _theResult____h110377[54:0], 2'd0 } ;
  assign _theResult___snd__h118518 =
	     (!_theResult____h110377[56] && !_theResult____h110377[55] &&
	      !_theResult____h110377[54] &&
	      !_theResult____h110377[53] &&
	      !_theResult____h110377[52] &&
	      !_theResult____h110377[51] &&
	      !_theResult____h110377[50] &&
	      !_theResult____h110377[49] &&
	      !_theResult____h110377[48] &&
	      !_theResult____h110377[47] &&
	      !_theResult____h110377[46] &&
	      !_theResult____h110377[45] &&
	      !_theResult____h110377[44] &&
	      !_theResult____h110377[43] &&
	      !_theResult____h110377[42] &&
	      !_theResult____h110377[41] &&
	      !_theResult____h110377[40] &&
	      !_theResult____h110377[39] &&
	      !_theResult____h110377[38] &&
	      !_theResult____h110377[37] &&
	      !_theResult____h110377[36] &&
	      !_theResult____h110377[35] &&
	      !_theResult____h110377[34] &&
	      !_theResult____h110377[33] &&
	      !_theResult____h110377[32] &&
	      !_theResult____h110377[31] &&
	      !_theResult____h110377[30] &&
	      !_theResult____h110377[29] &&
	      !_theResult____h110377[28] &&
	      !_theResult____h110377[27] &&
	      !_theResult____h110377[26] &&
	      !_theResult____h110377[25] &&
	      !_theResult____h110377[24] &&
	      !_theResult____h110377[23] &&
	      !_theResult____h110377[22] &&
	      !_theResult____h110377[21] &&
	      !_theResult____h110377[20] &&
	      !_theResult____h110377[19] &&
	      !_theResult____h110377[18] &&
	      !_theResult____h110377[17] &&
	      !_theResult____h110377[16] &&
	      !_theResult____h110377[15] &&
	      !_theResult____h110377[14] &&
	      !_theResult____h110377[13] &&
	      !_theResult____h110377[12] &&
	      !_theResult____h110377[11] &&
	      !_theResult____h110377[10] &&
	      !_theResult____h110377[9] &&
	      !_theResult____h110377[8] &&
	      !_theResult____h110377[7] &&
	      !_theResult____h110377[6] &&
	      !_theResult____h110377[5] &&
	      !_theResult____h110377[4] &&
	      !_theResult____h110377[3] &&
	      !_theResult____h110377[2] &&
	      !_theResult____h110377[1] &&
	      !_theResult____h110377[0]) ?
	       _theResult____h110377 :
	       _theResult___snd__h118524 ;
  assign _theResult___snd__h118524 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q82[54:0],
	       2'd0 } ;
  assign _theResult___snd__h118547 =
	     _theResult____h110377 <<
	     IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d3381 ;
  assign _theResult___snd__h127079 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h127088 :
	       _theResult___snd__h127081 ;
  assign _theResult___snd__h127081 = { requestR[179:128], 5'd0 } ;
  assign _theResult___snd__h127088 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798) ?
	       sfd__h102777 :
	       _theResult___snd__h127094 ;
  assign _theResult___snd__h127094 =
	     { IF_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_ETC__q86[54:0],
	       2'd0 } ;
  assign _theResult___snd__h127117 =
	     sfd__h102777 <<
	     IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d3498 ;
  assign _theResult___snd__h136234 = { _theResult____h127987[55:0], 1'd0 } ;
  assign _theResult___snd__h136245 =
	     (!_theResult____h127987[56] && _theResult____h127987[55]) ?
	       _theResult___snd__h136247 :
	       _theResult___snd__h136257 ;
  assign _theResult___snd__h136247 = { _theResult____h127987[54:0], 2'd0 } ;
  assign _theResult___snd__h136257 =
	     (!_theResult____h127987[56] && !_theResult____h127987[55] &&
	      !_theResult____h127987[54] &&
	      !_theResult____h127987[53] &&
	      !_theResult____h127987[52] &&
	      !_theResult____h127987[51] &&
	      !_theResult____h127987[50] &&
	      !_theResult____h127987[49] &&
	      !_theResult____h127987[48] &&
	      !_theResult____h127987[47] &&
	      !_theResult____h127987[46] &&
	      !_theResult____h127987[45] &&
	      !_theResult____h127987[44] &&
	      !_theResult____h127987[43] &&
	      !_theResult____h127987[42] &&
	      !_theResult____h127987[41] &&
	      !_theResult____h127987[40] &&
	      !_theResult____h127987[39] &&
	      !_theResult____h127987[38] &&
	      !_theResult____h127987[37] &&
	      !_theResult____h127987[36] &&
	      !_theResult____h127987[35] &&
	      !_theResult____h127987[34] &&
	      !_theResult____h127987[33] &&
	      !_theResult____h127987[32] &&
	      !_theResult____h127987[31] &&
	      !_theResult____h127987[30] &&
	      !_theResult____h127987[29] &&
	      !_theResult____h127987[28] &&
	      !_theResult____h127987[27] &&
	      !_theResult____h127987[26] &&
	      !_theResult____h127987[25] &&
	      !_theResult____h127987[24] &&
	      !_theResult____h127987[23] &&
	      !_theResult____h127987[22] &&
	      !_theResult____h127987[21] &&
	      !_theResult____h127987[20] &&
	      !_theResult____h127987[19] &&
	      !_theResult____h127987[18] &&
	      !_theResult____h127987[17] &&
	      !_theResult____h127987[16] &&
	      !_theResult____h127987[15] &&
	      !_theResult____h127987[14] &&
	      !_theResult____h127987[13] &&
	      !_theResult____h127987[12] &&
	      !_theResult____h127987[11] &&
	      !_theResult____h127987[10] &&
	      !_theResult____h127987[9] &&
	      !_theResult____h127987[8] &&
	      !_theResult____h127987[7] &&
	      !_theResult____h127987[6] &&
	      !_theResult____h127987[5] &&
	      !_theResult____h127987[4] &&
	      !_theResult____h127987[3] &&
	      !_theResult____h127987[2] &&
	      !_theResult____h127987[1] &&
	      !_theResult____h127987[0]) ?
	       _theResult____h127987 :
	       _theResult___snd__h136263 ;
  assign _theResult___snd__h136263 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q91[54:0],
	       2'd0 } ;
  assign _theResult___snd__h136286 =
	     _theResult____h127987 <<
	     IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d3811 ;
  assign _theResult___snd__h144842 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h144856 :
	       _theResult___snd__h127081 ;
  assign _theResult___snd__h144856 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798) ?
	       sfd__h102777 :
	       _theResult___snd__h144862 ;
  assign _theResult___snd__h144862 =
	     { IF_0_CONCAT_IF_requestR_BITS_190_TO_180_481_EQ_ETC__q96[54:0],
	       2'd0 } ;
  assign _theResult___snd__h144880 =
	     sfd__h102777 <<
	     IF_SEXT_requestR_BITS_190_TO_180_481_MINUS_102_ETC___d3880 ;
  assign _theResult___snd__h167732 =
	     (sV1_exp__h823 == 8'd0) ?
	       _theResult___snd__h167741 :
	       _theResult___snd__h167734 ;
  assign _theResult___snd__h167734 = { sV1_sfd__h824, 34'd0 } ;
  assign _theResult___snd__h167741 =
	     (sV1_exp__h823 == 8'd0 && !sV1_sfd__h824[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4264) ?
	       b__h39112 :
	       _theResult___snd__h167747 ;
  assign _theResult___snd__h167747 =
	     { IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q112[54:0],
	       2'd0 } ;
  assign _theResult___snd__h167770 =
	     b__h39112 <<
	     IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4291 ;
  assign _theResult___snd__h177293 = { _theResult____h169046[55:0], 1'd0 } ;
  assign _theResult___snd__h177304 =
	     (!_theResult____h169046[56] && _theResult____h169046[55]) ?
	       _theResult___snd__h177306 :
	       _theResult___snd__h177316 ;
  assign _theResult___snd__h177306 = { _theResult____h169046[54:0], 2'd0 } ;
  assign _theResult___snd__h177316 =
	     (!_theResult____h169046[56] && !_theResult____h169046[55] &&
	      !_theResult____h169046[54] &&
	      !_theResult____h169046[53] &&
	      !_theResult____h169046[52] &&
	      !_theResult____h169046[51] &&
	      !_theResult____h169046[50] &&
	      !_theResult____h169046[49] &&
	      !_theResult____h169046[48] &&
	      !_theResult____h169046[47] &&
	      !_theResult____h169046[46] &&
	      !_theResult____h169046[45] &&
	      !_theResult____h169046[44] &&
	      !_theResult____h169046[43] &&
	      !_theResult____h169046[42] &&
	      !_theResult____h169046[41] &&
	      !_theResult____h169046[40] &&
	      !_theResult____h169046[39] &&
	      !_theResult____h169046[38] &&
	      !_theResult____h169046[37] &&
	      !_theResult____h169046[36] &&
	      !_theResult____h169046[35] &&
	      !_theResult____h169046[34] &&
	      !_theResult____h169046[33] &&
	      !_theResult____h169046[32] &&
	      !_theResult____h169046[31] &&
	      !_theResult____h169046[30] &&
	      !_theResult____h169046[29] &&
	      !_theResult____h169046[28] &&
	      !_theResult____h169046[27] &&
	      !_theResult____h169046[26] &&
	      !_theResult____h169046[25] &&
	      !_theResult____h169046[24] &&
	      !_theResult____h169046[23] &&
	      !_theResult____h169046[22] &&
	      !_theResult____h169046[21] &&
	      !_theResult____h169046[20] &&
	      !_theResult____h169046[19] &&
	      !_theResult____h169046[18] &&
	      !_theResult____h169046[17] &&
	      !_theResult____h169046[16] &&
	      !_theResult____h169046[15] &&
	      !_theResult____h169046[14] &&
	      !_theResult____h169046[13] &&
	      !_theResult____h169046[12] &&
	      !_theResult____h169046[11] &&
	      !_theResult____h169046[10] &&
	      !_theResult____h169046[9] &&
	      !_theResult____h169046[8] &&
	      !_theResult____h169046[7] &&
	      !_theResult____h169046[6] &&
	      !_theResult____h169046[5] &&
	      !_theResult____h169046[4] &&
	      !_theResult____h169046[3] &&
	      !_theResult____h169046[2] &&
	      !_theResult____h169046[1] &&
	      !_theResult____h169046[0]) ?
	       _theResult____h169046 :
	       _theResult___snd__h177322 ;
  assign _theResult___snd__h177322 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q117[54:0],
	       2'd0 } ;
  assign _theResult___snd__h177345 =
	     _theResult____h169046 <<
	     IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d4606 ;
  assign _theResult___snd__h186017 =
	     (sV1_exp__h823 == 8'd0) ?
	       _theResult___snd__h186031 :
	       _theResult___snd__h167734 ;
  assign _theResult___snd__h186031 =
	     (sV1_exp__h823 == 8'd0 && !sV1_sfd__h824[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4264) ?
	       b__h39112 :
	       _theResult___snd__h186037 ;
  assign _theResult___snd__h186037 =
	     { IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q122[54:0],
	       2'd0 } ;
  assign _theResult___snd__h186055 =
	     b__h39112 <<
	     IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4675 ;
  assign _theResult___snd_fst_exp__h127642 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3149 ?
	       _theResult___fst_exp__h119069 :
	       _theResult___fst_exp__h127639 ;
  assign _theResult___snd_fst_exp__h12831 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 ?
	       _theResult___fst_exp__h12314 :
	       _theResult___fst_exp__h12828 ;
  assign _theResult___snd_fst_exp__h12834 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h12831 ;
  assign _theResult___snd_fst_exp__h12837 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 ?
	       _theResult___snd_fst_exp__h12834 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h145435 =
	     SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3566 ?
	       _theResult___fst_exp__h136808 :
	       _theResult___fst_exp__h145432 ;
  assign _theResult___snd_fst_exp__h168498 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4221 ?
	       11'd0 :
	       _theResult___fst_exp__h168495 ;
  assign _theResult___snd_fst_exp__h186813 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4359 ?
	       _theResult___fst_exp__h178070 :
	       _theResult___fst_exp__h186810 ;
  assign _theResult___snd_fst_exp__h23334 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881 ?
	       _theResult___fst_exp__h22818 :
	       _theResult___fst_exp__h23331 ;
  assign _theResult___snd_fst_exp__h23337 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h23334 ;
  assign _theResult___snd_fst_exp__h23340 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 ?
	       _theResult___snd_fst_exp__h23337 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h29649 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 ?
	       _theResult___fst_exp__h29132 :
	       _theResult___fst_exp__h29646 ;
  assign _theResult___snd_fst_exp__h29652 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h29649 ;
  assign _theResult___snd_fst_exp__h29655 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 ?
	       _theResult___snd_fst_exp__h29652 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h35704 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449 ?
	       _theResult___fst_exp__h35188 :
	       _theResult___fst_exp__h35701 ;
  assign _theResult___snd_fst_exp__h35707 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h35704 ;
  assign _theResult___snd_fst_exp__h35710 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 ?
	       _theResult___snd_fst_exp__h35707 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h61202 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2158 ?
	       _theResult___fst_exp__h60482 :
	       _theResult___fst_exp__h61199 ;
  assign _theResult___snd_fst_exp__h61205 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2156 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h61202 ;
  assign _theResult___snd_fst_exp__h61208 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2154 ?
	       _theResult___snd_fst_exp__h61205 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h70782 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2349 ?
	       _theResult___fst_exp__h70063 :
	       _theResult___fst_exp__h70779 ;
  assign _theResult___snd_fst_exp__h70785 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2348 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h70782 ;
  assign _theResult___snd_fst_exp__h70788 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2347 ?
	       _theResult___snd_fst_exp__h70785 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h84506 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2657 ?
	       _theResult___fst_exp__h83786 :
	       _theResult___fst_exp__h84503 ;
  assign _theResult___snd_fst_exp__h84509 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2654 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h84506 ;
  assign _theResult___snd_fst_exp__h84512 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2652 ?
	       _theResult___snd_fst_exp__h84509 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h95402 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2817 ?
	       _theResult___fst_exp__h94683 :
	       _theResult___fst_exp__h95399 ;
  assign _theResult___snd_fst_exp__h95405 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2816 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h95402 ;
  assign _theResult___snd_fst_exp__h95408 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2815 ?
	       _theResult___snd_fst_exp__h95405 :
	       11'd2047 ;
  assign _theResult___snd_fst_sfd__h102731 =
	     (value__h98616[51:29] == 23'd0) ?
	       23'd2097152 :
	       value__h98616[51:29] ;
  assign _theResult___snd_fst_sfd__h127643 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3149 ?
	       _theResult___fst_sfd__h119070 :
	       _theResult___fst_sfd__h127640 ;
  assign _theResult___snd_fst_sfd__h12832 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 ?
	       _theResult___fst_sfd__h12315 :
	       _theResult___fst_sfd__h12829 ;
  assign _theResult___snd_fst_sfd__h145436 =
	     SEXT_requestR_BITS_190_TO_180_481_MINUS_1023_4_ETC___d3566 ?
	       _theResult___fst_sfd__h136809 :
	       _theResult___fst_sfd__h145433 ;
  assign _theResult___snd_fst_sfd__h148909 =
	     (value__h147026 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h147023 ;
  assign _theResult___snd_fst_sfd__h168499 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4221 ?
	       52'd0 :
	       _theResult___fst_sfd__h168496 ;
  assign _theResult___snd_fst_sfd__h186814 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4359 ?
	       _theResult___fst_sfd__h178071 :
	       _theResult___fst_sfd__h186811 ;
  assign _theResult___snd_fst_sfd__h23335 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881 ?
	       _theResult___fst_sfd__h22819 :
	       _theResult___fst_sfd__h23332 ;
  assign _theResult___snd_fst_sfd__h29650 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 ?
	       _theResult___fst_sfd__h29133 :
	       _theResult___fst_sfd__h29647 ;
  assign _theResult___snd_fst_sfd__h35705 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449 ?
	       _theResult___fst_sfd__h35189 :
	       _theResult___fst_sfd__h35702 ;
  assign _theResult___snd_fst_sfd__h61203 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2158 ?
	       _theResult___fst_sfd__h60483 :
	       _theResult___fst_sfd__h61200 ;
  assign _theResult___snd_fst_sfd__h70783 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2349 ?
	       _theResult___fst_sfd__h70064 :
	       _theResult___fst_sfd__h70780 ;
  assign _theResult___snd_fst_sfd__h84507 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2657 ?
	       _theResult___fst_sfd__h83787 :
	       _theResult___fst_sfd__h84504 ;
  assign _theResult___snd_fst_sfd__h95403 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2817 ?
	       _theResult___fst_sfd__h94684 :
	       _theResult___fst_sfd__h95400 ;
  assign ab__h205220 = dw_result$wget ;
  assign b__h36338 = { value__h36340, 64'd0 } ;
  assign b__h39112 = { value__h36340, 32'd0 } ;
  assign b__h71415 = { value__h71417, 32'd0 } ;
  assign b__h96032 = { value__h71417, 64'd0 } ;
  assign din_inc___2_exp__h12866 = x__h12346[7:0] + 8'd1 ;
  assign din_inc___2_exp__h145462 = _theResult___fst_exp__h118484 + 8'd1 ;
  assign din_inc___2_exp__h145481 = _theResult___fst_exp__h127128 + 8'd1 ;
  assign din_inc___2_exp__h145505 = _theResult___fst_exp__h136223 + 8'd1 ;
  assign din_inc___2_exp__h145524 = _theResult___fst_exp__h144896 + 8'd1 ;
  assign din_inc___2_exp__h186843 = _theResult___fst_exp__h167781 + 11'd1 ;
  assign din_inc___2_exp__h186867 = _theResult___fst_exp__h177282 + 11'd1 ;
  assign din_inc___2_exp__h186886 = _theResult___fst_exp__h186071 + 11'd1 ;
  assign din_inc___2_exp__h23365 = x__h22850[7:0] + 8'd1 ;
  assign din_inc___2_exp__h29684 = x__h29164[7:0] + 8'd1 ;
  assign din_inc___2_exp__h35735 = x__h35220[7:0] + 8'd1 ;
  assign din_inc___2_exp__h61237 = x__h60514[10:0] + 11'd1 ;
  assign din_inc___2_exp__h70813 = x__h70095[10:0] + 11'd1 ;
  assign din_inc___2_exp__h84541 = x__h83818[10:0] + 11'd1 ;
  assign din_inc___2_exp__h95433 = x__h94715[10:0] + 11'd1 ;
  assign guard__h110387 =
	     { IF_sfdin18478_BIT_33_THEN_2_ELSE_0__q83[1],
	       { sfdin__h118478[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h11843 =
	     { IF_sfd___31833_BIT_40_THEN_2_ELSE_0__q6[1],
	       { sfd___3__h11833[39:0], 23'd0 } != 63'd0 } ;
  assign guard__h119080 =
	     { IF_theResult___snd27079_BIT_33_THEN_2_ELSE_0__q87[1],
	       { _theResult___snd__h127079[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h12331 =
	     { IF_sfd___31833_BIT_39_THEN_2_ELSE_0__q7[1],
	       { sfd___3__h11833[38:0], 24'd0 } != 63'd0 } ;
  assign guard__h127997 =
	     { IF_sfdin36217_BIT_33_THEN_2_ELSE_0__q92[1],
	       { sfdin__h136217[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h128595 = x__h128695 != 57'd0 ;
  assign guard__h136819 =
	     { IF_theResult___snd44842_BIT_33_THEN_2_ELSE_0__q97[1],
	       { _theResult___snd__h144842[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h159820 =
	     { IF_theResult___snd67732_BIT_4_THEN_2_ELSE_0__q113[1],
	       { _theResult___snd__h167732[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h169056 =
	     { IF_sfdin77276_BIT_4_THEN_2_ELSE_0__q118[1],
	       { sfdin__h177276[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h169654 = x__h169754 != 57'd0 ;
  assign guard__h178081 =
	     { IF_theResult___snd86017_BIT_4_THEN_2_ELSE_0__q123[1],
	       { _theResult___snd__h186017[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h22351 =
	     { IF_sfd___32341_BIT_40_THEN_2_ELSE_0__q19[1],
	       { sfd___3__h22341[39:0], 23'd0 } != 63'd0 } ;
  assign guard__h22835 =
	     { IF_sfd___32341_BIT_39_THEN_2_ELSE_0__q20[1],
	       { sfd___3__h22341[38:0], 24'd0 } != 63'd0 } ;
  assign guard__h28664 =
	     { IF_sfd___38654_BIT_8_THEN_2_ELSE_0__q26[1],
	       { sfd___3__h28654[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h29149 =
	     { IF_sfd___38654_BIT_7_THEN_2_ELSE_0__q27[1],
	       { sfd___3__h28654[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h34721 =
	     { IF_sfd___34711_BIT_8_THEN_2_ELSE_0__q38[1],
	       { sfd___3__h34711[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h35205 =
	     { IF_sfd___34711_BIT_7_THEN_2_ELSE_0__q39[1],
	       { sfd___3__h34711[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h36274 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1609[23],
	       { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1609[22:0],
		 65'd0 } !=
	       88'd0 } ;
  assign guard__h37049 =
	     { IF_x7235_BIT_24_THEN_2_ELSE_0__q44[1],
	       { x__h37235[23:0], 64'd0 } != 88'd0 } ;
  assign guard__h38330 =
	     { IF_x8548_BIT_24_THEN_2_ELSE_0__q45[1],
	       { x__h38548[23:0], 64'd0 } != 88'd0 } ;
  assign guard__h39048 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1758[23],
	       { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1758[22:0],
		 33'd0 } !=
	       56'd0 } ;
  assign guard__h39599 =
	     { IF_x9785_BIT_24_THEN_2_ELSE_0__q46[1],
	       { x__h39785[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h40642 =
	     { IF_x0860_BIT_24_THEN_2_ELSE_0__q47[1],
	       { x__h40860[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h59811 =
	     { IF_sfd___39801_BIT_2_THEN_2_ELSE_0__q48[1],
	       { sfd___3__h59801[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h60499 =
	     { IF_sfd___39801_BIT_1_THEN_2_ELSE_0__q49[1],
	       { sfd___3__h59801[0], 53'd0 } != 54'd0 } ;
  assign guard__h69393 =
	     { IF_sfd___39383_BIT_2_THEN_2_ELSE_0__q59[1],
	       { sfd___3__h69383[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h70080 =
	     { IF_sfd___39383_BIT_1_THEN_2_ELSE_0__q60[1],
	       { sfd___3__h69383[0], 53'd0 } != 54'd0 } ;
  assign guard__h71351 =
	     { IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2502[52],
	       { IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2502[51:0],
		 33'd0 } !=
	       85'd0 } ;
  assign guard__h71902 =
	     { IF_x2088_BIT_53_THEN_2_ELSE_0__q65[1],
	       { x__h72088[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h72945 =
	     { IF_x3163_BIT_53_THEN_2_ELSE_0__q66[1],
	       { x__h73163[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h83115 =
	     { IF_sfd___31833_BIT_11_THEN_2_ELSE_0__q8[1],
	       { sfd___3__h11833[10:0], 52'd0 } != 63'd0 } ;
  assign guard__h83803 =
	     { IF_sfd___31833_BIT_10_THEN_2_ELSE_0__q9[1],
	       { sfd___3__h11833[9:0], 53'd0 } != 63'd0 } ;
  assign guard__h94013 =
	     { IF_sfd___32341_BIT_11_THEN_2_ELSE_0__q21[1],
	       { sfd___3__h22341[10:0], 52'd0 } != 63'd0 } ;
  assign guard__h94700 =
	     { IF_sfd___32341_BIT_10_THEN_2_ELSE_0__q22[1],
	       { sfd___3__h22341[9:0], 53'd0 } != 63'd0 } ;
  assign guard__h95968 =
	     { IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2953[52],
	       { IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2953[51:0],
		 65'd0 } !=
	       117'd0 } ;
  assign guard__h96743 =
	     { IF_x6929_BIT_53_THEN_2_ELSE_0__q80[1],
	       { x__h96929[52:0], 64'd0 } != 117'd0 } ;
  assign guard__h98007 =
	     { IF_x8225_BIT_53_THEN_2_ELSE_0__q81[1],
	       { x__h98225[52:0], 64'd0 } != 117'd0 } ;
  assign out1___1__h36989 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1609[88:24] +
	     65'd1 ;
  assign out1___1__h39539 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1758[56:24] +
	     33'd1 ;
  assign out1___1__h71842 =
	     IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2502[85:53] +
	     33'd1 ;
  assign out1___1__h96683 =
	     IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2953[117:53] +
	     65'd1 ;
  assign out___1_sfd__h147023 = { value__h147026, 29'd0 } ;
  assign out_exp__h119010 =
	     sfdin__h118478[34] ?
	       _theResult___exp__h119007 :
	       _theResult___fst_exp__h118484 ;
  assign out_exp__h12259 =
	     sfd___3__h11833[41] ? _theResult___exp__h12256 : 8'd0 ;
  assign out_exp__h127580 =
	     _theResult___snd__h127079[34] ?
	       _theResult___exp__h127577 :
	       _theResult___fst_exp__h127128 ;
  assign out_exp__h12770 =
	     sfd___3__h11833[40] ? _theResult___exp__h12767 : x__h12346[7:0] ;
  assign out_exp__h136749 =
	     sfdin__h136217[34] ?
	       _theResult___exp__h136746 :
	       _theResult___fst_exp__h136223 ;
  assign out_exp__h145373 =
	     _theResult___snd__h144842[34] ?
	       _theResult___exp__h145370 :
	       _theResult___fst_exp__h144896 ;
  assign out_exp__h168436 =
	     _theResult___snd__h167732[5] ?
	       _theResult___exp__h168433 :
	       _theResult___fst_exp__h167781 ;
  assign out_exp__h178011 =
	     sfdin__h177276[5] ?
	       _theResult___exp__h178008 :
	       _theResult___fst_exp__h177282 ;
  assign out_exp__h186751 =
	     _theResult___snd__h186017[5] ?
	       _theResult___exp__h186748 :
	       _theResult___fst_exp__h186071 ;
  assign out_exp__h22764 =
	     sfd___3__h22341[41] ? _theResult___exp__h22761 : 8'd0 ;
  assign out_exp__h23274 =
	     sfd___3__h22341[40] ? _theResult___exp__h23271 : x__h22850[7:0] ;
  assign out_exp__h29077 =
	     sfd___3__h28654[9] ? _theResult___exp__h29074 : 8'd0 ;
  assign out_exp__h29588 =
	     sfd___3__h28654[8] ? _theResult___exp__h29585 : x__h29164[7:0] ;
  assign out_exp__h35134 =
	     sfd___3__h34711[9] ? _theResult___exp__h35131 : 8'd0 ;
  assign out_exp__h35644 =
	     sfd___3__h34711[8] ? _theResult___exp__h35641 : x__h35220[7:0] ;
  assign out_exp__h60427 =
	     sfd___3__h59801[3] ? _theResult___exp__h60424 : 11'd0 ;
  assign out_exp__h61141 =
	     sfd___3__h59801[2] ? _theResult___exp__h61138 : x__h60514[10:0] ;
  assign out_exp__h70009 =
	     sfd___3__h69383[3] ? _theResult___exp__h70006 : 11'd0 ;
  assign out_exp__h70722 =
	     sfd___3__h69383[2] ? _theResult___exp__h70719 : x__h70095[10:0] ;
  assign out_exp__h83731 =
	     sfd___3__h11833[12] ? _theResult___exp__h83728 : 11'd0 ;
  assign out_exp__h84445 =
	     sfd___3__h11833[11] ?
	       _theResult___exp__h84442 :
	       x__h83818[10:0] ;
  assign out_exp__h94629 =
	     sfd___3__h22341[12] ? _theResult___exp__h94626 : 11'd0 ;
  assign out_exp__h95342 =
	     sfd___3__h22341[11] ?
	       _theResult___exp__h95339 :
	       x__h94715[10:0] ;
  assign out_sfd__h119011 =
	     sfdin__h118478[34] ?
	       _theResult___sfd__h119008 :
	       sfdin__h118478[56:34] ;
  assign out_sfd__h12260 =
	     sfd___3__h11833[41] ?
	       _theResult___sfd__h12257 :
	       sfd___3__h11833[63:41] ;
  assign out_sfd__h127581 =
	     _theResult___snd__h127079[34] ?
	       _theResult___sfd__h127578 :
	       _theResult___snd__h127079[56:34] ;
  assign out_sfd__h12771 =
	     sfd___3__h11833[40] ?
	       _theResult___sfd__h12768 :
	       sfd___3__h11833[62:40] ;
  assign out_sfd__h136750 =
	     sfdin__h136217[34] ?
	       _theResult___sfd__h136747 :
	       sfdin__h136217[56:34] ;
  assign out_sfd__h145374 =
	     _theResult___snd__h144842[34] ?
	       _theResult___sfd__h145371 :
	       _theResult___snd__h144842[56:34] ;
  assign out_sfd__h168437 =
	     _theResult___snd__h167732[5] ?
	       _theResult___sfd__h168434 :
	       _theResult___snd__h167732[56:5] ;
  assign out_sfd__h178012 =
	     sfdin__h177276[5] ?
	       _theResult___sfd__h178009 :
	       sfdin__h177276[56:5] ;
  assign out_sfd__h186752 =
	     _theResult___snd__h186017[5] ?
	       _theResult___sfd__h186749 :
	       _theResult___snd__h186017[56:5] ;
  assign out_sfd__h22765 =
	     sfd___3__h22341[41] ?
	       _theResult___sfd__h22762 :
	       sfd___3__h22341[63:41] ;
  assign out_sfd__h23275 =
	     sfd___3__h22341[40] ?
	       _theResult___sfd__h23272 :
	       sfd___3__h22341[62:40] ;
  assign out_sfd__h29078 =
	     sfd___3__h28654[9] ?
	       _theResult___sfd__h29075 :
	       sfd___3__h28654[31:9] ;
  assign out_sfd__h29589 =
	     sfd___3__h28654[8] ?
	       _theResult___sfd__h29586 :
	       sfd___3__h28654[30:8] ;
  assign out_sfd__h35135 =
	     sfd___3__h34711[9] ?
	       _theResult___sfd__h35132 :
	       sfd___3__h34711[31:9] ;
  assign out_sfd__h35645 =
	     sfd___3__h34711[8] ?
	       _theResult___sfd__h35642 :
	       sfd___3__h34711[30:8] ;
  assign out_sfd__h60428 =
	     sfd___3__h59801[3] ?
	       _theResult___sfd__h60425 :
	       sfd___3__h59801[54:3] ;
  assign out_sfd__h61142 =
	     sfd___3__h59801[2] ?
	       _theResult___sfd__h61139 :
	       sfd___3__h59801[53:2] ;
  assign out_sfd__h70010 =
	     sfd___3__h69383[3] ?
	       _theResult___sfd__h70007 :
	       sfd___3__h69383[54:3] ;
  assign out_sfd__h70723 =
	     sfd___3__h69383[2] ?
	       _theResult___sfd__h70720 :
	       sfd___3__h69383[53:2] ;
  assign out_sfd__h83732 =
	     sfd___3__h11833[12] ?
	       _theResult___sfd__h83729 :
	       sfd___3__h11833[63:12] ;
  assign out_sfd__h84446 =
	     sfd___3__h11833[11] ?
	       _theResult___sfd__h84443 :
	       sfd___3__h11833[62:11] ;
  assign out_sfd__h94630 =
	     sfd___3__h22341[12] ?
	       _theResult___sfd__h94627 :
	       sfd___3__h22341[63:12] ;
  assign out_sfd__h95343 =
	     sfd___3__h22341[11] ?
	       _theResult___sfd__h95340 :
	       sfd___3__h22341[62:11] ;
  assign requestR_BITS_126_TO_116_929_EQ_0_943_AND_requ_ETC___d4950 =
	     requestR[126:116] == 11'd0 && requestR[115:64] == 52'd0 &&
	     requestR[127] &&
	     requestR[190:180] == 11'd0 &&
	     requestR[179:128] == 52'd0 &&
	     !requestR[191] ;
  assign requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       (requestR[127:96] == 32'hFFFFFFFF) ?
		 requestR[94:64] :
		 31'h7FC00000 } ;
  assign requestR_BITS_159_TO_128__q1 = requestR[159:128] ;
  assign requestR_BITS_179_TO_128_483_ULE_requestR_BITS_ETC___d4962 =
	     requestR[179:128] <= requestR[115:64] ;
  assign requestR_BITS_179_TO_128_483_ULT_requestR_BITS_ETC___d4967 =
	     requestR[179:128] < requestR[115:64] ;
  assign requestR_BITS_190_TO_180_481_EQ_0_491_AND_requ_ETC___d4946 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[191] &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 &&
	     !requestR[127] ;
  assign requestR_BITS_190_TO_180_481_EQ_0_491_AND_requ_ETC___d5020 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 ||
	     (!requestR[191] || requestR[127]) &&
	     (requestR[191] || !requestR[127]) &&
	     (requestR[191] ?
		requestR_BITS_190_TO_180_481_ULE_requestR_BITS_ETC___d5015 :
		NOT_requestR_BITS_190_TO_180_481_ULT_requestR__ETC___d5016) ;
  assign requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d2631 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	     requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2592[23] ||
	      NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2594 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2613 &&
	      x__h73163[85:54] == 32'hFFFFFFFF) ;
  assign requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d2642 =
	     { requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d2631,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d2636 } ==
	     5'd0 ||
	     requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d2631 ;
  assign requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d3074 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	     requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3036[23] ||
	      NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3038 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3057 &&
	      x__h98225[117:54] == 64'hFFFFFFFFFFFFFFFF) ;
  assign requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d3085 =
	     { requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d3074,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d3079 } ==
	     5'd0 ||
	     requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d3074 ;
  assign requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d4938 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] &&
	     requestR[126:116] == 11'd2047 &&
	     requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d4983 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d5005 =
	     requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d4983 ||
	     requestR[190:180] == 11'd2047 && requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115] ;
  assign requestR_BITS_190_TO_180_481_EQ_requestR_BITS__ETC___d4961 =
	     requestR[190:180] == requestR[126:116] ;
  assign requestR_BITS_190_TO_180_481_MINUS_1023___d2493 =
	     requestR[190:180] - 11'd1023 ;
  assign requestR_BITS_190_TO_180_481_ULE_requestR_BITS_ETC___d4959 =
	     requestR[190:180] <= requestR[126:116] ;
  assign requestR_BITS_190_TO_180_481_ULE_requestR_BITS_ETC___d5015 =
	     requestR_BITS_190_TO_180_481_ULE_requestR_BITS_ETC___d4959 &&
	     (!requestR_BITS_190_TO_180_481_EQ_requestR_BITS__ETC___d4961 ||
	      requestR_BITS_179_TO_128_483_ULE_requestR_BITS_ETC___d4962) &&
	     !requestR_BITS_190_TO_180_481_ULT_requestR_BITS_ETC___d4966 &&
	     (!requestR_BITS_190_TO_180_481_EQ_requestR_BITS__ETC___d4961 ||
	      !requestR_BITS_179_TO_128_483_ULT_requestR_BITS_ETC___d4967) ;
  assign requestR_BITS_190_TO_180_481_ULT_requestR_BITS_ETC___d4966 =
	     requestR[190:180] < requestR[126:116] ;
  assign requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT_req_ETC___d811 =
	     requestR[191:128] == 64'd0 ||
	     !requestR[191] && !requestR[190] && !requestR[189] &&
	     !requestR[188] &&
	     !requestR[187] &&
	     !requestR[186] &&
	     !requestR[185] &&
	     !requestR[184] &&
	     !requestR[183] &&
	     !requestR[182] &&
	     !requestR[181] &&
	     !requestR[180] &&
	     NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 ;
  assign requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1951 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ||
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1949 ;
  assign requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016 =
	     requestR[158] || requestR[157] || requestR[156] ||
	     requestR[155] ||
	     requestR[154] ||
	     requestR[153] ||
	     requestR[152] ||
	     requestR[151] ||
	     requestR[150] ||
	     requestR[149] ||
	     requestR[148] ||
	     requestR[147] ||
	     requestR[146] ||
	     requestR[145] ||
	     requestR[144] ||
	     requestR[143] ||
	     requestR[142] ||
	     requestR[141] ||
	     requestR[140] ||
	     requestR[139] ||
	     requestR[138] ||
	     requestR[137] ||
	     requestR[136] ||
	     requestR[135] ||
	     requestR[134] ||
	     requestR[133] ||
	     requestR[132] ||
	     requestR[131] ||
	     requestR[130] ||
	     requestR[129] ||
	     requestR[128] ;
  assign requestR_BIT_159_6_OR_requestR_BIT_158_86_OR_r_ETC___d1574 =
	     (requestR[159] ||
	      requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016) &&
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 &&
	     !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448 &&
	     IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1571 ;
  assign requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037 =
	     requestR[179] || requestR[178] || requestR[177] ||
	     requestR[176] ||
	     requestR[175] ||
	     requestR[174] ||
	     requestR[173] ||
	     requestR[172] ||
	     requestR[171] ||
	     requestR[170] ||
	     requestR[169] ||
	     requestR[168] ||
	     requestR[167] ||
	     requestR[166] ||
	     requestR[165] ||
	     requestR[164] ||
	     requestR[163] ||
	     requestR[162] ||
	     requestR[161] ||
	     requestR[160] ||
	     requestR[159] ||
	     requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016 ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1058 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     (!_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 ||
	      !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 &&
	      !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881 &&
	      _theResult___fst_exp__h23331 == 8'd255 &&
	      _theResult___fst_sfd__h23332 == 23'd0) ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1061 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1070 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 &&
	     !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 &&
	     IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d1067 ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2929 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     (!_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2815 ||
	      !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2816 &&
	      !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2817 &&
	      _theResult___fst_exp__h95399 == 11'd2047 &&
	      _theResult___fst_sfd__h95400 == 52'd0) ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2932 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2815 &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2816 ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2941 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2815 &&
	     !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2816 &&
	     IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d2938 ;
  assign res___1__h204129 =
	     (requestR[190:180] == 11'd2047 && requestR[179]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h204567 = requestR[191] ? 64'd1 : 64'd128 ;
  assign res___1__h204577 = requestR[191] ? 64'd8 : 64'd16 ;
  assign res___1__h204596 = requestR[191] ? 64'd4 : 64'd32 ;
  assign res___1__h50260 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h50496 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd1 :
	       64'd128 ;
  assign res___1__h50506 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd8 :
	       64'd16 ;
  assign res___1__h50525 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd4 :
	       64'd32 ;
  assign res__h145876 = { 32'hFFFFFFFF, x__h145882 } ;
  assign res__h187413 =
	     { IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4834,
	       x__h146967,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4807 } ;
  assign res__h191837 =
	     NOT_requestR_BITS_190_TO_180_481_EQ_2047_482_5_ETC___d4974 ?
	       requestR[191:128] :
	       requestR[127:64] ;
  assign res__h196385 =
	     NOT_requestR_BITS_190_TO_180_481_EQ_2047_482_5_ETC___d4974 ?
	       requestR[127:64] :
	       requestR[191:128] ;
  assign res__h199089 =
	     ((requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	      (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	      requestR_BITS_190_TO_180_481_EQ_0_491_AND_requ_ETC___d5020) ?
	       64'd1 :
	       64'd0 ;
  assign res__h201784 =
	     NOT_requestR_BITS_190_TO_180_481_EQ_2047_482_5_ETC___d4974 ?
	       64'd1 :
	       64'd0 ;
  assign res__h203661 =
	     NOT_requestR_BITS_190_TO_180_481_EQ_2047_482_5_ETC___d5039 ?
	       64'd1 :
	       64'd0 ;
  assign res__h204612 = requestR[191] ? 64'd2 : 64'd64 ;
  assign res__h204793 = { 32'hFFFFFFFF, fpu$response_get[36:5] } ;
  assign res__h41864 =
	     { 32'hFFFFFFFF,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 } ;
  assign res__h42101 =
	     { 32'hFFFFFFFF,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign res__h47473 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2016 ?
	       64'd1 :
	       64'd0 ;
  assign res__h48956 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1953 ?
	       64'd1 :
	       64'd0 ;
  assign res__h50025 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2034 ?
	       64'd1 :
	       64'd0 ;
  assign res__h50541 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd2 :
	       64'd64 ;
  assign result__h128600 =
	     { _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_481_EQ_ETC___d3571[56:1],
	       _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_481_EQ_ETC___d3571[0] |
	       guard__h128595 } ;
  assign result__h169659 =
	     { _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d4364[56:1],
	       _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d4364[0] |
	       guard__h169654 } ;
  assign sV1_exp__h823 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:151] :
	       8'd255 ;
  assign sV1_sfd__h824 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[150:128] :
	       23'd4194304 ;
  assign sV2_exp__h926 =
	     (requestR[127:96] == 32'hFFFFFFFF) ? requestR[94:87] : 8'd255 ;
  assign sV2_sfd__h927 =
	     (requestR[127:96] == 32'hFFFFFFFF) ?
	       requestR[86:64] :
	       23'd4194304 ;
  assign sfd___3__h11833 =
	     sfd__h2228 <<
	     IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_BI_ETC___d382 ;
  assign sfd___3__h22341 =
	     requestR[191:128] <<
	     IF_requestR_BIT_191_25_THEN_0_ELSE_IF_requestR_ETC___d875 ;
  assign sfd___3__h28654 =
	     sfd__h23750 <<
	     IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1210 ;
  assign sfd___3__h34711 =
	     requestR[159:128] <<
	     IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1443 ;
  assign sfd___3__h59801 =
	     sfd__h51800 <<
	     IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d2150 ;
  assign sfd___3__h69383 =
	     sfd__h61631 <<
	     IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d2343 ;
  assign sfd__h102777 = { value__h71417, 3'd0 } ;
  assign sfd__h118576 =
	     { 1'b0,
	       _theResult___fst_exp__h118484 != 8'd0,
	       sfdin__h118478[56:34] } +
	     25'd1 ;
  assign sfd__h11860 = { 2'd0, sfd___3__h11833[63:41] } + 25'd1 ;
  assign sfd__h12361 =
	     { 1'b0, x__h12346[7:0] != 8'd0, sfd___3__h11833[62:40] } +
	     25'd1 ;
  assign sfd__h127146 =
	     { 1'b0,
	       _theResult___fst_exp__h127128 != 8'd0,
	       _theResult___snd__h127079[56:34] } +
	     25'd1 ;
  assign sfd__h136315 =
	     { 1'b0,
	       _theResult___fst_exp__h136223 != 8'd0,
	       sfdin__h136217[56:34] } +
	     25'd1 ;
  assign sfd__h144915 =
	     { 1'b0,
	       _theResult___fst_exp__h144896 != 8'd0,
	       _theResult___snd__h144842[56:34] } +
	     25'd1 ;
  assign sfd__h167799 =
	     { 1'b0,
	       _theResult___fst_exp__h167781 != 11'd0,
	       _theResult___snd__h167732[56:5] } +
	     54'd1 ;
  assign sfd__h177374 =
	     { 1'b0,
	       _theResult___fst_exp__h177282 != 11'd0,
	       sfdin__h177276[56:5] } +
	     54'd1 ;
  assign sfd__h186090 =
	     { 1'b0,
	       _theResult___fst_exp__h186071 != 11'd0,
	       _theResult___snd__h186017[56:5] } +
	     54'd1 ;
  assign sfd__h2228 = requestR[191] ? -requestR[191:128] : requestR[191:128] ;
  assign sfd__h22368 = { 2'd0, sfd___3__h22341[63:41] } + 25'd1 ;
  assign sfd__h22865 =
	     { 1'b0, x__h22850[7:0] != 8'd0, sfd___3__h22341[62:40] } +
	     25'd1 ;
  assign sfd__h23750 =
	     requestR[159] ? -requestR[159:128] : requestR[159:128] ;
  assign sfd__h28681 = { 2'd0, sfd___3__h28654[31:9] } + 25'd1 ;
  assign sfd__h29179 =
	     { 1'b0, x__h29164[7:0] != 8'd0, sfd___3__h28654[30:8] } + 25'd1 ;
  assign sfd__h34738 = { 2'd0, sfd___3__h34711[31:9] } + 25'd1 ;
  assign sfd__h35235 =
	     { 1'b0, x__h35220[7:0] != 8'd0, sfd___3__h34711[30:8] } + 25'd1 ;
  assign sfd__h51800 = { sfd__h23750, 23'd0 } ;
  assign sfd__h59828 = { 2'd0, sfd___3__h59801[54:3] } + 54'd1 ;
  assign sfd__h60529 =
	     { 1'b0, x__h60514[10:0] != 11'd0, sfd___3__h59801[53:2] } +
	     54'd1 ;
  assign sfd__h61631 = { requestR[159:128], 23'd0 } ;
  assign sfd__h69410 = { 2'd0, sfd___3__h69383[54:3] } + 54'd1 ;
  assign sfd__h70110 =
	     { 1'b0, x__h70095[10:0] != 11'd0, sfd___3__h69383[53:2] } +
	     54'd1 ;
  assign sfd__h83132 = { 2'd0, sfd___3__h11833[63:12] } + 54'd1 ;
  assign sfd__h83833 =
	     { 1'b0, x__h83818[10:0] != 11'd0, sfd___3__h11833[62:11] } +
	     54'd1 ;
  assign sfd__h94030 = { 2'd0, sfd___3__h22341[63:12] } + 54'd1 ;
  assign sfd__h94730 =
	     { 1'b0, x__h94715[10:0] != 11'd0, sfd___3__h22341[62:11] } +
	     54'd1 ;
  assign sfdin__h118478 =
	     _theResult____h110377[56] ?
	       _theResult___snd__h118495 :
	       _theResult___snd__h118506 ;
  assign sfdin__h136217 =
	     _theResult____h127987[56] ?
	       _theResult___snd__h136234 :
	       _theResult___snd__h136245 ;
  assign sfdin__h177276 =
	     _theResult____h169046[56] ?
	       _theResult___snd__h177293 :
	       _theResult___snd__h177304 ;
  assign value__h147026 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	      !sV1_sfd__h824[22]) ?
	       _theResult___fst_sfd__h147281 :
	       sV1_sfd__h824 ;
  assign value__h36340 = { 1'b0, sV1_exp__h823 != 8'd0, sV1_sfd__h824 } ;
  assign value__h71417 =
	     { 1'b0, requestR[190:180] != 11'd0, requestR[179:128] } ;
  assign value__h98616 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	      !requestR[179]) ?
	       _theResult___fst_sfd__h99073 :
	       requestR[179:128] ;
  assign x__h12346 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385 +
	     9'd127 ;
  assign x__h128695 = sfd__h102777 << x__h128728 ;
  assign x__h128728 =
	     12'd57 -
	     _3970_MINUS_SEXT_requestR_BITS_190_TO_180_481_M_ETC___d3567 ;
  assign x__h12967 =
	     { 2'd0,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d601,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d604,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d613 } ;
  assign x__h13255 =
	     { 33'h1FFFFFFFE,
	       requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT_req_ETC___d811 ?
		 8'd0 :
		 _theResult___snd_fst_exp__h23340,
	       (requestR[191:128] == 64'd0 ||
		NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d958) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h23335 } ;
  assign x__h145882 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
		(requestR[190:180] == 11'd2047 ||
		 requestR[190:180] == 11'd0) &&
		requestR[179:128] == 52'd0) ?
		 requestR[191] :
		 IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4057,
	       x__h98556,
	       IF_requestR_BITS_190_TO_180_481_EQ_2047_482_AN_ETC___d4029 } ;
  assign x__h145975 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179] :
		 (requestR[190:180] != 11'd2047 ||
		  requestR[179:128] != 52'd0) &&
		 (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
		 IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4108,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4119,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4135,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4148,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_481_EQ_0_491_THEN__ETC___d4161 } ;
  assign x__h146958 =
	     (x__h146967 == 11'd2047 &&
	      IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4807[51]) ?
	       64'h7FF8000000000000 :
	       res__h187413 ;
  assign x__h146967 =
	     (sV1_exp__h823 == 8'd255) ?
	       11'd2047 :
	       _theResult___fst_exp__h186822 ;
  assign x__h169754 = b__h39112 << x__h169787 ;
  assign x__h169787 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d4360 ;
  assign x__h1779 = { 32'hFFFFFFFF, x__h1785 } ;
  assign x__h1785 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h187497 =
	     { IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4872,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4879,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4893,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4905,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4917 } ;
  assign x__h188420 =
	     requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d4938 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   IF_requestR_BITS_126_TO_116_929_EQ_2047_930_AN_ETC___d4977)))) ;
  assign x__h191969 =
	     { requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d4983,
	       4'd0 } ;
  assign x__h1925 = { 32'hFFFFFFFF, x__h1931 } ;
  assign x__h192968 =
	     requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d4938 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   ((requestR[126:116] == 11'd2047 && requestR[115]) ?
			      requestR[191:128] :
			      IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d4991))))) ;
  assign x__h1931 =
	     { requestR[127:96] != 32'hFFFFFFFF || !requestR[95],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h197412 =
	     requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d5005 ?
	       64'd0 :
	       res__h199089 ;
  assign x__h200107 =
	     requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d5005 ?
	       64'd0 :
	       res__h201784 ;
  assign x__h201803 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0,
	       4'd0 } ;
  assign x__h201984 =
	     requestR_BITS_190_TO_180_481_EQ_2047_482_AND_N_ETC___d5005 ?
	       64'd0 :
	       res__h203661 ;
  assign x__h204111 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       res___1__h204129 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  res___1__h204567 :
		  IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d5062) ;
  assign x__h204761 =
	     fpu$response_get[69] ? res__h204793 : fpu$response_get[68:5] ;
  assign x__h2059 = { 32'hFFFFFFFF, x__h2065 } ;
  assign x__h2065 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) !=
	       (requestR[127:96] == 32'hFFFFFFFF && requestR[95]),
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h2207 = { 32'hFFFFFFFF, x__h2213 } ;
  assign x__h2213 =
	     { requestR[191:128] != 64'd0 &&
	       (NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d390 ?
		  requestR[191] :
		  IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d440),
	       IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d494,
	       (requestR[191:128] == 64'd0 ||
		NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d390) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h12832 } ;
  assign x__h22850 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878 +
	     9'd127 ;
  assign x__h23444 =
	     { 2'd0,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1058,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1061,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1070 } ;
  assign x__h23729 = { 32'hFFFFFFFF, x__h23735 } ;
  assign x__h23735 =
	     { requestR[159:128] != 32'd0 &&
	       (NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d1218 ?
		  requestR[159] :
		  IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1261),
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1315,
	       (requestR[159:128] == 32'd0 ||
		NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d1218) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h29650 } ;
  assign x__h29164 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213 +
	     9'd127 ;
  assign x__h29785 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1390,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1393,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1402 } ;
  assign x__h30070 =
	     { 33'h1FFFFFFFE,
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1522,
	       (requestR[159:128] == 32'd0 ||
		!requestR[159] &&
		NOT_requestR_BIT_158_86_87_AND_NOT_requestR_BI_ETC___d777 ||
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 ||
		_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h35705 } ;
  assign x__h35220 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446 +
	     9'd127 ;
  assign x__h35814 =
	     { 2'd0,
	       NOT_requestR_BITS_159_TO_128_079_EQ_0_080_081__ETC___d1563,
	       requestR[159:128] != 32'd0 &&
	       (requestR[159] ||
		requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016) &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448,
	       requestR[159:128] != 32'd0 &&
	       requestR_BIT_159_6_OR_requestR_BIT_158_86_OR_r_ETC___d1574 } ;
  assign x__h36098 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596 ?
	       64'h7FFFFFFFFFFFFFFF :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1668 ;
  assign x__h37235 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1609 >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1635 |
	     ~(89'h1FFFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1635) &
	     {89{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1609[88]}} ;
  assign x__h37873 =
	     { sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	       sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0 ||
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1678,
	       3'd0,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1689 } ;
  assign x__h38130 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596 ?
	       64'hFFFFFFFFFFFFFFFF :
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1729 ;
  assign x__h38548 =
	     { sV1_exp__h823 != 8'd0, sV1_sfd__h824, 65'd0 } >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1698 ;
  assign x__h38626 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1747 :
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1736,
	       3'd0,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1741 } ;
  assign x__h38869 = { {32{x__h38872[31]}}, x__h38872 } ;
  assign x__h38872 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596 ?
	       32'h7FFFFFFF :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1817 ;
  assign x__h39785 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1758 >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1784 |
	     ~(57'h1FFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1784) &
	     {57{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1758[56]}} ;
  assign x__h40182 =
	     { sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	       sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0 ||
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1825,
	       3'd0,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1833 } ;
  assign x__h40439 = { {32{x__h40442[31]}}, x__h40442 } ;
  assign x__h40442 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596 ?
	       32'hFFFFFFFF :
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1873 ;
  assign x__h40860 =
	     { sV1_exp__h823 != 8'd0, sV1_sfd__h824, 33'd0 } >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1842 ;
  assign x__h40938 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1892 :
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1881,
	       3'd0,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1886 } ;
  assign x__h41186 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1915 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1961 ;
  assign x__h43225 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1963,
	       4'd0 } ;
  assign x__h43820 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1915 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1977 ;
  assign x__h46345 = { 32'hFFFFFFFF, requestR[159:128] } ;
  assign x__h46466 =
	     { {32{requestR_BITS_159_TO_128__q1[31]}},
	       requestR_BITS_159_TO_128__q1 } ;
  assign x__h46604 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2000 ?
	       64'd0 :
	       res__h47473 ;
  assign x__h48087 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2000 ?
	       64'd0 :
	       res__h48956 ;
  assign x__h48975 =
	     { sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	       sV2_exp__h926 == 8'd255 && sV2_sfd__h927 != 23'd0,
	       4'd0 } ;
  assign x__h49156 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2000 ?
	       64'd0 :
	       res__h50025 ;
  assign x__h50242 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0) ?
	       res___1__h50260 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2048 ;
  assign x__h51409 = { requestR[127], requestR[190:128] } ;
  assign x__h51531 = { !requestR[127], requestR[190:128] } ;
  assign x__h51655 = { requestR[191] != requestR[127], requestR[190:128] } ;
  assign x__h51785 =
	     { requestR[159:128] != 32'd0 &&
	       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d2200,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h61208,
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2285 } ;
  assign x__h60514 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2153 +
	     12'd1023 ;
  assign x__h61334 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2154 ||
		!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2156 &&
		!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2158 &&
		_theResult___fst_exp__h61199 == 11'd2047 &&
		_theResult___fst_sfd__h61200 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2154 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2156,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2154 &&
	       !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2156 &&
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2302 } ;
  assign x__h61619 =
	     { 1'd0,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h70788,
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2452 } ;
  assign x__h70095 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2346 +
	     12'd1023 ;
  assign x__h70888 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2347 ||
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2348 &&
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2349 &&
		_theResult___fst_exp__h70779 == 11'd2047 &&
		_theResult___fst_sfd__h70780 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2347 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2348,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2347 &&
	       !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2348 &&
	       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d2469 } ;
  assign x__h71172 = { {32{x__h71175[31]}}, x__h71175 } ;
  assign x__h71175 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'h7FFFFFFF :
	       IF_requestR_BITS_190_TO_180_481_EQ_2047_482_AN_ETC___d2561 ;
  assign x__h72088 =
	     IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2502 >>
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2528 |
	     ~(86'h3FFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2528) &
	     {86{IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2502[85]}} ;
  assign x__h72485 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d2572,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d2583 } ;
  assign x__h72742 = { {32{x__h72745[31]}}, x__h72745 } ;
  assign x__h72745 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'hFFFFFFFF :
	       (requestR[191] ?
		  32'd0 :
		  ((requestR[190:180] == 11'd2047 &&
		    requestR[179:128] == 52'd0) ?
		     32'hFFFFFFFF :
		     IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d2621)) ;
  assign x__h73163 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 33'd0 } >>
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2592 ;
  assign x__h73241 =
	     { requestR[191] ?
		 requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d2642 :
		 requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d2631,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d2636 } ;
  assign x__h73485 =
	     { requestR[191:128] != 64'd0 &&
	       (NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d2656 ?
		  requestR[191] :
		  IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2696),
	       IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d2749,
	       (requestR[191:128] == 64'd0 ||
		NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d2656) ?
		 52'd0 :
		 _theResult___snd_fst_sfd__h84507 } ;
  assign x__h83818 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2651 +
	     12'd1023 ;
  assign x__h84638 =
	     { 2'd0,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2792,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2795,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2804 } ;
  assign x__h84923 =
	     { 1'd0,
	       requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT_req_ETC___d811 ?
		 11'd0 :
		 _theResult___snd_fst_exp__h95408,
	       (requestR[191:128] == 64'd0 ||
		NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d2892) ?
		 52'd0 :
		 _theResult___snd_fst_sfd__h95403 } ;
  assign x__h94715 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2814 +
	     12'd1023 ;
  assign x__h95508 =
	     { 2'd0,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2929,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2932,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2941 } ;
  assign x__h95792 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       64'h7FFFFFFFFFFFFFFF :
	       IF_requestR_BITS_190_TO_180_481_EQ_2047_482_AN_ETC___d3012 ;
  assign x__h96929 =
	     IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2953 >>
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2979 |
	     ~(118'h3FFFFFFFFFFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d2979) &
	     {118{IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2953[117]}} ;
  assign x__h97550 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d3019,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_ETC___d3027 } ;
  assign x__h97807 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       64'hFFFFFFFFFFFFFFFF :
	       (requestR[191] ?
		  64'd0 :
		  ((requestR[190:180] == 11'd2047 &&
		    requestR[179:128] == 52'd0) ?
		     64'hFFFFFFFFFFFFFFFF :
		     IF_requestR_BITS_190_TO_180_481_EQ_0_491_AND_r_ETC___d3065)) ;
  assign x__h98225 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 65'd0 } >>
	     NEG_SEXT_requestR_BITS_190_TO_180_481_MINUS_10_ETC___d3036 ;
  assign x__h98303 =
	     { requestR[191] ?
		 requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d3085 :
		 requestR_BITS_190_TO_180_481_EQ_2047_482_AND_0_ETC___d3074,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_BITS_190_TO_180_481_EQ_0_491_497__ETC___d3079 } ;
  assign x__h98547 =
	     (x__h98556 == 8'd255 &&
	      IF_requestR_BITS_190_TO_180_481_EQ_2047_482_AN_ETC___d4029[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       res__h145876 ;
  assign x__h98556 =
	     (requestR[190:180] == 11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h145444 ;
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd254;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd255 : 8'd254;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd254 : 8'd255;
      default: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      23'd8388607;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd0 : 23'd8388607;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd8388607 : 23'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 = 23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd2046;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2047 :
		11'd2046;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2046 :
		11'd2047;
      default: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      52'hFFFFFFFFFFFFF;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 = 52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h0:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 =
	      requestR[194:192];
      3'h1: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd4;
      3'h2: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd3;
      3'h3: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd2;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 =
		   3'd0;
    endcase
  end
  always@(guard__h12331 or
	  x__h12346 or out_exp__h12770 or _theResult___exp__h12767)
  begin
    case (guard__h12331)
      2'b0, 2'b01:
	  CASE_guard2331_0b0_x2346_BITS_7_TO_0_0b1_x2346_ETC__q10 =
	      x__h12346[7:0];
      2'b10:
	  CASE_guard2331_0b0_x2346_BITS_7_TO_0_0b1_x2346_ETC__q10 =
	      out_exp__h12770;
      2'b11:
	  CASE_guard2331_0b0_x2346_BITS_7_TO_0_0b1_x2346_ETC__q10 =
	      _theResult___exp__h12767;
    endcase
  end
  always@(requestR or
	  x__h12346 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d485 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d483)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11 =
	      x__h12346[7:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d485;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d483;
      default: CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11 = 8'd0;
    endcase
  end
  always@(guard__h12331 or
	  sfd___3__h11833 or out_sfd__h12771 or _theResult___sfd__h12768)
  begin
    case (guard__h12331)
      2'b0, 2'b01:
	  CASE_guard2331_0b0_sfd___31833_BITS_62_TO_40_0_ETC__q12 =
	      sfd___3__h11833[62:40];
      2'b10:
	  CASE_guard2331_0b0_sfd___31833_BITS_62_TO_40_0_ETC__q12 =
	      out_sfd__h12771;
      2'b11:
	  CASE_guard2331_0b0_sfd___31833_BITS_62_TO_40_0_ETC__q12 =
	      _theResult___sfd__h12768;
    endcase
  end
  always@(requestR or
	  sfd___3__h11833 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d520 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d518)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13 =
	      sfd___3__h11833[62:40];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d520;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d518;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13 =
		   23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 =
	      requestR[191];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h11843 or
	  sfd___3__h11833 or out_sfd__h12260 or _theResult___sfd__h12257)
  begin
    case (guard__h11843)
      2'b0, 2'b01:
	  CASE_guard1843_0b0_sfd___31833_BITS_63_TO_41_0_ETC__q14 =
	      sfd___3__h11833[63:41];
      2'b10:
	  CASE_guard1843_0b0_sfd___31833_BITS_63_TO_41_0_ETC__q14 =
	      out_sfd__h12260;
      2'b11:
	  CASE_guard1843_0b0_sfd___31833_BITS_63_TO_41_0_ETC__q14 =
	      _theResult___sfd__h12257;
    endcase
  end
  always@(requestR or
	  sfd___3__h11833 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d505 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d503)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15 =
	      sfd___3__h11833[63:41];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d505;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d503;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15 =
		   23'd0;
    endcase
  end
  always@(guard__h11843 or requestR)
  begin
    case (guard__h11843)
      2'b0, 2'b01, 2'b10:
	  CASE_guard1843_0b0_requestR_BIT_191_0b1_reques_ETC__q16 =
	      requestR[191];
      2'd3:
	  CASE_guard1843_0b0_requestR_BIT_191_0b1_reques_ETC__q16 =
	      guard__h11843 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h12331 or requestR)
  begin
    case (guard__h12331)
      2'b0, 2'b01, 2'b10:
	  CASE_guard2331_0b0_requestR_BIT_191_0b1_reques_ETC__q17 =
	      requestR[191];
      2'd3:
	  CASE_guard2331_0b0_requestR_BIT_191_0b1_reques_ETC__q17 =
	      guard__h12331 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d460 or
	  guard__h11843 or _theResult___exp__h12256)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d462 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d460;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d462 =
	      (guard__h11843 == 2'b0 || requestR[191]) ?
		8'd0 :
		_theResult___exp__h12256;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d462 =
		   8'd0;
    endcase
  end
  always@(guard__h11843 or out_exp__h12259 or _theResult___exp__h12256)
  begin
    case (guard__h11843)
      2'b0, 2'b01:
	  CASE_guard1843_0b0_0_0b1_0_0b10_out_exp2259_0b_ETC__q18 = 8'd0;
      2'b10:
	  CASE_guard1843_0b0_0_0b1_0_0b10_out_exp2259_0b_ETC__q18 =
	      out_exp__h12259;
      2'b11:
	  CASE_guard1843_0b0_0_0b1_0_0b10_out_exp2259_0b_ETC__q18 =
	      _theResult___exp__h12256;
    endcase
  end
  always@(requestR or x__h22850 or guard__h22835 or _theResult___exp__h23271)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d949 =
	      x__h22850[7:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d949 =
	      (guard__h22835 == 2'b0) ?
		x__h22850[7:0] :
		_theResult___exp__h23271;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d949 =
		   8'd0;
    endcase
  end
  always@(guard__h22835 or
	  x__h22850 or out_exp__h23274 or _theResult___exp__h23271)
  begin
    case (guard__h22835)
      2'b0, 2'b01:
	  CASE_guard2835_0b0_x2850_BITS_7_TO_0_0b1_x2850_ETC__q23 =
	      x__h22850[7:0];
      2'b10:
	  CASE_guard2835_0b0_x2850_BITS_7_TO_0_0b1_x2850_ETC__q23 =
	      out_exp__h23274;
      2'b11:
	  CASE_guard2835_0b0_x2850_BITS_7_TO_0_0b1_x2850_ETC__q23 =
	      _theResult___exp__h23271;
    endcase
  end
  always@(requestR or
	  sfd___3__h22341 or guard__h22835 or _theResult___sfd__h23272)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d981 =
	      sfd___3__h22341[62:40];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d981 =
	      (guard__h22835 == 2'b0) ?
		sfd___3__h22341[62:40] :
		_theResult___sfd__h23272;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d981 =
		   23'd0;
    endcase
  end
  always@(guard__h22835 or
	  sfd___3__h22341 or out_sfd__h23275 or _theResult___sfd__h23272)
  begin
    case (guard__h22835)
      2'b0, 2'b01:
	  CASE_guard2835_0b0_sfd___32341_BITS_62_TO_40_0_ETC__q24 =
	      sfd___3__h22341[62:40];
      2'b10:
	  CASE_guard2835_0b0_sfd___32341_BITS_62_TO_40_0_ETC__q24 =
	      out_sfd__h23275;
      2'b11:
	  CASE_guard2835_0b0_sfd___32341_BITS_62_TO_40_0_ETC__q24 =
	      _theResult___sfd__h23272;
    endcase
  end
  always@(guard__h22351 or out_exp__h22764 or _theResult___exp__h22761)
  begin
    case (guard__h22351)
      2'b0, 2'b01:
	  CASE_guard2351_0b0_0_0b1_0_0b10_out_exp2764_0b_ETC__q25 = 8'd0;
      2'b10:
	  CASE_guard2351_0b0_0_0b1_0_0b10_out_exp2764_0b_ETC__q25 =
	      out_exp__h22764;
      2'b11:
	  CASE_guard2351_0b0_0_0b1_0_0b10_out_exp2764_0b_ETC__q25 =
	      _theResult___exp__h22761;
    endcase
  end
  always@(requestR or
	  sfd___3__h22341 or guard__h22351 or _theResult___sfd__h22762)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d969 =
	      sfd___3__h22341[63:41];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d969 =
	      (guard__h22351 == 2'b0) ?
		sfd___3__h22341[63:41] :
		_theResult___sfd__h22762;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d969 =
		   23'd0;
    endcase
  end
  always@(guard__h22351 or
	  sfd___3__h22341 or out_sfd__h22765 or _theResult___sfd__h22762)
  begin
    case (guard__h22351)
      2'b0, 2'b01:
	  CASE_guard2351_0b0_sfd___32341_BITS_63_TO_41_0_ETC__q28 =
	      sfd___3__h22341[63:41];
      2'b10:
	  CASE_guard2351_0b0_sfd___32341_BITS_63_TO_41_0_ETC__q28 =
	      out_sfd__h22765;
      2'b11:
	  CASE_guard2351_0b0_sfd___32341_BITS_63_TO_41_0_ETC__q28 =
	      _theResult___sfd__h22762;
    endcase
  end
  always@(guard__h29149 or
	  x__h29164 or out_exp__h29588 or _theResult___exp__h29585)
  begin
    case (guard__h29149)
      2'b0, 2'b01:
	  CASE_guard9149_0b0_x9164_BITS_7_TO_0_0b1_x9164_ETC__q29 =
	      x__h29164[7:0];
      2'b10:
	  CASE_guard9149_0b0_x9164_BITS_7_TO_0_0b1_x9164_ETC__q29 =
	      out_exp__h29588;
      2'b11:
	  CASE_guard9149_0b0_x9164_BITS_7_TO_0_0b1_x9164_ETC__q29 =
	      _theResult___exp__h29585;
    endcase
  end
  always@(requestR or
	  x__h29164 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1304)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30 =
	      x__h29164[7:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1304;
      default: CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30 = 8'd0;
    endcase
  end
  always@(guard__h28664 or
	  sfd___3__h28654 or out_sfd__h29078 or _theResult___sfd__h29075)
  begin
    case (guard__h28664)
      2'b0, 2'b01:
	  CASE_guard8664_0b0_sfd___38654_BITS_31_TO_9_0b_ETC__q31 =
	      sfd___3__h28654[31:9];
      2'b10:
	  CASE_guard8664_0b0_sfd___38654_BITS_31_TO_9_0b_ETC__q31 =
	      out_sfd__h29078;
      2'b11:
	  CASE_guard8664_0b0_sfd___38654_BITS_31_TO_9_0b_ETC__q31 =
	      _theResult___sfd__h29075;
    endcase
  end
  always@(requestR or
	  sfd___3__h28654 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1326 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1324)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32 =
	      sfd___3__h28654[31:9];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1326;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1324;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32 =
		   23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 =
	      requestR[159];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h29149 or
	  sfd___3__h28654 or out_sfd__h29589 or _theResult___sfd__h29586)
  begin
    case (guard__h29149)
      2'b0, 2'b01:
	  CASE_guard9149_0b0_sfd___38654_BITS_30_TO_8_0b_ETC__q33 =
	      sfd___3__h28654[30:8];
      2'b10:
	  CASE_guard9149_0b0_sfd___38654_BITS_30_TO_8_0b_ETC__q33 =
	      out_sfd__h29589;
      2'b11:
	  CASE_guard9149_0b0_sfd___38654_BITS_30_TO_8_0b_ETC__q33 =
	      _theResult___sfd__h29586;
    endcase
  end
  always@(requestR or
	  sfd___3__h28654 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1341 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1339)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34 =
	      sfd___3__h28654[30:8];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1341;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1339;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34 =
		   23'd0;
    endcase
  end
  always@(guard__h28664 or requestR)
  begin
    case (guard__h28664)
      2'b0, 2'b01, 2'b10:
	  CASE_guard8664_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      requestR[159];
      2'd3:
	  CASE_guard8664_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      guard__h28664 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h29149 or requestR)
  begin
    case (guard__h29149)
      2'b0, 2'b01, 2'b10:
	  CASE_guard9149_0b0_requestR_BIT_159_0b1_reques_ETC__q36 =
	      requestR[159];
      2'd3:
	  CASE_guard9149_0b0_requestR_BIT_159_0b1_reques_ETC__q36 =
	      guard__h29149 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1281 or
	  guard__h28664 or _theResult___exp__h29074)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1283 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1281;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1283 =
	      (guard__h28664 == 2'b0 || requestR[159]) ?
		8'd0 :
		_theResult___exp__h29074;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1283 =
		   8'd0;
    endcase
  end
  always@(guard__h28664 or out_exp__h29077 or _theResult___exp__h29074)
  begin
    case (guard__h28664)
      2'b0, 2'b01:
	  CASE_guard8664_0b0_0_0b1_0_0b10_out_exp9077_0b_ETC__q37 = 8'd0;
      2'b10:
	  CASE_guard8664_0b0_0_0b1_0_0b10_out_exp9077_0b_ETC__q37 =
	      out_exp__h29077;
      2'b11:
	  CASE_guard8664_0b0_0_0b1_0_0b10_out_exp9077_0b_ETC__q37 =
	      _theResult___exp__h29074;
    endcase
  end
  always@(guard__h34721 or out_exp__h35134 or _theResult___exp__h35131)
  begin
    case (guard__h34721)
      2'b0, 2'b01:
	  CASE_guard4721_0b0_0_0b1_0_0b10_out_exp5134_0b_ETC__q40 = 8'd0;
      2'b10:
	  CASE_guard4721_0b0_0_0b1_0_0b10_out_exp5134_0b_ETC__q40 =
	      out_exp__h35134;
      2'b11:
	  CASE_guard4721_0b0_0_0b1_0_0b10_out_exp5134_0b_ETC__q40 =
	      _theResult___exp__h35131;
    endcase
  end
  always@(requestR or x__h35220 or guard__h35205 or _theResult___exp__h35641)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1516 =
	      x__h35220[7:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1516 =
	      (guard__h35205 == 2'b0) ?
		x__h35220[7:0] :
		_theResult___exp__h35641;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1516 =
		   8'd0;
    endcase
  end
  always@(guard__h35205 or
	  x__h35220 or out_exp__h35644 or _theResult___exp__h35641)
  begin
    case (guard__h35205)
      2'b0, 2'b01:
	  CASE_guard5205_0b0_x5220_BITS_7_TO_0_0b1_x5220_ETC__q41 =
	      x__h35220[7:0];
      2'b10:
	  CASE_guard5205_0b0_x5220_BITS_7_TO_0_0b1_x5220_ETC__q41 =
	      out_exp__h35644;
      2'b11:
	  CASE_guard5205_0b0_x5220_BITS_7_TO_0_0b1_x5220_ETC__q41 =
	      _theResult___exp__h35641;
    endcase
  end
  always@(requestR or
	  sfd___3__h34711 or guard__h35205 or _theResult___sfd__h35642)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1548 =
	      sfd___3__h34711[30:8];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1548 =
	      (guard__h35205 == 2'b0) ?
		sfd___3__h34711[30:8] :
		_theResult___sfd__h35642;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1548 =
		   23'd0;
    endcase
  end
  always@(guard__h35205 or
	  sfd___3__h34711 or out_sfd__h35645 or _theResult___sfd__h35642)
  begin
    case (guard__h35205)
      2'b0, 2'b01:
	  CASE_guard5205_0b0_sfd___34711_BITS_30_TO_8_0b_ETC__q42 =
	      sfd___3__h34711[30:8];
      2'b10:
	  CASE_guard5205_0b0_sfd___34711_BITS_30_TO_8_0b_ETC__q42 =
	      out_sfd__h35645;
      2'b11:
	  CASE_guard5205_0b0_sfd___34711_BITS_30_TO_8_0b_ETC__q42 =
	      _theResult___sfd__h35642;
    endcase
  end
  always@(requestR or
	  sfd___3__h34711 or guard__h34721 or _theResult___sfd__h35132)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1536 =
	      sfd___3__h34711[31:9];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1536 =
	      (guard__h34721 == 2'b0) ?
		sfd___3__h34711[31:9] :
		_theResult___sfd__h35132;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1536 =
		   23'd0;
    endcase
  end
  always@(guard__h34721 or
	  sfd___3__h34711 or out_sfd__h35135 or _theResult___sfd__h35132)
  begin
    case (guard__h34721)
      2'b0, 2'b01:
	  CASE_guard4721_0b0_sfd___34711_BITS_31_TO_9_0b_ETC__q43 =
	      sfd___3__h34711[31:9];
      2'b10:
	  CASE_guard4721_0b0_sfd___34711_BITS_31_TO_9_0b_ETC__q43 =
	      out_sfd__h35135;
      2'b11:
	  CASE_guard4721_0b0_sfd___34711_BITS_31_TO_9_0b_ETC__q43 =
	      _theResult___sfd__h35132;
    endcase
  end
  always@(guard__h59811 or requestR)
  begin
    case (guard__h59811)
      2'b0, 2'b01, 2'b10:
	  CASE_guard9811_0b0_requestR_BIT_159_0b1_reques_ETC__q50 =
	      requestR[159];
      2'd3:
	  CASE_guard9811_0b0_requestR_BIT_159_0b1_reques_ETC__q50 =
	      guard__h59811 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h60499 or requestR)
  begin
    case (guard__h60499)
      2'b0, 2'b01, 2'b10:
	  CASE_guard0499_0b0_requestR_BIT_159_0b1_reques_ETC__q51 =
	      requestR[159];
      2'd3:
	  CASE_guard0499_0b0_requestR_BIT_159_0b1_reques_ETC__q51 =
	      guard__h60499 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h60499 or
	  x__h60514 or out_exp__h61141 or _theResult___exp__h61138)
  begin
    case (guard__h60499)
      2'b0, 2'b01:
	  CASE_guard0499_0b0_x0514_BITS_10_TO_0_0b1_x051_ETC__q52 =
	      x__h60514[10:0];
      2'b10:
	  CASE_guard0499_0b0_x0514_BITS_10_TO_0_0b1_x051_ETC__q52 =
	      out_exp__h61141;
      2'b11:
	  CASE_guard0499_0b0_x0514_BITS_10_TO_0_0b1_x051_ETC__q52 =
	      _theResult___exp__h61138;
    endcase
  end
  always@(requestR or
	  x__h60514 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2243 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2241)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x0514_BITS_1_ETC__q53 =
	      x__h60514[10:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x0514_BITS_1_ETC__q53 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2243;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x0514_BITS_1_ETC__q53 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2241;
      default: CASE_requestR_BITS_194_TO_192_0x1_x0514_BITS_1_ETC__q53 =
		   11'd0;
    endcase
  end
  always@(guard__h60499 or
	  sfd___3__h59801 or out_sfd__h61142 or _theResult___sfd__h61139)
  begin
    case (guard__h60499)
      2'b0, 2'b01:
	  CASE_guard0499_0b0_sfd___39801_BITS_53_TO_2_0b_ETC__q54 =
	      sfd___3__h59801[53:2];
      2'b10:
	  CASE_guard0499_0b0_sfd___39801_BITS_53_TO_2_0b_ETC__q54 =
	      out_sfd__h61142;
      2'b11:
	  CASE_guard0499_0b0_sfd___39801_BITS_53_TO_2_0b_ETC__q54 =
	      _theResult___sfd__h61139;
    endcase
  end
  always@(requestR or
	  sfd___3__h59801 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2278 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2276)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q55 =
	      sfd___3__h59801[53:2];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q55 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2278;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q55 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2276;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q55 =
		   52'd0;
    endcase
  end
  always@(guard__h59811 or
	  sfd___3__h59801 or out_sfd__h60428 or _theResult___sfd__h60425)
  begin
    case (guard__h59811)
      2'b0, 2'b01:
	  CASE_guard9811_0b0_sfd___39801_BITS_54_TO_3_0b_ETC__q56 =
	      sfd___3__h59801[54:3];
      2'b10:
	  CASE_guard9811_0b0_sfd___39801_BITS_54_TO_3_0b_ETC__q56 =
	      out_sfd__h60428;
      2'b11:
	  CASE_guard9811_0b0_sfd___39801_BITS_54_TO_3_0b_ETC__q56 =
	      _theResult___sfd__h60425;
    endcase
  end
  always@(requestR or
	  sfd___3__h59801 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2263 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2261)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q57 =
	      sfd___3__h59801[54:3];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q57 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2263;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q57 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2261;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___39801__ETC__q57 =
		   52'd0;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2218 or
	  guard__h59811 or _theResult___exp__h60424)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2220 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2218;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2220 =
	      (guard__h59811 == 2'b0 || requestR[159]) ?
		11'd0 :
		_theResult___exp__h60424;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2220 =
		   11'd0;
    endcase
  end
  always@(guard__h59811 or out_exp__h60427 or _theResult___exp__h60424)
  begin
    case (guard__h59811)
      2'b0, 2'b01:
	  CASE_guard9811_0b0_0_0b1_0_0b10_out_exp0427_0b_ETC__q58 = 11'd0;
      2'b10:
	  CASE_guard9811_0b0_0_0b1_0_0b10_out_exp0427_0b_ETC__q58 =
	      out_exp__h60427;
      2'b11:
	  CASE_guard9811_0b0_0_0b1_0_0b10_out_exp0427_0b_ETC__q58 =
	      _theResult___exp__h60424;
    endcase
  end
  always@(guard__h69393 or out_exp__h70009 or _theResult___exp__h70006)
  begin
    case (guard__h69393)
      2'b0, 2'b01:
	  CASE_guard9393_0b0_0_0b1_0_0b10_out_exp0009_0b_ETC__q61 = 11'd0;
      2'b10:
	  CASE_guard9393_0b0_0_0b1_0_0b10_out_exp0009_0b_ETC__q61 =
	      out_exp__h70009;
      2'b11:
	  CASE_guard9393_0b0_0_0b1_0_0b10_out_exp0009_0b_ETC__q61 =
	      _theResult___exp__h70006;
    endcase
  end
  always@(requestR or x__h70095 or guard__h70080 or _theResult___exp__h70719)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2417 =
	      x__h70095[10:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2417 =
	      (guard__h70080 == 2'b0) ?
		x__h70095[10:0] :
		_theResult___exp__h70719;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2417 =
		   11'd0;
    endcase
  end
  always@(guard__h70080 or
	  x__h70095 or out_exp__h70722 or _theResult___exp__h70719)
  begin
    case (guard__h70080)
      2'b0, 2'b01:
	  CASE_guard0080_0b0_x0095_BITS_10_TO_0_0b1_x009_ETC__q62 =
	      x__h70095[10:0];
      2'b10:
	  CASE_guard0080_0b0_x0095_BITS_10_TO_0_0b1_x009_ETC__q62 =
	      out_exp__h70722;
      2'b11:
	  CASE_guard0080_0b0_x0095_BITS_10_TO_0_0b1_x009_ETC__q62 =
	      _theResult___exp__h70719;
    endcase
  end
  always@(requestR or
	  sfd___3__h69383 or guard__h70080 or _theResult___sfd__h70720)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2448 =
	      sfd___3__h69383[53:2];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2448 =
	      (guard__h70080 == 2'b0) ?
		sfd___3__h69383[53:2] :
		_theResult___sfd__h70720;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2448 =
		   52'd0;
    endcase
  end
  always@(guard__h70080 or
	  sfd___3__h69383 or out_sfd__h70723 or _theResult___sfd__h70720)
  begin
    case (guard__h70080)
      2'b0, 2'b01:
	  CASE_guard0080_0b0_sfd___39383_BITS_53_TO_2_0b_ETC__q63 =
	      sfd___3__h69383[53:2];
      2'b10:
	  CASE_guard0080_0b0_sfd___39383_BITS_53_TO_2_0b_ETC__q63 =
	      out_sfd__h70723;
      2'b11:
	  CASE_guard0080_0b0_sfd___39383_BITS_53_TO_2_0b_ETC__q63 =
	      _theResult___sfd__h70720;
    endcase
  end
  always@(requestR or
	  sfd___3__h69383 or guard__h69393 or _theResult___sfd__h70007)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2436 =
	      sfd___3__h69383[54:3];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2436 =
	      (guard__h69393 == 2'b0) ?
		sfd___3__h69383[54:3] :
		_theResult___sfd__h70007;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2436 =
		   52'd0;
    endcase
  end
  always@(guard__h69393 or
	  sfd___3__h69383 or out_sfd__h70010 or _theResult___sfd__h70007)
  begin
    case (guard__h69393)
      2'b0, 2'b01:
	  CASE_guard9393_0b0_sfd___39383_BITS_54_TO_3_0b_ETC__q64 =
	      sfd___3__h69383[54:3];
      2'b10:
	  CASE_guard9393_0b0_sfd___39383_BITS_54_TO_3_0b_ETC__q64 =
	      out_sfd__h70010;
      2'b11:
	  CASE_guard9393_0b0_sfd___39383_BITS_54_TO_3_0b_ETC__q64 =
	      _theResult___sfd__h70007;
    endcase
  end
  always@(guard__h83115 or requestR)
  begin
    case (guard__h83115)
      2'b0, 2'b01, 2'b10:
	  CASE_guard3115_0b0_requestR_BIT_191_0b1_reques_ETC__q67 =
	      requestR[191];
      2'd3:
	  CASE_guard3115_0b0_requestR_BIT_191_0b1_reques_ETC__q67 =
	      guard__h83115 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h83803 or requestR)
  begin
    case (guard__h83803)
      2'b0, 2'b01, 2'b10:
	  CASE_guard3803_0b0_requestR_BIT_191_0b1_reques_ETC__q68 =
	      requestR[191];
      2'd3:
	  CASE_guard3803_0b0_requestR_BIT_191_0b1_reques_ETC__q68 =
	      guard__h83803 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h83803 or
	  x__h83818 or out_exp__h84445 or _theResult___exp__h84442)
  begin
    case (guard__h83803)
      2'b0, 2'b01:
	  CASE_guard3803_0b0_x3818_BITS_10_TO_0_0b1_x381_ETC__q69 =
	      x__h83818[10:0];
      2'b10:
	  CASE_guard3803_0b0_x3818_BITS_10_TO_0_0b1_x381_ETC__q69 =
	      out_exp__h84445;
      2'b11:
	  CASE_guard3803_0b0_x3818_BITS_10_TO_0_0b1_x381_ETC__q69 =
	      _theResult___exp__h84442;
    endcase
  end
  always@(requestR or
	  x__h83818 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2740 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2738)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x3818_BITS_1_ETC__q70 =
	      x__h83818[10:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x3818_BITS_1_ETC__q70 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2740;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x3818_BITS_1_ETC__q70 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2738;
      default: CASE_requestR_BITS_194_TO_192_0x1_x3818_BITS_1_ETC__q70 =
		   11'd0;
    endcase
  end
  always@(guard__h83115 or
	  sfd___3__h11833 or out_sfd__h83732 or _theResult___sfd__h83729)
  begin
    case (guard__h83115)
      2'b0, 2'b01:
	  CASE_guard3115_0b0_sfd___31833_BITS_63_TO_12_0_ETC__q71 =
	      sfd___3__h11833[63:12];
      2'b10:
	  CASE_guard3115_0b0_sfd___31833_BITS_63_TO_12_0_ETC__q71 =
	      out_sfd__h83732;
      2'b11:
	  CASE_guard3115_0b0_sfd___31833_BITS_63_TO_12_0_ETC__q71 =
	      _theResult___sfd__h83729;
    endcase
  end
  always@(requestR or
	  sfd___3__h11833 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2760 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2758)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72 =
	      sfd___3__h11833[63:12];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2760;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2758;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72 =
		   52'd0;
    endcase
  end
  always@(guard__h83803 or
	  sfd___3__h11833 or out_sfd__h84446 or _theResult___sfd__h84443)
  begin
    case (guard__h83803)
      2'b0, 2'b01:
	  CASE_guard3803_0b0_sfd___31833_BITS_62_TO_11_0_ETC__q73 =
	      sfd___3__h11833[62:11];
      2'b10:
	  CASE_guard3803_0b0_sfd___31833_BITS_62_TO_11_0_ETC__q73 =
	      out_sfd__h84446;
      2'b11:
	  CASE_guard3803_0b0_sfd___31833_BITS_62_TO_11_0_ETC__q73 =
	      _theResult___sfd__h84443;
    endcase
  end
  always@(requestR or
	  sfd___3__h11833 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2775 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2773)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74 =
	      sfd___3__h11833[62:11];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2775;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2773;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74 =
		   52'd0;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2715 or
	  guard__h83115 or _theResult___exp__h83728)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2717 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2715;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2717 =
	      (guard__h83115 == 2'b0 || requestR[191]) ?
		11'd0 :
		_theResult___exp__h83728;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2717 =
		   11'd0;
    endcase
  end
  always@(guard__h83115 or out_exp__h83731 or _theResult___exp__h83728)
  begin
    case (guard__h83115)
      2'b0, 2'b01:
	  CASE_guard3115_0b0_0_0b1_0_0b10_out_exp3731_0b_ETC__q75 = 11'd0;
      2'b10:
	  CASE_guard3115_0b0_0_0b1_0_0b10_out_exp3731_0b_ETC__q75 =
	      out_exp__h83731;
      2'b11:
	  CASE_guard3115_0b0_0_0b1_0_0b10_out_exp3731_0b_ETC__q75 =
	      _theResult___exp__h83728;
    endcase
  end
  always@(guard__h94013 or out_exp__h94629 or _theResult___exp__h94626)
  begin
    case (guard__h94013)
      2'b0, 2'b01:
	  CASE_guard4013_0b0_0_0b1_0_0b10_out_exp4629_0b_ETC__q76 = 11'd0;
      2'b10:
	  CASE_guard4013_0b0_0_0b1_0_0b10_out_exp4629_0b_ETC__q76 =
	      out_exp__h94629;
      2'b11:
	  CASE_guard4013_0b0_0_0b1_0_0b10_out_exp4629_0b_ETC__q76 =
	      _theResult___exp__h94626;
    endcase
  end
  always@(requestR or x__h94715 or guard__h94700 or _theResult___exp__h95339)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2883 =
	      x__h94715[10:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2883 =
	      (guard__h94700 == 2'b0) ?
		x__h94715[10:0] :
		_theResult___exp__h95339;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2883 =
		   11'd0;
    endcase
  end
  always@(guard__h94700 or
	  x__h94715 or out_exp__h95342 or _theResult___exp__h95339)
  begin
    case (guard__h94700)
      2'b0, 2'b01:
	  CASE_guard4700_0b0_x4715_BITS_10_TO_0_0b1_x471_ETC__q77 =
	      x__h94715[10:0];
      2'b10:
	  CASE_guard4700_0b0_x4715_BITS_10_TO_0_0b1_x471_ETC__q77 =
	      out_exp__h95342;
      2'b11:
	  CASE_guard4700_0b0_x4715_BITS_10_TO_0_0b1_x471_ETC__q77 =
	      _theResult___exp__h95339;
    endcase
  end
  always@(requestR or
	  sfd___3__h22341 or guard__h94700 or _theResult___sfd__h95340)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2915 =
	      sfd___3__h22341[62:11];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2915 =
	      (guard__h94700 == 2'b0) ?
		sfd___3__h22341[62:11] :
		_theResult___sfd__h95340;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2915 =
		   52'd0;
    endcase
  end
  always@(guard__h94700 or
	  sfd___3__h22341 or out_sfd__h95343 or _theResult___sfd__h95340)
  begin
    case (guard__h94700)
      2'b0, 2'b01:
	  CASE_guard4700_0b0_sfd___32341_BITS_62_TO_11_0_ETC__q78 =
	      sfd___3__h22341[62:11];
      2'b10:
	  CASE_guard4700_0b0_sfd___32341_BITS_62_TO_11_0_ETC__q78 =
	      out_sfd__h95343;
      2'b11:
	  CASE_guard4700_0b0_sfd___32341_BITS_62_TO_11_0_ETC__q78 =
	      _theResult___sfd__h95340;
    endcase
  end
  always@(requestR or
	  sfd___3__h22341 or guard__h94013 or _theResult___sfd__h94627)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2903 =
	      sfd___3__h22341[63:12];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2903 =
	      (guard__h94013 == 2'b0) ?
		sfd___3__h22341[63:12] :
		_theResult___sfd__h94627;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2903 =
		   52'd0;
    endcase
  end
  always@(guard__h94013 or
	  sfd___3__h22341 or out_sfd__h94630 or _theResult___sfd__h94627)
  begin
    case (guard__h94013)
      2'b0, 2'b01:
	  CASE_guard4013_0b0_sfd___32341_BITS_63_TO_12_0_ETC__q79 =
	      sfd___3__h22341[63:12];
      2'b10:
	  CASE_guard4013_0b0_sfd___32341_BITS_63_TO_12_0_ETC__q79 =
	      out_sfd__h94630;
      2'b11:
	  CASE_guard4013_0b0_sfd___32341_BITS_63_TO_12_0_ETC__q79 =
	      _theResult___sfd__h94627;
    endcase
  end
  always@(guard__h110387 or
	  _theResult___fst_exp__h118484 or
	  out_exp__h119010 or _theResult___exp__h119007)
  begin
    case (guard__h110387)
      2'b0, 2'b01:
	  CASE_guard10387_0b0_theResult___fst_exp18484_0_ETC__q84 =
	      _theResult___fst_exp__h118484;
      2'b10:
	  CASE_guard10387_0b0_theResult___fst_exp18484_0_ETC__q84 =
	      out_exp__h119010;
      2'b11:
	  CASE_guard10387_0b0_theResult___fst_exp18484_0_ETC__q84 =
	      _theResult___exp__h119007;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h118484 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3438 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3436)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 =
	      _theResult___fst_exp__h118484;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3438;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3436;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q85 = 8'd0;
    endcase
  end
  always@(guard__h119080 or
	  _theResult___fst_exp__h127128 or
	  out_exp__h127580 or _theResult___exp__h127577)
  begin
    case (guard__h119080)
      2'b0, 2'b01:
	  CASE_guard19080_0b0_theResult___fst_exp27128_0_ETC__q88 =
	      _theResult___fst_exp__h127128;
      2'b10:
	  CASE_guard19080_0b0_theResult___fst_exp27128_0_ETC__q88 =
	      out_exp__h127580;
      2'b11:
	  CASE_guard19080_0b0_theResult___fst_exp27128_0_ETC__q88 =
	      _theResult___exp__h127577;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h127128 or
	  IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3550 or
	  IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3548)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      _theResult___fst_exp__h127128;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3550;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 =
	      IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3548;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q89 = 8'd0;
    endcase
  end
  always@(guard__h127997 or
	  _theResult___fst_exp__h136223 or
	  out_exp__h136749 or _theResult___exp__h136746)
  begin
    case (guard__h127997)
      2'b0, 2'b01:
	  CASE_guard27997_0b0_theResult___fst_exp36223_0_ETC__q93 =
	      _theResult___fst_exp__h136223;
      2'b10:
	  CASE_guard27997_0b0_theResult___fst_exp36223_0_ETC__q93 =
	      out_exp__h136749;
      2'b11:
	  CASE_guard27997_0b0_theResult___fst_exp36223_0_ETC__q93 =
	      _theResult___exp__h136746;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h136223 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3868 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3866)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q94 =
	      _theResult___fst_exp__h136223;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q94 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3868;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q94 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3866;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q94 = 8'd0;
    endcase
  end
  always@(guard__h136819 or
	  _theResult___fst_exp__h144896 or
	  out_exp__h145373 or _theResult___exp__h145370)
  begin
    case (guard__h136819)
      2'b0, 2'b01:
	  CASE_guard36819_0b0_theResult___fst_exp44896_0_ETC__q98 =
	      _theResult___fst_exp__h144896;
      2'b10:
	  CASE_guard36819_0b0_theResult___fst_exp44896_0_ETC__q98 =
	      out_exp__h145373;
      2'b11:
	  CASE_guard36819_0b0_theResult___fst_exp44896_0_ETC__q98 =
	      _theResult___exp__h145370;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h144896 or
	  IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3932 or
	  IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3930)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99 =
	      _theResult___fst_exp__h144896;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99 =
	      IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3932;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99 =
	      IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3930;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99 = 8'd0;
    endcase
  end
  always@(guard__h110387 or
	  sfdin__h118478 or out_sfd__h119011 or _theResult___sfd__h119008)
  begin
    case (guard__h110387)
      2'b0, 2'b01:
	  CASE_guard10387_0b0_sfdin18478_BITS_56_TO_34_0_ETC__q100 =
	      sfdin__h118478[56:34];
      2'b10:
	  CASE_guard10387_0b0_sfdin18478_BITS_56_TO_34_0_ETC__q100 =
	      out_sfd__h119011;
      2'b11:
	  CASE_guard10387_0b0_sfdin18478_BITS_56_TO_34_0_ETC__q100 =
	      _theResult___sfd__h119008;
    endcase
  end
  always@(requestR or
	  sfdin__h118478 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3963 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3961)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin18478_B_ETC__q101 =
	      sfdin__h118478[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin18478_B_ETC__q101 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3963;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin18478_B_ETC__q101 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3961;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin18478_B_ETC__q101 =
		   23'd0;
    endcase
  end
  always@(guard__h119080 or
	  _theResult___snd__h127079 or
	  out_sfd__h127581 or _theResult___sfd__h127578)
  begin
    case (guard__h119080)
      2'b0, 2'b01:
	  CASE_guard19080_0b0_theResult___snd27079_BITS__ETC__q102 =
	      _theResult___snd__h127079[56:34];
      2'b10:
	  CASE_guard19080_0b0_theResult___snd27079_BITS__ETC__q102 =
	      out_sfd__h127581;
      2'b11:
	  CASE_guard19080_0b0_theResult___snd27079_BITS__ETC__q102 =
	      _theResult___sfd__h127578;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h127079 or
	  IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3979 or
	  IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3977)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103 =
	      _theResult___snd__h127079[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103 =
	      IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3979;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103 =
	      IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d3977;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103 =
		   23'd0;
    endcase
  end
  always@(guard__h127997 or
	  sfdin__h136217 or out_sfd__h136750 or _theResult___sfd__h136747)
  begin
    case (guard__h127997)
      2'b0, 2'b01:
	  CASE_guard27997_0b0_sfdin36217_BITS_56_TO_34_0_ETC__q104 =
	      sfdin__h136217[56:34];
      2'b10:
	  CASE_guard27997_0b0_sfdin36217_BITS_56_TO_34_0_ETC__q104 =
	      out_sfd__h136750;
      2'b11:
	  CASE_guard27997_0b0_sfdin36217_BITS_56_TO_34_0_ETC__q104 =
	      _theResult___sfd__h136747;
    endcase
  end
  always@(requestR or
	  sfdin__h136217 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4003 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4001)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin36217_B_ETC__q105 =
	      sfdin__h136217[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin36217_B_ETC__q105 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4003;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin36217_B_ETC__q105 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4001;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin36217_B_ETC__q105 =
		   23'd0;
    endcase
  end
  always@(guard__h136819 or
	  _theResult___snd__h144842 or
	  out_sfd__h145374 or _theResult___sfd__h145371)
  begin
    case (guard__h136819)
      2'b0, 2'b01:
	  CASE_guard36819_0b0_theResult___snd44842_BITS__ETC__q106 =
	      _theResult___snd__h144842[56:34];
      2'b10:
	  CASE_guard36819_0b0_theResult___snd44842_BITS__ETC__q106 =
	      out_sfd__h145374;
      2'b11:
	  CASE_guard36819_0b0_theResult___snd44842_BITS__ETC__q106 =
	      _theResult___sfd__h145371;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h144842 or
	  IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d4019 or
	  IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d4017)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107 =
	      _theResult___snd__h144842[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107 =
	      IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d4019;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107 =
	      IF_IF_IF_requestR_BITS_190_TO_180_481_EQ_0_491_ETC___d4017;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107 =
		   23'd0;
    endcase
  end
  always@(guard__h110387 or requestR)
  begin
    case (guard__h110387)
      2'b0, 2'b01, 2'b10:
	  CASE_guard10387_0b0_requestR_BIT_191_0b1_reque_ETC__q108 =
	      requestR[191];
      2'd3:
	  CASE_guard10387_0b0_requestR_BIT_191_0b1_reque_ETC__q108 =
	      guard__h110387 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h119080 or requestR)
  begin
    case (guard__h119080)
      2'b0, 2'b01, 2'b10:
	  CASE_guard19080_0b0_requestR_BIT_191_0b1_reque_ETC__q109 =
	      requestR[191];
      2'd3:
	  CASE_guard19080_0b0_requestR_BIT_191_0b1_reque_ETC__q109 =
	      guard__h119080 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h127997 or requestR)
  begin
    case (guard__h127997)
      2'b0, 2'b01, 2'b10:
	  CASE_guard27997_0b0_requestR_BIT_191_0b1_reque_ETC__q110 =
	      requestR[191];
      2'd3:
	  CASE_guard27997_0b0_requestR_BIT_191_0b1_reque_ETC__q110 =
	      guard__h127997 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h136819 or requestR)
  begin
    case (guard__h136819)
      2'b0, 2'b01, 2'b10:
	  CASE_guard36819_0b0_requestR_BIT_191_0b1_reque_ETC__q111 =
	      requestR[191];
      2'd3:
	  CASE_guard36819_0b0_requestR_BIT_191_0b1_reque_ETC__q111 =
	      guard__h136819 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h159820 or
	  _theResult___fst_exp__h167781 or
	  out_exp__h168436 or _theResult___exp__h168433)
  begin
    case (guard__h159820)
      2'b0, 2'b01:
	  CASE_guard59820_0b0_theResult___fst_exp67781_0_ETC__q114 =
	      _theResult___fst_exp__h167781;
      2'b10:
	  CASE_guard59820_0b0_theResult___fst_exp67781_0_ETC__q114 =
	      out_exp__h168436;
      2'b11:
	  CASE_guard59820_0b0_theResult___fst_exp67781_0_ETC__q114 =
	      _theResult___exp__h168433;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h167781 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4343 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4341)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q115 =
	      _theResult___fst_exp__h167781;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q115 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4343;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q115 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4341;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q115 =
		   11'd0;
    endcase
  end
  always@(guard__h169056 or
	  _theResult___fst_exp__h177282 or
	  out_exp__h178011 or _theResult___exp__h178008)
  begin
    case (guard__h169056)
      2'b0, 2'b01:
	  CASE_guard69056_0b0_theResult___fst_exp77282_0_ETC__q119 =
	      _theResult___fst_exp__h177282;
      2'b10:
	  CASE_guard69056_0b0_theResult___fst_exp77282_0_ETC__q119 =
	      out_exp__h178011;
      2'b11:
	  CASE_guard69056_0b0_theResult___fst_exp77282_0_ETC__q119 =
	      _theResult___exp__h178008;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h177282 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4663 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4661)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q120 =
	      _theResult___fst_exp__h177282;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q120 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4663;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q120 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4661;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q120 =
		   11'd0;
    endcase
  end
  always@(guard__h178081 or
	  _theResult___fst_exp__h186071 or
	  out_exp__h186751 or _theResult___exp__h186748)
  begin
    case (guard__h178081)
      2'b0, 2'b01:
	  CASE_guard78081_0b0_theResult___fst_exp86071_0_ETC__q124 =
	      _theResult___fst_exp__h186071;
      2'b10:
	  CASE_guard78081_0b0_theResult___fst_exp86071_0_ETC__q124 =
	      out_exp__h186751;
      2'b11:
	  CASE_guard78081_0b0_theResult___fst_exp86071_0_ETC__q124 =
	      _theResult___exp__h186748;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h186071 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4727 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4725)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125 =
	      _theResult___fst_exp__h186071;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4727;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4725;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125 =
		   11'd0;
    endcase
  end
  always@(guard__h159820 or
	  _theResult___snd__h167732 or
	  out_sfd__h168437 or _theResult___sfd__h168434)
  begin
    case (guard__h159820)
      2'b0, 2'b01:
	  CASE_guard59820_0b0_theResult___snd67732_BITS__ETC__q126 =
	      _theResult___snd__h167732[56:5];
      2'b10:
	  CASE_guard59820_0b0_theResult___snd67732_BITS__ETC__q126 =
	      out_sfd__h168437;
      2'b11:
	  CASE_guard59820_0b0_theResult___snd67732_BITS__ETC__q126 =
	      _theResult___sfd__h168434;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h167732 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4757 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4755)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127 =
	      _theResult___snd__h167732[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4757;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4755;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127 =
		   52'd0;
    endcase
  end
  always@(guard__h169056 or
	  sfdin__h177276 or out_sfd__h178012 or _theResult___sfd__h178009)
  begin
    case (guard__h169056)
      2'b0, 2'b01:
	  CASE_guard69056_0b0_sfdin77276_BITS_56_TO_5_0b_ETC__q128 =
	      sfdin__h177276[56:5];
      2'b10:
	  CASE_guard69056_0b0_sfdin77276_BITS_56_TO_5_0b_ETC__q128 =
	      out_sfd__h178012;
      2'b11:
	  CASE_guard69056_0b0_sfdin77276_BITS_56_TO_5_0b_ETC__q128 =
	      _theResult___sfd__h178009;
    endcase
  end
  always@(requestR or
	  sfdin__h177276 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4781 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4779)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin77276_B_ETC__q129 =
	      sfdin__h177276[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin77276_B_ETC__q129 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4781;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin77276_B_ETC__q129 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4779;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin77276_B_ETC__q129 =
		   52'd0;
    endcase
  end
  always@(guard__h178081 or
	  _theResult___snd__h186017 or
	  out_sfd__h186752 or _theResult___sfd__h186749)
  begin
    case (guard__h178081)
      2'b0, 2'b01:
	  CASE_guard78081_0b0_theResult___snd86017_BITS__ETC__q130 =
	      _theResult___snd__h186017[56:5];
      2'b10:
	  CASE_guard78081_0b0_theResult___snd86017_BITS__ETC__q130 =
	      out_sfd__h186752;
      2'b11:
	  CASE_guard78081_0b0_theResult___snd86017_BITS__ETC__q130 =
	      _theResult___sfd__h186749;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h186017 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4797 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4795)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131 =
	      _theResult___snd__h186017[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4797;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4795;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131 =
		   52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4818 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4818 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h159820 or requestR)
  begin
    case (guard__h159820)
      2'b0, 2'b01, 2'b10:
	  CASE_guard59820_0b0_requestR_BITS_191_TO_160_E_ETC__q132 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard59820_0b0_requestR_BITS_191_TO_160_E_ETC__q132 =
	      guard__h159820 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(guard__h169056 or requestR)
  begin
    case (guard__h169056)
      2'b0, 2'b01, 2'b10:
	  CASE_guard69056_0b0_requestR_BITS_191_TO_160_E_ETC__q133 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard69056_0b0_requestR_BITS_191_TO_160_E_ETC__q133 =
	      guard__h169056 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(guard__h178081 or requestR)
  begin
    case (guard__h178081)
      2'b0, 2'b01, 2'b10:
	  CASE_guard78081_0b0_requestR_BITS_191_TO_160_E_ETC__q134 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard78081_0b0_requestR_BITS_191_TO_160_E_ETC__q134 =
	      guard__h178081 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	requestR <= `BSV_ASSIGNMENT_DELAY
	    215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	resultR <= `BSV_ASSIGNMENT_DELAY 70'h0AAAAAAAAAAAAAAAAA;
	stateR <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (requestR$EN) requestR <= `BSV_ASSIGNMENT_DELAY requestR$D_IN;
	if (resultR$EN) resultR <= `BSV_ASSIGNMENT_DELAY resultR$D_IN;
	if (stateR$EN) stateR <= `BSV_ASSIGNMENT_DELAY stateR$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_verbosity = 4'hA;
    requestR = 215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    resultR = 70'h2AAAAAAAAAAAAAAAAA;
    stateR = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkRISCV_FBox

