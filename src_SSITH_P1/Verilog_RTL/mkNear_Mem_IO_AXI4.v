//
// Generated by Bluespec Compiler, version 2018.10.beta1 (build e1df8052c, 2018-10-17)
//
// On Tue Jul  2 12:54:42 BST 2019
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1 reg
// RDY_set_addr_map               O     1 const
// axi4_slave_awready             O     1
// axi4_slave_wready              O     1
// axi4_slave_bid                 O     5
// axi4_slave_bresp               O     2
// axi4_slave_bvalid              O     1
// axi4_slave_arready             O     1
// axi4_slave_rid                 O     5
// axi4_slave_rdata               O   128
// axi4_slave_rresp               O     2
// axi4_slave_rlast               O     1
// axi4_slave_ruser               O     2
// axi4_slave_rvalid              O     1
// get_timer_interrupt_req_get    O     1 reg
// RDY_get_timer_interrupt_req_get  O     1 reg
// get_sw_interrupt_req_get       O     1 reg
// RDY_get_sw_interrupt_req_get   O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_addr_map_addr_base         I    64 reg
// set_addr_map_addr_lim          I    64 reg
// axi4_slave_awid                I     5
// axi4_slave_awaddr              I    64
// axi4_slave_awlen               I     8
// axi4_slave_awsize              I     3
// axi4_slave_awburst             I     2
// axi4_slave_awlock              I     1
// axi4_slave_awcache             I     4
// axi4_slave_awprot              I     3
// axi4_slave_awqos               I     4
// axi4_slave_awregion            I     4
// axi4_slave_wdata               I   128
// axi4_slave_wstrb               I    16
// axi4_slave_wlast               I     1
// axi4_slave_wuser               I     2
// axi4_slave_bready              I     1
// axi4_slave_arid                I     5
// axi4_slave_araddr              I    64
// axi4_slave_arlen               I     8
// axi4_slave_arsize              I     3
// axi4_slave_arburst             I     2
// axi4_slave_arlock              I     1
// axi4_slave_arcache             I     4
// axi4_slave_arprot              I     3
// axi4_slave_arqos               I     4
// axi4_slave_arregion            I     4
// axi4_slave_rready              I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_set_addr_map                I     1
// axi4_slave_awvalid             I     1
// axi4_slave_wvalid              I     1
// axi4_slave_arvalid             I     1
// EN_get_timer_interrupt_req_get  I     1
// EN_get_sw_interrupt_req_get    I     1
//
// Combinational paths from inputs to outputs:
//   (axi4_slave_awid,
//    axi4_slave_awaddr,
//    axi4_slave_awlen,
//    axi4_slave_awsize,
//    axi4_slave_awburst,
//    axi4_slave_awlock,
//    axi4_slave_awcache,
//    axi4_slave_awprot,
//    axi4_slave_awqos,
//    axi4_slave_awregion,
//    axi4_slave_wdata,
//    axi4_slave_wstrb,
//    axi4_slave_wlast,
//    axi4_slave_wuser,
//    axi4_slave_arid,
//    axi4_slave_araddr,
//    axi4_slave_arlen,
//    axi4_slave_arsize,
//    axi4_slave_arburst,
//    axi4_slave_arlock,
//    axi4_slave_arcache,
//    axi4_slave_arprot,
//    axi4_slave_arqos,
//    axi4_slave_arregion,
//    axi4_slave_awvalid,
//    axi4_slave_wvalid,
//    axi4_slave_arvalid) -> axi4_slave_bid
//   (axi4_slave_awid,
//    axi4_slave_awaddr,
//    axi4_slave_awlen,
//    axi4_slave_awsize,
//    axi4_slave_awburst,
//    axi4_slave_awlock,
//    axi4_slave_awcache,
//    axi4_slave_awprot,
//    axi4_slave_awqos,
//    axi4_slave_awregion,
//    axi4_slave_wdata,
//    axi4_slave_wstrb,
//    axi4_slave_wlast,
//    axi4_slave_wuser,
//    axi4_slave_arid,
//    axi4_slave_araddr,
//    axi4_slave_arlen,
//    axi4_slave_arsize,
//    axi4_slave_arburst,
//    axi4_slave_arlock,
//    axi4_slave_arcache,
//    axi4_slave_arprot,
//    axi4_slave_arqos,
//    axi4_slave_arregion,
//    axi4_slave_awvalid,
//    axi4_slave_wvalid,
//    axi4_slave_arvalid) -> axi4_slave_bresp
//   (axi4_slave_awid,
//    axi4_slave_awaddr,
//    axi4_slave_awlen,
//    axi4_slave_awsize,
//    axi4_slave_awburst,
//    axi4_slave_awlock,
//    axi4_slave_awcache,
//    axi4_slave_awprot,
//    axi4_slave_awqos,
//    axi4_slave_awregion,
//    axi4_slave_wdata,
//    axi4_slave_wstrb,
//    axi4_slave_wlast,
//    axi4_slave_wuser,
//    axi4_slave_arid,
//    axi4_slave_araddr,
//    axi4_slave_arlen,
//    axi4_slave_arsize,
//    axi4_slave_arburst,
//    axi4_slave_arlock,
//    axi4_slave_arcache,
//    axi4_slave_arprot,
//    axi4_slave_arqos,
//    axi4_slave_arregion,
//    axi4_slave_awvalid,
//    axi4_slave_wvalid,
//    axi4_slave_arvalid) -> axi4_slave_buser
//   (axi4_slave_awid,
//    axi4_slave_awaddr,
//    axi4_slave_awlen,
//    axi4_slave_awsize,
//    axi4_slave_awburst,
//    axi4_slave_awlock,
//    axi4_slave_awcache,
//    axi4_slave_awprot,
//    axi4_slave_awqos,
//    axi4_slave_awregion,
//    axi4_slave_wdata,
//    axi4_slave_wstrb,
//    axi4_slave_wlast,
//    axi4_slave_wuser,
//    axi4_slave_arid,
//    axi4_slave_araddr,
//    axi4_slave_arlen,
//    axi4_slave_arsize,
//    axi4_slave_arburst,
//    axi4_slave_arlock,
//    axi4_slave_arcache,
//    axi4_slave_arprot,
//    axi4_slave_arqos,
//    axi4_slave_arregion,
//    axi4_slave_awvalid,
//    axi4_slave_wvalid,
//    axi4_slave_arvalid) -> axi4_slave_bvalid
//   (axi4_slave_awid,
//    axi4_slave_awaddr,
//    axi4_slave_awlen,
//    axi4_slave_awsize,
//    axi4_slave_awburst,
//    axi4_slave_awlock,
//    axi4_slave_awcache,
//    axi4_slave_awprot,
//    axi4_slave_awqos,
//    axi4_slave_awregion,
//    axi4_slave_wdata,
//    axi4_slave_wstrb,
//    axi4_slave_wlast,
//    axi4_slave_wuser,
//    axi4_slave_arid,
//    axi4_slave_araddr,
//    axi4_slave_arlen,
//    axi4_slave_arsize,
//    axi4_slave_arburst,
//    axi4_slave_arlock,
//    axi4_slave_arcache,
//    axi4_slave_arprot,
//    axi4_slave_arqos,
//    axi4_slave_arregion,
//    axi4_slave_awvalid,
//    axi4_slave_wvalid,
//    axi4_slave_arvalid) -> axi4_slave_rid
//   (axi4_slave_awid,
//    axi4_slave_awaddr,
//    axi4_slave_awlen,
//    axi4_slave_awsize,
//    axi4_slave_awburst,
//    axi4_slave_awlock,
//    axi4_slave_awcache,
//    axi4_slave_awprot,
//    axi4_slave_awqos,
//    axi4_slave_awregion,
//    axi4_slave_wdata,
//    axi4_slave_wstrb,
//    axi4_slave_wlast,
//    axi4_slave_wuser,
//    axi4_slave_arid,
//    axi4_slave_araddr,
//    axi4_slave_arlen,
//    axi4_slave_arsize,
//    axi4_slave_arburst,
//    axi4_slave_arlock,
//    axi4_slave_arcache,
//    axi4_slave_arprot,
//    axi4_slave_arqos,
//    axi4_slave_arregion,
//    axi4_slave_awvalid,
//    axi4_slave_wvalid,
//    axi4_slave_arvalid) -> axi4_slave_rdata
//   (axi4_slave_awid,
//    axi4_slave_awaddr,
//    axi4_slave_awlen,
//    axi4_slave_awsize,
//    axi4_slave_awburst,
//    axi4_slave_awlock,
//    axi4_slave_awcache,
//    axi4_slave_awprot,
//    axi4_slave_awqos,
//    axi4_slave_awregion,
//    axi4_slave_wdata,
//    axi4_slave_wstrb,
//    axi4_slave_wlast,
//    axi4_slave_wuser,
//    axi4_slave_arid,
//    axi4_slave_araddr,
//    axi4_slave_arlen,
//    axi4_slave_arsize,
//    axi4_slave_arburst,
//    axi4_slave_arlock,
//    axi4_slave_arcache,
//    axi4_slave_arprot,
//    axi4_slave_arqos,
//    axi4_slave_arregion,
//    axi4_slave_awvalid,
//    axi4_slave_wvalid,
//    axi4_slave_arvalid) -> axi4_slave_rresp
//   (axi4_slave_awid,
//    axi4_slave_awaddr,
//    axi4_slave_awlen,
//    axi4_slave_awsize,
//    axi4_slave_awburst,
//    axi4_slave_awlock,
//    axi4_slave_awcache,
//    axi4_slave_awprot,
//    axi4_slave_awqos,
//    axi4_slave_awregion,
//    axi4_slave_wdata,
//    axi4_slave_wstrb,
//    axi4_slave_wlast,
//    axi4_slave_wuser,
//    axi4_slave_arid,
//    axi4_slave_araddr,
//    axi4_slave_arlen,
//    axi4_slave_arsize,
//    axi4_slave_arburst,
//    axi4_slave_arlock,
//    axi4_slave_arcache,
//    axi4_slave_arprot,
//    axi4_slave_arqos,
//    axi4_slave_arregion,
//    axi4_slave_awvalid,
//    axi4_slave_wvalid,
//    axi4_slave_arvalid) -> axi4_slave_rlast
//   (axi4_slave_awid,
//    axi4_slave_awaddr,
//    axi4_slave_awlen,
//    axi4_slave_awsize,
//    axi4_slave_awburst,
//    axi4_slave_awlock,
//    axi4_slave_awcache,
//    axi4_slave_awprot,
//    axi4_slave_awqos,
//    axi4_slave_awregion,
//    axi4_slave_wdata,
//    axi4_slave_wstrb,
//    axi4_slave_wlast,
//    axi4_slave_wuser,
//    axi4_slave_arid,
//    axi4_slave_araddr,
//    axi4_slave_arlen,
//    axi4_slave_arsize,
//    axi4_slave_arburst,
//    axi4_slave_arlock,
//    axi4_slave_arcache,
//    axi4_slave_arprot,
//    axi4_slave_arqos,
//    axi4_slave_arregion,
//    axi4_slave_awvalid,
//    axi4_slave_wvalid,
//    axi4_slave_arvalid) -> axi4_slave_ruser
//   (axi4_slave_awid,
//    axi4_slave_awaddr,
//    axi4_slave_awlen,
//    axi4_slave_awsize,
//    axi4_slave_awburst,
//    axi4_slave_awlock,
//    axi4_slave_awcache,
//    axi4_slave_awprot,
//    axi4_slave_awqos,
//    axi4_slave_awregion,
//    axi4_slave_wdata,
//    axi4_slave_wstrb,
//    axi4_slave_wlast,
//    axi4_slave_wuser,
//    axi4_slave_arid,
//    axi4_slave_araddr,
//    axi4_slave_arlen,
//    axi4_slave_arsize,
//    axi4_slave_arburst,
//    axi4_slave_arlock,
//    axi4_slave_arcache,
//    axi4_slave_arprot,
//    axi4_slave_arqos,
//    axi4_slave_arregion,
//    axi4_slave_awvalid,
//    axi4_slave_wvalid,
//    axi4_slave_arvalid) -> axi4_slave_rvalid
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkNear_Mem_IO_AXI4(CLK,
			  RST_N,

			  EN_server_reset_request_put,
			  RDY_server_reset_request_put,

			  EN_server_reset_response_get,
			  RDY_server_reset_response_get,

			  set_addr_map_addr_base,
			  set_addr_map_addr_lim,
			  EN_set_addr_map,
			  RDY_set_addr_map,

			  axi4_slave_awid,
			  axi4_slave_awaddr,
			  axi4_slave_awlen,
			  axi4_slave_awsize,
			  axi4_slave_awburst,
			  axi4_slave_awlock,
			  axi4_slave_awcache,
			  axi4_slave_awprot,
			  axi4_slave_awqos,
			  axi4_slave_awregion,
			  axi4_slave_awvalid,

			  axi4_slave_awready,

			  axi4_slave_wdata,
			  axi4_slave_wstrb,
			  axi4_slave_wlast,
			  axi4_slave_wuser,
			  axi4_slave_wvalid,

			  axi4_slave_wready,

			  axi4_slave_bid,

			  axi4_slave_bresp,

			  axi4_slave_bvalid,

			  axi4_slave_bready,

			  axi4_slave_arid,
			  axi4_slave_araddr,
			  axi4_slave_arlen,
			  axi4_slave_arsize,
			  axi4_slave_arburst,
			  axi4_slave_arlock,
			  axi4_slave_arcache,
			  axi4_slave_arprot,
			  axi4_slave_arqos,
			  axi4_slave_arregion,
			  axi4_slave_arvalid,

			  axi4_slave_arready,

			  axi4_slave_rid,

			  axi4_slave_rdata,

			  axi4_slave_rresp,

			  axi4_slave_rlast,

			  axi4_slave_ruser,

			  axi4_slave_rvalid,

			  axi4_slave_rready,

			  EN_get_timer_interrupt_req_get,
			  get_timer_interrupt_req_get,
			  RDY_get_timer_interrupt_req_get,

			  EN_get_sw_interrupt_req_get,
			  get_sw_interrupt_req_get,
			  RDY_get_sw_interrupt_req_get);
  input  CLK;
  input  RST_N;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method set_addr_map
  input  [63 : 0] set_addr_map_addr_base;
  input  [63 : 0] set_addr_map_addr_lim;
  input  EN_set_addr_map;
  output RDY_set_addr_map;

  // action method axi4_slave_aw_awflit
  input  [4 : 0] axi4_slave_awid;
  input  [63 : 0] axi4_slave_awaddr;
  input  [7 : 0] axi4_slave_awlen;
  input  [2 : 0] axi4_slave_awsize;
  input  [1 : 0] axi4_slave_awburst;
  input  axi4_slave_awlock;
  input  [3 : 0] axi4_slave_awcache;
  input  [2 : 0] axi4_slave_awprot;
  input  [3 : 0] axi4_slave_awqos;
  input  [3 : 0] axi4_slave_awregion;
  input  axi4_slave_awvalid;

  // value method axi4_slave_aw_awready
  output axi4_slave_awready;

  // action method axi4_slave_w_wflit
  input  [127 : 0] axi4_slave_wdata;
  input  [15 : 0] axi4_slave_wstrb;
  input  axi4_slave_wlast;
  input  [1 : 0] axi4_slave_wuser;
  input  axi4_slave_wvalid;

  // value method axi4_slave_w_wready
  output axi4_slave_wready;

  // value method axi4_slave_b_bid
  output [4 : 0] axi4_slave_bid;

  // value method axi4_slave_b_bresp
  output [1 : 0] axi4_slave_bresp;

  // value method axi4_slave_b_buser

  // value method axi4_slave_b_bvalid
  output axi4_slave_bvalid;

  // action method axi4_slave_b_bready
  input  axi4_slave_bready;

  // action method axi4_slave_ar_arflit
  input  [4 : 0] axi4_slave_arid;
  input  [63 : 0] axi4_slave_araddr;
  input  [7 : 0] axi4_slave_arlen;
  input  [2 : 0] axi4_slave_arsize;
  input  [1 : 0] axi4_slave_arburst;
  input  axi4_slave_arlock;
  input  [3 : 0] axi4_slave_arcache;
  input  [2 : 0] axi4_slave_arprot;
  input  [3 : 0] axi4_slave_arqos;
  input  [3 : 0] axi4_slave_arregion;
  input  axi4_slave_arvalid;

  // value method axi4_slave_ar_arready
  output axi4_slave_arready;

  // value method axi4_slave_r_rid
  output [4 : 0] axi4_slave_rid;

  // value method axi4_slave_r_rdata
  output [127 : 0] axi4_slave_rdata;

  // value method axi4_slave_r_rresp
  output [1 : 0] axi4_slave_rresp;

  // value method axi4_slave_r_rlast
  output axi4_slave_rlast;

  // value method axi4_slave_r_ruser
  output [1 : 0] axi4_slave_ruser;

  // value method axi4_slave_r_rvalid
  output axi4_slave_rvalid;

  // action method axi4_slave_r_rready
  input  axi4_slave_rready;

  // actionvalue method get_timer_interrupt_req_get
  input  EN_get_timer_interrupt_req_get;
  output get_timer_interrupt_req_get;
  output RDY_get_timer_interrupt_req_get;

  // actionvalue method get_sw_interrupt_req_get
  input  EN_get_sw_interrupt_req_get;
  output get_sw_interrupt_req_get;
  output RDY_get_sw_interrupt_req_get;

  // signals for module outputs
  wire [127 : 0] axi4_slave_rdata;
  wire [4 : 0] axi4_slave_bid, axi4_slave_rid;
  wire [1 : 0] axi4_slave_bresp, axi4_slave_rresp, axi4_slave_ruser;
  wire RDY_get_sw_interrupt_req_get,
       RDY_get_timer_interrupt_req_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_addr_map,
       axi4_slave_arready,
       axi4_slave_awready,
       axi4_slave_bvalid,
       axi4_slave_rlast,
       axi4_slave_rvalid,
       axi4_slave_wready,
       get_sw_interrupt_req_get,
       get_timer_interrupt_req_get;

  // inlined wires
  wire [146 : 0] slave_xactor_ug_slave_u_w_putWire$wget;
  wire [145 : 0] slave_xactor_widened_slave_shim_wff_rv$port0__write_1,
		 slave_xactor_widened_slave_shim_wff_rv$port1__read,
		 slave_xactor_widened_slave_shim_wff_rv$port2__read;
  wire [137 : 0] slave_xactor_ug_slave_u_r_peekWire$wget;
  wire [136 : 0] slave_xactor_widened_slave_shim_rff_rv$port0__write_1,
		 slave_xactor_widened_slave_shim_rff_rv$port1__read,
		 slave_xactor_widened_slave_shim_rff_rv$port2__read;
  wire [98 : 0] slave_xactor_widened_slave_shim_arff_rv$port0__write_1,
		slave_xactor_widened_slave_shim_arff_rv$port1__read,
		slave_xactor_widened_slave_shim_arff_rv$port2__read,
		slave_xactor_widened_slave_shim_awff_rv$port0__write_1,
		slave_xactor_widened_slave_shim_awff_rv$port1__read,
		slave_xactor_widened_slave_shim_awff_rv$port2__read;
  wire [97 : 0] slave_xactor_ug_slave_u_ar_putWire$wget,
		slave_xactor_ug_slave_u_aw_putWire$wget,
		slave_xactor_widened_slave_second_ar_enqw$wget,
		slave_xactor_widened_slave_second_aw_enqw$wget;
  wire [72 : 0] slave_xactor_widened_slave_second_w_enqw$wget;
  wire [63 : 0] crg_time$port0__write_1,
		crg_time$port1__write_1,
		crg_time$port2__read,
		crg_timecmp$port1__write_1,
		crg_timecmp$port2__read;
  wire [7 : 0] slave_xactor_widened_slave_shim_bff_rv$port0__write_1,
	       slave_xactor_widened_slave_shim_bff_rv$port1__read,
	       slave_xactor_widened_slave_shim_bff_rv$port2__read;
  wire [1 : 0] slave_xactor_widened_slave_split_ar_enqw$wget;
  wire crg_time$EN_port1__write,
       crg_timecmp$EN_port1__write,
       slave_xactor_ug_slave_u_ar_putWire$whas,
       slave_xactor_ug_slave_u_aw_putWire$whas,
       slave_xactor_ug_slave_u_b_dropWire$whas,
       slave_xactor_ug_slave_u_r_dropWire$whas,
       slave_xactor_ug_slave_u_w_putWire$whas,
       slave_xactor_widened_slave_drop_b_enqw$wget,
       slave_xactor_widened_slave_drop_b_enqw$whas,
       slave_xactor_widened_slave_first_r_enqw$whas,
       slave_xactor_widened_slave_second_ar_enqw$whas,
       slave_xactor_widened_slave_second_aw_enqw$whas,
       slave_xactor_widened_slave_shim_bff_rv$EN_port0__write,
       slave_xactor_widened_slave_shim_rff_rv$EN_port0__write,
       slave_xactor_widened_slave_split_ar_dequeueing$whas;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register crg_time
  reg [63 : 0] crg_time;
  wire [63 : 0] crg_time$D_IN;
  wire crg_time$EN;

  // register crg_timecmp
  reg [63 : 0] crg_timecmp;
  wire [63 : 0] crg_timecmp$D_IN;
  wire crg_timecmp$EN;

  // register rg_addr_base
  reg [63 : 0] rg_addr_base;
  wire [63 : 0] rg_addr_base$D_IN;
  wire rg_addr_base$EN;

  // register rg_addr_lim
  reg [63 : 0] rg_addr_lim;
  wire [63 : 0] rg_addr_lim$D_IN;
  wire rg_addr_lim$EN;

  // register rg_msip
  reg rg_msip;
  wire rg_msip$D_IN, rg_msip$EN;

  // register rg_mtip
  reg rg_mtip;
  wire rg_mtip$D_IN, rg_mtip$EN;

  // register rg_state
  reg rg_state;
  wire rg_state$D_IN, rg_state$EN;

  // register slave_xactor_clearing
  reg slave_xactor_clearing;
  wire slave_xactor_clearing$D_IN, slave_xactor_clearing$EN;

  // register slave_xactor_widened_slave_lastWasRead
  reg slave_xactor_widened_slave_lastWasRead;
  wire slave_xactor_widened_slave_lastWasRead$D_IN,
       slave_xactor_widened_slave_lastWasRead$EN;

  // register slave_xactor_widened_slave_shim_arff_rv
  reg [98 : 0] slave_xactor_widened_slave_shim_arff_rv;
  wire [98 : 0] slave_xactor_widened_slave_shim_arff_rv$D_IN;
  wire slave_xactor_widened_slave_shim_arff_rv$EN;

  // register slave_xactor_widened_slave_shim_awff_rv
  reg [98 : 0] slave_xactor_widened_slave_shim_awff_rv;
  wire [98 : 0] slave_xactor_widened_slave_shim_awff_rv$D_IN;
  wire slave_xactor_widened_slave_shim_awff_rv$EN;

  // register slave_xactor_widened_slave_shim_bff_rv
  reg [7 : 0] slave_xactor_widened_slave_shim_bff_rv;
  wire [7 : 0] slave_xactor_widened_slave_shim_bff_rv$D_IN;
  wire slave_xactor_widened_slave_shim_bff_rv$EN;

  // register slave_xactor_widened_slave_shim_rff_rv
  reg [136 : 0] slave_xactor_widened_slave_shim_rff_rv;
  wire [136 : 0] slave_xactor_widened_slave_shim_rff_rv$D_IN;
  wire slave_xactor_widened_slave_shim_rff_rv$EN;

  // register slave_xactor_widened_slave_shim_wff_rv
  reg [145 : 0] slave_xactor_widened_slave_shim_wff_rv;
  wire [145 : 0] slave_xactor_widened_slave_shim_wff_rv$D_IN;
  wire slave_xactor_widened_slave_shim_wff_rv$EN;

  // ports of submodule f_reset_reqs
  wire f_reset_reqs$CLR,
       f_reset_reqs$DEQ,
       f_reset_reqs$EMPTY_N,
       f_reset_reqs$ENQ,
       f_reset_reqs$FULL_N;

  // ports of submodule f_reset_rsps
  wire f_reset_rsps$CLR,
       f_reset_rsps$DEQ,
       f_reset_rsps$EMPTY_N,
       f_reset_rsps$ENQ,
       f_reset_rsps$FULL_N;

  // ports of submodule f_sw_interrupt_req
  wire f_sw_interrupt_req$CLR,
       f_sw_interrupt_req$DEQ,
       f_sw_interrupt_req$D_IN,
       f_sw_interrupt_req$D_OUT,
       f_sw_interrupt_req$EMPTY_N,
       f_sw_interrupt_req$ENQ,
       f_sw_interrupt_req$FULL_N;

  // ports of submodule f_timer_interrupt_req
  wire f_timer_interrupt_req$CLR,
       f_timer_interrupt_req$DEQ,
       f_timer_interrupt_req$D_IN,
       f_timer_interrupt_req$D_OUT,
       f_timer_interrupt_req$EMPTY_N,
       f_timer_interrupt_req$ENQ,
       f_timer_interrupt_req$FULL_N;

  // ports of submodule slave_xactor_shim_arff
  wire [97 : 0] slave_xactor_shim_arff$D_IN, slave_xactor_shim_arff$D_OUT;
  wire slave_xactor_shim_arff$CLR,
       slave_xactor_shim_arff$DEQ,
       slave_xactor_shim_arff$EMPTY_N,
       slave_xactor_shim_arff$ENQ,
       slave_xactor_shim_arff$FULL_N;

  // ports of submodule slave_xactor_shim_awff
  wire [97 : 0] slave_xactor_shim_awff$D_IN, slave_xactor_shim_awff$D_OUT;
  wire slave_xactor_shim_awff$CLR,
       slave_xactor_shim_awff$DEQ,
       slave_xactor_shim_awff$EMPTY_N,
       slave_xactor_shim_awff$ENQ,
       slave_xactor_shim_awff$FULL_N;

  // ports of submodule slave_xactor_shim_bff
  wire [6 : 0] slave_xactor_shim_bff$D_IN, slave_xactor_shim_bff$D_OUT;
  wire slave_xactor_shim_bff$CLR,
       slave_xactor_shim_bff$DEQ,
       slave_xactor_shim_bff$EMPTY_N,
       slave_xactor_shim_bff$ENQ,
       slave_xactor_shim_bff$FULL_N;

  // ports of submodule slave_xactor_shim_rff
  wire [71 : 0] slave_xactor_shim_rff$D_IN, slave_xactor_shim_rff$D_OUT;
  wire slave_xactor_shim_rff$CLR,
       slave_xactor_shim_rff$DEQ,
       slave_xactor_shim_rff$EMPTY_N,
       slave_xactor_shim_rff$ENQ,
       slave_xactor_shim_rff$FULL_N;

  // ports of submodule slave_xactor_shim_wff
  wire [72 : 0] slave_xactor_shim_wff$D_IN, slave_xactor_shim_wff$D_OUT;
  wire slave_xactor_shim_wff$CLR,
       slave_xactor_shim_wff$DEQ,
       slave_xactor_shim_wff$EMPTY_N,
       slave_xactor_shim_wff$ENQ,
       slave_xactor_shim_wff$FULL_N;

  // ports of submodule slave_xactor_widened_slave_drop_b_ff
  wire slave_xactor_widened_slave_drop_b_ff$CLR,
       slave_xactor_widened_slave_drop_b_ff$DEQ,
       slave_xactor_widened_slave_drop_b_ff$D_IN,
       slave_xactor_widened_slave_drop_b_ff$D_OUT,
       slave_xactor_widened_slave_drop_b_ff$EMPTY_N,
       slave_xactor_widened_slave_drop_b_ff$ENQ,
       slave_xactor_widened_slave_drop_b_ff$FULL_N;

  // ports of submodule slave_xactor_widened_slave_drop_b_firstValid
  wire slave_xactor_widened_slave_drop_b_firstValid$D_IN,
       slave_xactor_widened_slave_drop_b_firstValid$EN,
       slave_xactor_widened_slave_drop_b_firstValid$Q_OUT;

  // ports of submodule slave_xactor_widened_slave_first_r_ff
  wire [63 : 0] slave_xactor_widened_slave_first_r_ff$D_IN,
		slave_xactor_widened_slave_first_r_ff$D_OUT;
  wire slave_xactor_widened_slave_first_r_ff$CLR,
       slave_xactor_widened_slave_first_r_ff$DEQ,
       slave_xactor_widened_slave_first_r_ff$EMPTY_N,
       slave_xactor_widened_slave_first_r_ff$ENQ,
       slave_xactor_widened_slave_first_r_ff$FULL_N;

  // ports of submodule slave_xactor_widened_slave_first_r_firstValid
  wire slave_xactor_widened_slave_first_r_firstValid$D_IN,
       slave_xactor_widened_slave_first_r_firstValid$EN,
       slave_xactor_widened_slave_first_r_firstValid$Q_OUT;

  // ports of submodule slave_xactor_widened_slave_second_ar_ff
  wire [97 : 0] slave_xactor_widened_slave_second_ar_ff$D_IN,
		slave_xactor_widened_slave_second_ar_ff$D_OUT;
  wire slave_xactor_widened_slave_second_ar_ff$CLR,
       slave_xactor_widened_slave_second_ar_ff$DEQ,
       slave_xactor_widened_slave_second_ar_ff$EMPTY_N,
       slave_xactor_widened_slave_second_ar_ff$ENQ,
       slave_xactor_widened_slave_second_ar_ff$FULL_N;

  // ports of submodule slave_xactor_widened_slave_second_ar_firstValid
  wire slave_xactor_widened_slave_second_ar_firstValid$D_IN,
       slave_xactor_widened_slave_second_ar_firstValid$EN,
       slave_xactor_widened_slave_second_ar_firstValid$Q_OUT;

  // ports of submodule slave_xactor_widened_slave_second_aw_ff
  wire [97 : 0] slave_xactor_widened_slave_second_aw_ff$D_IN,
		slave_xactor_widened_slave_second_aw_ff$D_OUT;
  wire slave_xactor_widened_slave_second_aw_ff$CLR,
       slave_xactor_widened_slave_second_aw_ff$DEQ,
       slave_xactor_widened_slave_second_aw_ff$EMPTY_N,
       slave_xactor_widened_slave_second_aw_ff$ENQ,
       slave_xactor_widened_slave_second_aw_ff$FULL_N;

  // ports of submodule slave_xactor_widened_slave_second_aw_firstValid
  wire slave_xactor_widened_slave_second_aw_firstValid$D_IN,
       slave_xactor_widened_slave_second_aw_firstValid$EN,
       slave_xactor_widened_slave_second_aw_firstValid$Q_OUT;

  // ports of submodule slave_xactor_widened_slave_second_w_ff
  wire [72 : 0] slave_xactor_widened_slave_second_w_ff$D_IN,
		slave_xactor_widened_slave_second_w_ff$D_OUT;
  wire slave_xactor_widened_slave_second_w_ff$CLR,
       slave_xactor_widened_slave_second_w_ff$DEQ,
       slave_xactor_widened_slave_second_w_ff$EMPTY_N,
       slave_xactor_widened_slave_second_w_ff$ENQ,
       slave_xactor_widened_slave_second_w_ff$FULL_N;

  // ports of submodule slave_xactor_widened_slave_second_w_firstValid
  wire slave_xactor_widened_slave_second_w_firstValid$D_IN,
       slave_xactor_widened_slave_second_w_firstValid$EN,
       slave_xactor_widened_slave_second_w_firstValid$Q_OUT;

  // ports of submodule slave_xactor_widened_slave_split_ar_ff
  wire [1 : 0] slave_xactor_widened_slave_split_ar_ff$D_IN,
	       slave_xactor_widened_slave_split_ar_ff$D_OUT;
  wire slave_xactor_widened_slave_split_ar_ff$CLR,
       slave_xactor_widened_slave_split_ar_ff$DEQ,
       slave_xactor_widened_slave_split_ar_ff$EMPTY_N,
       slave_xactor_widened_slave_split_ar_ff$ENQ,
       slave_xactor_widened_slave_split_ar_ff$FULL_N;

  // ports of submodule slave_xactor_widened_slave_split_ar_firstValid
  wire slave_xactor_widened_slave_split_ar_firstValid$D_IN,
       slave_xactor_widened_slave_split_ar_firstValid$EN,
       slave_xactor_widened_slave_split_ar_firstValid$Q_OUT;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_compare,
       CAN_FIRE_RL_rl_process_rd_req,
       CAN_FIRE_RL_rl_process_wr_req,
       CAN_FIRE_RL_rl_reset,
       CAN_FIRE_RL_rl_soft_reset,
       CAN_FIRE_RL_rl_tick_timer,
       CAN_FIRE_RL_slave_xactor_do_clear,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_b_setPeek,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_r_setPeek,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_w_doPut,
       CAN_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut,
       CAN_FIRE_RL_slave_xactor_widened_slave_drop_b_dequeue,
       CAN_FIRE_RL_slave_xactor_widened_slave_drop_b_enqueue,
       CAN_FIRE_RL_slave_xactor_widened_slave_first_r_dequeue,
       CAN_FIRE_RL_slave_xactor_widened_slave_first_r_enqueue,
       CAN_FIRE_RL_slave_xactor_widened_slave_receive_first_r,
       CAN_FIRE_RL_slave_xactor_widened_slave_receive_second_r,
       CAN_FIRE_RL_slave_xactor_widened_slave_second_ar_dequeue,
       CAN_FIRE_RL_slave_xactor_widened_slave_second_ar_enqueue,
       CAN_FIRE_RL_slave_xactor_widened_slave_second_aw_dequeue,
       CAN_FIRE_RL_slave_xactor_widened_slave_second_aw_enqueue,
       CAN_FIRE_RL_slave_xactor_widened_slave_second_w_dequeue,
       CAN_FIRE_RL_slave_xactor_widened_slave_second_w_enqueue,
       CAN_FIRE_RL_slave_xactor_widened_slave_send_first_ar,
       CAN_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w,
       CAN_FIRE_RL_slave_xactor_widened_slave_send_second_ar,
       CAN_FIRE_RL_slave_xactor_widened_slave_send_second_aw,
       CAN_FIRE_RL_slave_xactor_widened_slave_send_second_w,
       CAN_FIRE_RL_slave_xactor_widened_slave_split_ar_dequeue,
       CAN_FIRE_RL_slave_xactor_widened_slave_split_ar_enqueue,
       CAN_FIRE_RL_slave_xactor_widened_slave_take_b,
       CAN_FIRE_axi4_slave_ar_arflit,
       CAN_FIRE_axi4_slave_aw_awflit,
       CAN_FIRE_axi4_slave_b_bready,
       CAN_FIRE_axi4_slave_r_rready,
       CAN_FIRE_axi4_slave_w_wflit,
       CAN_FIRE_get_sw_interrupt_req_get,
       CAN_FIRE_get_timer_interrupt_req_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_addr_map,
       WILL_FIRE_RL_rl_compare,
       WILL_FIRE_RL_rl_process_rd_req,
       WILL_FIRE_RL_rl_process_wr_req,
       WILL_FIRE_RL_rl_reset,
       WILL_FIRE_RL_rl_soft_reset,
       WILL_FIRE_RL_rl_tick_timer,
       WILL_FIRE_RL_slave_xactor_do_clear,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_b_setPeek,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_r_setPeek,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_w_doPut,
       WILL_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut,
       WILL_FIRE_RL_slave_xactor_widened_slave_drop_b_dequeue,
       WILL_FIRE_RL_slave_xactor_widened_slave_drop_b_enqueue,
       WILL_FIRE_RL_slave_xactor_widened_slave_first_r_dequeue,
       WILL_FIRE_RL_slave_xactor_widened_slave_first_r_enqueue,
       WILL_FIRE_RL_slave_xactor_widened_slave_receive_first_r,
       WILL_FIRE_RL_slave_xactor_widened_slave_receive_second_r,
       WILL_FIRE_RL_slave_xactor_widened_slave_second_ar_dequeue,
       WILL_FIRE_RL_slave_xactor_widened_slave_second_ar_enqueue,
       WILL_FIRE_RL_slave_xactor_widened_slave_second_aw_dequeue,
       WILL_FIRE_RL_slave_xactor_widened_slave_second_aw_enqueue,
       WILL_FIRE_RL_slave_xactor_widened_slave_second_w_dequeue,
       WILL_FIRE_RL_slave_xactor_widened_slave_second_w_enqueue,
       WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar,
       WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w,
       WILL_FIRE_RL_slave_xactor_widened_slave_send_second_ar,
       WILL_FIRE_RL_slave_xactor_widened_slave_send_second_aw,
       WILL_FIRE_RL_slave_xactor_widened_slave_send_second_w,
       WILL_FIRE_RL_slave_xactor_widened_slave_split_ar_dequeue,
       WILL_FIRE_RL_slave_xactor_widened_slave_split_ar_enqueue,
       WILL_FIRE_RL_slave_xactor_widened_slave_take_b,
       WILL_FIRE_axi4_slave_ar_arflit,
       WILL_FIRE_axi4_slave_aw_awflit,
       WILL_FIRE_axi4_slave_b_bready,
       WILL_FIRE_axi4_slave_r_rready,
       WILL_FIRE_axi4_slave_w_wflit,
       WILL_FIRE_get_sw_interrupt_req_get,
       WILL_FIRE_get_timer_interrupt_req_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_addr_map;

  // inputs to muxes for submodule ports
  wire [136 : 0] MUX_slave_xactor_widened_slave_shim_rff_rv$port0__write_1__VAL_1,
		 MUX_slave_xactor_widened_slave_shim_rff_rv$port0__write_1__VAL_2;
  wire [97 : 0] MUX_slave_xactor_shim_arff$enq_1__VAL_1,
		MUX_slave_xactor_shim_arff$enq_1__VAL_2,
		MUX_slave_xactor_shim_awff$enq_1__VAL_1,
		MUX_slave_xactor_shim_awff$enq_1__VAL_2;
  wire [72 : 0] MUX_slave_xactor_shim_wff$enq_1__VAL_1,
		MUX_slave_xactor_shim_wff$enq_1__VAL_2;
  wire MUX_crg_time$port1__write_1__SEL_1,
       MUX_crg_timecmp$port1__write_1__SEL_1,
       MUX_rg_msip$write_1__SEL_1,
       MUX_slave_xactor_widened_slave_drop_b_enqw$wset_1__VAL_1,
       MUX_slave_xactor_widened_slave_shim_rff_rv$port0__write_1__SEL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h20341;
  reg [31 : 0] v__h20473;
  reg [31 : 0] v__h11785;
  reg [31 : 0] v__h12216;
  reg [31 : 0] v__h12430;
  reg [31 : 0] v__h12653;
  reg [31 : 0] v__h12916;
  reg [31 : 0] v__h12029;
  reg [31 : 0] v__h13251;
  reg [31 : 0] v__h13507;
  reg [31 : 0] v__h19075;
  reg [31 : 0] v__h19321;
  reg [31 : 0] v__h19692;
  reg [31 : 0] v__h19802;
  reg [31 : 0] v__h19909;
  reg [31 : 0] v__h11779;
  reg [31 : 0] v__h12023;
  reg [31 : 0] v__h12210;
  reg [31 : 0] v__h12424;
  reg [31 : 0] v__h12647;
  reg [31 : 0] v__h12910;
  reg [31 : 0] v__h13245;
  reg [31 : 0] v__h13501;
  reg [31 : 0] v__h19069;
  reg [31 : 0] v__h19315;
  reg [31 : 0] v__h19686;
  reg [31 : 0] v__h19796;
  reg [31 : 0] v__h19903;
  reg [31 : 0] v__h20335;
  reg [31 : 0] v__h20467;
  // synopsys translate_on

  // remaining internal signals
  reg [63 : 0] _theResult___fst__h12574;
  reg [2 : 0] CASE_sz489_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q1,
	      CASE_sz963_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q2,
	      new_ar_2_arsize_val__h7756,
	      new_aw_2_awsize_val__h5669;
  reg [1 : 0] CASE_byte_addr2381_0x0_0_0x4_0_0x4000_0_0x4004_ETC__q6,
	      CASE_byte_addr3468_0x0_0_0x4_0_0x4000_0_0x4004_ETC__q5;
  reg CASE_IF_slave_xactor_widened_slave_split_ar_ff_ETC__q4;
  wire [127 : 0] new_r_rdata__h9127, v_rdata__h8635;
  wire [63 : 0] byte_addr__h12381,
		byte_addr__h13468,
		crg_timecmp_port1__read__97_AND_INV_SEXT_slave_ETC___d736,
		mask__h13941,
		new_time__h15198,
		new_timecmp__h13910,
		new_w_wdata__h5333,
		old_time__h17757,
		rdata___1__h12570,
		x__h12792,
		x__h13952,
		x__h15240,
		x__h4441,
		x__h6926,
		x_araddr__h7725,
		x_awaddr__h5638,
		x_first__h4108,
		y__h13953,
		y__h13954,
		y__h4406,
		y__h6891;
  wire [7 : 0] SEXT_slave_xactor_shim_wff_first__29_BIT_1_22___d723,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_2_19___d720,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_3_15___d716,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_4_12___d713,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_5_08___d709,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_6_05___d706,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_7_01___d702,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_8_98___d699,
	       new_w_wstrb__h5334,
	       sz__h4489,
	       sz__h4590,
	       sz__h6963,
	       sz__h7064,
	       x__h4408,
	       x__h4609,
	       x__h6893,
	       x__h7083,
	       y__h4610,
	       y__h7084;
  wire [6 : 0] slave_xactor_widened_slave_shim_bff_rvport1___ETC__q3;
  wire [1 : 0] IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401;
  wire IF_slave_xactor_widened_slave_drop_b_ff_i_notE_ETC___d241,
       NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332,
       NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144,
       NOT_cfg_verbosity_read__94_ULE_1_17___d518,
       NOT_crg_time_port0__read__00_ULT_crg_timecmp_p_ETC___d511,
       NOT_slave_xactor_widened_slave_lastWasRead_7_6_ETC___d273,
       NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304,
       NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116,
       rg_msip_94_EQ_slave_xactor_shim_wff_first__29__ETC___d631,
       slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558,
       slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d591,
       slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625,
       slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d768,
       slave_xactor_shim_awff_i_notEmpty__19_AND_slav_ETC___d639,
       slave_xactor_shim_rff_i_notEmpty__98_AND_IF_IF_ETC___d413,
       slave_xactor_widened_slave_drop_b_ff_i_notFull_ETC___d72,
       slave_xactor_widened_slave_shim_arff_rv_port1__ETC___d261,
       slave_xactor_widened_slave_shim_awff_rv_port1__ETC___d66;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get = f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method set_addr_map
  assign RDY_set_addr_map = 1'd1 ;
  assign CAN_FIRE_set_addr_map = 1'd1 ;
  assign WILL_FIRE_set_addr_map = EN_set_addr_map ;

  // action method axi4_slave_aw_awflit
  assign CAN_FIRE_axi4_slave_aw_awflit = 1'd1 ;
  assign WILL_FIRE_axi4_slave_aw_awflit = axi4_slave_awvalid ;

  // value method axi4_slave_aw_awready
  assign axi4_slave_awready = !slave_xactor_widened_slave_shim_awff_rv[98] ;

  // action method axi4_slave_w_wflit
  assign CAN_FIRE_axi4_slave_w_wflit = 1'd1 ;
  assign WILL_FIRE_axi4_slave_w_wflit = axi4_slave_wvalid ;

  // value method axi4_slave_w_wready
  assign axi4_slave_wready = !slave_xactor_widened_slave_shim_wff_rv[145] ;

  // value method axi4_slave_b_bid
  assign axi4_slave_bid =
	     slave_xactor_widened_slave_shim_bff_rvport1___ETC__q3[6:2] ;

  // value method axi4_slave_b_bresp
  assign axi4_slave_bresp =
	     slave_xactor_widened_slave_shim_bff_rvport1___ETC__q3[1:0] ;

  // value method axi4_slave_b_bvalid
  assign axi4_slave_bvalid = CAN_FIRE_RL_slave_xactor_ug_slave_u_b_setPeek ;

  // action method axi4_slave_b_bready
  assign CAN_FIRE_axi4_slave_b_bready = 1'd1 ;
  assign WILL_FIRE_axi4_slave_b_bready = 1'd1 ;

  // action method axi4_slave_ar_arflit
  assign CAN_FIRE_axi4_slave_ar_arflit = 1'd1 ;
  assign WILL_FIRE_axi4_slave_ar_arflit = axi4_slave_arvalid ;

  // value method axi4_slave_ar_arready
  assign axi4_slave_arready = !slave_xactor_widened_slave_shim_arff_rv[98] ;

  // value method axi4_slave_r_rid
  assign axi4_slave_rid = slave_xactor_ug_slave_u_r_peekWire$wget[137:133] ;

  // value method axi4_slave_r_rdata
  assign axi4_slave_rdata = slave_xactor_ug_slave_u_r_peekWire$wget[132:5] ;

  // value method axi4_slave_r_rresp
  assign axi4_slave_rresp = slave_xactor_ug_slave_u_r_peekWire$wget[4:3] ;

  // value method axi4_slave_r_rlast
  assign axi4_slave_rlast = slave_xactor_ug_slave_u_r_peekWire$wget[2] ;

  // value method axi4_slave_r_ruser
  assign axi4_slave_ruser = slave_xactor_ug_slave_u_r_peekWire$wget[1:0] ;

  // value method axi4_slave_r_rvalid
  assign axi4_slave_rvalid = CAN_FIRE_RL_slave_xactor_ug_slave_u_r_setPeek ;

  // action method axi4_slave_r_rready
  assign CAN_FIRE_axi4_slave_r_rready = 1'd1 ;
  assign WILL_FIRE_axi4_slave_r_rready = 1'd1 ;

  // actionvalue method get_timer_interrupt_req_get
  assign get_timer_interrupt_req_get = f_timer_interrupt_req$D_OUT ;
  assign RDY_get_timer_interrupt_req_get = f_timer_interrupt_req$EMPTY_N ;
  assign CAN_FIRE_get_timer_interrupt_req_get =
	     f_timer_interrupt_req$EMPTY_N ;
  assign WILL_FIRE_get_timer_interrupt_req_get =
	     EN_get_timer_interrupt_req_get ;

  // actionvalue method get_sw_interrupt_req_get
  assign get_sw_interrupt_req_get = f_sw_interrupt_req$D_OUT ;
  assign RDY_get_sw_interrupt_req_get = f_sw_interrupt_req$EMPTY_N ;
  assign CAN_FIRE_get_sw_interrupt_req_get = f_sw_interrupt_req$EMPTY_N ;
  assign WILL_FIRE_get_sw_interrupt_req_get = EN_get_sw_interrupt_req_get ;

  // submodule f_reset_reqs
  FIFO20 #(.guarded(32'd1)) f_reset_reqs(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_reqs$ENQ),
					 .DEQ(f_reset_reqs$DEQ),
					 .CLR(f_reset_reqs$CLR),
					 .FULL_N(f_reset_reqs$FULL_N),
					 .EMPTY_N(f_reset_reqs$EMPTY_N));

  // submodule f_reset_rsps
  FIFO20 #(.guarded(32'd1)) f_reset_rsps(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_reset_rsps$ENQ),
					 .DEQ(f_reset_rsps$DEQ),
					 .CLR(f_reset_rsps$CLR),
					 .FULL_N(f_reset_rsps$FULL_N),
					 .EMPTY_N(f_reset_rsps$EMPTY_N));

  // submodule f_sw_interrupt_req
  FIFO2 #(.width(32'd1), .guarded(32'd1)) f_sw_interrupt_req(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(f_sw_interrupt_req$D_IN),
							     .ENQ(f_sw_interrupt_req$ENQ),
							     .DEQ(f_sw_interrupt_req$DEQ),
							     .CLR(f_sw_interrupt_req$CLR),
							     .D_OUT(f_sw_interrupt_req$D_OUT),
							     .FULL_N(f_sw_interrupt_req$FULL_N),
							     .EMPTY_N(f_sw_interrupt_req$EMPTY_N));

  // submodule f_timer_interrupt_req
  FIFO2 #(.width(32'd1), .guarded(32'd1)) f_timer_interrupt_req(.RST(RST_N),
								.CLK(CLK),
								.D_IN(f_timer_interrupt_req$D_IN),
								.ENQ(f_timer_interrupt_req$ENQ),
								.DEQ(f_timer_interrupt_req$DEQ),
								.CLR(f_timer_interrupt_req$CLR),
								.D_OUT(f_timer_interrupt_req$D_OUT),
								.FULL_N(f_timer_interrupt_req$FULL_N),
								.EMPTY_N(f_timer_interrupt_req$EMPTY_N));

  // submodule slave_xactor_shim_arff
  SizedFIFO #(.p1width(32'd98),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) slave_xactor_shim_arff(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(slave_xactor_shim_arff$D_IN),
						      .ENQ(slave_xactor_shim_arff$ENQ),
						      .DEQ(slave_xactor_shim_arff$DEQ),
						      .CLR(slave_xactor_shim_arff$CLR),
						      .D_OUT(slave_xactor_shim_arff$D_OUT),
						      .FULL_N(slave_xactor_shim_arff$FULL_N),
						      .EMPTY_N(slave_xactor_shim_arff$EMPTY_N));

  // submodule slave_xactor_shim_awff
  SizedFIFO #(.p1width(32'd98),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) slave_xactor_shim_awff(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(slave_xactor_shim_awff$D_IN),
						      .ENQ(slave_xactor_shim_awff$ENQ),
						      .DEQ(slave_xactor_shim_awff$DEQ),
						      .CLR(slave_xactor_shim_awff$CLR),
						      .D_OUT(slave_xactor_shim_awff$D_OUT),
						      .FULL_N(slave_xactor_shim_awff$FULL_N),
						      .EMPTY_N(slave_xactor_shim_awff$EMPTY_N));

  // submodule slave_xactor_shim_bff
  SizedFIFO #(.p1width(32'd7),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) slave_xactor_shim_bff(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(slave_xactor_shim_bff$D_IN),
						     .ENQ(slave_xactor_shim_bff$ENQ),
						     .DEQ(slave_xactor_shim_bff$DEQ),
						     .CLR(slave_xactor_shim_bff$CLR),
						     .D_OUT(slave_xactor_shim_bff$D_OUT),
						     .FULL_N(slave_xactor_shim_bff$FULL_N),
						     .EMPTY_N(slave_xactor_shim_bff$EMPTY_N));

  // submodule slave_xactor_shim_rff
  SizedFIFO #(.p1width(32'd72),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) slave_xactor_shim_rff(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(slave_xactor_shim_rff$D_IN),
						     .ENQ(slave_xactor_shim_rff$ENQ),
						     .DEQ(slave_xactor_shim_rff$DEQ),
						     .CLR(slave_xactor_shim_rff$CLR),
						     .D_OUT(slave_xactor_shim_rff$D_OUT),
						     .FULL_N(slave_xactor_shim_rff$FULL_N),
						     .EMPTY_N(slave_xactor_shim_rff$EMPTY_N));

  // submodule slave_xactor_shim_wff
  SizedFIFO #(.p1width(32'd73),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) slave_xactor_shim_wff(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(slave_xactor_shim_wff$D_IN),
						     .ENQ(slave_xactor_shim_wff$ENQ),
						     .DEQ(slave_xactor_shim_wff$DEQ),
						     .CLR(slave_xactor_shim_wff$CLR),
						     .D_OUT(slave_xactor_shim_wff$D_OUT),
						     .FULL_N(slave_xactor_shim_wff$FULL_N),
						     .EMPTY_N(slave_xactor_shim_wff$EMPTY_N));

  // submodule slave_xactor_widened_slave_drop_b_ff
  FIFO1 #(.width(32'd1),
	  .guarded(32'd0)) slave_xactor_widened_slave_drop_b_ff(.RST(RST_N),
								.CLK(CLK),
								.D_IN(slave_xactor_widened_slave_drop_b_ff$D_IN),
								.ENQ(slave_xactor_widened_slave_drop_b_ff$ENQ),
								.DEQ(slave_xactor_widened_slave_drop_b_ff$DEQ),
								.CLR(slave_xactor_widened_slave_drop_b_ff$CLR),
								.D_OUT(slave_xactor_widened_slave_drop_b_ff$D_OUT),
								.FULL_N(slave_xactor_widened_slave_drop_b_ff$FULL_N),
								.EMPTY_N(slave_xactor_widened_slave_drop_b_ff$EMPTY_N));

  // submodule slave_xactor_widened_slave_drop_b_firstValid
  RevertReg #(.width(32'd1),
	      .init(1'd1)) slave_xactor_widened_slave_drop_b_firstValid(.CLK(CLK),
									.D_IN(slave_xactor_widened_slave_drop_b_firstValid$D_IN),
									.EN(slave_xactor_widened_slave_drop_b_firstValid$EN),
									.Q_OUT(slave_xactor_widened_slave_drop_b_firstValid$Q_OUT));

  // submodule slave_xactor_widened_slave_first_r_ff
  FIFO1 #(.width(32'd64),
	  .guarded(32'd0)) slave_xactor_widened_slave_first_r_ff(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(slave_xactor_widened_slave_first_r_ff$D_IN),
								 .ENQ(slave_xactor_widened_slave_first_r_ff$ENQ),
								 .DEQ(slave_xactor_widened_slave_first_r_ff$DEQ),
								 .CLR(slave_xactor_widened_slave_first_r_ff$CLR),
								 .D_OUT(slave_xactor_widened_slave_first_r_ff$D_OUT),
								 .FULL_N(slave_xactor_widened_slave_first_r_ff$FULL_N),
								 .EMPTY_N(slave_xactor_widened_slave_first_r_ff$EMPTY_N));

  // submodule slave_xactor_widened_slave_first_r_firstValid
  RevertReg #(.width(32'd1),
	      .init(1'd1)) slave_xactor_widened_slave_first_r_firstValid(.CLK(CLK),
									 .D_IN(slave_xactor_widened_slave_first_r_firstValid$D_IN),
									 .EN(slave_xactor_widened_slave_first_r_firstValid$EN),
									 .Q_OUT(slave_xactor_widened_slave_first_r_firstValid$Q_OUT));

  // submodule slave_xactor_widened_slave_second_ar_ff
  FIFO1 #(.width(32'd98),
	  .guarded(32'd0)) slave_xactor_widened_slave_second_ar_ff(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(slave_xactor_widened_slave_second_ar_ff$D_IN),
								   .ENQ(slave_xactor_widened_slave_second_ar_ff$ENQ),
								   .DEQ(slave_xactor_widened_slave_second_ar_ff$DEQ),
								   .CLR(slave_xactor_widened_slave_second_ar_ff$CLR),
								   .D_OUT(slave_xactor_widened_slave_second_ar_ff$D_OUT),
								   .FULL_N(slave_xactor_widened_slave_second_ar_ff$FULL_N),
								   .EMPTY_N(slave_xactor_widened_slave_second_ar_ff$EMPTY_N));

  // submodule slave_xactor_widened_slave_second_ar_firstValid
  RevertReg #(.width(32'd1),
	      .init(1'd1)) slave_xactor_widened_slave_second_ar_firstValid(.CLK(CLK),
									   .D_IN(slave_xactor_widened_slave_second_ar_firstValid$D_IN),
									   .EN(slave_xactor_widened_slave_second_ar_firstValid$EN),
									   .Q_OUT(slave_xactor_widened_slave_second_ar_firstValid$Q_OUT));

  // submodule slave_xactor_widened_slave_second_aw_ff
  FIFO1 #(.width(32'd98),
	  .guarded(32'd0)) slave_xactor_widened_slave_second_aw_ff(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(slave_xactor_widened_slave_second_aw_ff$D_IN),
								   .ENQ(slave_xactor_widened_slave_second_aw_ff$ENQ),
								   .DEQ(slave_xactor_widened_slave_second_aw_ff$DEQ),
								   .CLR(slave_xactor_widened_slave_second_aw_ff$CLR),
								   .D_OUT(slave_xactor_widened_slave_second_aw_ff$D_OUT),
								   .FULL_N(slave_xactor_widened_slave_second_aw_ff$FULL_N),
								   .EMPTY_N(slave_xactor_widened_slave_second_aw_ff$EMPTY_N));

  // submodule slave_xactor_widened_slave_second_aw_firstValid
  RevertReg #(.width(32'd1),
	      .init(1'd1)) slave_xactor_widened_slave_second_aw_firstValid(.CLK(CLK),
									   .D_IN(slave_xactor_widened_slave_second_aw_firstValid$D_IN),
									   .EN(slave_xactor_widened_slave_second_aw_firstValid$EN),
									   .Q_OUT(slave_xactor_widened_slave_second_aw_firstValid$Q_OUT));

  // submodule slave_xactor_widened_slave_second_w_ff
  FIFO1 #(.width(32'd73),
	  .guarded(32'd0)) slave_xactor_widened_slave_second_w_ff(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(slave_xactor_widened_slave_second_w_ff$D_IN),
								  .ENQ(slave_xactor_widened_slave_second_w_ff$ENQ),
								  .DEQ(slave_xactor_widened_slave_second_w_ff$DEQ),
								  .CLR(slave_xactor_widened_slave_second_w_ff$CLR),
								  .D_OUT(slave_xactor_widened_slave_second_w_ff$D_OUT),
								  .FULL_N(slave_xactor_widened_slave_second_w_ff$FULL_N),
								  .EMPTY_N(slave_xactor_widened_slave_second_w_ff$EMPTY_N));

  // submodule slave_xactor_widened_slave_second_w_firstValid
  RevertReg #(.width(32'd1),
	      .init(1'd1)) slave_xactor_widened_slave_second_w_firstValid(.CLK(CLK),
									  .D_IN(slave_xactor_widened_slave_second_w_firstValid$D_IN),
									  .EN(slave_xactor_widened_slave_second_w_firstValid$EN),
									  .Q_OUT(slave_xactor_widened_slave_second_w_firstValid$Q_OUT));

  // submodule slave_xactor_widened_slave_split_ar_ff
  FIFO1 #(.width(32'd2),
	  .guarded(32'd0)) slave_xactor_widened_slave_split_ar_ff(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(slave_xactor_widened_slave_split_ar_ff$D_IN),
								  .ENQ(slave_xactor_widened_slave_split_ar_ff$ENQ),
								  .DEQ(slave_xactor_widened_slave_split_ar_ff$DEQ),
								  .CLR(slave_xactor_widened_slave_split_ar_ff$CLR),
								  .D_OUT(slave_xactor_widened_slave_split_ar_ff$D_OUT),
								  .FULL_N(slave_xactor_widened_slave_split_ar_ff$FULL_N),
								  .EMPTY_N(slave_xactor_widened_slave_split_ar_ff$EMPTY_N));

  // submodule slave_xactor_widened_slave_split_ar_firstValid
  RevertReg #(.width(32'd1),
	      .init(1'd1)) slave_xactor_widened_slave_split_ar_firstValid(.CLK(CLK),
									  .D_IN(slave_xactor_widened_slave_split_ar_firstValid$D_IN),
									  .EN(slave_xactor_widened_slave_split_ar_firstValid$EN),
									  .Q_OUT(slave_xactor_widened_slave_split_ar_firstValid$Q_OUT));

  // rule RL_rl_reset
  assign CAN_FIRE_RL_rl_reset =
	     !slave_xactor_clearing && f_reset_reqs$EMPTY_N &&
	     f_reset_rsps$FULL_N &&
	     !rg_state ;
  assign WILL_FIRE_RL_rl_reset = CAN_FIRE_RL_rl_reset ;

  // rule RL_rl_soft_reset
  assign CAN_FIRE_RL_rl_soft_reset = f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_rl_soft_reset =
	     f_reset_reqs$EMPTY_N && !WILL_FIRE_RL_rl_reset ;

  // rule RL_rl_process_rd_req
  assign CAN_FIRE_RL_rl_process_rd_req =
	     !slave_xactor_clearing && slave_xactor_shim_arff$EMPTY_N &&
	     slave_xactor_shim_rff$FULL_N &&
	     rg_state &&
	     !f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_rl_process_rd_req = CAN_FIRE_RL_rl_process_rd_req ;

  // rule RL_rl_compare
  assign CAN_FIRE_RL_rl_compare =
	     f_timer_interrupt_req$FULL_N && rg_state &&
	     rg_mtip !=
	     NOT_crg_time_port0__read__00_ULT_crg_timecmp_p_ETC___d511 &&
	     !f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_rl_compare = CAN_FIRE_RL_rl_compare ;

  // rule RL_rl_tick_timer
  assign CAN_FIRE_RL_rl_tick_timer =
	     rg_state && crg_time != 64'hFFFFFFFFFFFFFFFF &&
	     !f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_rl_tick_timer = CAN_FIRE_RL_rl_tick_timer ;

  // rule RL_rl_process_wr_req
  assign CAN_FIRE_RL_rl_process_wr_req =
	     !slave_xactor_clearing && slave_xactor_shim_awff$EMPTY_N &&
	     slave_xactor_shim_awff_i_notEmpty__19_AND_slav_ETC___d639 &&
	     rg_state &&
	     !f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_rl_process_wr_req =
	     CAN_FIRE_RL_rl_process_wr_req && !WILL_FIRE_RL_rl_compare ;

  // rule RL_slave_xactor_ug_slave_u_aw_warnDoPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut =
	     slave_xactor_ug_slave_u_aw_putWire$whas &&
	     slave_xactor_widened_slave_shim_awff_rv[98] ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut ;

  // rule RL_slave_xactor_ug_slave_u_aw_doPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut =
	     !slave_xactor_widened_slave_shim_awff_rv[98] &&
	     slave_xactor_ug_slave_u_aw_putWire$whas ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut ;

  // rule RL_slave_xactor_ug_slave_u_w_warnDoPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut =
	     slave_xactor_ug_slave_u_w_putWire$whas &&
	     slave_xactor_widened_slave_shim_wff_rv[145] ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut ;

  // rule RL_slave_xactor_ug_slave_u_w_doPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_w_doPut =
	     !slave_xactor_widened_slave_shim_wff_rv[145] &&
	     slave_xactor_ug_slave_u_w_putWire$whas ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_w_doPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_w_doPut ;

  // rule RL_slave_xactor_ug_slave_u_ar_warnDoPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut =
	     slave_xactor_ug_slave_u_ar_putWire$whas &&
	     slave_xactor_widened_slave_shim_arff_rv[98] ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut ;

  // rule RL_slave_xactor_ug_slave_u_ar_doPut
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut =
	     !slave_xactor_widened_slave_shim_arff_rv[98] &&
	     slave_xactor_ug_slave_u_ar_putWire$whas ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut ;

  // rule RL_slave_xactor_widened_slave_send_first_aw_w
  assign CAN_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w =
	     slave_xactor_widened_slave_shim_awff_rv$port1__read[98] &&
	     slave_xactor_widened_slave_shim_wff_rv$port1__read[145] &&
	     slave_xactor_shim_awff$FULL_N &&
	     slave_xactor_shim_wff$FULL_N &&
	     slave_xactor_widened_slave_drop_b_ff_i_notFull_ETC___d72 &&
	     (slave_xactor_widened_slave_lastWasRead ||
	      !slave_xactor_widened_slave_shim_arff_rv$port1__read[98]) &&
	     !slave_xactor_widened_slave_drop_b_ff$EMPTY_N &&
	     !slave_xactor_widened_slave_split_ar_ff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w =
	     CAN_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w ;

  // rule RL_slave_xactor_widened_slave_send_second_aw
  assign CAN_FIRE_RL_slave_xactor_widened_slave_send_second_aw =
	     slave_xactor_widened_slave_second_aw_firstValid$Q_OUT &&
	     (slave_xactor_widened_slave_second_aw_ff$EMPTY_N ||
	      slave_xactor_widened_slave_second_aw_enqw$whas) &&
	     slave_xactor_shim_awff$FULL_N &&
	     slave_xactor_widened_slave_drop_b_ff$FULL_N ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_send_second_aw =
	     CAN_FIRE_RL_slave_xactor_widened_slave_send_second_aw &&
	     !WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w ;

  // rule RL_slave_xactor_widened_slave_send_second_w
  assign CAN_FIRE_RL_slave_xactor_widened_slave_send_second_w =
	     slave_xactor_widened_slave_second_w_firstValid$Q_OUT &&
	     (slave_xactor_widened_slave_second_w_ff$EMPTY_N ||
	      slave_xactor_widened_slave_second_aw_enqw$whas) &&
	     slave_xactor_shim_wff$FULL_N ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_send_second_w =
	     CAN_FIRE_RL_slave_xactor_widened_slave_send_second_w &&
	     !WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w ;

  // rule RL_slave_xactor_widened_slave_take_b
  assign CAN_FIRE_RL_slave_xactor_widened_slave_take_b =
	     slave_xactor_widened_slave_drop_b_firstValid$Q_OUT &&
	     (slave_xactor_widened_slave_drop_b_ff$EMPTY_N ||
	      slave_xactor_widened_slave_drop_b_enqw$whas) &&
	     slave_xactor_shim_bff$EMPTY_N &&
	     IF_slave_xactor_widened_slave_drop_b_ff_i_notE_ETC___d241 ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_take_b =
	     CAN_FIRE_RL_slave_xactor_widened_slave_take_b ;

  // rule RL_slave_xactor_widened_slave_send_first_ar
  assign CAN_FIRE_RL_slave_xactor_widened_slave_send_first_ar =
	     slave_xactor_widened_slave_shim_arff_rv$port1__read[98] &&
	     slave_xactor_shim_arff$FULL_N &&
	     slave_xactor_widened_slave_split_ar_ff$FULL_N &&
	     (slave_xactor_widened_slave_shim_arff_rv$port1__read[32] ||
	      slave_xactor_widened_slave_shim_arff_rv_port1__ETC___d261 ||
	      slave_xactor_widened_slave_second_ar_ff$FULL_N) &&
	     NOT_slave_xactor_widened_slave_lastWasRead_7_6_ETC___d273 ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar =
	     CAN_FIRE_RL_slave_xactor_widened_slave_send_first_ar ;

  // rule RL_slave_xactor_widened_slave_send_second_ar
  assign CAN_FIRE_RL_slave_xactor_widened_slave_send_second_ar =
	     slave_xactor_widened_slave_second_ar_firstValid$Q_OUT &&
	     (slave_xactor_widened_slave_second_ar_ff$EMPTY_N ||
	      slave_xactor_widened_slave_second_ar_enqw$whas) &&
	     slave_xactor_shim_arff$FULL_N ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_send_second_ar =
	     CAN_FIRE_RL_slave_xactor_widened_slave_send_second_ar &&
	     !WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar ;

  // rule RL_slave_xactor_widened_slave_receive_first_r
  assign CAN_FIRE_RL_slave_xactor_widened_slave_receive_first_r =
	     slave_xactor_widened_slave_split_ar_firstValid$Q_OUT &&
	     (slave_xactor_widened_slave_split_ar_ff$EMPTY_N ||
	      CAN_FIRE_RL_slave_xactor_widened_slave_send_first_ar) &&
	     slave_xactor_shim_rff_i_notEmpty__98_AND_IF_IF_ETC___d413 &&
	     !slave_xactor_widened_slave_first_r_ff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_receive_first_r =
	     CAN_FIRE_RL_slave_xactor_widened_slave_receive_first_r ;

  // rule RL_slave_xactor_widened_slave_receive_second_r
  assign CAN_FIRE_RL_slave_xactor_widened_slave_receive_second_r =
	     slave_xactor_widened_slave_first_r_firstValid$Q_OUT &&
	     (slave_xactor_widened_slave_first_r_ff$EMPTY_N ||
	      slave_xactor_widened_slave_first_r_enqw$whas) &&
	     (slave_xactor_widened_slave_split_ar_ff$EMPTY_N ||
	      CAN_FIRE_RL_slave_xactor_widened_slave_send_first_ar) &&
	     slave_xactor_shim_rff$EMPTY_N &&
	     !slave_xactor_widened_slave_shim_rff_rv[136] ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_receive_second_r =
	     CAN_FIRE_RL_slave_xactor_widened_slave_receive_second_r &&
	     !WILL_FIRE_RL_slave_xactor_widened_slave_receive_first_r ;

  // rule RL_slave_xactor_do_clear
  assign CAN_FIRE_RL_slave_xactor_do_clear = slave_xactor_clearing ;
  assign WILL_FIRE_RL_slave_xactor_do_clear = slave_xactor_clearing ;

  // rule RL_slave_xactor_widened_slave_second_aw_enqueue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_second_aw_enqueue =
	     slave_xactor_widened_slave_second_aw_enqw$whas &&
	     (!WILL_FIRE_RL_slave_xactor_widened_slave_send_second_aw ||
	      slave_xactor_widened_slave_second_aw_ff$EMPTY_N) ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_second_aw_enqueue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_aw_enqueue ;

  // rule RL_slave_xactor_widened_slave_second_aw_dequeue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_second_aw_dequeue =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_second_aw &&
	     slave_xactor_widened_slave_second_aw_ff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_second_aw_dequeue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_aw_dequeue ;

  // rule RL_slave_xactor_widened_slave_second_w_enqueue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_second_w_enqueue =
	     slave_xactor_widened_slave_second_aw_enqw$whas &&
	     (!WILL_FIRE_RL_slave_xactor_widened_slave_send_second_w ||
	      slave_xactor_widened_slave_second_w_ff$EMPTY_N) ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_second_w_enqueue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_w_enqueue ;

  // rule RL_slave_xactor_widened_slave_second_w_dequeue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_second_w_dequeue =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_second_w &&
	     slave_xactor_widened_slave_second_w_ff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_second_w_dequeue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_w_dequeue ;

  // rule RL_slave_xactor_widened_slave_drop_b_enqueue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_drop_b_enqueue =
	     slave_xactor_widened_slave_drop_b_enqw$whas &&
	     (!CAN_FIRE_RL_slave_xactor_widened_slave_take_b ||
	      slave_xactor_widened_slave_drop_b_ff$EMPTY_N) ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_drop_b_enqueue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_drop_b_enqueue ;

  // rule RL_slave_xactor_widened_slave_drop_b_dequeue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_drop_b_dequeue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_take_b &&
	     slave_xactor_widened_slave_drop_b_ff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_drop_b_dequeue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_drop_b_dequeue ;

  // rule RL_slave_xactor_widened_slave_second_ar_enqueue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_second_ar_enqueue =
	     slave_xactor_widened_slave_second_ar_enqw$whas &&
	     (!WILL_FIRE_RL_slave_xactor_widened_slave_send_second_ar ||
	      slave_xactor_widened_slave_second_ar_ff$EMPTY_N) ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_second_ar_enqueue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_ar_enqueue ;

  // rule RL_slave_xactor_widened_slave_second_ar_dequeue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_second_ar_dequeue =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_second_ar &&
	     slave_xactor_widened_slave_second_ar_ff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_second_ar_dequeue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_ar_dequeue ;

  // rule RL_slave_xactor_widened_slave_split_ar_enqueue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_split_ar_enqueue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	     (!slave_xactor_widened_slave_split_ar_dequeueing$whas ||
	      slave_xactor_widened_slave_split_ar_ff$EMPTY_N) ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_split_ar_enqueue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_split_ar_enqueue ;

  // rule RL_slave_xactor_widened_slave_split_ar_dequeue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_split_ar_dequeue =
	     slave_xactor_widened_slave_split_ar_dequeueing$whas &&
	     slave_xactor_widened_slave_split_ar_ff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_split_ar_dequeue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_split_ar_dequeue ;

  // rule RL_slave_xactor_widened_slave_first_r_enqueue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_first_r_enqueue =
	     slave_xactor_widened_slave_first_r_enqw$whas &&
	     (!WILL_FIRE_RL_slave_xactor_widened_slave_receive_second_r ||
	      slave_xactor_widened_slave_first_r_ff$EMPTY_N) ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_first_r_enqueue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_first_r_enqueue ;

  // rule RL_slave_xactor_widened_slave_first_r_dequeue
  assign CAN_FIRE_RL_slave_xactor_widened_slave_first_r_dequeue =
	     WILL_FIRE_RL_slave_xactor_widened_slave_receive_second_r &&
	     slave_xactor_widened_slave_first_r_ff$EMPTY_N ;
  assign WILL_FIRE_RL_slave_xactor_widened_slave_first_r_dequeue =
	     CAN_FIRE_RL_slave_xactor_widened_slave_first_r_dequeue ;

  // rule RL_slave_xactor_ug_slave_u_b_setPeek
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_b_setPeek =
	     slave_xactor_widened_slave_shim_bff_rv$port1__read[7] ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_b_setPeek =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_b_setPeek ;

  // rule RL_slave_xactor_ug_slave_u_b_warnDoDrop
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop =
	     slave_xactor_ug_slave_u_b_dropWire$whas &&
	     !slave_xactor_widened_slave_shim_bff_rv$port1__read[7] ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop ;

  // rule RL_slave_xactor_ug_slave_u_b_doDrop
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop =
	     slave_xactor_widened_slave_shim_bff_rv$port1__read[7] &&
	     slave_xactor_ug_slave_u_b_dropWire$whas ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop ;

  // rule RL_slave_xactor_ug_slave_u_r_setPeek
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_r_setPeek =
	     slave_xactor_widened_slave_shim_rff_rv$port1__read[136] ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_r_setPeek =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_r_setPeek ;

  // rule RL_slave_xactor_ug_slave_u_r_warnDoDrop
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop =
	     slave_xactor_ug_slave_u_r_dropWire$whas &&
	     !slave_xactor_widened_slave_shim_rff_rv$port1__read[136] ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop ;

  // rule RL_slave_xactor_ug_slave_u_r_doDrop
  assign CAN_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop =
	     slave_xactor_widened_slave_shim_rff_rv$port1__read[136] &&
	     slave_xactor_ug_slave_u_r_dropWire$whas ;
  assign WILL_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop ;

  // inputs to muxes for submodule ports
  assign MUX_crg_time$port1__write_1__SEL_1 =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	     (byte_addr__h13468 == 64'h000000000000BFF8 ||
	      byte_addr__h13468 == 64'h000000000000BFFC) ;
  assign MUX_crg_timecmp$port1__write_1__SEL_1 =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	     (byte_addr__h13468 == 64'h0000000000004000 ||
	      byte_addr__h13468 == 64'h0000000000004004) ;
  assign MUX_rg_msip$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	     byte_addr__h13468 == 64'h0 &&
	     !rg_msip_94_EQ_slave_xactor_shim_wff_first__29__ETC___d631 ;
  assign MUX_slave_xactor_widened_slave_shim_rff_rv$port0__write_1__SEL_1 =
	     WILL_FIRE_RL_slave_xactor_widened_slave_receive_first_r &&
	     (IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401 ==
	      2'd1 ||
	      IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401 ==
	      2'd2) ;
  assign MUX_slave_xactor_shim_arff$enq_1__VAL_1 =
	     { slave_xactor_widened_slave_shim_arff_rv$port1__read[97:21],
	       (!slave_xactor_widened_slave_shim_arff_rv$port1__read[32] &&
		!slave_xactor_widened_slave_shim_arff_rv_port1__ETC___d261) ?
		 CASE_sz963_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q2 :
		 slave_xactor_widened_slave_shim_arff_rv$port1__read[20:18],
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[17:0] } ;
  assign MUX_slave_xactor_shim_arff$enq_1__VAL_2 =
	     slave_xactor_widened_slave_second_ar_ff$EMPTY_N ?
	       slave_xactor_widened_slave_second_ar_ff$D_OUT :
	       slave_xactor_widened_slave_second_ar_enqw$wget ;
  assign MUX_slave_xactor_shim_awff$enq_1__VAL_1 =
	     { slave_xactor_widened_slave_shim_awff_rv$port1__read[97:21],
	       (!slave_xactor_widened_slave_shim_awff_rv$port1__read[32] &&
		!slave_xactor_widened_slave_shim_awff_rv_port1__ETC___d66) ?
		 CASE_sz489_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q1 :
		 slave_xactor_widened_slave_shim_awff_rv$port1__read[20:18],
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[17:0] } ;
  assign MUX_slave_xactor_shim_awff$enq_1__VAL_2 =
	     slave_xactor_widened_slave_second_aw_ff$EMPTY_N ?
	       slave_xactor_widened_slave_second_aw_ff$D_OUT :
	       slave_xactor_widened_slave_second_aw_enqw$wget ;
  assign MUX_slave_xactor_shim_wff$enq_1__VAL_1 =
	     { new_w_wdata__h5333, new_w_wstrb__h5334, 1'd1 } ;
  assign MUX_slave_xactor_shim_wff$enq_1__VAL_2 =
	     slave_xactor_widened_slave_second_w_ff$EMPTY_N ?
	       slave_xactor_widened_slave_second_w_ff$D_OUT :
	       slave_xactor_widened_slave_second_w_enqw$wget ;
  assign MUX_slave_xactor_widened_slave_drop_b_enqw$wset_1__VAL_1 =
	     !slave_xactor_widened_slave_shim_awff_rv$port1__read[32] &&
	     !slave_xactor_widened_slave_shim_awff_rv_port1__ETC___d66 ;
  assign MUX_slave_xactor_widened_slave_shim_rff_rv$port0__write_1__VAL_1 =
	     { 1'd1,
	       slave_xactor_shim_rff$D_OUT[71:67],
	       (IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401 ==
		2'd1) ?
		 { v_rdata__h8635, slave_xactor_shim_rff$D_OUT[2:0] } :
		 { 64'd0, slave_xactor_shim_rff$D_OUT[66:0] } } ;
  assign MUX_slave_xactor_widened_slave_shim_rff_rv$port0__write_1__VAL_2 =
	     { 1'd1,
	       slave_xactor_shim_rff$D_OUT[71:67],
	       new_r_rdata__h9127,
	       slave_xactor_shim_rff$D_OUT[2:0] } ;

  // inlined wires
  assign slave_xactor_widened_slave_second_aw_enqw$wget =
	     { slave_xactor_widened_slave_shim_awff_rv$port1__read[97:93],
	       x_awaddr__h5638,
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21],
	       new_aw_2_awsize_val__h5669,
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[17:0] } ;
  assign slave_xactor_widened_slave_second_aw_enqw$whas =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	     !slave_xactor_widened_slave_shim_awff_rv$port1__read[32] &&
	     !slave_xactor_widened_slave_shim_awff_rv_port1__ETC___d66 ;
  assign slave_xactor_widened_slave_second_w_enqw$wget =
	     { slave_xactor_widened_slave_shim_wff_rv$port1__read[144:81],
	       slave_xactor_widened_slave_shim_wff_rv$port1__read[16:9],
	       1'd1 } ;
  assign slave_xactor_widened_slave_drop_b_enqw$wget =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	     MUX_slave_xactor_widened_slave_drop_b_enqw$wset_1__VAL_1 ;
  assign slave_xactor_widened_slave_drop_b_enqw$whas =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w ||
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_second_aw ;
  assign slave_xactor_widened_slave_second_ar_enqw$wget =
	     { slave_xactor_widened_slave_shim_arff_rv$port1__read[97:93],
	       x_araddr__h7725,
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21],
	       new_ar_2_arsize_val__h7756,
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[17:0] } ;
  assign slave_xactor_widened_slave_second_ar_enqw$whas =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	     !slave_xactor_widened_slave_shim_arff_rv$port1__read[32] &&
	     !slave_xactor_widened_slave_shim_arff_rv_port1__ETC___d261 ;
  assign slave_xactor_widened_slave_split_ar_enqw$wget =
	     (!slave_xactor_widened_slave_shim_arff_rv$port1__read[32] &&
	      !slave_xactor_widened_slave_shim_arff_rv_port1__ETC___d261) ?
	       2'd0 :
	       (slave_xactor_widened_slave_shim_arff_rv$port1__read[32] ?
		  2'd1 :
		  2'd2) ;
  assign slave_xactor_widened_slave_first_r_enqw$whas =
	     WILL_FIRE_RL_slave_xactor_widened_slave_receive_first_r &&
	     IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401 ==
	     2'd0 ;
  assign slave_xactor_ug_slave_u_aw_putWire$wget =
	     { axi4_slave_awid,
	       axi4_slave_awaddr,
	       axi4_slave_awlen,
	       axi4_slave_awsize,
	       axi4_slave_awburst,
	       axi4_slave_awlock,
	       axi4_slave_awcache,
	       axi4_slave_awprot,
	       axi4_slave_awqos,
	       axi4_slave_awregion } ;
  assign slave_xactor_ug_slave_u_aw_putWire$whas =
	     axi4_slave_awvalid &&
	     !slave_xactor_widened_slave_shim_awff_rv[98] ;
  assign slave_xactor_ug_slave_u_w_putWire$wget =
	     { axi4_slave_wdata,
	       axi4_slave_wstrb,
	       axi4_slave_wlast,
	       axi4_slave_wuser } ;
  assign slave_xactor_ug_slave_u_w_putWire$whas =
	     axi4_slave_wvalid &&
	     !slave_xactor_widened_slave_shim_wff_rv[145] ;
  assign slave_xactor_ug_slave_u_ar_putWire$wget =
	     { axi4_slave_arid,
	       axi4_slave_araddr,
	       axi4_slave_arlen,
	       axi4_slave_arsize,
	       axi4_slave_arburst,
	       axi4_slave_arlock,
	       axi4_slave_arcache,
	       axi4_slave_arprot,
	       axi4_slave_arqos,
	       axi4_slave_arregion } ;
  assign slave_xactor_ug_slave_u_ar_putWire$whas =
	     axi4_slave_arvalid &&
	     !slave_xactor_widened_slave_shim_arff_rv[98] ;
  assign slave_xactor_ug_slave_u_r_peekWire$wget =
	     { slave_xactor_widened_slave_shim_rff_rv$port1__read[135:0],
	       2'd0 } ;
  assign slave_xactor_widened_slave_split_ar_dequeueing$whas =
	     WILL_FIRE_RL_slave_xactor_widened_slave_receive_first_r &&
	     (IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401 ==
	      2'd1 ||
	      IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401 ==
	      2'd2) ||
	     WILL_FIRE_RL_slave_xactor_widened_slave_receive_second_r ;
  assign slave_xactor_ug_slave_u_b_dropWire$whas =
	     slave_xactor_widened_slave_shim_bff_rv$port1__read[7] &&
	     axi4_slave_bready ;
  assign slave_xactor_ug_slave_u_r_dropWire$whas =
	     slave_xactor_widened_slave_shim_rff_rv$port1__read[136] &&
	     axi4_slave_rready ;
  assign slave_xactor_widened_slave_shim_awff_rv$port0__write_1 =
	     { 1'd1, slave_xactor_ug_slave_u_aw_putWire$wget } ;
  assign slave_xactor_widened_slave_shim_awff_rv$port1__read =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_aw_doPut ?
	       slave_xactor_widened_slave_shim_awff_rv$port0__write_1 :
	       slave_xactor_widened_slave_shim_awff_rv ;
  assign slave_xactor_widened_slave_shim_awff_rv$port2__read =
	     CAN_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w ?
	       99'h2AAAAAAAAAAAAAAAAAAAAAAAA :
	       slave_xactor_widened_slave_shim_awff_rv$port1__read ;
  assign slave_xactor_widened_slave_shim_wff_rv$port0__write_1 =
	     { 1'd1, slave_xactor_ug_slave_u_w_putWire$wget[146:2] } ;
  assign slave_xactor_widened_slave_shim_wff_rv$port1__read =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_w_doPut ?
	       slave_xactor_widened_slave_shim_wff_rv$port0__write_1 :
	       slave_xactor_widened_slave_shim_wff_rv ;
  assign slave_xactor_widened_slave_shim_wff_rv$port2__read =
	     CAN_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w ?
	       146'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       slave_xactor_widened_slave_shim_wff_rv$port1__read ;
  assign slave_xactor_widened_slave_shim_bff_rv$EN_port0__write =
	     WILL_FIRE_RL_slave_xactor_widened_slave_take_b &&
	     (slave_xactor_widened_slave_drop_b_ff$EMPTY_N ?
		!slave_xactor_widened_slave_drop_b_ff$D_OUT :
		!slave_xactor_widened_slave_drop_b_enqw$wget) ;
  assign slave_xactor_widened_slave_shim_bff_rv$port0__write_1 =
	     { 1'd1, slave_xactor_shim_bff$D_OUT } ;
  assign slave_xactor_widened_slave_shim_bff_rv$port1__read =
	     slave_xactor_widened_slave_shim_bff_rv$EN_port0__write ?
	       slave_xactor_widened_slave_shim_bff_rv$port0__write_1 :
	       slave_xactor_widened_slave_shim_bff_rv ;
  assign slave_xactor_widened_slave_shim_bff_rv$port2__read =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_b_doDrop ?
	       8'd42 :
	       slave_xactor_widened_slave_shim_bff_rv$port1__read ;
  assign slave_xactor_widened_slave_shim_arff_rv$port0__write_1 =
	     { 1'd1, slave_xactor_ug_slave_u_ar_putWire$wget } ;
  assign slave_xactor_widened_slave_shim_arff_rv$port1__read =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_ar_doPut ?
	       slave_xactor_widened_slave_shim_arff_rv$port0__write_1 :
	       slave_xactor_widened_slave_shim_arff_rv ;
  assign slave_xactor_widened_slave_shim_arff_rv$port2__read =
	     CAN_FIRE_RL_slave_xactor_widened_slave_send_first_ar ?
	       99'h2AAAAAAAAAAAAAAAAAAAAAAAA :
	       slave_xactor_widened_slave_shim_arff_rv$port1__read ;
  assign slave_xactor_widened_slave_shim_rff_rv$EN_port0__write =
	     WILL_FIRE_RL_slave_xactor_widened_slave_receive_first_r &&
	     (IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401 ==
	      2'd1 ||
	      IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401 ==
	      2'd2) ||
	     WILL_FIRE_RL_slave_xactor_widened_slave_receive_second_r ;
  assign slave_xactor_widened_slave_shim_rff_rv$port0__write_1 =
	     MUX_slave_xactor_widened_slave_shim_rff_rv$port0__write_1__SEL_1 ?
	       MUX_slave_xactor_widened_slave_shim_rff_rv$port0__write_1__VAL_1 :
	       MUX_slave_xactor_widened_slave_shim_rff_rv$port0__write_1__VAL_2 ;
  assign slave_xactor_widened_slave_shim_rff_rv$port1__read =
	     slave_xactor_widened_slave_shim_rff_rv$EN_port0__write ?
	       slave_xactor_widened_slave_shim_rff_rv$port0__write_1 :
	       slave_xactor_widened_slave_shim_rff_rv ;
  assign slave_xactor_widened_slave_shim_rff_rv$port2__read =
	     CAN_FIRE_RL_slave_xactor_ug_slave_u_r_doDrop ?
	       137'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       slave_xactor_widened_slave_shim_rff_rv$port1__read ;
  assign crg_time$port0__write_1 = crg_time + 64'd1 ;
  assign crg_time$EN_port1__write =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	     (byte_addr__h13468 == 64'h000000000000BFF8 ||
	      byte_addr__h13468 == 64'h000000000000BFFC) ||
	     WILL_FIRE_RL_rl_reset ;
  assign crg_time$port1__write_1 =
	     MUX_crg_time$port1__write_1__SEL_1 ? new_time__h15198 : 64'd1 ;
  assign crg_time$port2__read =
	     crg_time$EN_port1__write ?
	       crg_time$port1__write_1 :
	       old_time__h17757 ;
  assign crg_timecmp$EN_port1__write =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	     (byte_addr__h13468 == 64'h0000000000004000 ||
	      byte_addr__h13468 == 64'h0000000000004004) ||
	     WILL_FIRE_RL_rl_reset ;
  assign crg_timecmp$port1__write_1 =
	     MUX_crg_timecmp$port1__write_1__SEL_1 ?
	       new_timecmp__h13910 :
	       64'd0 ;
  assign crg_timecmp$port2__read =
	     crg_timecmp$EN_port1__write ?
	       crg_timecmp$port1__write_1 :
	       crg_timecmp ;

  // register cfg_verbosity
  assign cfg_verbosity$D_IN = 4'h0 ;
  assign cfg_verbosity$EN = 1'b0 ;

  // register crg_time
  assign crg_time$D_IN = crg_time$port2__read ;
  assign crg_time$EN = 1'b1 ;

  // register crg_timecmp
  assign crg_timecmp$D_IN = crg_timecmp$port2__read ;
  assign crg_timecmp$EN = 1'b1 ;

  // register rg_addr_base
  assign rg_addr_base$D_IN = set_addr_map_addr_base ;
  assign rg_addr_base$EN = EN_set_addr_map ;

  // register rg_addr_lim
  assign rg_addr_lim$D_IN = set_addr_map_addr_lim ;
  assign rg_addr_lim$EN = EN_set_addr_map ;

  // register rg_msip
  assign rg_msip$D_IN =
	     MUX_rg_msip$write_1__SEL_1 && slave_xactor_shim_wff$D_OUT[9] ;
  assign rg_msip$EN =
	     WILL_FIRE_RL_rl_process_wr_req &&
	     !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	     byte_addr__h13468 == 64'h0 &&
	     !rg_msip_94_EQ_slave_xactor_shim_wff_first__29__ETC___d631 ||
	     WILL_FIRE_RL_rl_reset ;

  // register rg_mtip
  assign rg_mtip$D_IN =
	     !WILL_FIRE_RL_rl_compare ||
	     NOT_crg_time_port0__read__00_ULT_crg_timecmp_p_ETC___d511 ;
  assign rg_mtip$EN = WILL_FIRE_RL_rl_compare || WILL_FIRE_RL_rl_reset ;

  // register rg_state
  assign rg_state$D_IN = !WILL_FIRE_RL_rl_soft_reset ;
  assign rg_state$EN = WILL_FIRE_RL_rl_soft_reset || WILL_FIRE_RL_rl_reset ;

  // register slave_xactor_clearing
  assign slave_xactor_clearing$D_IN = !slave_xactor_clearing ;
  assign slave_xactor_clearing$EN =
	     slave_xactor_clearing || WILL_FIRE_RL_rl_reset ;

  // register slave_xactor_widened_slave_lastWasRead
  assign slave_xactor_widened_slave_lastWasRead$D_IN =
	     !WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w ;
  assign slave_xactor_widened_slave_lastWasRead$EN =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w ||
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar ;

  // register slave_xactor_widened_slave_shim_arff_rv
  assign slave_xactor_widened_slave_shim_arff_rv$D_IN =
	     slave_xactor_widened_slave_shim_arff_rv$port2__read ;
  assign slave_xactor_widened_slave_shim_arff_rv$EN = 1'b1 ;

  // register slave_xactor_widened_slave_shim_awff_rv
  assign slave_xactor_widened_slave_shim_awff_rv$D_IN =
	     slave_xactor_widened_slave_shim_awff_rv$port2__read ;
  assign slave_xactor_widened_slave_shim_awff_rv$EN = 1'b1 ;

  // register slave_xactor_widened_slave_shim_bff_rv
  assign slave_xactor_widened_slave_shim_bff_rv$D_IN =
	     slave_xactor_widened_slave_shim_bff_rv$port2__read ;
  assign slave_xactor_widened_slave_shim_bff_rv$EN = 1'b1 ;

  // register slave_xactor_widened_slave_shim_rff_rv
  assign slave_xactor_widened_slave_shim_rff_rv$D_IN =
	     slave_xactor_widened_slave_shim_rff_rv$port2__read ;
  assign slave_xactor_widened_slave_shim_rff_rv$EN = 1'b1 ;

  // register slave_xactor_widened_slave_shim_wff_rv
  assign slave_xactor_widened_slave_shim_wff_rv$D_IN =
	     slave_xactor_widened_slave_shim_wff_rv$port2__read ;
  assign slave_xactor_widened_slave_shim_wff_rv$EN = 1'b1 ;

  // submodule f_reset_reqs
  assign f_reset_reqs$ENQ = EN_server_reset_request_put ;
  assign f_reset_reqs$DEQ = CAN_FIRE_RL_rl_reset ;
  assign f_reset_reqs$CLR = 1'b0 ;

  // submodule f_reset_rsps
  assign f_reset_rsps$ENQ = CAN_FIRE_RL_rl_reset ;
  assign f_reset_rsps$DEQ = EN_server_reset_response_get ;
  assign f_reset_rsps$CLR = 1'b0 ;

  // submodule f_sw_interrupt_req
  assign f_sw_interrupt_req$D_IN = slave_xactor_shim_wff$D_OUT[9] ;
  assign f_sw_interrupt_req$ENQ = MUX_rg_msip$write_1__SEL_1 ;
  assign f_sw_interrupt_req$DEQ = EN_get_sw_interrupt_req_get ;
  assign f_sw_interrupt_req$CLR = CAN_FIRE_RL_rl_reset ;

  // submodule f_timer_interrupt_req
  assign f_timer_interrupt_req$D_IN =
	     NOT_crg_time_port0__read__00_ULT_crg_timecmp_p_ETC___d511 ;
  assign f_timer_interrupt_req$ENQ = CAN_FIRE_RL_rl_compare ;
  assign f_timer_interrupt_req$DEQ = EN_get_timer_interrupt_req_get ;
  assign f_timer_interrupt_req$CLR = CAN_FIRE_RL_rl_reset ;

  // submodule slave_xactor_shim_arff
  assign slave_xactor_shim_arff$D_IN =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar ?
	       MUX_slave_xactor_shim_arff$enq_1__VAL_1 :
	       MUX_slave_xactor_shim_arff$enq_1__VAL_2 ;
  assign slave_xactor_shim_arff$ENQ =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar ||
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_second_ar ;
  assign slave_xactor_shim_arff$DEQ = CAN_FIRE_RL_rl_process_rd_req ;
  assign slave_xactor_shim_arff$CLR = slave_xactor_clearing ;

  // submodule slave_xactor_shim_awff
  assign slave_xactor_shim_awff$D_IN =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w ?
	       MUX_slave_xactor_shim_awff$enq_1__VAL_1 :
	       MUX_slave_xactor_shim_awff$enq_1__VAL_2 ;
  assign slave_xactor_shim_awff$ENQ =
	     slave_xactor_widened_slave_drop_b_enqw$whas ;
  assign slave_xactor_shim_awff$DEQ = WILL_FIRE_RL_rl_process_wr_req ;
  assign slave_xactor_shim_awff$CLR = slave_xactor_clearing ;

  // submodule slave_xactor_shim_bff
  assign slave_xactor_shim_bff$D_IN =
	     { slave_xactor_shim_awff$D_OUT[97:93],
	       slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ?
		 2'd3 :
		 CASE_byte_addr3468_0x0_0_0x4_0_0x4000_0_0x4004_ETC__q5 } ;
  assign slave_xactor_shim_bff$ENQ = WILL_FIRE_RL_rl_process_wr_req ;
  assign slave_xactor_shim_bff$DEQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_take_b ;
  assign slave_xactor_shim_bff$CLR = slave_xactor_clearing ;

  // submodule slave_xactor_shim_rff
  assign slave_xactor_shim_rff$D_IN =
	     { slave_xactor_shim_arff$D_OUT[97:93],
	       x__h12792,
	       slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ?
		 2'd3 :
		 CASE_byte_addr2381_0x0_0_0x4_0_0x4000_0_0x4004_ETC__q6,
	       1'd1 } ;
  assign slave_xactor_shim_rff$ENQ = CAN_FIRE_RL_rl_process_rd_req ;
  assign slave_xactor_shim_rff$DEQ =
	     WILL_FIRE_RL_slave_xactor_widened_slave_receive_second_r ||
	     WILL_FIRE_RL_slave_xactor_widened_slave_receive_first_r ;
  assign slave_xactor_shim_rff$CLR = slave_xactor_clearing ;

  // submodule slave_xactor_shim_wff
  assign slave_xactor_shim_wff$D_IN =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w ?
	       MUX_slave_xactor_shim_wff$enq_1__VAL_1 :
	       MUX_slave_xactor_shim_wff$enq_1__VAL_2 ;
  assign slave_xactor_shim_wff$ENQ =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w ||
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_second_w ;
  assign slave_xactor_shim_wff$DEQ = WILL_FIRE_RL_rl_process_wr_req ;
  assign slave_xactor_shim_wff$CLR = slave_xactor_clearing ;

  // submodule slave_xactor_widened_slave_drop_b_ff
  assign slave_xactor_widened_slave_drop_b_ff$D_IN =
	     slave_xactor_widened_slave_drop_b_enqw$wget ;
  assign slave_xactor_widened_slave_drop_b_ff$ENQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_drop_b_enqueue ;
  assign slave_xactor_widened_slave_drop_b_ff$DEQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_drop_b_dequeue ;
  assign slave_xactor_widened_slave_drop_b_ff$CLR = 1'b0 ;

  // submodule slave_xactor_widened_slave_drop_b_firstValid
  assign slave_xactor_widened_slave_drop_b_firstValid$D_IN = 1'd1 ;
  assign slave_xactor_widened_slave_drop_b_firstValid$EN =
	     CAN_FIRE_RL_slave_xactor_widened_slave_take_b ;

  // submodule slave_xactor_widened_slave_first_r_ff
  assign slave_xactor_widened_slave_first_r_ff$D_IN =
	     slave_xactor_shim_rff$D_OUT[66:3] ;
  assign slave_xactor_widened_slave_first_r_ff$ENQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_first_r_enqueue ;
  assign slave_xactor_widened_slave_first_r_ff$DEQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_first_r_dequeue ;
  assign slave_xactor_widened_slave_first_r_ff$CLR = 1'b0 ;

  // submodule slave_xactor_widened_slave_first_r_firstValid
  assign slave_xactor_widened_slave_first_r_firstValid$D_IN = 1'd1 ;
  assign slave_xactor_widened_slave_first_r_firstValid$EN =
	     WILL_FIRE_RL_slave_xactor_widened_slave_receive_second_r ;

  // submodule slave_xactor_widened_slave_second_ar_ff
  assign slave_xactor_widened_slave_second_ar_ff$D_IN =
	     slave_xactor_widened_slave_second_ar_enqw$wget ;
  assign slave_xactor_widened_slave_second_ar_ff$ENQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_ar_enqueue ;
  assign slave_xactor_widened_slave_second_ar_ff$DEQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_ar_dequeue ;
  assign slave_xactor_widened_slave_second_ar_ff$CLR = 1'b0 ;

  // submodule slave_xactor_widened_slave_second_ar_firstValid
  assign slave_xactor_widened_slave_second_ar_firstValid$D_IN = 1'd1 ;
  assign slave_xactor_widened_slave_second_ar_firstValid$EN =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_second_ar ;

  // submodule slave_xactor_widened_slave_second_aw_ff
  assign slave_xactor_widened_slave_second_aw_ff$D_IN =
	     slave_xactor_widened_slave_second_aw_enqw$wget ;
  assign slave_xactor_widened_slave_second_aw_ff$ENQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_aw_enqueue ;
  assign slave_xactor_widened_slave_second_aw_ff$DEQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_aw_dequeue ;
  assign slave_xactor_widened_slave_second_aw_ff$CLR = 1'b0 ;

  // submodule slave_xactor_widened_slave_second_aw_firstValid
  assign slave_xactor_widened_slave_second_aw_firstValid$D_IN = 1'd1 ;
  assign slave_xactor_widened_slave_second_aw_firstValid$EN =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_second_aw ;

  // submodule slave_xactor_widened_slave_second_w_ff
  assign slave_xactor_widened_slave_second_w_ff$D_IN =
	     slave_xactor_widened_slave_second_w_enqw$wget ;
  assign slave_xactor_widened_slave_second_w_ff$ENQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_w_enqueue ;
  assign slave_xactor_widened_slave_second_w_ff$DEQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_second_w_dequeue ;
  assign slave_xactor_widened_slave_second_w_ff$CLR = 1'b0 ;

  // submodule slave_xactor_widened_slave_second_w_firstValid
  assign slave_xactor_widened_slave_second_w_firstValid$D_IN = 1'd1 ;
  assign slave_xactor_widened_slave_second_w_firstValid$EN =
	     WILL_FIRE_RL_slave_xactor_widened_slave_send_second_w ;

  // submodule slave_xactor_widened_slave_split_ar_ff
  assign slave_xactor_widened_slave_split_ar_ff$D_IN =
	     slave_xactor_widened_slave_split_ar_enqw$wget ;
  assign slave_xactor_widened_slave_split_ar_ff$ENQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_split_ar_enqueue ;
  assign slave_xactor_widened_slave_split_ar_ff$DEQ =
	     CAN_FIRE_RL_slave_xactor_widened_slave_split_ar_dequeue ;
  assign slave_xactor_widened_slave_split_ar_ff$CLR = 1'b0 ;

  // submodule slave_xactor_widened_slave_split_ar_firstValid
  assign slave_xactor_widened_slave_split_ar_firstValid$D_IN = 1'd1 ;
  assign slave_xactor_widened_slave_split_ar_firstValid$EN =
	     slave_xactor_widened_slave_split_ar_dequeueing$whas ;

  // remaining internal signals
  assign IF_slave_xactor_widened_slave_drop_b_ff_i_notE_ETC___d241 =
	     (slave_xactor_widened_slave_drop_b_ff$EMPTY_N ?
		slave_xactor_widened_slave_drop_b_ff$D_OUT :
		slave_xactor_widened_slave_drop_b_enqw$wget) ||
	     !slave_xactor_widened_slave_shim_bff_rv[7] ;
  assign IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401 =
	     slave_xactor_widened_slave_split_ar_ff$EMPTY_N ?
	       slave_xactor_widened_slave_split_ar_ff$D_OUT :
	       slave_xactor_widened_slave_split_ar_enqw$wget ;
  assign NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332 =
	     sz__h7064 != 8'd1 && sz__h7064 != 8'd2 && sz__h7064 != 8'd4 &&
	     sz__h7064 != 8'd8 &&
	     sz__h7064 != 8'd16 &&
	     sz__h7064 != 8'd32 &&
	     sz__h7064 != 8'd64 &&
	     sz__h7064 != 8'd128 &&
	     !slave_xactor_widened_slave_shim_arff_rv$port1__read[32] &&
	     !slave_xactor_widened_slave_shim_arff_rv_port1__ETC___d261 ;
  assign NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144 =
	     sz__h4590 != 8'd1 && sz__h4590 != 8'd2 && sz__h4590 != 8'd4 &&
	     sz__h4590 != 8'd8 &&
	     sz__h4590 != 8'd16 &&
	     sz__h4590 != 8'd32 &&
	     sz__h4590 != 8'd64 &&
	     sz__h4590 != 8'd128 &&
	     !slave_xactor_widened_slave_shim_awff_rv$port1__read[32] &&
	     !slave_xactor_widened_slave_shim_awff_rv_port1__ETC___d66 ;
  assign NOT_cfg_verbosity_read__94_ULE_1_17___d518 = cfg_verbosity > 4'd1 ;
  assign NOT_crg_time_port0__read__00_ULT_crg_timecmp_p_ETC___d511 =
	     crg_time >= crg_timecmp ;
  assign NOT_slave_xactor_widened_slave_lastWasRead_7_6_ETC___d273 =
	     (!slave_xactor_widened_slave_lastWasRead ||
	      !slave_xactor_widened_slave_shim_awff_rv$port1__read[98] ||
	      !slave_xactor_widened_slave_shim_wff_rv$port1__read[145]) &&
	     !slave_xactor_widened_slave_drop_b_ff$EMPTY_N &&
	     !slave_xactor_widened_slave_split_ar_ff$EMPTY_N ;
  assign NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 =
	     !slave_xactor_widened_slave_shim_arff_rv$port1__read[32] &&
	     !slave_xactor_widened_slave_shim_arff_rv_port1__ETC___d261 &&
	     sz__h6963 != 8'd1 &&
	     sz__h6963 != 8'd2 &&
	     sz__h6963 != 8'd4 &&
	     sz__h6963 != 8'd8 &&
	     sz__h6963 != 8'd16 &&
	     sz__h6963 != 8'd32 &&
	     sz__h6963 != 8'd64 &&
	     sz__h6963 != 8'd128 ;
  assign NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 =
	     !slave_xactor_widened_slave_shim_awff_rv$port1__read[32] &&
	     !slave_xactor_widened_slave_shim_awff_rv_port1__ETC___d66 &&
	     sz__h4489 != 8'd1 &&
	     sz__h4489 != 8'd2 &&
	     sz__h4489 != 8'd4 &&
	     sz__h4489 != 8'd8 &&
	     sz__h4489 != 8'd16 &&
	     sz__h4489 != 8'd32 &&
	     sz__h4489 != 8'd64 &&
	     sz__h4489 != 8'd128 ;
  assign SEXT_slave_xactor_shim_wff_first__29_BIT_1_22___d723 =
	     {8{slave_xactor_shim_wff$D_OUT[1]}} ;
  assign SEXT_slave_xactor_shim_wff_first__29_BIT_2_19___d720 =
	     {8{slave_xactor_shim_wff$D_OUT[2]}} ;
  assign SEXT_slave_xactor_shim_wff_first__29_BIT_3_15___d716 =
	     {8{slave_xactor_shim_wff$D_OUT[3]}} ;
  assign SEXT_slave_xactor_shim_wff_first__29_BIT_4_12___d713 =
	     {8{slave_xactor_shim_wff$D_OUT[4]}} ;
  assign SEXT_slave_xactor_shim_wff_first__29_BIT_5_08___d709 =
	     {8{slave_xactor_shim_wff$D_OUT[5]}} ;
  assign SEXT_slave_xactor_shim_wff_first__29_BIT_6_05___d706 =
	     {8{slave_xactor_shim_wff$D_OUT[6]}} ;
  assign SEXT_slave_xactor_shim_wff_first__29_BIT_7_01___d702 =
	     {8{slave_xactor_shim_wff$D_OUT[7]}} ;
  assign SEXT_slave_xactor_shim_wff_first__29_BIT_8_98___d699 =
	     {8{slave_xactor_shim_wff$D_OUT[8]}} ;
  assign byte_addr__h12381 =
	     slave_xactor_shim_arff$D_OUT[92:29] - rg_addr_base ;
  assign byte_addr__h13468 =
	     slave_xactor_shim_awff$D_OUT[92:29] - rg_addr_base ;
  assign crg_timecmp_port1__read__97_AND_INV_SEXT_slave_ETC___d736 =
	     new_timecmp__h13910 - old_time__h17757 ;
  assign mask__h13941 =
	     { SEXT_slave_xactor_shim_wff_first__29_BIT_8_98___d699,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_7_01___d702,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_6_05___d706,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_5_08___d709,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_4_12___d713,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_3_15___d716,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_2_19___d720,
	       SEXT_slave_xactor_shim_wff_first__29_BIT_1_22___d723 } ;
  assign new_r_rdata__h9127 =
	     { slave_xactor_shim_rff$D_OUT[66:3], x_first__h4108 } ;
  assign new_time__h15198 = x__h15240 | y__h13953 ;
  assign new_timecmp__h13910 = x__h13952 | y__h13953 ;
  assign new_w_wdata__h5333 =
	     (!slave_xactor_widened_slave_shim_awff_rv$port1__read[32] &&
	      !slave_xactor_widened_slave_shim_awff_rv_port1__ETC___d66) ?
	       slave_xactor_widened_slave_shim_wff_rv$port1__read[80:17] :
	       (slave_xactor_widened_slave_shim_awff_rv$port1__read[32] ?
		  slave_xactor_widened_slave_shim_wff_rv$port1__read[144:81] :
		  slave_xactor_widened_slave_shim_wff_rv$port1__read[80:17]) ;
  assign new_w_wstrb__h5334 =
	     (!slave_xactor_widened_slave_shim_awff_rv$port1__read[32] &&
	      !slave_xactor_widened_slave_shim_awff_rv_port1__ETC___d66) ?
	       slave_xactor_widened_slave_shim_wff_rv$port1__read[8:1] :
	       (slave_xactor_widened_slave_shim_awff_rv$port1__read[32] ?
		  slave_xactor_widened_slave_shim_wff_rv$port1__read[16:9] :
		  slave_xactor_widened_slave_shim_wff_rv$port1__read[8:1]) ;
  assign old_time__h17757 =
	     CAN_FIRE_RL_rl_tick_timer ? crg_time$port0__write_1 : crg_time ;
  assign rdata___1__h12570 = { 63'd0, rg_msip } ;
  assign rg_msip_94_EQ_slave_xactor_shim_wff_first__29__ETC___d631 =
	     rg_msip == slave_xactor_shim_wff$D_OUT[9] ;
  assign slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 =
	     slave_xactor_shim_arff$D_OUT[92:29] < rg_addr_base ;
  assign slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d591 =
	     (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	      byte_addr__h12381 != 64'h0 &&
	      byte_addr__h12381 != 64'h0000000000004000 &&
	      byte_addr__h12381 != 64'h000000000000BFF8 &&
	      byte_addr__h12381 != 64'h0000000000000004 &&
	      byte_addr__h12381 != 64'h0000000000004004 &&
	      byte_addr__h12381 != 64'h000000000000BFFC) &&
	     slave_xactor_shim_arff$D_OUT[17:16] != 2'd0 &&
	     slave_xactor_shim_arff$D_OUT[17:16] != 2'd1 &&
	     slave_xactor_shim_arff$D_OUT[17:16] != 2'd2 ;
  assign slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 =
	     slave_xactor_shim_awff$D_OUT[92:29] < rg_addr_base ;
  assign slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d768 =
	     (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	      byte_addr__h13468 != 64'h0 &&
	      byte_addr__h13468 != 64'h0000000000004000 &&
	      byte_addr__h13468 != 64'h000000000000BFF8 &&
	      byte_addr__h13468 != 64'h0000000000000004 &&
	      byte_addr__h13468 != 64'h0000000000004004 &&
	      byte_addr__h13468 != 64'h000000000000BFFC) &&
	     slave_xactor_shim_awff$D_OUT[17:16] != 2'd0 &&
	     slave_xactor_shim_awff$D_OUT[17:16] != 2'd1 &&
	     slave_xactor_shim_awff$D_OUT[17:16] != 2'd2 ;
  assign slave_xactor_shim_awff_i_notEmpty__19_AND_slav_ETC___d639 =
	     slave_xactor_shim_awff$EMPTY_N &&
	     slave_xactor_shim_wff$EMPTY_N &&
	     slave_xactor_shim_bff$FULL_N &&
	     (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	      byte_addr__h13468 != 64'h0 ||
	      rg_msip_94_EQ_slave_xactor_shim_wff_first__29__ETC___d631 ||
	      f_sw_interrupt_req$FULL_N) ;
  assign slave_xactor_shim_rff_i_notEmpty__98_AND_IF_IF_ETC___d413 =
	     slave_xactor_shim_rff$EMPTY_N &&
	     CASE_IF_slave_xactor_widened_slave_split_ar_ff_ETC__q4 ;
  assign slave_xactor_widened_slave_drop_b_ff_i_notFull_ETC___d72 =
	     slave_xactor_widened_slave_drop_b_ff$FULL_N &&
	     (slave_xactor_widened_slave_shim_awff_rv$port1__read[32] ||
	      slave_xactor_widened_slave_shim_awff_rv_port1__ETC___d66 ||
	      slave_xactor_widened_slave_second_aw_ff$FULL_N &&
	      slave_xactor_widened_slave_second_w_ff$FULL_N) ;
  assign slave_xactor_widened_slave_shim_arff_rv_port1__ETC___d261 =
	     slave_xactor_widened_slave_shim_arff_rv$port1__read[92:29] +
	     y__h6891 <=
	     x__h6926 + 64'd8 ;
  assign slave_xactor_widened_slave_shim_awff_rv_port1__ETC___d66 =
	     slave_xactor_widened_slave_shim_awff_rv$port1__read[92:29] +
	     y__h4406 <=
	     x__h4441 + 64'd8 ;
  assign slave_xactor_widened_slave_shim_bff_rvport1___ETC__q3 =
	     slave_xactor_widened_slave_shim_bff_rv$port1__read[6:0] ;
  assign sz__h4489 =
	     8'd8 -
	     { 5'd0,
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[31:29] } ;
  assign sz__h4590 = x__h4609 + y__h4610 ;
  assign sz__h6963 =
	     8'd8 -
	     { 5'd0,
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[31:29] } ;
  assign sz__h7064 = x__h7083 + y__h7084 ;
  assign v_rdata__h8635 = { slave_xactor_shim_rff$D_OUT[66:3], 64'd0 } ;
  assign x__h12792 =
	     slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ?
	       64'd0 :
	       _theResult___fst__h12574 ;
  assign x__h13952 = crg_timecmp & y__h13954 ;
  assign x__h15240 = old_time__h17757 & y__h13954 ;
  assign x__h4408 =
	     8'd1 <<
	     slave_xactor_widened_slave_shim_awff_rv$port1__read[20:18] ;
  assign x__h4441 =
	     { slave_xactor_widened_slave_shim_awff_rv$port1__read[92:32],
	       3'd0 } ;
  assign x__h4609 = x__h4408 - 8'd8 ;
  assign x__h6893 =
	     8'd1 <<
	     slave_xactor_widened_slave_shim_arff_rv$port1__read[20:18] ;
  assign x__h6926 =
	     { slave_xactor_widened_slave_shim_arff_rv$port1__read[92:32],
	       3'd0 } ;
  assign x__h7083 = x__h6893 - 8'd8 ;
  assign x_araddr__h7725 =
	     slave_xactor_widened_slave_shim_arff_rv$port1__read[92:29] +
	     64'd8 ;
  assign x_awaddr__h5638 =
	     slave_xactor_widened_slave_shim_awff_rv$port1__read[92:29] +
	     64'd8 ;
  assign x_first__h4108 =
	     slave_xactor_widened_slave_first_r_ff$EMPTY_N ?
	       slave_xactor_widened_slave_first_r_ff$D_OUT :
	       slave_xactor_shim_rff$D_OUT[66:3] ;
  assign y__h13953 = slave_xactor_shim_wff$D_OUT[72:9] & mask__h13941 ;
  assign y__h13954 =
	     { ~SEXT_slave_xactor_shim_wff_first__29_BIT_8_98___d699,
	       ~SEXT_slave_xactor_shim_wff_first__29_BIT_7_01___d702,
	       ~SEXT_slave_xactor_shim_wff_first__29_BIT_6_05___d706,
	       ~SEXT_slave_xactor_shim_wff_first__29_BIT_5_08___d709,
	       ~SEXT_slave_xactor_shim_wff_first__29_BIT_4_12___d713,
	       ~SEXT_slave_xactor_shim_wff_first__29_BIT_3_15___d716,
	       ~SEXT_slave_xactor_shim_wff_first__29_BIT_2_19___d720,
	       ~SEXT_slave_xactor_shim_wff_first__29_BIT_1_22___d723 } ;
  assign y__h4406 = { 56'd0, x__h4408 } ;
  assign y__h4610 =
	     { 4'd0,
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[32:29] } ;
  assign y__h6891 = { 56'd0, x__h6893 } ;
  assign y__h7084 =
	     { 4'd0,
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[32:29] } ;
  always@(byte_addr__h12381 or rdata___1__h12570 or crg_timecmp or crg_time)
  begin
    case (byte_addr__h12381)
      64'h0: _theResult___fst__h12574 = rdata___1__h12570;
      64'h0000000000000004: _theResult___fst__h12574 = 64'd0;
      64'h0000000000004000, 64'h0000000000004004:
	  _theResult___fst__h12574 = crg_timecmp;
      64'h000000000000BFF8, 64'h000000000000BFFC:
	  _theResult___fst__h12574 = crg_time;
      default: _theResult___fst__h12574 = 64'd0;
    endcase
  end
  always@(sz__h4590)
  begin
    case (sz__h4590)
      8'd1: new_aw_2_awsize_val__h5669 = 3'b0;
      8'd2: new_aw_2_awsize_val__h5669 = 3'b001;
      8'd4: new_aw_2_awsize_val__h5669 = 3'b010;
      8'd8: new_aw_2_awsize_val__h5669 = 3'b011;
      8'd16: new_aw_2_awsize_val__h5669 = 3'b100;
      8'd32: new_aw_2_awsize_val__h5669 = 3'b101;
      8'd64: new_aw_2_awsize_val__h5669 = 3'b110;
      default: new_aw_2_awsize_val__h5669 = 3'b111;
    endcase
  end
  always@(sz__h4489)
  begin
    case (sz__h4489)
      8'd1: CASE_sz489_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q1 = 3'b0;
      8'd2: CASE_sz489_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q1 = 3'b001;
      8'd4: CASE_sz489_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q1 = 3'b010;
      8'd8: CASE_sz489_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q1 = 3'b011;
      8'd16: CASE_sz489_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q1 = 3'b100;
      8'd32: CASE_sz489_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q1 = 3'b101;
      8'd64: CASE_sz489_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q1 = 3'b110;
      default: CASE_sz489_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q1 =
		   3'b111;
    endcase
  end
  always@(sz__h7064)
  begin
    case (sz__h7064)
      8'd1: new_ar_2_arsize_val__h7756 = 3'b0;
      8'd2: new_ar_2_arsize_val__h7756 = 3'b001;
      8'd4: new_ar_2_arsize_val__h7756 = 3'b010;
      8'd8: new_ar_2_arsize_val__h7756 = 3'b011;
      8'd16: new_ar_2_arsize_val__h7756 = 3'b100;
      8'd32: new_ar_2_arsize_val__h7756 = 3'b101;
      8'd64: new_ar_2_arsize_val__h7756 = 3'b110;
      default: new_ar_2_arsize_val__h7756 = 3'b111;
    endcase
  end
  always@(sz__h6963)
  begin
    case (sz__h6963)
      8'd1: CASE_sz963_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q2 = 3'b0;
      8'd2: CASE_sz963_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q2 = 3'b001;
      8'd4: CASE_sz963_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q2 = 3'b010;
      8'd8: CASE_sz963_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q2 = 3'b011;
      8'd16: CASE_sz963_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q2 = 3'b100;
      8'd32: CASE_sz963_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q2 = 3'b101;
      8'd64: CASE_sz963_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q2 = 3'b110;
      default: CASE_sz963_1_0b0_2_0b1_4_0b10_8_0b11_16_0b100__ETC__q2 =
		   3'b111;
    endcase
  end
  always@(IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401 or
	  slave_xactor_widened_slave_shim_rff_rv or
	  slave_xactor_widened_slave_first_r_ff$FULL_N)
  begin
    case (IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401)
      2'd0:
	  CASE_IF_slave_xactor_widened_slave_split_ar_ff_ETC__q4 =
	      slave_xactor_widened_slave_first_r_ff$FULL_N;
      2'd1:
	  CASE_IF_slave_xactor_widened_slave_split_ar_ff_ETC__q4 =
	      !slave_xactor_widened_slave_shim_rff_rv[136];
      default: CASE_IF_slave_xactor_widened_slave_split_ar_ff_ETC__q4 =
		   IF_slave_xactor_widened_slave_split_ar_ff_i_no_ETC___d401 !=
		   2'd2 ||
		   !slave_xactor_widened_slave_shim_rff_rv[136];
    endcase
  end
  always@(byte_addr__h13468)
  begin
    case (byte_addr__h13468)
      64'h0,
      64'h0000000000000004,
      64'h0000000000004000,
      64'h0000000000004004,
      64'h000000000000BFF8,
      64'h000000000000BFFC:
	  CASE_byte_addr3468_0x0_0_0x4_0_0x4000_0_0x4004_ETC__q5 = 2'd0;
      default: CASE_byte_addr3468_0x0_0_0x4_0_0x4000_0_0x4004_ETC__q5 = 2'd3;
    endcase
  end
  always@(byte_addr__h12381)
  begin
    case (byte_addr__h12381)
      64'h0,
      64'h0000000000000004,
      64'h0000000000004000,
      64'h0000000000004004,
      64'h000000000000BFF8,
      64'h000000000000BFFC:
	  CASE_byte_addr2381_0x0_0_0x4_0_0x4000_0_0x4004_ETC__q6 = 2'd0;
      default: CASE_byte_addr2381_0x0_0_0x4_0_0x4000_0_0x4004_ETC__q6 = 2'd3;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	crg_time <= `BSV_ASSIGNMENT_DELAY 64'd1;
	crg_timecmp <= `BSV_ASSIGNMENT_DELAY 64'd0;
	rg_mtip <= `BSV_ASSIGNMENT_DELAY 1'd1;
	rg_state <= `BSV_ASSIGNMENT_DELAY 1'd0;
	slave_xactor_clearing <= `BSV_ASSIGNMENT_DELAY 1'd0;
	slave_xactor_widened_slave_lastWasRead <= `BSV_ASSIGNMENT_DELAY 1'd0;
	slave_xactor_widened_slave_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	    99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
	slave_xactor_widened_slave_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	    99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
	slave_xactor_widened_slave_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY 8'd42;
	slave_xactor_widened_slave_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	    137'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	slave_xactor_widened_slave_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	    146'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
      end
    else
      begin
        if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (crg_time$EN) crg_time <= `BSV_ASSIGNMENT_DELAY crg_time$D_IN;
	if (crg_timecmp$EN)
	  crg_timecmp <= `BSV_ASSIGNMENT_DELAY crg_timecmp$D_IN;
	if (rg_mtip$EN) rg_mtip <= `BSV_ASSIGNMENT_DELAY rg_mtip$D_IN;
	if (rg_state$EN) rg_state <= `BSV_ASSIGNMENT_DELAY rg_state$D_IN;
	if (slave_xactor_clearing$EN)
	  slave_xactor_clearing <= `BSV_ASSIGNMENT_DELAY
	      slave_xactor_clearing$D_IN;
	if (slave_xactor_widened_slave_lastWasRead$EN)
	  slave_xactor_widened_slave_lastWasRead <= `BSV_ASSIGNMENT_DELAY
	      slave_xactor_widened_slave_lastWasRead$D_IN;
	if (slave_xactor_widened_slave_shim_arff_rv$EN)
	  slave_xactor_widened_slave_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	      slave_xactor_widened_slave_shim_arff_rv$D_IN;
	if (slave_xactor_widened_slave_shim_awff_rv$EN)
	  slave_xactor_widened_slave_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	      slave_xactor_widened_slave_shim_awff_rv$D_IN;
	if (slave_xactor_widened_slave_shim_bff_rv$EN)
	  slave_xactor_widened_slave_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	      slave_xactor_widened_slave_shim_bff_rv$D_IN;
	if (slave_xactor_widened_slave_shim_rff_rv$EN)
	  slave_xactor_widened_slave_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	      slave_xactor_widened_slave_shim_rff_rv$D_IN;
	if (slave_xactor_widened_slave_shim_wff_rv$EN)
	  slave_xactor_widened_slave_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	      slave_xactor_widened_slave_shim_wff_rv$D_IN;
      end
    if (rg_addr_base$EN)
      rg_addr_base <= `BSV_ASSIGNMENT_DELAY rg_addr_base$D_IN;
    if (rg_addr_lim$EN) rg_addr_lim <= `BSV_ASSIGNMENT_DELAY rg_addr_lim$D_IN;
    if (rg_msip$EN) rg_msip <= `BSV_ASSIGNMENT_DELAY rg_msip$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_verbosity = 4'hA;
    crg_time = 64'hAAAAAAAAAAAAAAAA;
    crg_timecmp = 64'hAAAAAAAAAAAAAAAA;
    rg_addr_base = 64'hAAAAAAAAAAAAAAAA;
    rg_addr_lim = 64'hAAAAAAAAAAAAAAAA;
    rg_msip = 1'h0;
    rg_mtip = 1'h0;
    rg_state = 1'h0;
    slave_xactor_clearing = 1'h0;
    slave_xactor_widened_slave_lastWasRead = 1'h0;
    slave_xactor_widened_slave_shim_arff_rv = 99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    slave_xactor_widened_slave_shim_awff_rv = 99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    slave_xactor_widened_slave_shim_bff_rv = 8'hAA;
    slave_xactor_widened_slave_shim_rff_rv =
	137'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    slave_xactor_widened_slave_shim_wff_rv =
	146'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_get_timer_interrupt_req_get &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	begin
	  v__h20341 = $stime;
	  #0;
	end
    v__h20335 = v__h20341 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_get_timer_interrupt_req_get &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("%0d: Near_Mem_IO_AXI4: get_timer_interrupt_req: %x",
		 v__h20335,
		 f_timer_interrupt_req$D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_get_sw_interrupt_req_get &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	begin
	  v__h20473 = $stime;
	  #0;
	end
    v__h20467 = v__h20473 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_get_sw_interrupt_req_get &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("%0d: Near_Mem_IO_AXI4: get_sw_interrupt_req: %x",
		 v__h20467,
		 f_sw_interrupt_req$D_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset && cfg_verbosity != 4'd0)
	begin
	  v__h11785 = $stime;
	  #0;
	end
    v__h11779 = v__h11785 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset && cfg_verbosity != 4'd0)
	$display("%0d: Near_Mem_IO_AXI4.rl_reset", v__h11779);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	begin
	  v__h12216 = $stime;
	  #0;
	end
    v__h12210 = v__h12216 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("%0d: Near_Mem_IO_AXI4.rl_process_rd_req: rg_mtip = %0d",
		 v__h12210,
		 rg_mtip);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_arff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  !slave_xactor_shim_arff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	begin
	  v__h12430 = $stime;
	  #0;
	end
    v__h12424 = v__h12430 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$display("%0d: ERROR: Near_Mem_IO_AXI4.rl_process_rd_req: unrecognized addr",
		 v__h12424);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 &&
	  slave_xactor_shim_arff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 &&
	  !slave_xactor_shim_arff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	begin
	  v__h12653 = $stime;
	  #0;
	end
    v__h12647 = v__h12653 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$display("%0d: ERROR: Near_Mem_IO_AXI4.rl_process_rd_req: unrecognized addr",
		 v__h12647);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC) &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC) &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC) &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d591)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC) &&
	  slave_xactor_shim_arff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC) &&
	  !slave_xactor_shim_arff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_arff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	begin
	  v__h12916 = $stime;
	  #0;
	end
    v__h12910 = v__h12916 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("%0d: Near_Mem_IO_AXI4.rl_process_rd_req", v__h12910);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_arff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_arff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_arff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  !slave_xactor_shim_arff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_arff$D_OUT[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", x__h12792);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  !slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 &&
	  (byte_addr__h12381 == 64'h0 ||
	   byte_addr__h12381 == 64'h0000000000004000 ||
	   byte_addr__h12381 == 64'h000000000000BFF8 ||
	   byte_addr__h12381 == 64'h0000000000000004 ||
	   byte_addr__h12381 == 64'h0000000000004004 ||
	   byte_addr__h12381 == 64'h000000000000BFFC))
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  (slave_xactor_shim_arff_first__31_BITS_92_TO_29_ETC___d558 ||
	   byte_addr__h12381 != 64'h0 &&
	   byte_addr__h12381 != 64'h0000000000004000 &&
	   byte_addr__h12381 != 64'h000000000000BFF8 &&
	   byte_addr__h12381 != 64'h0000000000000004 &&
	   byte_addr__h12381 != 64'h0000000000004004 &&
	   byte_addr__h12381 != 64'h000000000000BFFC))
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_rd_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_compare &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	begin
	  v__h12029 = $stime;
	  #0;
	end
    v__h12023 = v__h12029 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_compare &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("%0d: Near_Mem_IO_AXI4.rl_compare: new MTIP = %0d, time = %0d, timecmp = %0d",
		 v__h12023,
		 NOT_crg_time_port0__read__00_ULT_crg_timecmp_p_ETC___d511,
		 crg_time,
		 crg_timecmp);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	begin
	  v__h13251 = $stime;
	  #0;
	end
    v__h13245 = v__h13251 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("%0d: Near_Mem_IO_AXI4.rl_process_wr_req: rg_mtip = %0d",
		 v__h13245,
		 rg_mtip);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_awff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  !slave_xactor_shim_awff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_wff$D_OUT[72:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_wff$D_OUT[8:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_wff$D_OUT[0])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  !slave_xactor_shim_wff$D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	begin
	  v__h13507 = $stime;
	  #0;
	end
    v__h13501 = v__h13507 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$display("%0d: ERROR: Near_Mem_IO_AXI4.rl_process_wr_req: unrecognized addr",
		 v__h13501);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  slave_xactor_shim_awff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  !slave_xactor_shim_awff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", slave_xactor_shim_wff$D_OUT[72:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", slave_xactor_shim_wff$D_OUT[8:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  slave_xactor_shim_wff$D_OUT[0])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  !slave_xactor_shim_wff$D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h0 &&
	  !rg_msip_94_EQ_slave_xactor_shim_wff_first__29__ETC___d631 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("    new MSIP = %0d", slave_xactor_shim_wff$D_OUT[9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h0000000000004000 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("    Writing MTIMECMP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h0000000000004000 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        old MTIMECMP         = 0x%0h", crg_timecmp);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h0000000000004000 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        new MTIMECMP         = 0x%0h", new_timecmp__h13910);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h0000000000004000 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        cur MTIME            = 0x%0h", old_time__h17757);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h0000000000004000 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        new MTIMECMP - MTIME = 0x%0h",
		 crg_timecmp_port1__read__97_AND_INV_SEXT_slave_ETC___d736);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h000000000000BFF8 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("    Writing MTIME");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h000000000000BFF8 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        old MTIME = 0x%0h", old_time__h17757);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h000000000000BFF8 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        new MTIME = 0x%0h", new_time__h15198);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h0000000000004004 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("    Writing MTIMECMP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h0000000000004004 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        old MTIMECMP         = 0x%0h", crg_timecmp);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h0000000000004004 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        new MTIMECMP         = 0x%0h", new_timecmp__h13910);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h0000000000004004 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        cur MTIME            = 0x%0h", old_time__h17757);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h0000000000004004 &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        new MTIMECMP - MTIME = 0x%0h",
		 crg_timecmp_port1__read__97_AND_INV_SEXT_slave_ETC___d736);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h000000000000BFFC &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("    Writing MTIME");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h000000000000BFFC &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        old MTIME = 0x%0h", old_time__h17757);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  byte_addr__h13468 == 64'h000000000000BFFC &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("        new MTIME = 0x%0h", new_time__h15198);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	begin
	  v__h19075 = $stime;
	  #0;
	end
    v__h19069 = v__h19075 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$display("%0d: ERROR: Near_Mem_IO_AXI4.rl_process_wr_req: unrecognized addr",
		 v__h19069);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC) &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC) &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC) &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d768)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC) &&
	  slave_xactor_shim_awff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC) &&
	  !slave_xactor_shim_awff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_awff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_wff$D_OUT[72:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", slave_xactor_shim_wff$D_OUT[8:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC) &&
	  slave_xactor_shim_wff$D_OUT[0])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC) &&
	  !slave_xactor_shim_wff$D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	begin
	  v__h19321 = $stime;
	  #0;
	end
    v__h19315 = v__h19321 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$display("%0d: Near_Mem_IO.AXI4.rl_process_wr_req", v__h19315);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[20:18], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_awff$D_OUT[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd0 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd1 &&
	  slave_xactor_shim_awff$D_OUT[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_awff$D_OUT[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  !slave_xactor_shim_awff$D_OUT[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_wff$D_OUT[72:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_wff$D_OUT[8:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  slave_xactor_shim_wff$D_OUT[0])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  !slave_xactor_shim_wff$D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("            ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", slave_xactor_shim_awff$D_OUT[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  !slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 &&
	  (byte_addr__h13468 == 64'h0 ||
	   byte_addr__h13468 == 64'h0000000000004000 ||
	   byte_addr__h13468 == 64'h000000000000BFF8 ||
	   byte_addr__h13468 == 64'h0000000000000004 ||
	   byte_addr__h13468 == 64'h0000000000004004 ||
	   byte_addr__h13468 == 64'h000000000000BFFC))
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518 &&
	  (slave_xactor_shim_awff_first__23_BITS_92_TO_29_ETC___d625 ||
	   byte_addr__h13468 != 64'h0 &&
	   byte_addr__h13468 != 64'h0000000000004000 &&
	   byte_addr__h13468 != 64'h000000000000BFF8 &&
	   byte_addr__h13468 != 64'h0000000000000004 &&
	   byte_addr__h13468 != 64'h0000000000004004 &&
	   byte_addr__h13468 != 64'h000000000000BFFC))
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_process_wr_req &&
	  NOT_cfg_verbosity_read__94_ULE_1_17___d518)
	$write("\n");
    if (EN_set_addr_map && set_addr_map_addr_base[1:0] != 2'd0)
      begin
        v__h19692 = $stime;
	#0;
      end
    v__h19686 = v__h19692 / 32'd10;
    if (EN_set_addr_map && set_addr_map_addr_base[1:0] != 2'd0)
      $display("%0d: WARNING: Near_Mem_IO_AXI4.set_addr_map: addr_base 0x%0h is not 4-Byte-aligned",
	       v__h19686,
	       set_addr_map_addr_base);
    if (EN_set_addr_map && set_addr_map_addr_lim[1:0] != 2'd0)
      begin
        v__h19802 = $stime;
	#0;
      end
    v__h19796 = v__h19802 / 32'd10;
    if (EN_set_addr_map && set_addr_map_addr_lim[1:0] != 2'd0)
      $display("%0d: WARNING: Near_Mem_IO_AXI4.set_addr_map: addr_lim 0x%0h is not 4-Byte-aligned",
	       v__h19796,
	       set_addr_map_addr_lim);
    if (EN_set_addr_map)
      begin
        v__h19909 = $stime;
	#0;
      end
    v__h19903 = v__h19909 / 32'd10;
    if (EN_set_addr_map)
      $display("%0d: Near_Mem_IO_AXI4.set_addr_map: addr_base 0x%0h addr_lim 0x%0h",
	       v__h19903,
	       set_addr_map_addr_base,
	       set_addr_map_addr_lim);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_ug_slave_u_aw_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_ug_slave_u_w_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_ug_slave_u_ar_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("Error in toWider_AXI4_Slave: split aw transactions would not have power of two size - ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[20:18],
	       " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144) &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144) &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144) &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144) &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] !=
	  2'd0 &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] !=
	  2'd1 &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144) &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144) &&
	  !slave_xactor_widened_slave_shim_awff_rv$port1__read[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (NOT_slave_xactor_widened_slave_shim_awff_rv_po_ETC___d116 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_awff__ETC___d144))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("Error in toWider_AXI4_Slave: aw burst transaction attempted - not supported\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[20:18],
	       " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]) &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]) &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]) &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]) &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] !=
	  2'd0 &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] !=
	  2'd1 &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]) &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]) &&
	  !slave_xactor_widened_slave_shim_awff_rv$port1__read[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_awff_rv$port1__read[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_wff_rv$port1__read[144:17]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_wff_rv$port1__read[16:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	  8'd0 &&
	  slave_xactor_widened_slave_shim_wff_rv$port1__read[0])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  !slave_xactor_widened_slave_shim_wff_rv$port1__read[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_aw_w &&
	  (slave_xactor_widened_slave_shim_awff_rv$port1__read[28:21] !=
	   8'd0 ||
	   !slave_xactor_widened_slave_shim_wff_rv$port1__read[0]))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("Error in toWider_AXI4_Slave: split ar transactions would not have power of two size - ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[20:18],
	       " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332) &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332) &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332) &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332) &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] !=
	  2'd0 &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] !=
	  2'd1 &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332) &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332) &&
	  !slave_xactor_widened_slave_shim_arff_rv$port1__read[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  (NOT_slave_xactor_widened_slave_shim_arff_rv_po_ETC___d304 ||
	   NOT_1_SL_slave_xactor_widened_slave_shim_arff__ETC___d332))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("Error in toWider_AXI4_Slave: ar burst transaction attempted - not supported\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[97:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[20:18],
	       " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] !=
	  8'd0 &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] == 2'd0)
	$write("FIXED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] !=
	  8'd0 &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] == 2'd1)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] !=
	  8'd0 &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] == 2'd2)
	$write("WRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] !=
	  8'd0 &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] !=
	  2'd0 &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] !=
	  2'd1 &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[17:16] != 2'd2)
	$write("Res");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] !=
	  8'd0 &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[15])
	$write("EXCLUSIVE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] !=
	  8'd0 &&
	  !slave_xactor_widened_slave_shim_arff_rv$port1__read[15])
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("'h%h",
	       slave_xactor_widened_slave_shim_arff_rv$port1__read[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_send_first_ar &&
	  slave_xactor_widened_slave_shim_arff_rv$port1__read[28:21] != 8'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_receive_first_r &&
	  !slave_xactor_shim_rff$D_OUT[0])
	$display("Error in toWider_AXI4_Slave: r burst transaction attempted - not supported.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_receive_first_r &&
	  !slave_xactor_shim_rff$D_OUT[0])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_receive_second_r &&
	  !slave_xactor_shim_rff$D_OUT[0])
	$display("Error in toWider_AXI4_Slave: r burst transaction attempted - not supported.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_widened_slave_receive_second_r &&
	  !slave_xactor_shim_rff$D_OUT[0])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_ug_slave_u_b_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_slave_xactor_ug_slave_u_r_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
  end
  // synopsys translate_on
endmodule  // mkNear_Mem_IO_AXI4

