/*
 * Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
 * 
 * On Wed Aug 15 16:11:17 BST 2018
 * 
 */
#include "bluesim_primitives.h"
#include "mkBRVF_Core.h"


/* Constructor */
MOD_mkBRVF_Core::MOD_mkBRVF_Core(tSimStateHdl simHdl,
				 char const *name,
				 Module *parent,
				 tUInt64 ARG_pc_reset_value)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    PARAM_pc_reset_value(ARG_pc_reset_value),
    INST_cpu(simHdl, "cpu", this, ARG_pc_reset_value),
    INST_f_reset_client(simHdl, "f_reset_client", this, 1u, 2u, 1u, 0u),
    INST_f_reset_reqs(simHdl, "f_reset_reqs", this, 0u, 2u, 1u, 0u),
    INST_f_reset_rsps(simHdl, "f_reset_rsps", this, 0u, 2u, 1u, 0u),
    PORT_RST_N((tUInt8)1u)
{
  PORT_cpu_imem_master_awvalid = false;
  PORT_cpu_imem_master_awaddr = 0llu;
  PORT_cpu_imem_master_awprot = 0u;
  PORT_cpu_imem_master_awuser = 0u;
  PORT_cpu_imem_master_wvalid = false;
  PORT_cpu_imem_master_wdata = 0llu;
  PORT_cpu_imem_master_wstrb = 0u;
  PORT_cpu_imem_master_bready = false;
  PORT_cpu_imem_master_arvalid = false;
  PORT_cpu_imem_master_araddr = 0llu;
  PORT_cpu_imem_master_arprot = 0u;
  PORT_cpu_imem_master_aruser = 0u;
  PORT_cpu_imem_master_rready = false;
  PORT_cpu_dmem_master_awvalid = false;
  PORT_cpu_dmem_master_awaddr = 0llu;
  PORT_cpu_dmem_master_awprot = 0u;
  PORT_cpu_dmem_master_awuser = 0u;
  PORT_cpu_dmem_master_wvalid = false;
  PORT_cpu_dmem_master_wdata = 0llu;
  PORT_cpu_dmem_master_wstrb = 0u;
  PORT_cpu_dmem_master_bready = false;
  PORT_cpu_dmem_master_arvalid = false;
  PORT_cpu_dmem_master_araddr = 0llu;
  PORT_cpu_dmem_master_arprot = 0u;
  PORT_cpu_dmem_master_aruser = 0u;
  PORT_cpu_dmem_master_rready = false;
  PORT_cpu_slave_awready = false;
  PORT_cpu_slave_wready = false;
  PORT_cpu_slave_bvalid = false;
  PORT_cpu_slave_bresp = 0u;
  PORT_cpu_slave_buser = 0u;
  PORT_cpu_slave_arready = false;
  PORT_cpu_slave_rvalid = false;
  PORT_cpu_slave_rresp = 0u;
  PORT_cpu_slave_rdata = 0llu;
  PORT_cpu_slave_ruser = 0u;
  PORT_RDY_cpu_imem_master_m_awready = false;
  PORT_RDY_cpu_imem_master_m_wready = false;
  PORT_RDY_cpu_imem_master_m_bvalid = false;
  PORT_RDY_cpu_imem_master_m_arready = false;
  PORT_RDY_cpu_imem_master_m_rvalid = false;
  PORT_RDY_cpu_dmem_master_m_awready = false;
  PORT_RDY_cpu_dmem_master_m_wready = false;
  PORT_RDY_cpu_dmem_master_m_bvalid = false;
  PORT_RDY_cpu_dmem_master_m_arready = false;
  PORT_RDY_cpu_dmem_master_m_rvalid = false;
  PORT_RDY_cpu_slave_m_awvalid = false;
  PORT_RDY_cpu_slave_m_wvalid = false;
  PORT_RDY_cpu_slave_m_bready = false;
  PORT_RDY_cpu_slave_m_arvalid = false;
  PORT_RDY_cpu_slave_m_rready = false;
  symbol_count = 58u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkBRVF_Core::init_symbols_0()
{
  init_symbol(&symbols[0u], "cpu", SYM_MODULE, &INST_cpu);
  init_symbol(&symbols[1u], "cpu_dmem_master_araddr", SYM_PORT, &PORT_cpu_dmem_master_araddr, 64u);
  init_symbol(&symbols[2u], "cpu_dmem_master_arprot", SYM_PORT, &PORT_cpu_dmem_master_arprot, 3u);
  init_symbol(&symbols[3u], "cpu_dmem_master_aruser", SYM_PORT, &PORT_cpu_dmem_master_aruser, 0u);
  init_symbol(&symbols[4u], "cpu_dmem_master_arvalid", SYM_PORT, &PORT_cpu_dmem_master_arvalid, 1u);
  init_symbol(&symbols[5u], "cpu_dmem_master_awaddr", SYM_PORT, &PORT_cpu_dmem_master_awaddr, 64u);
  init_symbol(&symbols[6u], "cpu_dmem_master_awprot", SYM_PORT, &PORT_cpu_dmem_master_awprot, 3u);
  init_symbol(&symbols[7u], "cpu_dmem_master_awuser", SYM_PORT, &PORT_cpu_dmem_master_awuser, 0u);
  init_symbol(&symbols[8u], "cpu_dmem_master_awvalid", SYM_PORT, &PORT_cpu_dmem_master_awvalid, 1u);
  init_symbol(&symbols[9u], "cpu_dmem_master_bready", SYM_PORT, &PORT_cpu_dmem_master_bready, 1u);
  init_symbol(&symbols[10u], "cpu_dmem_master_rready", SYM_PORT, &PORT_cpu_dmem_master_rready, 1u);
  init_symbol(&symbols[11u], "cpu_dmem_master_wdata", SYM_PORT, &PORT_cpu_dmem_master_wdata, 64u);
  init_symbol(&symbols[12u], "cpu_dmem_master_wstrb", SYM_PORT, &PORT_cpu_dmem_master_wstrb, 8u);
  init_symbol(&symbols[13u], "cpu_dmem_master_wvalid", SYM_PORT, &PORT_cpu_dmem_master_wvalid, 1u);
  init_symbol(&symbols[14u], "cpu_imem_master_araddr", SYM_PORT, &PORT_cpu_imem_master_araddr, 64u);
  init_symbol(&symbols[15u], "cpu_imem_master_arprot", SYM_PORT, &PORT_cpu_imem_master_arprot, 3u);
  init_symbol(&symbols[16u], "cpu_imem_master_aruser", SYM_PORT, &PORT_cpu_imem_master_aruser, 0u);
  init_symbol(&symbols[17u], "cpu_imem_master_arvalid", SYM_PORT, &PORT_cpu_imem_master_arvalid, 1u);
  init_symbol(&symbols[18u], "cpu_imem_master_awaddr", SYM_PORT, &PORT_cpu_imem_master_awaddr, 64u);
  init_symbol(&symbols[19u], "cpu_imem_master_awprot", SYM_PORT, &PORT_cpu_imem_master_awprot, 3u);
  init_symbol(&symbols[20u], "cpu_imem_master_awuser", SYM_PORT, &PORT_cpu_imem_master_awuser, 0u);
  init_symbol(&symbols[21u], "cpu_imem_master_awvalid", SYM_PORT, &PORT_cpu_imem_master_awvalid, 1u);
  init_symbol(&symbols[22u], "cpu_imem_master_bready", SYM_PORT, &PORT_cpu_imem_master_bready, 1u);
  init_symbol(&symbols[23u], "cpu_imem_master_rready", SYM_PORT, &PORT_cpu_imem_master_rready, 1u);
  init_symbol(&symbols[24u], "cpu_imem_master_wdata", SYM_PORT, &PORT_cpu_imem_master_wdata, 64u);
  init_symbol(&symbols[25u], "cpu_imem_master_wstrb", SYM_PORT, &PORT_cpu_imem_master_wstrb, 8u);
  init_symbol(&symbols[26u], "cpu_imem_master_wvalid", SYM_PORT, &PORT_cpu_imem_master_wvalid, 1u);
  init_symbol(&symbols[27u], "cpu_slave_arready", SYM_PORT, &PORT_cpu_slave_arready, 1u);
  init_symbol(&symbols[28u], "cpu_slave_awready", SYM_PORT, &PORT_cpu_slave_awready, 1u);
  init_symbol(&symbols[29u], "cpu_slave_bresp", SYM_PORT, &PORT_cpu_slave_bresp, 2u);
  init_symbol(&symbols[30u], "cpu_slave_buser", SYM_PORT, &PORT_cpu_slave_buser, 0u);
  init_symbol(&symbols[31u], "cpu_slave_bvalid", SYM_PORT, &PORT_cpu_slave_bvalid, 1u);
  init_symbol(&symbols[32u], "cpu_slave_rdata", SYM_PORT, &PORT_cpu_slave_rdata, 64u);
  init_symbol(&symbols[33u], "cpu_slave_rresp", SYM_PORT, &PORT_cpu_slave_rresp, 2u);
  init_symbol(&symbols[34u], "cpu_slave_ruser", SYM_PORT, &PORT_cpu_slave_ruser, 0u);
  init_symbol(&symbols[35u], "cpu_slave_rvalid", SYM_PORT, &PORT_cpu_slave_rvalid, 1u);
  init_symbol(&symbols[36u], "cpu_slave_wready", SYM_PORT, &PORT_cpu_slave_wready, 1u);
  init_symbol(&symbols[37u], "f_reset_client", SYM_MODULE, &INST_f_reset_client);
  init_symbol(&symbols[38u], "f_reset_reqs", SYM_MODULE, &INST_f_reset_reqs);
  init_symbol(&symbols[39u], "f_reset_rsps", SYM_MODULE, &INST_f_reset_rsps);
  init_symbol(&symbols[40u], "pc_reset_value", SYM_PARAM, (void *)(&PARAM_pc_reset_value), 64u);
  init_symbol(&symbols[41u],
	      "RDY_cpu_dmem_master_m_arready",
	      SYM_PORT,
	      &PORT_RDY_cpu_dmem_master_m_arready,
	      1u);
  init_symbol(&symbols[42u],
	      "RDY_cpu_dmem_master_m_awready",
	      SYM_PORT,
	      &PORT_RDY_cpu_dmem_master_m_awready,
	      1u);
  init_symbol(&symbols[43u],
	      "RDY_cpu_dmem_master_m_bvalid",
	      SYM_PORT,
	      &PORT_RDY_cpu_dmem_master_m_bvalid,
	      1u);
  init_symbol(&symbols[44u],
	      "RDY_cpu_dmem_master_m_rvalid",
	      SYM_PORT,
	      &PORT_RDY_cpu_dmem_master_m_rvalid,
	      1u);
  init_symbol(&symbols[45u],
	      "RDY_cpu_dmem_master_m_wready",
	      SYM_PORT,
	      &PORT_RDY_cpu_dmem_master_m_wready,
	      1u);
  init_symbol(&symbols[46u],
	      "RDY_cpu_imem_master_m_arready",
	      SYM_PORT,
	      &PORT_RDY_cpu_imem_master_m_arready,
	      1u);
  init_symbol(&symbols[47u],
	      "RDY_cpu_imem_master_m_awready",
	      SYM_PORT,
	      &PORT_RDY_cpu_imem_master_m_awready,
	      1u);
  init_symbol(&symbols[48u],
	      "RDY_cpu_imem_master_m_bvalid",
	      SYM_PORT,
	      &PORT_RDY_cpu_imem_master_m_bvalid,
	      1u);
  init_symbol(&symbols[49u],
	      "RDY_cpu_imem_master_m_rvalid",
	      SYM_PORT,
	      &PORT_RDY_cpu_imem_master_m_rvalid,
	      1u);
  init_symbol(&symbols[50u],
	      "RDY_cpu_imem_master_m_wready",
	      SYM_PORT,
	      &PORT_RDY_cpu_imem_master_m_wready,
	      1u);
  init_symbol(&symbols[51u], "RDY_cpu_slave_m_arvalid", SYM_PORT, &PORT_RDY_cpu_slave_m_arvalid, 1u);
  init_symbol(&symbols[52u], "RDY_cpu_slave_m_awvalid", SYM_PORT, &PORT_RDY_cpu_slave_m_awvalid, 1u);
  init_symbol(&symbols[53u], "RDY_cpu_slave_m_bready", SYM_PORT, &PORT_RDY_cpu_slave_m_bready, 1u);
  init_symbol(&symbols[54u], "RDY_cpu_slave_m_rready", SYM_PORT, &PORT_RDY_cpu_slave_m_rready, 1u);
  init_symbol(&symbols[55u], "RDY_cpu_slave_m_wvalid", SYM_PORT, &PORT_RDY_cpu_slave_m_wvalid, 1u);
  init_symbol(&symbols[56u], "RL_rl_cpu_hart0_reset_from_cpu_complete", SYM_RULE);
  init_symbol(&symbols[57u], "RL_rl_cpu_hart0_reset_from_soc_start", SYM_RULE);
}


/* Rule actions */

void MOD_mkBRVF_Core::RL_rl_cpu_hart0_reset_from_soc_start()
{
  INST_f_reset_reqs.METH_deq();
  INST_cpu.METH_hart0_server_reset_request_put((tUInt8)0u);
  INST_f_reset_client.METH_enq((tUInt8)1u);
}

void MOD_mkBRVF_Core::RL_rl_cpu_hart0_reset_from_cpu_complete()
{
  INST_f_reset_client.METH_deq();
  INST_cpu.METH_hart0_server_reset_response_get();
  INST_f_reset_rsps.METH_enq();
}


/* Methods */

tUInt8 MOD_mkBRVF_Core::METH_cpu_imem_master_m_awuser()
{
  PORT_cpu_imem_master_awuser = INST_cpu.METH_imem_master_m_awuser();
  return PORT_cpu_imem_master_awuser;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_awuser()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_awuser;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_awuser;
  DEF_CAN_FIRE_cpu_imem_master_m_awuser = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_awuser = DEF_CAN_FIRE_cpu_imem_master_m_awuser;
  return PORT_RDY_cpu_imem_master_m_awuser;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_imem_master_m_aruser()
{
  PORT_cpu_imem_master_aruser = INST_cpu.METH_imem_master_m_aruser();
  return PORT_cpu_imem_master_aruser;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_aruser()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_aruser;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_aruser;
  DEF_CAN_FIRE_cpu_imem_master_m_aruser = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_aruser = DEF_CAN_FIRE_cpu_imem_master_m_aruser;
  return PORT_RDY_cpu_imem_master_m_aruser;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_awuser()
{
  PORT_cpu_dmem_master_awuser = INST_cpu.METH_dmem_master_m_awuser();
  return PORT_cpu_dmem_master_awuser;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_awuser()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_awuser;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_awuser;
  DEF_CAN_FIRE_cpu_dmem_master_m_awuser = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_awuser = DEF_CAN_FIRE_cpu_dmem_master_m_awuser;
  return PORT_RDY_cpu_dmem_master_m_awuser;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_aruser()
{
  PORT_cpu_dmem_master_aruser = INST_cpu.METH_dmem_master_m_aruser();
  return PORT_cpu_dmem_master_aruser;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_aruser()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_aruser;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_aruser;
  DEF_CAN_FIRE_cpu_dmem_master_m_aruser = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_aruser = DEF_CAN_FIRE_cpu_dmem_master_m_aruser;
  return PORT_RDY_cpu_dmem_master_m_aruser;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_slave_m_awready()
{
  PORT_cpu_slave_awready = INST_cpu.METH_near_mem_slave_m_awready();
  return PORT_cpu_slave_awready;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_awready()
{
  tUInt8 PORT_RDY_cpu_slave_m_awready;
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_awready;
  DEF_CAN_FIRE_cpu_slave_m_awready = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_awready = DEF_CAN_FIRE_cpu_slave_m_awready;
  return PORT_RDY_cpu_slave_m_awready;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_slave_m_wready()
{
  PORT_cpu_slave_wready = INST_cpu.METH_near_mem_slave_m_wready();
  return PORT_cpu_slave_wready;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_wready()
{
  tUInt8 PORT_RDY_cpu_slave_m_wready;
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_wready;
  DEF_CAN_FIRE_cpu_slave_m_wready = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_wready = DEF_CAN_FIRE_cpu_slave_m_wready;
  return PORT_RDY_cpu_slave_m_wready;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_slave_m_bvalid()
{
  PORT_cpu_slave_bvalid = INST_cpu.METH_near_mem_slave_m_bvalid();
  return PORT_cpu_slave_bvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_bvalid()
{
  tUInt8 PORT_RDY_cpu_slave_m_bvalid;
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_bvalid;
  DEF_CAN_FIRE_cpu_slave_m_bvalid = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_bvalid = DEF_CAN_FIRE_cpu_slave_m_bvalid;
  return PORT_RDY_cpu_slave_m_bvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_slave_m_bresp()
{
  PORT_cpu_slave_bresp = INST_cpu.METH_near_mem_slave_m_bresp();
  return PORT_cpu_slave_bresp;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_bresp()
{
  tUInt8 PORT_RDY_cpu_slave_m_bresp;
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_bresp;
  DEF_CAN_FIRE_cpu_slave_m_bresp = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_bresp = DEF_CAN_FIRE_cpu_slave_m_bresp;
  return PORT_RDY_cpu_slave_m_bresp;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_slave_m_buser()
{
  PORT_cpu_slave_buser = INST_cpu.METH_near_mem_slave_m_buser();
  return PORT_cpu_slave_buser;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_buser()
{
  tUInt8 PORT_RDY_cpu_slave_m_buser;
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_buser;
  DEF_CAN_FIRE_cpu_slave_m_buser = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_buser = DEF_CAN_FIRE_cpu_slave_m_buser;
  return PORT_RDY_cpu_slave_m_buser;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_slave_m_arready()
{
  PORT_cpu_slave_arready = INST_cpu.METH_near_mem_slave_m_arready();
  return PORT_cpu_slave_arready;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_arready()
{
  tUInt8 PORT_RDY_cpu_slave_m_arready;
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_arready;
  DEF_CAN_FIRE_cpu_slave_m_arready = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_arready = DEF_CAN_FIRE_cpu_slave_m_arready;
  return PORT_RDY_cpu_slave_m_arready;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_slave_m_rvalid()
{
  PORT_cpu_slave_rvalid = INST_cpu.METH_near_mem_slave_m_rvalid();
  return PORT_cpu_slave_rvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_rvalid()
{
  tUInt8 PORT_RDY_cpu_slave_m_rvalid;
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_rvalid;
  DEF_CAN_FIRE_cpu_slave_m_rvalid = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_rvalid = DEF_CAN_FIRE_cpu_slave_m_rvalid;
  return PORT_RDY_cpu_slave_m_rvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_slave_m_rresp()
{
  PORT_cpu_slave_rresp = INST_cpu.METH_near_mem_slave_m_rresp();
  return PORT_cpu_slave_rresp;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_rresp()
{
  tUInt8 PORT_RDY_cpu_slave_m_rresp;
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_rresp;
  DEF_CAN_FIRE_cpu_slave_m_rresp = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_rresp = DEF_CAN_FIRE_cpu_slave_m_rresp;
  return PORT_RDY_cpu_slave_m_rresp;
}

tUInt64 MOD_mkBRVF_Core::METH_cpu_slave_m_rdata()
{
  PORT_cpu_slave_rdata = INST_cpu.METH_near_mem_slave_m_rdata();
  return PORT_cpu_slave_rdata;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_rdata()
{
  tUInt8 PORT_RDY_cpu_slave_m_rdata;
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_rdata;
  DEF_CAN_FIRE_cpu_slave_m_rdata = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_rdata = DEF_CAN_FIRE_cpu_slave_m_rdata;
  return PORT_RDY_cpu_slave_m_rdata;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_slave_m_ruser()
{
  PORT_cpu_slave_ruser = INST_cpu.METH_near_mem_slave_m_ruser();
  return PORT_cpu_slave_ruser;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_ruser()
{
  tUInt8 PORT_RDY_cpu_slave_m_ruser;
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_ruser;
  DEF_CAN_FIRE_cpu_slave_m_ruser = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_ruser = DEF_CAN_FIRE_cpu_slave_m_ruser;
  return PORT_RDY_cpu_slave_m_ruser;
}

void MOD_mkBRVF_Core::METH_cpu_reset_server_request_put(tUInt8 ARG_cpu_reset_server_request_put)
{
  INST_f_reset_reqs.METH_enq();
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_reset_server_request_put()
{
  tUInt8 DEF_CAN_FIRE_cpu_reset_server_request_put;
  tUInt8 PORT_RDY_cpu_reset_server_request_put;
  DEF_CAN_FIRE_cpu_reset_server_request_put = INST_f_reset_reqs.METH_i_notFull();
  PORT_RDY_cpu_reset_server_request_put = DEF_CAN_FIRE_cpu_reset_server_request_put;
  return PORT_RDY_cpu_reset_server_request_put;
}

void MOD_mkBRVF_Core::METH_cpu_reset_server_response_get()
{
  INST_f_reset_rsps.METH_deq();
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_reset_server_response_get()
{
  tUInt8 DEF_CAN_FIRE_cpu_reset_server_response_get;
  tUInt8 PORT_RDY_cpu_reset_server_response_get;
  DEF_CAN_FIRE_cpu_reset_server_response_get = INST_f_reset_rsps.METH_i_notEmpty();
  PORT_RDY_cpu_reset_server_response_get = DEF_CAN_FIRE_cpu_reset_server_response_get;
  return PORT_RDY_cpu_reset_server_response_get;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_imem_master_m_awvalid()
{
  PORT_cpu_imem_master_awvalid = INST_cpu.METH_imem_master_m_awvalid();
  return PORT_cpu_imem_master_awvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_awvalid()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_awvalid;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_awvalid;
  DEF_CAN_FIRE_cpu_imem_master_m_awvalid = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_awvalid = DEF_CAN_FIRE_cpu_imem_master_m_awvalid;
  return PORT_RDY_cpu_imem_master_m_awvalid;
}

tUInt64 MOD_mkBRVF_Core::METH_cpu_imem_master_m_awaddr()
{
  PORT_cpu_imem_master_awaddr = INST_cpu.METH_imem_master_m_awaddr();
  return PORT_cpu_imem_master_awaddr;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_awaddr()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_awaddr;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_awaddr;
  DEF_CAN_FIRE_cpu_imem_master_m_awaddr = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_awaddr = DEF_CAN_FIRE_cpu_imem_master_m_awaddr;
  return PORT_RDY_cpu_imem_master_m_awaddr;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_imem_master_m_awprot()
{
  PORT_cpu_imem_master_awprot = INST_cpu.METH_imem_master_m_awprot();
  return PORT_cpu_imem_master_awprot;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_awprot()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_awprot;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_awprot;
  DEF_CAN_FIRE_cpu_imem_master_m_awprot = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_awprot = DEF_CAN_FIRE_cpu_imem_master_m_awprot;
  return PORT_RDY_cpu_imem_master_m_awprot;
}

void MOD_mkBRVF_Core::METH_cpu_imem_master_m_awready(tUInt8 ARG_cpu_imem_master_awready)
{
  if (PORT_RDY_cpu_imem_master_m_awready)
    INST_cpu.METH_imem_master_m_awready(ARG_cpu_imem_master_awready);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_awready()
{
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_awready;
  DEF_CAN_FIRE_cpu_imem_master_m_awready = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_awready = DEF_CAN_FIRE_cpu_imem_master_m_awready;
  return PORT_RDY_cpu_imem_master_m_awready;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_imem_master_m_wvalid()
{
  PORT_cpu_imem_master_wvalid = INST_cpu.METH_imem_master_m_wvalid();
  return PORT_cpu_imem_master_wvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_wvalid()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_wvalid;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_wvalid;
  DEF_CAN_FIRE_cpu_imem_master_m_wvalid = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_wvalid = DEF_CAN_FIRE_cpu_imem_master_m_wvalid;
  return PORT_RDY_cpu_imem_master_m_wvalid;
}

tUInt64 MOD_mkBRVF_Core::METH_cpu_imem_master_m_wdata()
{
  PORT_cpu_imem_master_wdata = INST_cpu.METH_imem_master_m_wdata();
  return PORT_cpu_imem_master_wdata;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_wdata()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_wdata;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_wdata;
  DEF_CAN_FIRE_cpu_imem_master_m_wdata = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_wdata = DEF_CAN_FIRE_cpu_imem_master_m_wdata;
  return PORT_RDY_cpu_imem_master_m_wdata;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_imem_master_m_wstrb()
{
  PORT_cpu_imem_master_wstrb = INST_cpu.METH_imem_master_m_wstrb();
  return PORT_cpu_imem_master_wstrb;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_wstrb()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_wstrb;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_wstrb;
  DEF_CAN_FIRE_cpu_imem_master_m_wstrb = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_wstrb = DEF_CAN_FIRE_cpu_imem_master_m_wstrb;
  return PORT_RDY_cpu_imem_master_m_wstrb;
}

void MOD_mkBRVF_Core::METH_cpu_imem_master_m_wready(tUInt8 ARG_cpu_imem_master_wready)
{
  if (PORT_RDY_cpu_imem_master_m_wready)
    INST_cpu.METH_imem_master_m_wready(ARG_cpu_imem_master_wready);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_wready()
{
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_wready;
  DEF_CAN_FIRE_cpu_imem_master_m_wready = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_wready = DEF_CAN_FIRE_cpu_imem_master_m_wready;
  return PORT_RDY_cpu_imem_master_m_wready;
}

void MOD_mkBRVF_Core::METH_cpu_imem_master_m_bvalid(tUInt8 ARG_cpu_imem_master_bvalid,
						    tUInt8 ARG_cpu_imem_master_bresp,
						    tUInt8 ARG_cpu_imem_master_buser)
{
  if (PORT_RDY_cpu_imem_master_m_bvalid)
    INST_cpu.METH_imem_master_m_bvalid(ARG_cpu_imem_master_bvalid,
				       ARG_cpu_imem_master_bresp,
				       ARG_cpu_imem_master_buser);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_bvalid()
{
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_bvalid;
  DEF_CAN_FIRE_cpu_imem_master_m_bvalid = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_bvalid = DEF_CAN_FIRE_cpu_imem_master_m_bvalid;
  return PORT_RDY_cpu_imem_master_m_bvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_imem_master_m_bready()
{
  PORT_cpu_imem_master_bready = INST_cpu.METH_imem_master_m_bready();
  return PORT_cpu_imem_master_bready;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_bready()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_bready;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_bready;
  DEF_CAN_FIRE_cpu_imem_master_m_bready = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_bready = DEF_CAN_FIRE_cpu_imem_master_m_bready;
  return PORT_RDY_cpu_imem_master_m_bready;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_imem_master_m_arvalid()
{
  PORT_cpu_imem_master_arvalid = INST_cpu.METH_imem_master_m_arvalid();
  return PORT_cpu_imem_master_arvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_arvalid()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_arvalid;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_arvalid;
  DEF_CAN_FIRE_cpu_imem_master_m_arvalid = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_arvalid = DEF_CAN_FIRE_cpu_imem_master_m_arvalid;
  return PORT_RDY_cpu_imem_master_m_arvalid;
}

tUInt64 MOD_mkBRVF_Core::METH_cpu_imem_master_m_araddr()
{
  PORT_cpu_imem_master_araddr = INST_cpu.METH_imem_master_m_araddr();
  return PORT_cpu_imem_master_araddr;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_araddr()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_araddr;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_araddr;
  DEF_CAN_FIRE_cpu_imem_master_m_araddr = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_araddr = DEF_CAN_FIRE_cpu_imem_master_m_araddr;
  return PORT_RDY_cpu_imem_master_m_araddr;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_imem_master_m_arprot()
{
  PORT_cpu_imem_master_arprot = INST_cpu.METH_imem_master_m_arprot();
  return PORT_cpu_imem_master_arprot;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_arprot()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_arprot;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_arprot;
  DEF_CAN_FIRE_cpu_imem_master_m_arprot = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_arprot = DEF_CAN_FIRE_cpu_imem_master_m_arprot;
  return PORT_RDY_cpu_imem_master_m_arprot;
}

void MOD_mkBRVF_Core::METH_cpu_imem_master_m_arready(tUInt8 ARG_cpu_imem_master_arready)
{
  if (PORT_RDY_cpu_imem_master_m_arready)
    INST_cpu.METH_imem_master_m_arready(ARG_cpu_imem_master_arready);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_arready()
{
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_arready;
  DEF_CAN_FIRE_cpu_imem_master_m_arready = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_arready = DEF_CAN_FIRE_cpu_imem_master_m_arready;
  return PORT_RDY_cpu_imem_master_m_arready;
}

void MOD_mkBRVF_Core::METH_cpu_imem_master_m_rvalid(tUInt8 ARG_cpu_imem_master_rvalid,
						    tUInt8 ARG_cpu_imem_master_rresp,
						    tUInt64 ARG_cpu_imem_master_rdata,
						    tUInt8 ARG_cpu_imem_master_ruser)
{
  if (PORT_RDY_cpu_imem_master_m_rvalid)
    INST_cpu.METH_imem_master_m_rvalid(ARG_cpu_imem_master_rvalid,
				       ARG_cpu_imem_master_rresp,
				       ARG_cpu_imem_master_rdata,
				       ARG_cpu_imem_master_ruser);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_rvalid()
{
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_rvalid;
  DEF_CAN_FIRE_cpu_imem_master_m_rvalid = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_rvalid = DEF_CAN_FIRE_cpu_imem_master_m_rvalid;
  return PORT_RDY_cpu_imem_master_m_rvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_imem_master_m_rready()
{
  PORT_cpu_imem_master_rready = INST_cpu.METH_imem_master_m_rready();
  return PORT_cpu_imem_master_rready;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_imem_master_m_rready()
{
  tUInt8 PORT_RDY_cpu_imem_master_m_rready;
  tUInt8 DEF_CAN_FIRE_cpu_imem_master_m_rready;
  DEF_CAN_FIRE_cpu_imem_master_m_rready = (tUInt8)1u;
  PORT_RDY_cpu_imem_master_m_rready = DEF_CAN_FIRE_cpu_imem_master_m_rready;
  return PORT_RDY_cpu_imem_master_m_rready;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_awvalid()
{
  PORT_cpu_dmem_master_awvalid = INST_cpu.METH_dmem_master_m_awvalid();
  return PORT_cpu_dmem_master_awvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_awvalid()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_awvalid;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_awvalid;
  DEF_CAN_FIRE_cpu_dmem_master_m_awvalid = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_awvalid = DEF_CAN_FIRE_cpu_dmem_master_m_awvalid;
  return PORT_RDY_cpu_dmem_master_m_awvalid;
}

tUInt64 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_awaddr()
{
  PORT_cpu_dmem_master_awaddr = INST_cpu.METH_dmem_master_m_awaddr();
  return PORT_cpu_dmem_master_awaddr;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_awaddr()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_awaddr;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_awaddr;
  DEF_CAN_FIRE_cpu_dmem_master_m_awaddr = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_awaddr = DEF_CAN_FIRE_cpu_dmem_master_m_awaddr;
  return PORT_RDY_cpu_dmem_master_m_awaddr;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_awprot()
{
  PORT_cpu_dmem_master_awprot = INST_cpu.METH_dmem_master_m_awprot();
  return PORT_cpu_dmem_master_awprot;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_awprot()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_awprot;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_awprot;
  DEF_CAN_FIRE_cpu_dmem_master_m_awprot = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_awprot = DEF_CAN_FIRE_cpu_dmem_master_m_awprot;
  return PORT_RDY_cpu_dmem_master_m_awprot;
}

void MOD_mkBRVF_Core::METH_cpu_dmem_master_m_awready(tUInt8 ARG_cpu_dmem_master_awready)
{
  if (PORT_RDY_cpu_dmem_master_m_awready)
    INST_cpu.METH_dmem_master_m_awready(ARG_cpu_dmem_master_awready);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_awready()
{
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_awready;
  DEF_CAN_FIRE_cpu_dmem_master_m_awready = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_awready = DEF_CAN_FIRE_cpu_dmem_master_m_awready;
  return PORT_RDY_cpu_dmem_master_m_awready;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_wvalid()
{
  PORT_cpu_dmem_master_wvalid = INST_cpu.METH_dmem_master_m_wvalid();
  return PORT_cpu_dmem_master_wvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_wvalid()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_wvalid;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_wvalid;
  DEF_CAN_FIRE_cpu_dmem_master_m_wvalid = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_wvalid = DEF_CAN_FIRE_cpu_dmem_master_m_wvalid;
  return PORT_RDY_cpu_dmem_master_m_wvalid;
}

tUInt64 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_wdata()
{
  PORT_cpu_dmem_master_wdata = INST_cpu.METH_dmem_master_m_wdata();
  return PORT_cpu_dmem_master_wdata;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_wdata()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_wdata;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_wdata;
  DEF_CAN_FIRE_cpu_dmem_master_m_wdata = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_wdata = DEF_CAN_FIRE_cpu_dmem_master_m_wdata;
  return PORT_RDY_cpu_dmem_master_m_wdata;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_wstrb()
{
  PORT_cpu_dmem_master_wstrb = INST_cpu.METH_dmem_master_m_wstrb();
  return PORT_cpu_dmem_master_wstrb;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_wstrb()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_wstrb;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_wstrb;
  DEF_CAN_FIRE_cpu_dmem_master_m_wstrb = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_wstrb = DEF_CAN_FIRE_cpu_dmem_master_m_wstrb;
  return PORT_RDY_cpu_dmem_master_m_wstrb;
}

void MOD_mkBRVF_Core::METH_cpu_dmem_master_m_wready(tUInt8 ARG_cpu_dmem_master_wready)
{
  if (PORT_RDY_cpu_dmem_master_m_wready)
    INST_cpu.METH_dmem_master_m_wready(ARG_cpu_dmem_master_wready);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_wready()
{
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_wready;
  DEF_CAN_FIRE_cpu_dmem_master_m_wready = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_wready = DEF_CAN_FIRE_cpu_dmem_master_m_wready;
  return PORT_RDY_cpu_dmem_master_m_wready;
}

void MOD_mkBRVF_Core::METH_cpu_dmem_master_m_bvalid(tUInt8 ARG_cpu_dmem_master_bvalid,
						    tUInt8 ARG_cpu_dmem_master_bresp,
						    tUInt8 ARG_cpu_dmem_master_buser)
{
  if (PORT_RDY_cpu_dmem_master_m_bvalid)
    INST_cpu.METH_dmem_master_m_bvalid(ARG_cpu_dmem_master_bvalid,
				       ARG_cpu_dmem_master_bresp,
				       ARG_cpu_dmem_master_buser);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_bvalid()
{
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_bvalid;
  DEF_CAN_FIRE_cpu_dmem_master_m_bvalid = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_bvalid = DEF_CAN_FIRE_cpu_dmem_master_m_bvalid;
  return PORT_RDY_cpu_dmem_master_m_bvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_bready()
{
  PORT_cpu_dmem_master_bready = INST_cpu.METH_dmem_master_m_bready();
  return PORT_cpu_dmem_master_bready;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_bready()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_bready;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_bready;
  DEF_CAN_FIRE_cpu_dmem_master_m_bready = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_bready = DEF_CAN_FIRE_cpu_dmem_master_m_bready;
  return PORT_RDY_cpu_dmem_master_m_bready;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_arvalid()
{
  PORT_cpu_dmem_master_arvalid = INST_cpu.METH_dmem_master_m_arvalid();
  return PORT_cpu_dmem_master_arvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_arvalid()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_arvalid;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_arvalid;
  DEF_CAN_FIRE_cpu_dmem_master_m_arvalid = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_arvalid = DEF_CAN_FIRE_cpu_dmem_master_m_arvalid;
  return PORT_RDY_cpu_dmem_master_m_arvalid;
}

tUInt64 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_araddr()
{
  PORT_cpu_dmem_master_araddr = INST_cpu.METH_dmem_master_m_araddr();
  return PORT_cpu_dmem_master_araddr;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_araddr()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_araddr;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_araddr;
  DEF_CAN_FIRE_cpu_dmem_master_m_araddr = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_araddr = DEF_CAN_FIRE_cpu_dmem_master_m_araddr;
  return PORT_RDY_cpu_dmem_master_m_araddr;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_arprot()
{
  PORT_cpu_dmem_master_arprot = INST_cpu.METH_dmem_master_m_arprot();
  return PORT_cpu_dmem_master_arprot;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_arprot()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_arprot;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_arprot;
  DEF_CAN_FIRE_cpu_dmem_master_m_arprot = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_arprot = DEF_CAN_FIRE_cpu_dmem_master_m_arprot;
  return PORT_RDY_cpu_dmem_master_m_arprot;
}

void MOD_mkBRVF_Core::METH_cpu_dmem_master_m_arready(tUInt8 ARG_cpu_dmem_master_arready)
{
  if (PORT_RDY_cpu_dmem_master_m_arready)
    INST_cpu.METH_dmem_master_m_arready(ARG_cpu_dmem_master_arready);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_arready()
{
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_arready;
  DEF_CAN_FIRE_cpu_dmem_master_m_arready = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_arready = DEF_CAN_FIRE_cpu_dmem_master_m_arready;
  return PORT_RDY_cpu_dmem_master_m_arready;
}

void MOD_mkBRVF_Core::METH_cpu_dmem_master_m_rvalid(tUInt8 ARG_cpu_dmem_master_rvalid,
						    tUInt8 ARG_cpu_dmem_master_rresp,
						    tUInt64 ARG_cpu_dmem_master_rdata,
						    tUInt8 ARG_cpu_dmem_master_ruser)
{
  if (PORT_RDY_cpu_dmem_master_m_rvalid)
    INST_cpu.METH_dmem_master_m_rvalid(ARG_cpu_dmem_master_rvalid,
				       ARG_cpu_dmem_master_rresp,
				       ARG_cpu_dmem_master_rdata,
				       ARG_cpu_dmem_master_ruser);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_rvalid()
{
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_rvalid;
  DEF_CAN_FIRE_cpu_dmem_master_m_rvalid = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_rvalid = DEF_CAN_FIRE_cpu_dmem_master_m_rvalid;
  return PORT_RDY_cpu_dmem_master_m_rvalid;
}

tUInt8 MOD_mkBRVF_Core::METH_cpu_dmem_master_m_rready()
{
  PORT_cpu_dmem_master_rready = INST_cpu.METH_dmem_master_m_rready();
  return PORT_cpu_dmem_master_rready;
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_dmem_master_m_rready()
{
  tUInt8 PORT_RDY_cpu_dmem_master_m_rready;
  tUInt8 DEF_CAN_FIRE_cpu_dmem_master_m_rready;
  DEF_CAN_FIRE_cpu_dmem_master_m_rready = (tUInt8)1u;
  PORT_RDY_cpu_dmem_master_m_rready = DEF_CAN_FIRE_cpu_dmem_master_m_rready;
  return PORT_RDY_cpu_dmem_master_m_rready;
}

void MOD_mkBRVF_Core::METH_cpu_slave_m_awvalid(tUInt8 ARG_cpu_slave_awvalid,
					       tUInt64 ARG_cpu_slave_awaddr,
					       tUInt8 ARG_cpu_slave_awprot,
					       tUInt8 ARG_cpu_slave_awuser)
{
  if (PORT_RDY_cpu_slave_m_awvalid)
    INST_cpu.METH_near_mem_slave_m_awvalid(ARG_cpu_slave_awvalid,
					   ARG_cpu_slave_awaddr,
					   ARG_cpu_slave_awprot,
					   ARG_cpu_slave_awuser);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_awvalid()
{
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_awvalid;
  DEF_CAN_FIRE_cpu_slave_m_awvalid = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_awvalid = DEF_CAN_FIRE_cpu_slave_m_awvalid;
  return PORT_RDY_cpu_slave_m_awvalid;
}

void MOD_mkBRVF_Core::METH_cpu_slave_m_wvalid(tUInt8 ARG_cpu_slave_wvalid,
					      tUInt64 ARG_cpu_slave_wdata,
					      tUInt8 ARG_cpu_slave_wstrb)
{
  if (PORT_RDY_cpu_slave_m_wvalid)
    INST_cpu.METH_near_mem_slave_m_wvalid(ARG_cpu_slave_wvalid,
					  ARG_cpu_slave_wdata,
					  ARG_cpu_slave_wstrb);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_wvalid()
{
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_wvalid;
  DEF_CAN_FIRE_cpu_slave_m_wvalid = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_wvalid = DEF_CAN_FIRE_cpu_slave_m_wvalid;
  return PORT_RDY_cpu_slave_m_wvalid;
}

void MOD_mkBRVF_Core::METH_cpu_slave_m_bready(tUInt8 ARG_cpu_slave_bready)
{
  if (PORT_RDY_cpu_slave_m_bready)
    INST_cpu.METH_near_mem_slave_m_bready(ARG_cpu_slave_bready);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_bready()
{
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_bready;
  DEF_CAN_FIRE_cpu_slave_m_bready = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_bready = DEF_CAN_FIRE_cpu_slave_m_bready;
  return PORT_RDY_cpu_slave_m_bready;
}

void MOD_mkBRVF_Core::METH_cpu_slave_m_arvalid(tUInt8 ARG_cpu_slave_arvalid,
					       tUInt64 ARG_cpu_slave_araddr,
					       tUInt8 ARG_cpu_slave_arprot,
					       tUInt8 ARG_cpu_slave_aruser)
{
  if (PORT_RDY_cpu_slave_m_arvalid)
    INST_cpu.METH_near_mem_slave_m_arvalid(ARG_cpu_slave_arvalid,
					   ARG_cpu_slave_araddr,
					   ARG_cpu_slave_arprot,
					   ARG_cpu_slave_aruser);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_arvalid()
{
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_arvalid;
  DEF_CAN_FIRE_cpu_slave_m_arvalid = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_arvalid = DEF_CAN_FIRE_cpu_slave_m_arvalid;
  return PORT_RDY_cpu_slave_m_arvalid;
}

void MOD_mkBRVF_Core::METH_cpu_slave_m_rready(tUInt8 ARG_cpu_slave_rready)
{
  if (PORT_RDY_cpu_slave_m_rready)
    INST_cpu.METH_near_mem_slave_m_rready(ARG_cpu_slave_rready);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_slave_m_rready()
{
  tUInt8 DEF_CAN_FIRE_cpu_slave_m_rready;
  DEF_CAN_FIRE_cpu_slave_m_rready = (tUInt8)1u;
  PORT_RDY_cpu_slave_m_rready = DEF_CAN_FIRE_cpu_slave_m_rready;
  return PORT_RDY_cpu_slave_m_rready;
}

void MOD_mkBRVF_Core::METH_cpu_external_interrupt_req()
{
  INST_cpu.METH_external_interrupt_req();
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_external_interrupt_req()
{
  tUInt8 PORT_RDY_cpu_external_interrupt_req;
  tUInt8 DEF_CAN_FIRE_cpu_external_interrupt_req;
  DEF_CAN_FIRE_cpu_external_interrupt_req = (tUInt8)1u;
  PORT_RDY_cpu_external_interrupt_req = DEF_CAN_FIRE_cpu_external_interrupt_req;
  return PORT_RDY_cpu_external_interrupt_req;
}

void MOD_mkBRVF_Core::METH_cpu_software_interrupt_req()
{
  INST_cpu.METH_software_interrupt_req();
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_software_interrupt_req()
{
  tUInt8 PORT_RDY_cpu_software_interrupt_req;
  tUInt8 DEF_CAN_FIRE_cpu_software_interrupt_req;
  DEF_CAN_FIRE_cpu_software_interrupt_req = (tUInt8)1u;
  PORT_RDY_cpu_software_interrupt_req = DEF_CAN_FIRE_cpu_software_interrupt_req;
  return PORT_RDY_cpu_software_interrupt_req;
}

void MOD_mkBRVF_Core::METH_cpu_timer_interrupt_req(tUInt8 ARG_cpu_timer_interrupt_req_set_not_clear)
{
  INST_cpu.METH_timer_interrupt_req(ARG_cpu_timer_interrupt_req_set_not_clear);
}

tUInt8 MOD_mkBRVF_Core::METH_RDY_cpu_timer_interrupt_req()
{
  tUInt8 DEF_CAN_FIRE_cpu_timer_interrupt_req;
  tUInt8 PORT_RDY_cpu_timer_interrupt_req;
  DEF_CAN_FIRE_cpu_timer_interrupt_req = INST_cpu.METH_RDY_timer_interrupt_req();
  PORT_RDY_cpu_timer_interrupt_req = DEF_CAN_FIRE_cpu_timer_interrupt_req;
  return PORT_RDY_cpu_timer_interrupt_req;
}


/* Reset routines */

void MOD_mkBRVF_Core::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_f_reset_rsps.reset_RST(ARG_rst_in);
  INST_f_reset_reqs.reset_RST(ARG_rst_in);
  INST_f_reset_client.reset_RST(ARG_rst_in);
  INST_cpu.reset_RST_N(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkBRVF_Core::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkBRVF_Core::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_cpu.dump_state(indent + 2u);
  INST_f_reset_client.dump_state(indent + 2u);
  INST_f_reset_reqs.dump_state(indent + 2u);
  INST_f_reset_rsps.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkBRVF_Core::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 55u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_dmem_master_m_arready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_dmem_master_m_awready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_dmem_master_m_bvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_dmem_master_m_rvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_dmem_master_m_wready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_imem_master_m_arready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_imem_master_m_awready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_imem_master_m_bvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_imem_master_m_rvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_imem_master_m_wready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_slave_m_arvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_slave_m_awvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_slave_m_bready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_slave_m_rready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_cpu_slave_m_wvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_araddr", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_arprot", 3u);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_aruser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_arvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_awaddr", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_awprot", 3u);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_awuser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_awvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_bready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_rready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_wdata", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_wstrb", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_dmem_master_wvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_araddr", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_arprot", 3u);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_aruser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_arvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_awaddr", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_awprot", 3u);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_awuser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_awvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_bready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_rready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_wdata", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_wstrb", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cpu_imem_master_wvalid", 1u);
  vcd_write_def(sim_hdl, num++, "cpu_slave_arready", 1u);
  vcd_write_def(sim_hdl, num++, "cpu_slave_awready", 1u);
  vcd_write_def(sim_hdl, num++, "cpu_slave_bresp", 2u);
  vcd_write_def(sim_hdl, num++, "cpu_slave_buser", 0u);
  vcd_write_def(sim_hdl, num++, "cpu_slave_bvalid", 1u);
  vcd_write_def(sim_hdl, num++, "cpu_slave_rdata", 64u);
  vcd_write_def(sim_hdl, num++, "cpu_slave_rresp", 2u);
  vcd_write_def(sim_hdl, num++, "cpu_slave_ruser", 0u);
  vcd_write_def(sim_hdl, num++, "cpu_slave_rvalid", 1u);
  vcd_write_def(sim_hdl, num++, "cpu_slave_wready", 1u);
  num = INST_f_reset_client.dump_VCD_defs(num);
  num = INST_f_reset_reqs.dump_VCD_defs(num);
  num = INST_f_reset_rsps.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_cpu.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkBRVF_Core::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBRVF_Core &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkBRVF_Core::vcd_defs(tVCDDumpType dt, MOD_mkBRVF_Core &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_dmem_master_m_arready) != PORT_RDY_cpu_dmem_master_m_arready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_dmem_master_m_arready, 1u);
	backing.PORT_RDY_cpu_dmem_master_m_arready = PORT_RDY_cpu_dmem_master_m_arready;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_dmem_master_m_awready) != PORT_RDY_cpu_dmem_master_m_awready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_dmem_master_m_awready, 1u);
	backing.PORT_RDY_cpu_dmem_master_m_awready = PORT_RDY_cpu_dmem_master_m_awready;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_dmem_master_m_bvalid) != PORT_RDY_cpu_dmem_master_m_bvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_dmem_master_m_bvalid, 1u);
	backing.PORT_RDY_cpu_dmem_master_m_bvalid = PORT_RDY_cpu_dmem_master_m_bvalid;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_dmem_master_m_rvalid) != PORT_RDY_cpu_dmem_master_m_rvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_dmem_master_m_rvalid, 1u);
	backing.PORT_RDY_cpu_dmem_master_m_rvalid = PORT_RDY_cpu_dmem_master_m_rvalid;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_dmem_master_m_wready) != PORT_RDY_cpu_dmem_master_m_wready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_dmem_master_m_wready, 1u);
	backing.PORT_RDY_cpu_dmem_master_m_wready = PORT_RDY_cpu_dmem_master_m_wready;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_imem_master_m_arready) != PORT_RDY_cpu_imem_master_m_arready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_imem_master_m_arready, 1u);
	backing.PORT_RDY_cpu_imem_master_m_arready = PORT_RDY_cpu_imem_master_m_arready;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_imem_master_m_awready) != PORT_RDY_cpu_imem_master_m_awready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_imem_master_m_awready, 1u);
	backing.PORT_RDY_cpu_imem_master_m_awready = PORT_RDY_cpu_imem_master_m_awready;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_imem_master_m_bvalid) != PORT_RDY_cpu_imem_master_m_bvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_imem_master_m_bvalid, 1u);
	backing.PORT_RDY_cpu_imem_master_m_bvalid = PORT_RDY_cpu_imem_master_m_bvalid;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_imem_master_m_rvalid) != PORT_RDY_cpu_imem_master_m_rvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_imem_master_m_rvalid, 1u);
	backing.PORT_RDY_cpu_imem_master_m_rvalid = PORT_RDY_cpu_imem_master_m_rvalid;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_imem_master_m_wready) != PORT_RDY_cpu_imem_master_m_wready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_imem_master_m_wready, 1u);
	backing.PORT_RDY_cpu_imem_master_m_wready = PORT_RDY_cpu_imem_master_m_wready;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_slave_m_arvalid) != PORT_RDY_cpu_slave_m_arvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_slave_m_arvalid, 1u);
	backing.PORT_RDY_cpu_slave_m_arvalid = PORT_RDY_cpu_slave_m_arvalid;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_slave_m_awvalid) != PORT_RDY_cpu_slave_m_awvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_slave_m_awvalid, 1u);
	backing.PORT_RDY_cpu_slave_m_awvalid = PORT_RDY_cpu_slave_m_awvalid;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_slave_m_bready) != PORT_RDY_cpu_slave_m_bready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_slave_m_bready, 1u);
	backing.PORT_RDY_cpu_slave_m_bready = PORT_RDY_cpu_slave_m_bready;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_slave_m_rready) != PORT_RDY_cpu_slave_m_rready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_slave_m_rready, 1u);
	backing.PORT_RDY_cpu_slave_m_rready = PORT_RDY_cpu_slave_m_rready;
      }
      ++num;
      if ((backing.PORT_RDY_cpu_slave_m_wvalid) != PORT_RDY_cpu_slave_m_wvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_cpu_slave_m_wvalid, 1u);
	backing.PORT_RDY_cpu_slave_m_wvalid = PORT_RDY_cpu_slave_m_wvalid;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_araddr) != PORT_cpu_dmem_master_araddr)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_araddr, 64u);
	backing.PORT_cpu_dmem_master_araddr = PORT_cpu_dmem_master_araddr;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_arprot) != PORT_cpu_dmem_master_arprot)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_arprot, 3u);
	backing.PORT_cpu_dmem_master_arprot = PORT_cpu_dmem_master_arprot;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_aruser) != PORT_cpu_dmem_master_aruser)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_aruser, 0u);
	backing.PORT_cpu_dmem_master_aruser = PORT_cpu_dmem_master_aruser;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_arvalid) != PORT_cpu_dmem_master_arvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_arvalid, 1u);
	backing.PORT_cpu_dmem_master_arvalid = PORT_cpu_dmem_master_arvalid;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_awaddr) != PORT_cpu_dmem_master_awaddr)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_awaddr, 64u);
	backing.PORT_cpu_dmem_master_awaddr = PORT_cpu_dmem_master_awaddr;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_awprot) != PORT_cpu_dmem_master_awprot)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_awprot, 3u);
	backing.PORT_cpu_dmem_master_awprot = PORT_cpu_dmem_master_awprot;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_awuser) != PORT_cpu_dmem_master_awuser)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_awuser, 0u);
	backing.PORT_cpu_dmem_master_awuser = PORT_cpu_dmem_master_awuser;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_awvalid) != PORT_cpu_dmem_master_awvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_awvalid, 1u);
	backing.PORT_cpu_dmem_master_awvalid = PORT_cpu_dmem_master_awvalid;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_bready) != PORT_cpu_dmem_master_bready)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_bready, 1u);
	backing.PORT_cpu_dmem_master_bready = PORT_cpu_dmem_master_bready;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_rready) != PORT_cpu_dmem_master_rready)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_rready, 1u);
	backing.PORT_cpu_dmem_master_rready = PORT_cpu_dmem_master_rready;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_wdata) != PORT_cpu_dmem_master_wdata)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_wdata, 64u);
	backing.PORT_cpu_dmem_master_wdata = PORT_cpu_dmem_master_wdata;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_wstrb) != PORT_cpu_dmem_master_wstrb)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_wstrb, 8u);
	backing.PORT_cpu_dmem_master_wstrb = PORT_cpu_dmem_master_wstrb;
      }
      ++num;
      if ((backing.PORT_cpu_dmem_master_wvalid) != PORT_cpu_dmem_master_wvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_dmem_master_wvalid, 1u);
	backing.PORT_cpu_dmem_master_wvalid = PORT_cpu_dmem_master_wvalid;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_araddr) != PORT_cpu_imem_master_araddr)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_araddr, 64u);
	backing.PORT_cpu_imem_master_araddr = PORT_cpu_imem_master_araddr;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_arprot) != PORT_cpu_imem_master_arprot)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_arprot, 3u);
	backing.PORT_cpu_imem_master_arprot = PORT_cpu_imem_master_arprot;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_aruser) != PORT_cpu_imem_master_aruser)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_aruser, 0u);
	backing.PORT_cpu_imem_master_aruser = PORT_cpu_imem_master_aruser;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_arvalid) != PORT_cpu_imem_master_arvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_arvalid, 1u);
	backing.PORT_cpu_imem_master_arvalid = PORT_cpu_imem_master_arvalid;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_awaddr) != PORT_cpu_imem_master_awaddr)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_awaddr, 64u);
	backing.PORT_cpu_imem_master_awaddr = PORT_cpu_imem_master_awaddr;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_awprot) != PORT_cpu_imem_master_awprot)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_awprot, 3u);
	backing.PORT_cpu_imem_master_awprot = PORT_cpu_imem_master_awprot;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_awuser) != PORT_cpu_imem_master_awuser)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_awuser, 0u);
	backing.PORT_cpu_imem_master_awuser = PORT_cpu_imem_master_awuser;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_awvalid) != PORT_cpu_imem_master_awvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_awvalid, 1u);
	backing.PORT_cpu_imem_master_awvalid = PORT_cpu_imem_master_awvalid;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_bready) != PORT_cpu_imem_master_bready)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_bready, 1u);
	backing.PORT_cpu_imem_master_bready = PORT_cpu_imem_master_bready;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_rready) != PORT_cpu_imem_master_rready)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_rready, 1u);
	backing.PORT_cpu_imem_master_rready = PORT_cpu_imem_master_rready;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_wdata) != PORT_cpu_imem_master_wdata)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_wdata, 64u);
	backing.PORT_cpu_imem_master_wdata = PORT_cpu_imem_master_wdata;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_wstrb) != PORT_cpu_imem_master_wstrb)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_wstrb, 8u);
	backing.PORT_cpu_imem_master_wstrb = PORT_cpu_imem_master_wstrb;
      }
      ++num;
      if ((backing.PORT_cpu_imem_master_wvalid) != PORT_cpu_imem_master_wvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_imem_master_wvalid, 1u);
	backing.PORT_cpu_imem_master_wvalid = PORT_cpu_imem_master_wvalid;
      }
      ++num;
      if ((backing.PORT_cpu_slave_arready) != PORT_cpu_slave_arready)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_slave_arready, 1u);
	backing.PORT_cpu_slave_arready = PORT_cpu_slave_arready;
      }
      ++num;
      if ((backing.PORT_cpu_slave_awready) != PORT_cpu_slave_awready)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_slave_awready, 1u);
	backing.PORT_cpu_slave_awready = PORT_cpu_slave_awready;
      }
      ++num;
      if ((backing.PORT_cpu_slave_bresp) != PORT_cpu_slave_bresp)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_slave_bresp, 2u);
	backing.PORT_cpu_slave_bresp = PORT_cpu_slave_bresp;
      }
      ++num;
      if ((backing.PORT_cpu_slave_buser) != PORT_cpu_slave_buser)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_slave_buser, 0u);
	backing.PORT_cpu_slave_buser = PORT_cpu_slave_buser;
      }
      ++num;
      if ((backing.PORT_cpu_slave_bvalid) != PORT_cpu_slave_bvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_slave_bvalid, 1u);
	backing.PORT_cpu_slave_bvalid = PORT_cpu_slave_bvalid;
      }
      ++num;
      if ((backing.PORT_cpu_slave_rdata) != PORT_cpu_slave_rdata)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_slave_rdata, 64u);
	backing.PORT_cpu_slave_rdata = PORT_cpu_slave_rdata;
      }
      ++num;
      if ((backing.PORT_cpu_slave_rresp) != PORT_cpu_slave_rresp)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_slave_rresp, 2u);
	backing.PORT_cpu_slave_rresp = PORT_cpu_slave_rresp;
      }
      ++num;
      if ((backing.PORT_cpu_slave_ruser) != PORT_cpu_slave_ruser)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_slave_ruser, 0u);
	backing.PORT_cpu_slave_ruser = PORT_cpu_slave_ruser;
      }
      ++num;
      if ((backing.PORT_cpu_slave_rvalid) != PORT_cpu_slave_rvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_slave_rvalid, 1u);
	backing.PORT_cpu_slave_rvalid = PORT_cpu_slave_rvalid;
      }
      ++num;
      if ((backing.PORT_cpu_slave_wready) != PORT_cpu_slave_wready)
      {
	vcd_write_val(sim_hdl, num, PORT_cpu_slave_wready, 1u);
	backing.PORT_cpu_slave_wready = PORT_cpu_slave_wready;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_dmem_master_m_arready, 1u);
      backing.PORT_RDY_cpu_dmem_master_m_arready = PORT_RDY_cpu_dmem_master_m_arready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_dmem_master_m_awready, 1u);
      backing.PORT_RDY_cpu_dmem_master_m_awready = PORT_RDY_cpu_dmem_master_m_awready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_dmem_master_m_bvalid, 1u);
      backing.PORT_RDY_cpu_dmem_master_m_bvalid = PORT_RDY_cpu_dmem_master_m_bvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_dmem_master_m_rvalid, 1u);
      backing.PORT_RDY_cpu_dmem_master_m_rvalid = PORT_RDY_cpu_dmem_master_m_rvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_dmem_master_m_wready, 1u);
      backing.PORT_RDY_cpu_dmem_master_m_wready = PORT_RDY_cpu_dmem_master_m_wready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_imem_master_m_arready, 1u);
      backing.PORT_RDY_cpu_imem_master_m_arready = PORT_RDY_cpu_imem_master_m_arready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_imem_master_m_awready, 1u);
      backing.PORT_RDY_cpu_imem_master_m_awready = PORT_RDY_cpu_imem_master_m_awready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_imem_master_m_bvalid, 1u);
      backing.PORT_RDY_cpu_imem_master_m_bvalid = PORT_RDY_cpu_imem_master_m_bvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_imem_master_m_rvalid, 1u);
      backing.PORT_RDY_cpu_imem_master_m_rvalid = PORT_RDY_cpu_imem_master_m_rvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_imem_master_m_wready, 1u);
      backing.PORT_RDY_cpu_imem_master_m_wready = PORT_RDY_cpu_imem_master_m_wready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_slave_m_arvalid, 1u);
      backing.PORT_RDY_cpu_slave_m_arvalid = PORT_RDY_cpu_slave_m_arvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_slave_m_awvalid, 1u);
      backing.PORT_RDY_cpu_slave_m_awvalid = PORT_RDY_cpu_slave_m_awvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_slave_m_bready, 1u);
      backing.PORT_RDY_cpu_slave_m_bready = PORT_RDY_cpu_slave_m_bready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_slave_m_rready, 1u);
      backing.PORT_RDY_cpu_slave_m_rready = PORT_RDY_cpu_slave_m_rready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_cpu_slave_m_wvalid, 1u);
      backing.PORT_RDY_cpu_slave_m_wvalid = PORT_RDY_cpu_slave_m_wvalid;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_araddr, 64u);
      backing.PORT_cpu_dmem_master_araddr = PORT_cpu_dmem_master_araddr;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_arprot, 3u);
      backing.PORT_cpu_dmem_master_arprot = PORT_cpu_dmem_master_arprot;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_aruser, 0u);
      backing.PORT_cpu_dmem_master_aruser = PORT_cpu_dmem_master_aruser;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_arvalid, 1u);
      backing.PORT_cpu_dmem_master_arvalid = PORT_cpu_dmem_master_arvalid;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_awaddr, 64u);
      backing.PORT_cpu_dmem_master_awaddr = PORT_cpu_dmem_master_awaddr;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_awprot, 3u);
      backing.PORT_cpu_dmem_master_awprot = PORT_cpu_dmem_master_awprot;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_awuser, 0u);
      backing.PORT_cpu_dmem_master_awuser = PORT_cpu_dmem_master_awuser;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_awvalid, 1u);
      backing.PORT_cpu_dmem_master_awvalid = PORT_cpu_dmem_master_awvalid;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_bready, 1u);
      backing.PORT_cpu_dmem_master_bready = PORT_cpu_dmem_master_bready;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_rready, 1u);
      backing.PORT_cpu_dmem_master_rready = PORT_cpu_dmem_master_rready;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_wdata, 64u);
      backing.PORT_cpu_dmem_master_wdata = PORT_cpu_dmem_master_wdata;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_wstrb, 8u);
      backing.PORT_cpu_dmem_master_wstrb = PORT_cpu_dmem_master_wstrb;
      vcd_write_val(sim_hdl, num++, PORT_cpu_dmem_master_wvalid, 1u);
      backing.PORT_cpu_dmem_master_wvalid = PORT_cpu_dmem_master_wvalid;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_araddr, 64u);
      backing.PORT_cpu_imem_master_araddr = PORT_cpu_imem_master_araddr;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_arprot, 3u);
      backing.PORT_cpu_imem_master_arprot = PORT_cpu_imem_master_arprot;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_aruser, 0u);
      backing.PORT_cpu_imem_master_aruser = PORT_cpu_imem_master_aruser;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_arvalid, 1u);
      backing.PORT_cpu_imem_master_arvalid = PORT_cpu_imem_master_arvalid;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_awaddr, 64u);
      backing.PORT_cpu_imem_master_awaddr = PORT_cpu_imem_master_awaddr;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_awprot, 3u);
      backing.PORT_cpu_imem_master_awprot = PORT_cpu_imem_master_awprot;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_awuser, 0u);
      backing.PORT_cpu_imem_master_awuser = PORT_cpu_imem_master_awuser;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_awvalid, 1u);
      backing.PORT_cpu_imem_master_awvalid = PORT_cpu_imem_master_awvalid;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_bready, 1u);
      backing.PORT_cpu_imem_master_bready = PORT_cpu_imem_master_bready;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_rready, 1u);
      backing.PORT_cpu_imem_master_rready = PORT_cpu_imem_master_rready;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_wdata, 64u);
      backing.PORT_cpu_imem_master_wdata = PORT_cpu_imem_master_wdata;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_wstrb, 8u);
      backing.PORT_cpu_imem_master_wstrb = PORT_cpu_imem_master_wstrb;
      vcd_write_val(sim_hdl, num++, PORT_cpu_imem_master_wvalid, 1u);
      backing.PORT_cpu_imem_master_wvalid = PORT_cpu_imem_master_wvalid;
      vcd_write_val(sim_hdl, num++, PORT_cpu_slave_arready, 1u);
      backing.PORT_cpu_slave_arready = PORT_cpu_slave_arready;
      vcd_write_val(sim_hdl, num++, PORT_cpu_slave_awready, 1u);
      backing.PORT_cpu_slave_awready = PORT_cpu_slave_awready;
      vcd_write_val(sim_hdl, num++, PORT_cpu_slave_bresp, 2u);
      backing.PORT_cpu_slave_bresp = PORT_cpu_slave_bresp;
      vcd_write_val(sim_hdl, num++, PORT_cpu_slave_buser, 0u);
      backing.PORT_cpu_slave_buser = PORT_cpu_slave_buser;
      vcd_write_val(sim_hdl, num++, PORT_cpu_slave_bvalid, 1u);
      backing.PORT_cpu_slave_bvalid = PORT_cpu_slave_bvalid;
      vcd_write_val(sim_hdl, num++, PORT_cpu_slave_rdata, 64u);
      backing.PORT_cpu_slave_rdata = PORT_cpu_slave_rdata;
      vcd_write_val(sim_hdl, num++, PORT_cpu_slave_rresp, 2u);
      backing.PORT_cpu_slave_rresp = PORT_cpu_slave_rresp;
      vcd_write_val(sim_hdl, num++, PORT_cpu_slave_ruser, 0u);
      backing.PORT_cpu_slave_ruser = PORT_cpu_slave_ruser;
      vcd_write_val(sim_hdl, num++, PORT_cpu_slave_rvalid, 1u);
      backing.PORT_cpu_slave_rvalid = PORT_cpu_slave_rvalid;
      vcd_write_val(sim_hdl, num++, PORT_cpu_slave_wready, 1u);
      backing.PORT_cpu_slave_wready = PORT_cpu_slave_wready;
    }
}

void MOD_mkBRVF_Core::vcd_prims(tVCDDumpType dt, MOD_mkBRVF_Core &backing)
{
  INST_f_reset_client.dump_VCD(dt, backing.INST_f_reset_client);
  INST_f_reset_reqs.dump_VCD(dt, backing.INST_f_reset_reqs);
  INST_f_reset_rsps.dump_VCD(dt, backing.INST_f_reset_rsps);
}

void MOD_mkBRVF_Core::vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkBRVF_Core &backing)
{
  INST_cpu.dump_VCD(dt, levels, backing.INST_cpu);
}
