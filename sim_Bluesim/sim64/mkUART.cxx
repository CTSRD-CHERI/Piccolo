/*
 * Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
 * 
 * On Wed Aug 15 16:11:17 BST 2018
 * 
 */
#include "bluesim_primitives.h"
#include "mkUART.h"


/* Literal declarations */
static unsigned int const UWide_literal_66_h20000000000000000_arr[] = { 0u, 0u, 2u };
static tUWide const UWide_literal_66_h20000000000000000(66u,
							UWide_literal_66_h20000000000000000_arr);


/* String declarations */
static std::string const __str_literal_11("\n", 1u);
static std::string const __str_literal_3("            ", 12u);
static std::string const __str_literal_10(" }", 2u);
static std::string const __str_literal_12("%0d: ERROR: UART.rl_process_rd_req: misaligned addr",
					  51u);
static std::string const __str_literal_2("%0d: ERROR: UART.rl_process_rd_req: unrecognized addr",
					 53u);
static std::string const __str_literal_20("%0d: ERROR: UART.rl_process_wr_req: misaligned addr",
					  51u);
static std::string const __str_literal_28("%0d: ERROR: UART.rl_process_wr_req: unrecognized addr",
					  53u);
static std::string const __str_literal_13("%0d: UART.rl_process_rd_req", 27u);
static std::string const __str_literal_29("%0d: UART.rl_process_wr_req", 27u);
static std::string const __str_literal_1("%0d: UART.rl_reset", 18u);
static std::string const __str_literal_33("%0d: WARNING: UART.set_addr_map: addr_base 0x%0h is not 4-Byte-aligned",
					  70u);
static std::string const __str_literal_34("%0d: WARNING: UART.set_addr_map: addr_lim 0x%0h is not 4-Byte-aligned",
					  69u);
static std::string const __str_literal_6("'h%h", 4u);
static std::string const __str_literal_7(", ", 2u);
static std::string const __str_literal_16("AXI4_LITE_OKAY", 14u);
static std::string const __str_literal_17("AXI4_LITE_SLVERR", 16u);
static std::string const __str_literal_4("AXI4_Lite_Rd_Addr { ", 20u);
static std::string const __str_literal_14("AXI4_Lite_Rd_Data { ", 20u);
static std::string const __str_literal_21("AXI4_Lite_Wr_Addr { ", 20u);
static std::string const __str_literal_25("AXI4_Lite_Wr_Data { ", 20u);
static std::string const __str_literal_30("AXI4_Lite_Wr_Resp { ", 20u);
static std::string const __str_literal_5("araddr: ", 8u);
static std::string const __str_literal_8("arprot: ", 8u);
static std::string const __str_literal_9("aruser: ", 8u);
static std::string const __str_literal_22("awaddr: ", 8u);
static std::string const __str_literal_23("awprot: ", 8u);
static std::string const __str_literal_24("awuser: ", 8u);
static std::string const __str_literal_31("bresp: ", 7u);
static std::string const __str_literal_32("buser: ", 7u);
static std::string const __str_literal_18("rdata: ", 7u);
static std::string const __str_literal_15("rresp: ", 7u);
static std::string const __str_literal_19("ruser: ", 7u);
static std::string const __str_literal_26("wdata: ", 7u);
static std::string const __str_literal_27("wstrb: ", 7u);


/* Constructor */
MOD_mkUART::MOD_mkUART(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_cfg_verbosity(simHdl, "cfg_verbosity", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_f_from_console(simHdl, "f_from_console", this, 8u, 2u, 1u, 0u),
    INST_f_reset_reqs(simHdl, "f_reset_reqs", this, 0u, 2u, 1u, 0u),
    INST_f_reset_rsps(simHdl, "f_reset_rsps", this, 0u, 2u, 1u, 0u),
    INST_f_to_console(simHdl, "f_to_console", this, 8u, 2u, 1u, 0u),
    INST_rg_addr_base(simHdl, "rg_addr_base", this, 64u),
    INST_rg_addr_lim(simHdl, "rg_addr_lim", this, 64u),
    INST_rg_dlh(simHdl, "rg_dlh", this, 8u),
    INST_rg_dll(simHdl, "rg_dll", this, 8u),
    INST_rg_fcr(simHdl, "rg_fcr", this, 8u),
    INST_rg_ier(simHdl, "rg_ier", this, 8u),
    INST_rg_iir(simHdl, "rg_iir", this, 8u),
    INST_rg_lcr(simHdl, "rg_lcr", this, 8u),
    INST_rg_lsr(simHdl, "rg_lsr", this, 8u, (tUInt8)96u, (tUInt8)0u),
    INST_rg_mcr(simHdl, "rg_mcr", this, 8u),
    INST_rg_msr(simHdl, "rg_msr", this, 8u),
    INST_rg_scr(simHdl, "rg_scr", this, 8u),
    INST_rg_state(simHdl, "rg_state", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_rg_thr(simHdl, "rg_thr", this, 8u),
    INST_slave_xactor_f_rd_addr(simHdl, "slave_xactor_f_rd_addr", this, 67u, 2u, 1u, 0u),
    INST_slave_xactor_f_rd_data(simHdl, "slave_xactor_f_rd_data", this, 66u, 2u, 1u, 0u),
    INST_slave_xactor_f_wr_addr(simHdl, "slave_xactor_f_wr_addr", this, 67u, 2u, 1u, 0u),
    INST_slave_xactor_f_wr_data(simHdl, "slave_xactor_f_wr_data", this, 72u, 2u, 1u, 0u),
    INST_slave_xactor_f_wr_resp(simHdl, "slave_xactor_f_wr_resp", this, 2u, 2u, 1u, 0u),
    PORT_RST_N((tUInt8)1u),
    DEF_slave_xactor_f_wr_data_first____d112(72u),
    DEF_slave_xactor_f_rd_addr_first____d11(67u),
    DEF_slave_xactor_f_wr_addr_first____d106(67u),
    DEF_v__h4049(2863311530u),
    DEF_v__h3939(2863311530u),
    DEF_v__h3630(2863311530u),
    DEF_v__h3410(2863311530u),
    DEF_v__h2673(2863311530u),
    DEF_v__h2377(2863311530u),
    DEF_v__h2143(2863311530u),
    DEF_v__h1776(2863311530u),
    DEF_v__h1598(2863311530u),
    DEF_slave_xactor_f_rd_data_first____d206(66u),
    DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93(66u),
    DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92(66u),
    DEF_slave_wdata_CONCAT_slave_wstrb___d199(72u),
    DEF_slave_araddr_CONCAT_slave_arprot___d204(67u),
    DEF_slave_awaddr_CONCAT_slave_awprot___d196(67u)
{
  PORT_slave_awready = false;
  PORT_slave_wready = false;
  PORT_slave_bvalid = false;
  PORT_slave_bresp = 0u;
  PORT_slave_buser = 0u;
  PORT_slave_arready = false;
  PORT_slave_rvalid = false;
  PORT_slave_rresp = 0u;
  PORT_slave_rdata = 0llu;
  PORT_slave_ruser = 0u;
  PORT_RDY_slave_m_awvalid = false;
  PORT_RDY_slave_m_wvalid = false;
  PORT_RDY_slave_m_bready = false;
  PORT_RDY_slave_m_arvalid = false;
  PORT_RDY_slave_m_rready = false;
  symbol_count = 49u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkUART::init_symbols_0()
{
  init_symbol(&symbols[0u], "_read__h1226", SYM_DEF, &DEF__read__h1226, 8u);
  init_symbol(&symbols[1u], "_read__h123", SYM_DEF, &DEF__read__h123, 64u);
  init_symbol(&symbols[2u], "cfg_verbosity", SYM_MODULE, &INST_cfg_verbosity);
  init_symbol(&symbols[3u], "f_from_console", SYM_MODULE, &INST_f_from_console);
  init_symbol(&symbols[4u], "f_reset_reqs", SYM_MODULE, &INST_f_reset_reqs);
  init_symbol(&symbols[5u], "f_reset_rsps", SYM_MODULE, &INST_f_reset_rsps);
  init_symbol(&symbols[6u], "f_to_console", SYM_MODULE, &INST_f_to_console);
  init_symbol(&symbols[7u], "RDY_slave_m_arvalid", SYM_PORT, &PORT_RDY_slave_m_arvalid, 1u);
  init_symbol(&symbols[8u], "RDY_slave_m_awvalid", SYM_PORT, &PORT_RDY_slave_m_awvalid, 1u);
  init_symbol(&symbols[9u], "RDY_slave_m_bready", SYM_PORT, &PORT_RDY_slave_m_bready, 1u);
  init_symbol(&symbols[10u], "RDY_slave_m_rready", SYM_PORT, &PORT_RDY_slave_m_rready, 1u);
  init_symbol(&symbols[11u], "RDY_slave_m_wvalid", SYM_PORT, &PORT_RDY_slave_m_wvalid, 1u);
  init_symbol(&symbols[12u], "RL_rl_process_rd_req", SYM_RULE);
  init_symbol(&symbols[13u], "RL_rl_process_wr_req", SYM_RULE);
  init_symbol(&symbols[14u], "RL_rl_reset", SYM_RULE);
  init_symbol(&symbols[15u], "rg_addr_base", SYM_MODULE, &INST_rg_addr_base);
  init_symbol(&symbols[16u], "rg_addr_lim", SYM_MODULE, &INST_rg_addr_lim);
  init_symbol(&symbols[17u], "rg_dlh", SYM_MODULE, &INST_rg_dlh);
  init_symbol(&symbols[18u], "rg_dll", SYM_MODULE, &INST_rg_dll);
  init_symbol(&symbols[19u], "rg_fcr", SYM_MODULE, &INST_rg_fcr);
  init_symbol(&symbols[20u], "rg_ier", SYM_MODULE, &INST_rg_ier);
  init_symbol(&symbols[21u], "rg_iir", SYM_MODULE, &INST_rg_iir);
  init_symbol(&symbols[22u], "rg_lcr", SYM_MODULE, &INST_rg_lcr);
  init_symbol(&symbols[23u], "rg_lcr_BIT_7___h3024", SYM_DEF, &DEF_rg_lcr_BIT_7___h3024, 1u);
  init_symbol(&symbols[24u], "rg_lsr", SYM_MODULE, &INST_rg_lsr);
  init_symbol(&symbols[25u], "rg_mcr", SYM_MODULE, &INST_rg_mcr);
  init_symbol(&symbols[26u], "rg_msr", SYM_MODULE, &INST_rg_msr);
  init_symbol(&symbols[27u], "rg_scr", SYM_MODULE, &INST_rg_scr);
  init_symbol(&symbols[28u], "rg_state", SYM_MODULE, &INST_rg_state);
  init_symbol(&symbols[29u], "rg_thr", SYM_MODULE, &INST_rg_thr);
  init_symbol(&symbols[30u], "slave_arready", SYM_PORT, &PORT_slave_arready, 1u);
  init_symbol(&symbols[31u], "slave_awready", SYM_PORT, &PORT_slave_awready, 1u);
  init_symbol(&symbols[32u], "slave_bresp", SYM_PORT, &PORT_slave_bresp, 2u);
  init_symbol(&symbols[33u], "slave_buser", SYM_PORT, &PORT_slave_buser, 0u);
  init_symbol(&symbols[34u], "slave_bvalid", SYM_PORT, &PORT_slave_bvalid, 1u);
  init_symbol(&symbols[35u], "slave_rdata", SYM_PORT, &PORT_slave_rdata, 64u);
  init_symbol(&symbols[36u], "slave_rresp", SYM_PORT, &PORT_slave_rresp, 2u);
  init_symbol(&symbols[37u], "slave_ruser", SYM_PORT, &PORT_slave_ruser, 0u);
  init_symbol(&symbols[38u], "slave_rvalid", SYM_PORT, &PORT_slave_rvalid, 1u);
  init_symbol(&symbols[39u], "slave_wready", SYM_PORT, &PORT_slave_wready, 1u);
  init_symbol(&symbols[40u], "slave_xactor_f_rd_addr", SYM_MODULE, &INST_slave_xactor_f_rd_addr);
  init_symbol(&symbols[41u], "slave_xactor_f_rd_data", SYM_MODULE, &INST_slave_xactor_f_rd_data);
  init_symbol(&symbols[42u], "slave_xactor_f_wr_addr", SYM_MODULE, &INST_slave_xactor_f_wr_addr);
  init_symbol(&symbols[43u], "slave_xactor_f_wr_data", SYM_MODULE, &INST_slave_xactor_f_wr_data);
  init_symbol(&symbols[44u], "slave_xactor_f_wr_resp", SYM_MODULE, &INST_slave_xactor_f_wr_resp);
  init_symbol(&symbols[45u], "x__h1702", SYM_DEF, &DEF_x__h1702, 3u);
  init_symbol(&symbols[46u], "x__h1852", SYM_DEF, &DEF_x__h1852, 5u);
  init_symbol(&symbols[47u], "x__h2590", SYM_DEF, &DEF_x__h2590, 3u);
  init_symbol(&symbols[48u], "x__h2775", SYM_DEF, &DEF_x__h2775, 5u);
}


/* Rule actions */

void MOD_mkUART::RL_rl_reset()
{
  tUInt32 DEF_v__h1592;
  tUInt8 DEF_NOT_cfg_verbosity_read_EQ_0___d6;
  DEF_x__h3602 = INST_cfg_verbosity.METH_read();
  DEF_NOT_cfg_verbosity_read_EQ_0___d6 = !(DEF_x__h3602 == (tUInt8)0u);
  INST_f_reset_reqs.METH_deq();
  INST_slave_xactor_f_wr_addr.METH_clear();
  INST_slave_xactor_f_wr_data.METH_clear();
  INST_slave_xactor_f_wr_resp.METH_clear();
  INST_slave_xactor_f_rd_addr.METH_clear();
  INST_f_reset_rsps.METH_enq();
  INST_slave_xactor_f_rd_data.METH_clear();
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_EQ_0___d6)
      DEF_v__h1598 = dollar_stime(sim_hdl);
  DEF_v__h1592 = DEF_v__h1598 / 10u;
  INST_rg_state.METH_write((tUInt8)1u);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_EQ_0___d6)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_1, DEF_v__h1592);
}

void MOD_mkUART::RL_rl_process_rd_req()
{
  tUInt32 DEF_v__h2137;
  tUInt32 DEF_v__h1770;
  tUInt32 DEF_v__h2371;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d28;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50;
  tUInt8 DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d101;
  tUInt8 DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d99;
  tUInt8 DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d49;
  tUInt8 DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d63;
  tUInt8 DEF_lsr__h2318;
  tUInt64 DEF_rdr_rdata__h2303;
  tUInt64 DEF_v__h2078;
  tUInt64 DEF_y_avValue_fst__h2265;
  tUInt64 DEF_rdata__h1904;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d29;
  tUInt64 DEF_rdata__h1931;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d31;
  tUInt64 DEF_rdata__h1958;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d33;
  tUInt64 DEF_rdata__h1985;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d35;
  tUInt64 DEF_rdata__h2319;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d37;
  tUInt64 DEF_rdata__h2038;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d39;
  tUInt64 DEF_rdata__h2065;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d41;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__1_BITS_2_TO_0___d53;
  tUInt8 DEF_ch__h2081;
  tUInt8 DEF__read__h1102;
  tUInt8 DEF__read__h1164;
  tUInt8 DEF__read__h1257;
  tUInt8 DEF__read__h1287;
  tUInt8 DEF__read__h1318;
  tUInt8 DEF__read__h1349;
  DEF__read__h123 = INST_rg_addr_base.METH_read();
  DEF_slave_xactor_f_rd_addr_first____d11 = INST_slave_xactor_f_rd_addr.METH_first();
  DEF__read__h1349 = INST_rg_scr.METH_read();
  DEF__read__h1318 = INST_rg_msr.METH_read();
  DEF__read__h1287 = INST_rg_lsr.METH_read();
  DEF__read__h1226 = INST_rg_lcr.METH_read();
  DEF__read__h1257 = INST_rg_mcr.METH_read();
  DEF__read__h1164 = INST_rg_iir.METH_read();
  DEF__read__h1102 = INST_rg_ier.METH_read();
  DEF_ch__h2081 = INST_f_from_console.METH_first();
  DEF_x__h3602 = INST_cfg_verbosity.METH_read();
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12 = primExtract64(64u,
									 67u,
									 DEF_slave_xactor_f_rd_addr_first____d11,
									 32u,
									 66u,
									 32u,
									 3u);
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12 - DEF__read__h123;
  DEF_x__h1852 = (tUInt8)((tUInt8)31u & (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14 >> 3u));
  DEF_slave_xactor_f_rd_addr_first__1_BITS_2_TO_0___d53 = DEF_slave_xactor_f_rd_addr_first____d11.get_bits_in_word8(0u,
														    0u,
														    3u);
  DEF_x__h1702 = (tUInt8)((tUInt8)7u & DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14);
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16 = DEF_x__h1702 == (tUInt8)0u;
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d41 = DEF_x__h1852 == (tUInt8)7u;
  DEF_rdata__h2065 = (tUInt64)(DEF__read__h1349);
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d37 = DEF_x__h1852 == (tUInt8)5u;
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d39 = DEF_x__h1852 == (tUInt8)6u;
  DEF_rdata__h2038 = (tUInt64)(DEF__read__h1318);
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d35 = DEF_x__h1852 == (tUInt8)4u;
  DEF_rdata__h1985 = (tUInt64)(DEF__read__h1257);
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d33 = DEF_x__h1852 == (tUInt8)3u;
  DEF_rdata__h1958 = (tUInt64)(DEF__read__h1226);
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d31 = DEF_x__h1852 == (tUInt8)2u;
  DEF_rdata__h1931 = (tUInt64)(DEF__read__h1164);
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d29 = DEF_x__h1852 == (tUInt8)1u;
  DEF_rdata__h1904 = (tUInt64)(DEF__read__h1102);
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19 = DEF_x__h1852 == (tUInt8)0u;
  DEF_v__h2078 = (tUInt64)(DEF_ch__h2081);
  DEF_lsr__h2318 = INST_f_from_console.METH_notEmpty() ? (tUInt8)255u & ((((tUInt8)(DEF__read__h1287 >> 1u)) << 1u) | (tUInt8)1u) : DEF__read__h1287;
  DEF_rdata__h2319 = (tUInt64)(DEF_lsr__h2318);
  switch (DEF_x__h1852) {
  case (tUInt8)0u:
    DEF_y_avValue_fst__h2265 = DEF_v__h2078;
    break;
  case (tUInt8)1u:
    DEF_y_avValue_fst__h2265 = DEF_rdata__h1904;
    break;
  case (tUInt8)2u:
    DEF_y_avValue_fst__h2265 = DEF_rdata__h1931;
    break;
  case (tUInt8)3u:
    DEF_y_avValue_fst__h2265 = DEF_rdata__h1958;
    break;
  case (tUInt8)4u:
    DEF_y_avValue_fst__h2265 = DEF_rdata__h1985;
    break;
  case (tUInt8)5u:
    DEF_y_avValue_fst__h2265 = DEF_rdata__h2319;
    break;
  case (tUInt8)6u:
    DEF_y_avValue_fst__h2265 = DEF_rdata__h2038;
    break;
  case (tUInt8)7u:
    DEF_y_avValue_fst__h2265 = DEF_rdata__h2065;
    break;
  default:
    DEF_y_avValue_fst__h2265 = 0llu;
  }
  DEF_rdr_rdata__h2303 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16 ? DEF_y_avValue_fst__h2265 : 0llu;
  switch (DEF_x__h1852) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
  case (tUInt8)3u:
  case (tUInt8)4u:
  case (tUInt8)5u:
  case (tUInt8)6u:
  case (tUInt8)7u:
    DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d63 = (tUInt8)0u;
    break;
  default:
    DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d63 = (tUInt8)2u;
  }
  DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92.build_concat(17179869183llu & ((((tUInt64)(DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d63)) << 32u) | (tUInt64)((tUInt32)(DEF_y_avValue_fst__h2265 >> 32u))),
									    32u,
									    34u).set_whole_word((tUInt32)(DEF_y_avValue_fst__h2265),
												0u);
  DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16 ? DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92 : UWide_literal_66_h20000000000000000;
  DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d20 = !DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19;
  DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17 = !DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16;
  DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d49 = DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d20 && (!DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d29 && (!DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d31 && (!DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d33 && (!DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d35 && (!DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d37 && (!DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d39 && !DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d41))))));
  DEF_NOT_cfg_verbosity_read_ULE_1_4___d95 = !(DEF_x__h3602 <= (tUInt8)1u);
  DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d99 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d95 && (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16 && (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19 || (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d29 || (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d31 || (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d33 || (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d35 || (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d37 || (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d39 || DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d41))))))));
  DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d101 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d95 && (DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17 || DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d49);
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16 && DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d49;
  DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d28 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16 && DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19;
  INST_slave_xactor_f_rd_addr.METH_deq();
  if (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d28)
    INST_f_from_console.METH_deq();
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50)
      DEF_v__h2143 = dollar_stime(sim_hdl);
  DEF_v__h2137 = DEF_v__h2143 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_2, DEF_v__h2137);
    if (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50)
      dollar_write(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_4, &__str_literal_5);
    if (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_6,
		   DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12);
    if (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_8);
    if (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50)
      dollar_write(sim_hdl,
		   this,
		   "s,3",
		   &__str_literal_6,
		   DEF_slave_xactor_f_rd_addr_first__1_BITS_2_TO_0___d53);
    if (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_9);
    if (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_6, (tUInt8)0u, &__str_literal_10);
    if (DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d50)
      dollar_write(sim_hdl, this, "s", &__str_literal_11);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17)
      DEF_v__h1776 = dollar_stime(sim_hdl);
  }
  DEF_v__h1770 = DEF_v__h1776 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_12, DEF_v__h1770);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17)
      dollar_write(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_4, &__str_literal_5);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_6,
		   DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_8);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17)
      dollar_write(sim_hdl,
		   this,
		   "s,3",
		   &__str_literal_6,
		   DEF_slave_xactor_f_rd_addr_first__1_BITS_2_TO_0___d53);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_9);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_6, (tUInt8)0u, &__str_literal_10);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17)
      dollar_write(sim_hdl, this, "s", &__str_literal_11);
  }
  INST_slave_xactor_f_rd_data.METH_enq(DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      DEF_v__h2377 = dollar_stime(sim_hdl);
  DEF_v__h2371 = DEF_v__h2377 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_13, DEF_v__h2371);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_4, &__str_literal_5);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_6,
		   DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_8);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl,
		   this,
		   "s,3",
		   &__str_literal_6,
		   DEF_slave_xactor_f_rd_addr_first__1_BITS_2_TO_0___d53);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_9);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_6, (tUInt8)0u, &__str_literal_10);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s", &__str_literal_11);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_14, &__str_literal_15);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d99)
      dollar_write(sim_hdl, this, "s", &__str_literal_16);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d101)
      dollar_write(sim_hdl, this, "s", &__str_literal_17);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_18);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,64", &__str_literal_6, DEF_rdr_rdata__h2303);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_19);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_6, (tUInt8)0u, &__str_literal_10);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s", &__str_literal_11);
  }
}

void MOD_mkUART::RL_rl_process_wr_req()
{
  tUInt32 DEF_v__h3624;
  tUInt32 DEF_v__h2667;
  tUInt32 DEF_v__h3404;
  tUInt8 DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d181;
  tUInt8 DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d183;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d136;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d139;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d141;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d143;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d145;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d147;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d149;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d151;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d138;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d140;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d142;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d144;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d146;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d148;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d150;
  tUInt8 DEF_IF_NOT_slave_xactor_f_wr_addr_first__06_BITS_6_ETC___d177;
  tUInt8 DEF_IF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_ETC___d176;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__06_BITS_2_TO_0___d130;
  tUInt8 DEF_slave_xactor_f_wr_data_first__12_BITS_7_TO_0___d132;
  tUInt8 DEF_ch__h3041;
  tUInt64 DEF_slave_xactor_f_wr_data_first__12_BITS_71_TO_8___d131;
  tUInt8 DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d165;
  DEF__read__h123 = INST_rg_addr_base.METH_read();
  DEF_slave_xactor_f_wr_data_first____d112 = INST_slave_xactor_f_wr_data.METH_first();
  DEF_slave_xactor_f_wr_data_first__12_BIT_0___d113 = DEF_slave_xactor_f_wr_data_first____d112.get_bits_in_word8(0u,
														 0u,
														 1u);
  DEF_slave_xactor_f_wr_addr_first____d106 = INST_slave_xactor_f_wr_addr.METH_first();
  DEF__read__h1226 = INST_rg_lcr.METH_read();
  DEF_rg_lcr_BIT_7___h3024 = (tUInt8)(DEF__read__h1226 >> 7u);
  DEF_x__h3602 = INST_cfg_verbosity.METH_read();
  DEF_slave_xactor_f_wr_data_first__12_BITS_71_TO_8___d131 = primExtract64(64u,
									   72u,
									   DEF_slave_xactor_f_wr_data_first____d112,
									   32u,
									   71u,
									   32u,
									   8u);
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107 = primExtract64(64u,
									   67u,
									   DEF_slave_xactor_f_wr_addr_first____d106,
									   32u,
									   66u,
									   32u,
									   3u);
  DEF_ch__h3041 = DEF_slave_xactor_f_wr_data_first____d112.get_bits_in_word8(0u, 8u, 8u);
  DEF_slave_xactor_f_wr_data_first__12_BITS_7_TO_0___d132 = DEF_slave_xactor_f_wr_data_first____d112.get_bits_in_word8(0u,
														       0u,
														       8u);
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107 - DEF__read__h123;
  DEF_x__h2775 = (tUInt8)((tUInt8)31u & (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108 >> 3u));
  DEF_x__h2590 = (tUInt8)((tUInt8)7u & DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108);
  DEF_slave_xactor_f_wr_addr_first__06_BITS_2_TO_0___d130 = DEF_slave_xactor_f_wr_addr_first____d106.get_bits_in_word8(0u,
														       0u,
														       3u);
  switch (DEF_x__h2775) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
  case (tUInt8)3u:
  case (tUInt8)4u:
  case (tUInt8)5u:
  case (tUInt8)6u:
  case (tUInt8)7u:
    DEF_IF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_ETC___d176 = (tUInt8)0u;
    break;
  default:
    DEF_IF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_ETC___d176 = (tUInt8)2u;
  }
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d146 = DEF_x__h2775 == (tUInt8)5u;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d150 = DEF_x__h2775 == (tUInt8)7u;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d148 = DEF_x__h2775 == (tUInt8)6u;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d144 = DEF_x__h2775 == (tUInt8)4u;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d142 = DEF_x__h2775 == (tUInt8)3u;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d138 = DEF_x__h2775 == (tUInt8)1u;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d140 = DEF_x__h2775 == (tUInt8)2u;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117 = DEF_x__h2775 == (tUInt8)0u;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110 = DEF_x__h2590 == (tUInt8)0u;
  DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115 = !DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110 || !DEF_slave_xactor_f_wr_data_first__12_BIT_0___d113;
  DEF_IF_NOT_slave_xactor_f_wr_addr_first__06_BITS_6_ETC___d177 = DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115 ? (tUInt8)2u : DEF_IF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_ETC___d176;
  DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d118 = !DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117;
  DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d165 = DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d118 && (!DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d138 && (!DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d140 && (!DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d142 && (!DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d144 && (!DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d146 && (!DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d148 && !DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d150))))));
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110 && DEF_slave_xactor_f_wr_data_first__12_BIT_0___d113;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133 && DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d165;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d151 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133 && DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d150;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d149 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133 && DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d148;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d147 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133 && DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d146;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d145 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133 && DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d144;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d143 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133 && DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d142;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d136 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133 && (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117 && !DEF_rg_lcr_BIT_7___h3024);
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d141 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133 && DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d140;
  DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d139 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133 && DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d138;
  DEF_NOT_cfg_verbosity_read_ULE_1_4___d95 = !(DEF_x__h3602 <= (tUInt8)1u);
  DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d183 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d95 && (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115 || DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d165);
  DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d181 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d95 && (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d133 && (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117 || (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d138 || (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d140 || (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d142 || (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d144 || (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d146 || (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d148 || DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d150))))))));
  INST_slave_xactor_f_wr_addr.METH_deq();
  INST_slave_xactor_f_wr_data.METH_deq();
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      DEF_v__h2673 = dollar_stime(sim_hdl);
  DEF_v__h2667 = DEF_v__h2673 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_20, DEF_v__h2667);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_21, &__str_literal_22);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_23);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl,
		   this,
		   "s,3",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_addr_first__06_BITS_2_TO_0___d130);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_24);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_6, (tUInt8)0u, &__str_literal_10);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl, this, "s", &__str_literal_11);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_25, &__str_literal_26);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_data_first__12_BITS_71_TO_8___d131);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_27);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl,
		   this,
		   "s,8,s",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_data_first__12_BITS_7_TO_0___d132,
		   &__str_literal_10);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      dollar_write(sim_hdl, this, "s", &__str_literal_11);
  }
  if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d136)
    INST_rg_thr.METH_write(DEF_ch__h3041);
  if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d136)
    INST_f_to_console.METH_enq(DEF_ch__h3041);
  if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d139)
    INST_rg_ier.METH_write(DEF_ch__h3041);
  if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d141)
    INST_rg_iir.METH_write(DEF_ch__h3041);
  if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d143)
    INST_rg_lcr.METH_write(DEF_ch__h3041);
  if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d147)
    INST_rg_lsr.METH_write(DEF_ch__h3041);
  if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d145)
    INST_rg_mcr.METH_write(DEF_ch__h3041);
  if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d149)
    INST_rg_msr.METH_write(DEF_ch__h3041);
  if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d151)
    INST_rg_scr.METH_write(DEF_ch__h3041);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      DEF_v__h3410 = dollar_stime(sim_hdl);
  DEF_v__h3404 = DEF_v__h3410 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_28, DEF_v__h3404);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_21, &__str_literal_22);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_23);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl,
		   this,
		   "s,3",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_addr_first__06_BITS_2_TO_0___d130);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_24);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_6, (tUInt8)0u, &__str_literal_10);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl, this, "s", &__str_literal_11);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_25, &__str_literal_26);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_data_first__12_BITS_71_TO_8___d131);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_27);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl,
		   this,
		   "s,8,s",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_data_first__12_BITS_7_TO_0___d132,
		   &__str_literal_10);
    if (DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d166)
      dollar_write(sim_hdl, this, "s", &__str_literal_11);
  }
  INST_slave_xactor_f_wr_resp.METH_enq(DEF_IF_NOT_slave_xactor_f_wr_addr_first__06_BITS_6_ETC___d177);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      DEF_v__h3630 = dollar_stime(sim_hdl);
  DEF_v__h3624 = DEF_v__h3630 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_29, DEF_v__h3624);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_21, &__str_literal_22);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_23);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl,
		   this,
		   "s,3",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_addr_first__06_BITS_2_TO_0___d130);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_24);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_6, (tUInt8)0u, &__str_literal_10);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s", &__str_literal_11);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_25, &__str_literal_26);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_data_first__12_BITS_71_TO_8___d131);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_27);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl,
		   this,
		   "s,8,s",
		   &__str_literal_6,
		   DEF_slave_xactor_f_wr_data_first__12_BITS_7_TO_0___d132,
		   &__str_literal_10);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s", &__str_literal_11);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_30, &__str_literal_31);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d181)
      dollar_write(sim_hdl, this, "s", &__str_literal_16);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d183)
      dollar_write(sim_hdl, this, "s", &__str_literal_17);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_7, &__str_literal_32);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_6, (tUInt8)0u, &__str_literal_10);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      dollar_write(sim_hdl, this, "s", &__str_literal_11);
  }
}


/* Methods */

tUInt8 MOD_mkUART::METH_slave_m_buser()
{
  PORT_slave_buser = (tUInt8)0u;
  return PORT_slave_buser;
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_buser()
{
  tUInt8 PORT_RDY_slave_m_buser;
  tUInt8 DEF_CAN_FIRE_slave_m_buser;
  DEF_CAN_FIRE_slave_m_buser = (tUInt8)1u;
  PORT_RDY_slave_m_buser = DEF_CAN_FIRE_slave_m_buser;
  return PORT_RDY_slave_m_buser;
}

tUInt8 MOD_mkUART::METH_slave_m_ruser()
{
  PORT_slave_ruser = (tUInt8)0u;
  return PORT_slave_ruser;
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_ruser()
{
  tUInt8 PORT_RDY_slave_m_ruser;
  tUInt8 DEF_CAN_FIRE_slave_m_ruser;
  DEF_CAN_FIRE_slave_m_ruser = (tUInt8)1u;
  PORT_RDY_slave_m_ruser = DEF_CAN_FIRE_slave_m_ruser;
  return PORT_RDY_slave_m_ruser;
}

void MOD_mkUART::METH_server_reset_request_put(tUInt8 ARG_server_reset_request_put)
{
  INST_f_reset_reqs.METH_enq();
}

tUInt8 MOD_mkUART::METH_RDY_server_reset_request_put()
{
  tUInt8 DEF_CAN_FIRE_server_reset_request_put;
  tUInt8 PORT_RDY_server_reset_request_put;
  DEF_CAN_FIRE_server_reset_request_put = INST_f_reset_reqs.METH_i_notFull();
  PORT_RDY_server_reset_request_put = DEF_CAN_FIRE_server_reset_request_put;
  return PORT_RDY_server_reset_request_put;
}

void MOD_mkUART::METH_server_reset_response_get()
{
  INST_f_reset_rsps.METH_deq();
}

tUInt8 MOD_mkUART::METH_RDY_server_reset_response_get()
{
  tUInt8 DEF_CAN_FIRE_server_reset_response_get;
  tUInt8 PORT_RDY_server_reset_response_get;
  DEF_CAN_FIRE_server_reset_response_get = INST_f_reset_rsps.METH_i_notEmpty();
  PORT_RDY_server_reset_response_get = DEF_CAN_FIRE_server_reset_response_get;
  return PORT_RDY_server_reset_response_get;
}

void MOD_mkUART::METH_set_addr_map(tUInt64 ARG_set_addr_map_addr_base,
				   tUInt64 ARG_set_addr_map_addr_lim)
{
  tUInt32 DEF_v__h3933;
  tUInt32 DEF_v__h4043;
  tUInt8 DEF_NOT_set_addr_map_addr_base_BITS_1_TO_0_84_EQ_0_85___d186;
  tUInt8 DEF_NOT_set_addr_map_addr_lim_BITS_1_TO_0_89_EQ_0_90___d191;
  tUInt8 DEF_x__h3888;
  tUInt8 DEF_x__h4002;
  DEF_x__h4002 = (tUInt8)((tUInt8)3u & ARG_set_addr_map_addr_lim);
  DEF_x__h3888 = (tUInt8)((tUInt8)3u & ARG_set_addr_map_addr_base);
  DEF_NOT_set_addr_map_addr_lim_BITS_1_TO_0_89_EQ_0_90___d191 = !(DEF_x__h4002 == (tUInt8)0u);
  DEF_NOT_set_addr_map_addr_base_BITS_1_TO_0_84_EQ_0_85___d186 = !(DEF_x__h3888 == (tUInt8)0u);
  if (DEF_NOT_set_addr_map_addr_base_BITS_1_TO_0_84_EQ_0_85___d186)
    DEF_v__h3939 = dollar_stime(sim_hdl);
  DEF_v__h3933 = DEF_v__h3939 / 10u;
  if (DEF_NOT_set_addr_map_addr_base_BITS_1_TO_0_84_EQ_0_85___d186)
    dollar_display(sim_hdl,
		   this,
		   "s,32,64",
		   &__str_literal_33,
		   DEF_v__h3933,
		   ARG_set_addr_map_addr_base);
  if (DEF_NOT_set_addr_map_addr_lim_BITS_1_TO_0_89_EQ_0_90___d191)
    DEF_v__h4049 = dollar_stime(sim_hdl);
  DEF_v__h4043 = DEF_v__h4049 / 10u;
  if (DEF_NOT_set_addr_map_addr_lim_BITS_1_TO_0_89_EQ_0_90___d191)
    dollar_display(sim_hdl,
		   this,
		   "s,32,64",
		   &__str_literal_34,
		   DEF_v__h4043,
		   ARG_set_addr_map_addr_lim);
  INST_rg_addr_base.METH_write(ARG_set_addr_map_addr_base);
  INST_rg_addr_lim.METH_write(ARG_set_addr_map_addr_lim);
}

tUInt8 MOD_mkUART::METH_RDY_set_addr_map()
{
  tUInt8 DEF_CAN_FIRE_set_addr_map;
  tUInt8 PORT_RDY_set_addr_map;
  DEF_CAN_FIRE_set_addr_map = (tUInt8)1u;
  PORT_RDY_set_addr_map = DEF_CAN_FIRE_set_addr_map;
  return PORT_RDY_set_addr_map;
}

void MOD_mkUART::METH_slave_m_awvalid(tUInt8 ARG_slave_awvalid,
				      tUInt64 ARG_slave_awaddr,
				      tUInt8 ARG_slave_awprot,
				      tUInt8 ARG_slave_awuser)
{
  tUInt8 DEF_slave_awvalid_AND_slave_xactor_f_wr_addr_i_not_ETC___d195;
  if (PORT_RDY_slave_m_awvalid)
  {
    DEF_slave_xactor_f_wr_addr_i_notFull____d194 = INST_slave_xactor_f_wr_addr.METH_i_notFull();
    DEF_slave_awvalid_AND_slave_xactor_f_wr_addr_i_not_ETC___d195 = ARG_slave_awvalid && DEF_slave_xactor_f_wr_addr_i_notFull____d194;
    DEF_slave_awaddr_CONCAT_slave_awprot___d196.set_bits_in_word((tUInt8)(ARG_slave_awaddr >> 61u),
								 2u,
								 0u,
								 3u).set_whole_word((tUInt32)(ARG_slave_awaddr >> 29u),
										    1u).set_whole_word((((tUInt32)(536870911u & ARG_slave_awaddr)) << 3u) | (tUInt32)(ARG_slave_awprot),
												       0u);
    if (DEF_slave_awvalid_AND_slave_xactor_f_wr_addr_i_not_ETC___d195)
      INST_slave_xactor_f_wr_addr.METH_enq(DEF_slave_awaddr_CONCAT_slave_awprot___d196);
  }
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_awvalid()
{
  tUInt8 DEF_CAN_FIRE_slave_m_awvalid;
  DEF_CAN_FIRE_slave_m_awvalid = (tUInt8)1u;
  PORT_RDY_slave_m_awvalid = DEF_CAN_FIRE_slave_m_awvalid;
  return PORT_RDY_slave_m_awvalid;
}

tUInt8 MOD_mkUART::METH_slave_m_awready()
{
  DEF_slave_xactor_f_wr_addr_i_notFull____d194 = INST_slave_xactor_f_wr_addr.METH_i_notFull();
  PORT_slave_awready = DEF_slave_xactor_f_wr_addr_i_notFull____d194;
  return PORT_slave_awready;
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_awready()
{
  tUInt8 PORT_RDY_slave_m_awready;
  tUInt8 DEF_CAN_FIRE_slave_m_awready;
  DEF_CAN_FIRE_slave_m_awready = (tUInt8)1u;
  PORT_RDY_slave_m_awready = DEF_CAN_FIRE_slave_m_awready;
  return PORT_RDY_slave_m_awready;
}

void MOD_mkUART::METH_slave_m_wvalid(tUInt8 ARG_slave_wvalid,
				     tUInt64 ARG_slave_wdata,
				     tUInt8 ARG_slave_wstrb)
{
  tUInt8 DEF_slave_wvalid_AND_slave_xactor_f_wr_data_i_notF_ETC___d198;
  if (PORT_RDY_slave_m_wvalid)
  {
    DEF_slave_xactor_f_wr_data_i_notFull____d197 = INST_slave_xactor_f_wr_data.METH_i_notFull();
    DEF_slave_wvalid_AND_slave_xactor_f_wr_data_i_notF_ETC___d198 = ARG_slave_wvalid && DEF_slave_xactor_f_wr_data_i_notFull____d197;
    DEF_slave_wdata_CONCAT_slave_wstrb___d199.set_bits_in_word((tUInt8)(ARG_slave_wdata >> 56u),
							       2u,
							       0u,
							       8u).set_whole_word((tUInt32)(ARG_slave_wdata >> 24u),
										  1u).set_whole_word((((tUInt32)(16777215u & ARG_slave_wdata)) << 8u) | (tUInt32)(ARG_slave_wstrb),
												     0u);
    if (DEF_slave_wvalid_AND_slave_xactor_f_wr_data_i_notF_ETC___d198)
      INST_slave_xactor_f_wr_data.METH_enq(DEF_slave_wdata_CONCAT_slave_wstrb___d199);
  }
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_wvalid()
{
  tUInt8 DEF_CAN_FIRE_slave_m_wvalid;
  DEF_CAN_FIRE_slave_m_wvalid = (tUInt8)1u;
  PORT_RDY_slave_m_wvalid = DEF_CAN_FIRE_slave_m_wvalid;
  return PORT_RDY_slave_m_wvalid;
}

tUInt8 MOD_mkUART::METH_slave_m_wready()
{
  DEF_slave_xactor_f_wr_data_i_notFull____d197 = INST_slave_xactor_f_wr_data.METH_i_notFull();
  PORT_slave_wready = DEF_slave_xactor_f_wr_data_i_notFull____d197;
  return PORT_slave_wready;
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_wready()
{
  tUInt8 PORT_RDY_slave_m_wready;
  tUInt8 DEF_CAN_FIRE_slave_m_wready;
  DEF_CAN_FIRE_slave_m_wready = (tUInt8)1u;
  PORT_RDY_slave_m_wready = DEF_CAN_FIRE_slave_m_wready;
  return PORT_RDY_slave_m_wready;
}

tUInt8 MOD_mkUART::METH_slave_m_bvalid()
{
  DEF_slave_xactor_f_wr_resp_i_notEmpty____d200 = INST_slave_xactor_f_wr_resp.METH_i_notEmpty();
  PORT_slave_bvalid = DEF_slave_xactor_f_wr_resp_i_notEmpty____d200;
  return PORT_slave_bvalid;
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_bvalid()
{
  tUInt8 PORT_RDY_slave_m_bvalid;
  tUInt8 DEF_CAN_FIRE_slave_m_bvalid;
  DEF_CAN_FIRE_slave_m_bvalid = (tUInt8)1u;
  PORT_RDY_slave_m_bvalid = DEF_CAN_FIRE_slave_m_bvalid;
  return PORT_RDY_slave_m_bvalid;
}

tUInt8 MOD_mkUART::METH_slave_m_bresp()
{
  PORT_slave_bresp = INST_slave_xactor_f_wr_resp.METH_first();
  return PORT_slave_bresp;
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_bresp()
{
  tUInt8 PORT_RDY_slave_m_bresp;
  tUInt8 DEF_CAN_FIRE_slave_m_bresp;
  DEF_CAN_FIRE_slave_m_bresp = (tUInt8)1u;
  PORT_RDY_slave_m_bresp = DEF_CAN_FIRE_slave_m_bresp;
  return PORT_RDY_slave_m_bresp;
}

void MOD_mkUART::METH_slave_m_bready(tUInt8 ARG_slave_bready)
{
  tUInt8 DEF_slave_bready_AND_slave_xactor_f_wr_resp_i_notE_ETC___d201;
  if (PORT_RDY_slave_m_bready)
  {
    DEF_slave_xactor_f_wr_resp_i_notEmpty____d200 = INST_slave_xactor_f_wr_resp.METH_i_notEmpty();
    DEF_slave_bready_AND_slave_xactor_f_wr_resp_i_notE_ETC___d201 = ARG_slave_bready && DEF_slave_xactor_f_wr_resp_i_notEmpty____d200;
    if (DEF_slave_bready_AND_slave_xactor_f_wr_resp_i_notE_ETC___d201)
      INST_slave_xactor_f_wr_resp.METH_deq();
  }
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_bready()
{
  tUInt8 DEF_CAN_FIRE_slave_m_bready;
  DEF_CAN_FIRE_slave_m_bready = (tUInt8)1u;
  PORT_RDY_slave_m_bready = DEF_CAN_FIRE_slave_m_bready;
  return PORT_RDY_slave_m_bready;
}

void MOD_mkUART::METH_slave_m_arvalid(tUInt8 ARG_slave_arvalid,
				      tUInt64 ARG_slave_araddr,
				      tUInt8 ARG_slave_arprot,
				      tUInt8 ARG_slave_aruser)
{
  tUInt8 DEF_slave_arvalid_AND_slave_xactor_f_rd_addr_i_not_ETC___d203;
  if (PORT_RDY_slave_m_arvalid)
  {
    DEF_slave_xactor_f_rd_addr_i_notFull____d202 = INST_slave_xactor_f_rd_addr.METH_i_notFull();
    DEF_slave_arvalid_AND_slave_xactor_f_rd_addr_i_not_ETC___d203 = ARG_slave_arvalid && DEF_slave_xactor_f_rd_addr_i_notFull____d202;
    DEF_slave_araddr_CONCAT_slave_arprot___d204.set_bits_in_word((tUInt8)(ARG_slave_araddr >> 61u),
								 2u,
								 0u,
								 3u).set_whole_word((tUInt32)(ARG_slave_araddr >> 29u),
										    1u).set_whole_word((((tUInt32)(536870911u & ARG_slave_araddr)) << 3u) | (tUInt32)(ARG_slave_arprot),
												       0u);
    if (DEF_slave_arvalid_AND_slave_xactor_f_rd_addr_i_not_ETC___d203)
      INST_slave_xactor_f_rd_addr.METH_enq(DEF_slave_araddr_CONCAT_slave_arprot___d204);
  }
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_arvalid()
{
  tUInt8 DEF_CAN_FIRE_slave_m_arvalid;
  DEF_CAN_FIRE_slave_m_arvalid = (tUInt8)1u;
  PORT_RDY_slave_m_arvalid = DEF_CAN_FIRE_slave_m_arvalid;
  return PORT_RDY_slave_m_arvalid;
}

tUInt8 MOD_mkUART::METH_slave_m_arready()
{
  DEF_slave_xactor_f_rd_addr_i_notFull____d202 = INST_slave_xactor_f_rd_addr.METH_i_notFull();
  PORT_slave_arready = DEF_slave_xactor_f_rd_addr_i_notFull____d202;
  return PORT_slave_arready;
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_arready()
{
  tUInt8 PORT_RDY_slave_m_arready;
  tUInt8 DEF_CAN_FIRE_slave_m_arready;
  DEF_CAN_FIRE_slave_m_arready = (tUInt8)1u;
  PORT_RDY_slave_m_arready = DEF_CAN_FIRE_slave_m_arready;
  return PORT_RDY_slave_m_arready;
}

tUInt8 MOD_mkUART::METH_slave_m_rvalid()
{
  DEF_slave_xactor_f_rd_data_i_notEmpty____d205 = INST_slave_xactor_f_rd_data.METH_i_notEmpty();
  PORT_slave_rvalid = DEF_slave_xactor_f_rd_data_i_notEmpty____d205;
  return PORT_slave_rvalid;
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_rvalid()
{
  tUInt8 PORT_RDY_slave_m_rvalid;
  tUInt8 DEF_CAN_FIRE_slave_m_rvalid;
  DEF_CAN_FIRE_slave_m_rvalid = (tUInt8)1u;
  PORT_RDY_slave_m_rvalid = DEF_CAN_FIRE_slave_m_rvalid;
  return PORT_RDY_slave_m_rvalid;
}

tUInt8 MOD_mkUART::METH_slave_m_rresp()
{
  DEF_slave_xactor_f_rd_data_first____d206 = INST_slave_xactor_f_rd_data.METH_first();
  PORT_slave_rresp = DEF_slave_xactor_f_rd_data_first____d206.get_bits_in_word8(2u, 0u, 2u);
  return PORT_slave_rresp;
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_rresp()
{
  tUInt8 PORT_RDY_slave_m_rresp;
  tUInt8 DEF_CAN_FIRE_slave_m_rresp;
  DEF_CAN_FIRE_slave_m_rresp = (tUInt8)1u;
  PORT_RDY_slave_m_rresp = DEF_CAN_FIRE_slave_m_rresp;
  return PORT_RDY_slave_m_rresp;
}

tUInt64 MOD_mkUART::METH_slave_m_rdata()
{
  DEF_slave_xactor_f_rd_data_first____d206 = INST_slave_xactor_f_rd_data.METH_first();
  PORT_slave_rdata = primExtract64(64u,
				   66u,
				   DEF_slave_xactor_f_rd_data_first____d206,
				   32u,
				   63u,
				   32u,
				   0u);
  return PORT_slave_rdata;
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_rdata()
{
  tUInt8 PORT_RDY_slave_m_rdata;
  tUInt8 DEF_CAN_FIRE_slave_m_rdata;
  DEF_CAN_FIRE_slave_m_rdata = (tUInt8)1u;
  PORT_RDY_slave_m_rdata = DEF_CAN_FIRE_slave_m_rdata;
  return PORT_RDY_slave_m_rdata;
}

void MOD_mkUART::METH_slave_m_rready(tUInt8 ARG_slave_rready)
{
  tUInt8 DEF_slave_rready_AND_slave_xactor_f_rd_data_i_notE_ETC___d207;
  if (PORT_RDY_slave_m_rready)
  {
    DEF_slave_xactor_f_rd_data_i_notEmpty____d205 = INST_slave_xactor_f_rd_data.METH_i_notEmpty();
    DEF_slave_rready_AND_slave_xactor_f_rd_data_i_notE_ETC___d207 = ARG_slave_rready && DEF_slave_xactor_f_rd_data_i_notEmpty____d205;
    if (DEF_slave_rready_AND_slave_xactor_f_rd_data_i_notE_ETC___d207)
      INST_slave_xactor_f_rd_data.METH_deq();
  }
}

tUInt8 MOD_mkUART::METH_RDY_slave_m_rready()
{
  tUInt8 DEF_CAN_FIRE_slave_m_rready;
  DEF_CAN_FIRE_slave_m_rready = (tUInt8)1u;
  PORT_RDY_slave_m_rready = DEF_CAN_FIRE_slave_m_rready;
  return PORT_RDY_slave_m_rready;
}

tUInt8 MOD_mkUART::METH_get_to_console_get()
{
  tUInt8 DEF_get_to_console_get__avValue1;
  tUInt8 PORT_get_to_console_get;
  DEF_get_to_console_get__avValue1 = INST_f_to_console.METH_first();
  PORT_get_to_console_get = DEF_get_to_console_get__avValue1;
  INST_f_to_console.METH_deq();
  return PORT_get_to_console_get;
}

tUInt8 MOD_mkUART::METH_RDY_get_to_console_get()
{
  tUInt8 DEF_CAN_FIRE_get_to_console_get;
  tUInt8 PORT_RDY_get_to_console_get;
  DEF_CAN_FIRE_get_to_console_get = INST_f_to_console.METH_i_notEmpty();
  PORT_RDY_get_to_console_get = DEF_CAN_FIRE_get_to_console_get;
  return PORT_RDY_get_to_console_get;
}

void MOD_mkUART::METH_put_from_console_put(tUInt8 ARG_put_from_console_put)
{
  INST_f_from_console.METH_enq(ARG_put_from_console_put);
}

tUInt8 MOD_mkUART::METH_RDY_put_from_console_put()
{
  tUInt8 DEF_CAN_FIRE_put_from_console_put;
  tUInt8 PORT_RDY_put_from_console_put;
  DEF_CAN_FIRE_put_from_console_put = INST_f_from_console.METH_i_notFull();
  PORT_RDY_put_from_console_put = DEF_CAN_FIRE_put_from_console_put;
  return PORT_RDY_put_from_console_put;
}


/* Reset routines */

void MOD_mkUART::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_slave_xactor_f_wr_resp.reset_RST(ARG_rst_in);
  INST_slave_xactor_f_wr_data.reset_RST(ARG_rst_in);
  INST_slave_xactor_f_wr_addr.reset_RST(ARG_rst_in);
  INST_slave_xactor_f_rd_data.reset_RST(ARG_rst_in);
  INST_slave_xactor_f_rd_addr.reset_RST(ARG_rst_in);
  INST_rg_state.reset_RST(ARG_rst_in);
  INST_rg_lsr.reset_RST(ARG_rst_in);
  INST_f_to_console.reset_RST(ARG_rst_in);
  INST_f_reset_rsps.reset_RST(ARG_rst_in);
  INST_f_reset_reqs.reset_RST(ARG_rst_in);
  INST_f_from_console.reset_RST(ARG_rst_in);
  INST_cfg_verbosity.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkUART::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkUART::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_cfg_verbosity.dump_state(indent + 2u);
  INST_f_from_console.dump_state(indent + 2u);
  INST_f_reset_reqs.dump_state(indent + 2u);
  INST_f_reset_rsps.dump_state(indent + 2u);
  INST_f_to_console.dump_state(indent + 2u);
  INST_rg_addr_base.dump_state(indent + 2u);
  INST_rg_addr_lim.dump_state(indent + 2u);
  INST_rg_dlh.dump_state(indent + 2u);
  INST_rg_dll.dump_state(indent + 2u);
  INST_rg_fcr.dump_state(indent + 2u);
  INST_rg_ier.dump_state(indent + 2u);
  INST_rg_iir.dump_state(indent + 2u);
  INST_rg_lcr.dump_state(indent + 2u);
  INST_rg_lsr.dump_state(indent + 2u);
  INST_rg_mcr.dump_state(indent + 2u);
  INST_rg_msr.dump_state(indent + 2u);
  INST_rg_scr.dump_state(indent + 2u);
  INST_rg_state.dump_state(indent + 2u);
  INST_rg_thr.dump_state(indent + 2u);
  INST_slave_xactor_f_rd_addr.dump_state(indent + 2u);
  INST_slave_xactor_f_rd_data.dump_state(indent + 2u);
  INST_slave_xactor_f_wr_addr.dump_state(indent + 2u);
  INST_slave_xactor_f_wr_data.dump_state(indent + 2u);
  INST_slave_xactor_f_wr_resp.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkUART::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 85u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92", 66u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93", 66u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_cfg_verbosity_read_ULE_1_4___d95", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d20", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d118", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read__h1226", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read__h123", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rg_lcr_BIT_7___h3024", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_araddr_CONCAT_slave_arprot___d204", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_awaddr_CONCAT_slave_awprot___d196", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_wdata_CONCAT_slave_wstrb___d199", 72u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_addr_first____d11", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_addr_i_notFull____d202", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_data_first____d206", 66u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_data_i_notEmpty____d205", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_addr_first____d106", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_addr_i_notFull____d194", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_data_first__12_BIT_0___d113", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_data_first____d112", 72u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_data_i_notFull____d197", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_resp_i_notEmpty____d200", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h1598", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h1776", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h2143", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h2377", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h2673", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h3410", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h3630", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h3939", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h4049", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1702", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1852", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h2590", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h2775", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h3602", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_slave_m_arvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_slave_m_awvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_slave_m_bready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_slave_m_rready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_slave_m_wvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_arready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_awready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_bresp", 2u);
  vcd_write_def(sim_hdl, num++, "slave_buser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_bvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_rdata", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_rresp", 2u);
  vcd_write_def(sim_hdl, num++, "slave_ruser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_rvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_wready", 1u);
  num = INST_cfg_verbosity.dump_VCD_defs(num);
  num = INST_f_from_console.dump_VCD_defs(num);
  num = INST_f_reset_reqs.dump_VCD_defs(num);
  num = INST_f_reset_rsps.dump_VCD_defs(num);
  num = INST_f_to_console.dump_VCD_defs(num);
  num = INST_rg_addr_base.dump_VCD_defs(num);
  num = INST_rg_addr_lim.dump_VCD_defs(num);
  num = INST_rg_dlh.dump_VCD_defs(num);
  num = INST_rg_dll.dump_VCD_defs(num);
  num = INST_rg_fcr.dump_VCD_defs(num);
  num = INST_rg_ier.dump_VCD_defs(num);
  num = INST_rg_iir.dump_VCD_defs(num);
  num = INST_rg_lcr.dump_VCD_defs(num);
  num = INST_rg_lsr.dump_VCD_defs(num);
  num = INST_rg_mcr.dump_VCD_defs(num);
  num = INST_rg_msr.dump_VCD_defs(num);
  num = INST_rg_scr.dump_VCD_defs(num);
  num = INST_rg_state.dump_VCD_defs(num);
  num = INST_rg_thr.dump_VCD_defs(num);
  num = INST_slave_xactor_f_rd_addr.dump_VCD_defs(num);
  num = INST_slave_xactor_f_rd_data.dump_VCD_defs(num);
  num = INST_slave_xactor_f_wr_addr.dump_VCD_defs(num);
  num = INST_slave_xactor_f_wr_data.dump_VCD_defs(num);
  num = INST_slave_xactor_f_wr_resp.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkUART::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkUART &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkUART::vcd_defs(tVCDDumpType dt, MOD_mkUART &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 66u);
    vcd_write_x(sim_hdl, num++, 66u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 72u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 66u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 72u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92) != DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92, 66u);
	backing.DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92 = DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92;
      }
      ++num;
      if ((backing.DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93) != DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93, 66u);
	backing.DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93 = DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93;
      }
      ++num;
      if ((backing.DEF_NOT_cfg_verbosity_read_ULE_1_4___d95) != DEF_NOT_cfg_verbosity_read_ULE_1_4___d95)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_cfg_verbosity_read_ULE_1_4___d95, 1u);
	backing.DEF_NOT_cfg_verbosity_read_ULE_1_4___d95 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d95;
      }
      ++num;
      if ((backing.DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17) != DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17, 1u);
	backing.DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17 = DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17;
      }
      ++num;
      if ((backing.DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d20) != DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d20)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d20, 1u);
	backing.DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d20 = DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d20;
      }
      ++num;
      if ((backing.DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115) != DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115, 1u);
	backing.DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115 = DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115;
      }
      ++num;
      if ((backing.DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d118) != DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d118)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d118, 1u);
	backing.DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d118 = DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d118;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF__read__h1226) != DEF__read__h1226)
      {
	vcd_write_val(sim_hdl, num, DEF__read__h1226, 8u);
	backing.DEF__read__h1226 = DEF__read__h1226;
      }
      ++num;
      if ((backing.DEF__read__h123) != DEF__read__h123)
      {
	vcd_write_val(sim_hdl, num, DEF__read__h123, 64u);
	backing.DEF__read__h123 = DEF__read__h123;
      }
      ++num;
      if ((backing.DEF_rg_lcr_BIT_7___h3024) != DEF_rg_lcr_BIT_7___h3024)
      {
	vcd_write_val(sim_hdl, num, DEF_rg_lcr_BIT_7___h3024, 1u);
	backing.DEF_rg_lcr_BIT_7___h3024 = DEF_rg_lcr_BIT_7___h3024;
      }
      ++num;
      if ((backing.DEF_slave_araddr_CONCAT_slave_arprot___d204) != DEF_slave_araddr_CONCAT_slave_arprot___d204)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_araddr_CONCAT_slave_arprot___d204, 67u);
	backing.DEF_slave_araddr_CONCAT_slave_arprot___d204 = DEF_slave_araddr_CONCAT_slave_arprot___d204;
      }
      ++num;
      if ((backing.DEF_slave_awaddr_CONCAT_slave_awprot___d196) != DEF_slave_awaddr_CONCAT_slave_awprot___d196)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_awaddr_CONCAT_slave_awprot___d196, 67u);
	backing.DEF_slave_awaddr_CONCAT_slave_awprot___d196 = DEF_slave_awaddr_CONCAT_slave_awprot___d196;
      }
      ++num;
      if ((backing.DEF_slave_wdata_CONCAT_slave_wstrb___d199) != DEF_slave_wdata_CONCAT_slave_wstrb___d199)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_wdata_CONCAT_slave_wstrb___d199, 72u);
	backing.DEF_slave_wdata_CONCAT_slave_wstrb___d199 = DEF_slave_wdata_CONCAT_slave_wstrb___d199;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14) != DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14, 64u);
	backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16) != DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16, 1u);
	backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19) != DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19, 1u);
	backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12) != DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12, 64u);
	backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_addr_first____d11) != DEF_slave_xactor_f_rd_addr_first____d11)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_addr_first____d11, 67u);
	backing.DEF_slave_xactor_f_rd_addr_first____d11 = DEF_slave_xactor_f_rd_addr_first____d11;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_addr_i_notFull____d202) != DEF_slave_xactor_f_rd_addr_i_notFull____d202)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_addr_i_notFull____d202, 1u);
	backing.DEF_slave_xactor_f_rd_addr_i_notFull____d202 = DEF_slave_xactor_f_rd_addr_i_notFull____d202;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_data_first____d206) != DEF_slave_xactor_f_rd_data_first____d206)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_data_first____d206, 66u);
	backing.DEF_slave_xactor_f_rd_data_first____d206 = DEF_slave_xactor_f_rd_data_first____d206;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_data_i_notEmpty____d205) != DEF_slave_xactor_f_rd_data_i_notEmpty____d205)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_data_i_notEmpty____d205, 1u);
	backing.DEF_slave_xactor_f_rd_data_i_notEmpty____d205 = DEF_slave_xactor_f_rd_data_i_notEmpty____d205;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108) != DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108, 64u);
	backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110) != DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110, 1u);
	backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117) != DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117, 1u);
	backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107) != DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107, 64u);
	backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_addr_first____d106) != DEF_slave_xactor_f_wr_addr_first____d106)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_addr_first____d106, 67u);
	backing.DEF_slave_xactor_f_wr_addr_first____d106 = DEF_slave_xactor_f_wr_addr_first____d106;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_addr_i_notFull____d194) != DEF_slave_xactor_f_wr_addr_i_notFull____d194)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_addr_i_notFull____d194, 1u);
	backing.DEF_slave_xactor_f_wr_addr_i_notFull____d194 = DEF_slave_xactor_f_wr_addr_i_notFull____d194;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_data_first__12_BIT_0___d113) != DEF_slave_xactor_f_wr_data_first__12_BIT_0___d113)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_data_first__12_BIT_0___d113, 1u);
	backing.DEF_slave_xactor_f_wr_data_first__12_BIT_0___d113 = DEF_slave_xactor_f_wr_data_first__12_BIT_0___d113;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_data_first____d112) != DEF_slave_xactor_f_wr_data_first____d112)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_data_first____d112, 72u);
	backing.DEF_slave_xactor_f_wr_data_first____d112 = DEF_slave_xactor_f_wr_data_first____d112;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_data_i_notFull____d197) != DEF_slave_xactor_f_wr_data_i_notFull____d197)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_data_i_notFull____d197, 1u);
	backing.DEF_slave_xactor_f_wr_data_i_notFull____d197 = DEF_slave_xactor_f_wr_data_i_notFull____d197;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_resp_i_notEmpty____d200) != DEF_slave_xactor_f_wr_resp_i_notEmpty____d200)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_resp_i_notEmpty____d200, 1u);
	backing.DEF_slave_xactor_f_wr_resp_i_notEmpty____d200 = DEF_slave_xactor_f_wr_resp_i_notEmpty____d200;
      }
      ++num;
      if ((backing.DEF_v__h1598) != DEF_v__h1598)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h1598, 32u);
	backing.DEF_v__h1598 = DEF_v__h1598;
      }
      ++num;
      if ((backing.DEF_v__h1776) != DEF_v__h1776)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h1776, 32u);
	backing.DEF_v__h1776 = DEF_v__h1776;
      }
      ++num;
      if ((backing.DEF_v__h2143) != DEF_v__h2143)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h2143, 32u);
	backing.DEF_v__h2143 = DEF_v__h2143;
      }
      ++num;
      if ((backing.DEF_v__h2377) != DEF_v__h2377)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h2377, 32u);
	backing.DEF_v__h2377 = DEF_v__h2377;
      }
      ++num;
      if ((backing.DEF_v__h2673) != DEF_v__h2673)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h2673, 32u);
	backing.DEF_v__h2673 = DEF_v__h2673;
      }
      ++num;
      if ((backing.DEF_v__h3410) != DEF_v__h3410)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h3410, 32u);
	backing.DEF_v__h3410 = DEF_v__h3410;
      }
      ++num;
      if ((backing.DEF_v__h3630) != DEF_v__h3630)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h3630, 32u);
	backing.DEF_v__h3630 = DEF_v__h3630;
      }
      ++num;
      if ((backing.DEF_v__h3939) != DEF_v__h3939)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h3939, 32u);
	backing.DEF_v__h3939 = DEF_v__h3939;
      }
      ++num;
      if ((backing.DEF_v__h4049) != DEF_v__h4049)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h4049, 32u);
	backing.DEF_v__h4049 = DEF_v__h4049;
      }
      ++num;
      if ((backing.DEF_x__h1702) != DEF_x__h1702)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1702, 3u);
	backing.DEF_x__h1702 = DEF_x__h1702;
      }
      ++num;
      if ((backing.DEF_x__h1852) != DEF_x__h1852)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1852, 5u);
	backing.DEF_x__h1852 = DEF_x__h1852;
      }
      ++num;
      if ((backing.DEF_x__h2590) != DEF_x__h2590)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h2590, 3u);
	backing.DEF_x__h2590 = DEF_x__h2590;
      }
      ++num;
      if ((backing.DEF_x__h2775) != DEF_x__h2775)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h2775, 5u);
	backing.DEF_x__h2775 = DEF_x__h2775;
      }
      ++num;
      if ((backing.DEF_x__h3602) != DEF_x__h3602)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h3602, 8u);
	backing.DEF_x__h3602 = DEF_x__h3602;
      }
      ++num;
      if ((backing.PORT_RDY_slave_m_arvalid) != PORT_RDY_slave_m_arvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_slave_m_arvalid, 1u);
	backing.PORT_RDY_slave_m_arvalid = PORT_RDY_slave_m_arvalid;
      }
      ++num;
      if ((backing.PORT_RDY_slave_m_awvalid) != PORT_RDY_slave_m_awvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_slave_m_awvalid, 1u);
	backing.PORT_RDY_slave_m_awvalid = PORT_RDY_slave_m_awvalid;
      }
      ++num;
      if ((backing.PORT_RDY_slave_m_bready) != PORT_RDY_slave_m_bready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_slave_m_bready, 1u);
	backing.PORT_RDY_slave_m_bready = PORT_RDY_slave_m_bready;
      }
      ++num;
      if ((backing.PORT_RDY_slave_m_rready) != PORT_RDY_slave_m_rready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_slave_m_rready, 1u);
	backing.PORT_RDY_slave_m_rready = PORT_RDY_slave_m_rready;
      }
      ++num;
      if ((backing.PORT_RDY_slave_m_wvalid) != PORT_RDY_slave_m_wvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_slave_m_wvalid, 1u);
	backing.PORT_RDY_slave_m_wvalid = PORT_RDY_slave_m_wvalid;
      }
      ++num;
      if ((backing.PORT_slave_arready) != PORT_slave_arready)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_arready, 1u);
	backing.PORT_slave_arready = PORT_slave_arready;
      }
      ++num;
      if ((backing.PORT_slave_awready) != PORT_slave_awready)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_awready, 1u);
	backing.PORT_slave_awready = PORT_slave_awready;
      }
      ++num;
      if ((backing.PORT_slave_bresp) != PORT_slave_bresp)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_bresp, 2u);
	backing.PORT_slave_bresp = PORT_slave_bresp;
      }
      ++num;
      if ((backing.PORT_slave_buser) != PORT_slave_buser)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_buser, 0u);
	backing.PORT_slave_buser = PORT_slave_buser;
      }
      ++num;
      if ((backing.PORT_slave_bvalid) != PORT_slave_bvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_bvalid, 1u);
	backing.PORT_slave_bvalid = PORT_slave_bvalid;
      }
      ++num;
      if ((backing.PORT_slave_rdata) != PORT_slave_rdata)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_rdata, 64u);
	backing.PORT_slave_rdata = PORT_slave_rdata;
      }
      ++num;
      if ((backing.PORT_slave_rresp) != PORT_slave_rresp)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_rresp, 2u);
	backing.PORT_slave_rresp = PORT_slave_rresp;
      }
      ++num;
      if ((backing.PORT_slave_ruser) != PORT_slave_ruser)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_ruser, 0u);
	backing.PORT_slave_ruser = PORT_slave_ruser;
      }
      ++num;
      if ((backing.PORT_slave_rvalid) != PORT_slave_rvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_rvalid, 1u);
	backing.PORT_slave_rvalid = PORT_slave_rvalid;
      }
      ++num;
      if ((backing.PORT_slave_wready) != PORT_slave_wready)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_wready, 1u);
	backing.PORT_slave_wready = PORT_slave_wready;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92, 66u);
      backing.DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92 = DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d92;
      vcd_write_val(sim_hdl, num++, DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93, 66u);
      backing.DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93 = DEF_IF_slave_xactor_f_rd_addr_first__1_BITS_66_TO__ETC___d93;
      vcd_write_val(sim_hdl, num++, DEF_NOT_cfg_verbosity_read_ULE_1_4___d95, 1u);
      backing.DEF_NOT_cfg_verbosity_read_ULE_1_4___d95 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d95;
      vcd_write_val(sim_hdl, num++, DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17, 1u);
      backing.DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17 = DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d17;
      vcd_write_val(sim_hdl, num++, DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d20, 1u);
      backing.DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d20 = DEF_NOT_slave_xactor_f_rd_addr_first__1_BITS_66_TO_ETC___d20;
      vcd_write_val(sim_hdl, num++, DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115, 1u);
      backing.DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115 = DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d115;
      vcd_write_val(sim_hdl, num++, DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d118, 1u);
      backing.DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d118 = DEF_NOT_slave_xactor_f_wr_addr_first__06_BITS_66_T_ETC___d118;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF__read__h1226, 8u);
      backing.DEF__read__h1226 = DEF__read__h1226;
      vcd_write_val(sim_hdl, num++, DEF__read__h123, 64u);
      backing.DEF__read__h123 = DEF__read__h123;
      vcd_write_val(sim_hdl, num++, DEF_rg_lcr_BIT_7___h3024, 1u);
      backing.DEF_rg_lcr_BIT_7___h3024 = DEF_rg_lcr_BIT_7___h3024;
      vcd_write_val(sim_hdl, num++, DEF_slave_araddr_CONCAT_slave_arprot___d204, 67u);
      backing.DEF_slave_araddr_CONCAT_slave_arprot___d204 = DEF_slave_araddr_CONCAT_slave_arprot___d204;
      vcd_write_val(sim_hdl, num++, DEF_slave_awaddr_CONCAT_slave_awprot___d196, 67u);
      backing.DEF_slave_awaddr_CONCAT_slave_awprot___d196 = DEF_slave_awaddr_CONCAT_slave_awprot___d196;
      vcd_write_val(sim_hdl, num++, DEF_slave_wdata_CONCAT_slave_wstrb___d199, 72u);
      backing.DEF_slave_wdata_CONCAT_slave_wstrb___d199 = DEF_slave_wdata_CONCAT_slave_wstrb___d199;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14, 64u);
      backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d14;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16, 1u);
      backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d16;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19, 1u);
      backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3_2_ETC___d19;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12, 64u);
      backing.DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12 = DEF_slave_xactor_f_rd_addr_first__1_BITS_66_TO_3___d12;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_addr_first____d11, 67u);
      backing.DEF_slave_xactor_f_rd_addr_first____d11 = DEF_slave_xactor_f_rd_addr_first____d11;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_addr_i_notFull____d202, 1u);
      backing.DEF_slave_xactor_f_rd_addr_i_notFull____d202 = DEF_slave_xactor_f_rd_addr_i_notFull____d202;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_data_first____d206, 66u);
      backing.DEF_slave_xactor_f_rd_data_first____d206 = DEF_slave_xactor_f_rd_data_first____d206;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_data_i_notEmpty____d205, 1u);
      backing.DEF_slave_xactor_f_rd_data_i_notEmpty____d205 = DEF_slave_xactor_f_rd_data_i_notEmpty____d205;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108, 64u);
      backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d108;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110, 1u);
      backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d110;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117, 1u);
      backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3__ETC___d117;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107, 64u);
      backing.DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107 = DEF_slave_xactor_f_wr_addr_first__06_BITS_66_TO_3___d107;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_addr_first____d106, 67u);
      backing.DEF_slave_xactor_f_wr_addr_first____d106 = DEF_slave_xactor_f_wr_addr_first____d106;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_addr_i_notFull____d194, 1u);
      backing.DEF_slave_xactor_f_wr_addr_i_notFull____d194 = DEF_slave_xactor_f_wr_addr_i_notFull____d194;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_data_first__12_BIT_0___d113, 1u);
      backing.DEF_slave_xactor_f_wr_data_first__12_BIT_0___d113 = DEF_slave_xactor_f_wr_data_first__12_BIT_0___d113;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_data_first____d112, 72u);
      backing.DEF_slave_xactor_f_wr_data_first____d112 = DEF_slave_xactor_f_wr_data_first____d112;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_data_i_notFull____d197, 1u);
      backing.DEF_slave_xactor_f_wr_data_i_notFull____d197 = DEF_slave_xactor_f_wr_data_i_notFull____d197;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_resp_i_notEmpty____d200, 1u);
      backing.DEF_slave_xactor_f_wr_resp_i_notEmpty____d200 = DEF_slave_xactor_f_wr_resp_i_notEmpty____d200;
      vcd_write_val(sim_hdl, num++, DEF_v__h1598, 32u);
      backing.DEF_v__h1598 = DEF_v__h1598;
      vcd_write_val(sim_hdl, num++, DEF_v__h1776, 32u);
      backing.DEF_v__h1776 = DEF_v__h1776;
      vcd_write_val(sim_hdl, num++, DEF_v__h2143, 32u);
      backing.DEF_v__h2143 = DEF_v__h2143;
      vcd_write_val(sim_hdl, num++, DEF_v__h2377, 32u);
      backing.DEF_v__h2377 = DEF_v__h2377;
      vcd_write_val(sim_hdl, num++, DEF_v__h2673, 32u);
      backing.DEF_v__h2673 = DEF_v__h2673;
      vcd_write_val(sim_hdl, num++, DEF_v__h3410, 32u);
      backing.DEF_v__h3410 = DEF_v__h3410;
      vcd_write_val(sim_hdl, num++, DEF_v__h3630, 32u);
      backing.DEF_v__h3630 = DEF_v__h3630;
      vcd_write_val(sim_hdl, num++, DEF_v__h3939, 32u);
      backing.DEF_v__h3939 = DEF_v__h3939;
      vcd_write_val(sim_hdl, num++, DEF_v__h4049, 32u);
      backing.DEF_v__h4049 = DEF_v__h4049;
      vcd_write_val(sim_hdl, num++, DEF_x__h1702, 3u);
      backing.DEF_x__h1702 = DEF_x__h1702;
      vcd_write_val(sim_hdl, num++, DEF_x__h1852, 5u);
      backing.DEF_x__h1852 = DEF_x__h1852;
      vcd_write_val(sim_hdl, num++, DEF_x__h2590, 3u);
      backing.DEF_x__h2590 = DEF_x__h2590;
      vcd_write_val(sim_hdl, num++, DEF_x__h2775, 5u);
      backing.DEF_x__h2775 = DEF_x__h2775;
      vcd_write_val(sim_hdl, num++, DEF_x__h3602, 8u);
      backing.DEF_x__h3602 = DEF_x__h3602;
      vcd_write_val(sim_hdl, num++, PORT_RDY_slave_m_arvalid, 1u);
      backing.PORT_RDY_slave_m_arvalid = PORT_RDY_slave_m_arvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_slave_m_awvalid, 1u);
      backing.PORT_RDY_slave_m_awvalid = PORT_RDY_slave_m_awvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_slave_m_bready, 1u);
      backing.PORT_RDY_slave_m_bready = PORT_RDY_slave_m_bready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_slave_m_rready, 1u);
      backing.PORT_RDY_slave_m_rready = PORT_RDY_slave_m_rready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_slave_m_wvalid, 1u);
      backing.PORT_RDY_slave_m_wvalid = PORT_RDY_slave_m_wvalid;
      vcd_write_val(sim_hdl, num++, PORT_slave_arready, 1u);
      backing.PORT_slave_arready = PORT_slave_arready;
      vcd_write_val(sim_hdl, num++, PORT_slave_awready, 1u);
      backing.PORT_slave_awready = PORT_slave_awready;
      vcd_write_val(sim_hdl, num++, PORT_slave_bresp, 2u);
      backing.PORT_slave_bresp = PORT_slave_bresp;
      vcd_write_val(sim_hdl, num++, PORT_slave_buser, 0u);
      backing.PORT_slave_buser = PORT_slave_buser;
      vcd_write_val(sim_hdl, num++, PORT_slave_bvalid, 1u);
      backing.PORT_slave_bvalid = PORT_slave_bvalid;
      vcd_write_val(sim_hdl, num++, PORT_slave_rdata, 64u);
      backing.PORT_slave_rdata = PORT_slave_rdata;
      vcd_write_val(sim_hdl, num++, PORT_slave_rresp, 2u);
      backing.PORT_slave_rresp = PORT_slave_rresp;
      vcd_write_val(sim_hdl, num++, PORT_slave_ruser, 0u);
      backing.PORT_slave_ruser = PORT_slave_ruser;
      vcd_write_val(sim_hdl, num++, PORT_slave_rvalid, 1u);
      backing.PORT_slave_rvalid = PORT_slave_rvalid;
      vcd_write_val(sim_hdl, num++, PORT_slave_wready, 1u);
      backing.PORT_slave_wready = PORT_slave_wready;
    }
}

void MOD_mkUART::vcd_prims(tVCDDumpType dt, MOD_mkUART &backing)
{
  INST_cfg_verbosity.dump_VCD(dt, backing.INST_cfg_verbosity);
  INST_f_from_console.dump_VCD(dt, backing.INST_f_from_console);
  INST_f_reset_reqs.dump_VCD(dt, backing.INST_f_reset_reqs);
  INST_f_reset_rsps.dump_VCD(dt, backing.INST_f_reset_rsps);
  INST_f_to_console.dump_VCD(dt, backing.INST_f_to_console);
  INST_rg_addr_base.dump_VCD(dt, backing.INST_rg_addr_base);
  INST_rg_addr_lim.dump_VCD(dt, backing.INST_rg_addr_lim);
  INST_rg_dlh.dump_VCD(dt, backing.INST_rg_dlh);
  INST_rg_dll.dump_VCD(dt, backing.INST_rg_dll);
  INST_rg_fcr.dump_VCD(dt, backing.INST_rg_fcr);
  INST_rg_ier.dump_VCD(dt, backing.INST_rg_ier);
  INST_rg_iir.dump_VCD(dt, backing.INST_rg_iir);
  INST_rg_lcr.dump_VCD(dt, backing.INST_rg_lcr);
  INST_rg_lsr.dump_VCD(dt, backing.INST_rg_lsr);
  INST_rg_mcr.dump_VCD(dt, backing.INST_rg_mcr);
  INST_rg_msr.dump_VCD(dt, backing.INST_rg_msr);
  INST_rg_scr.dump_VCD(dt, backing.INST_rg_scr);
  INST_rg_state.dump_VCD(dt, backing.INST_rg_state);
  INST_rg_thr.dump_VCD(dt, backing.INST_rg_thr);
  INST_slave_xactor_f_rd_addr.dump_VCD(dt, backing.INST_slave_xactor_f_rd_addr);
  INST_slave_xactor_f_rd_data.dump_VCD(dt, backing.INST_slave_xactor_f_rd_data);
  INST_slave_xactor_f_wr_addr.dump_VCD(dt, backing.INST_slave_xactor_f_wr_addr);
  INST_slave_xactor_f_wr_data.dump_VCD(dt, backing.INST_slave_xactor_f_wr_data);
  INST_slave_xactor_f_wr_resp.dump_VCD(dt, backing.INST_slave_xactor_f_wr_resp);
}
