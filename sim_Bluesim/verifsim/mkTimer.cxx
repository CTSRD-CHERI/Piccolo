/*
 * Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
 * 
 * On Fri Aug 24 12:25:43 BST 2018
 * 
 */
#include "bluesim_primitives.h"
#include "mkTimer.h"


/* String declarations */
static std::string const __str_literal_12("\n", 1u);
static std::string const __str_literal_14("        ", 8u);
static std::string const __str_literal_4("            ", 12u);
static std::string const __str_literal_15("     => ", 8u);
static std::string const __str_literal_11(" }", 2u);
static std::string const __str_literal_3("%0d: ERROR: Timer.rl_process_rd_req: unrecognized addr",
					 54u);
static std::string const __str_literal_26("%0d: ERROR: Timer.rl_process_wr_req: unrecognized addr",
					  54u);
static std::string const __str_literal_2("%0d: Timer.rl_compare: new MTIP = %0d, time = %0d, timecmp = %0d",
					 64u);
static std::string const __str_literal_13("%0d: Timer.rl_process_rd_req: ", 30u);
static std::string const __str_literal_34("%0d: Timer.rl_process_wr_req", 28u);
static std::string const __str_literal_24("%0d: Timer.rl_process_wr_req: Setting MTIME = %0d (old: %0d)",
					  60u);
static std::string const __str_literal_23("%0d: Timer.rl_process_wr_req: Setting MTIMECMP = %0d (MTIME = %0d); delta = %0d",
					  79u);
static std::string const __str_literal_25("%0d: Timer.rl_process_wr_req: Setting [MTIMEH (old %0h) <= new %0h]; [MTIMEL = %0h]",
					  83u);
static std::string const __str_literal_22("%0d: Timer.rl_process_wr_req: new MSIP = %0d", 44u);
static std::string const __str_literal_1("%0d: Timer.rl_reset", 19u);
static std::string const __str_literal_41("%0d: Timer: get_sw_interrupt_req: %x", 36u);
static std::string const __str_literal_40("%0d: Timer: get_timer_interrupt_req: %x", 39u);
static std::string const __str_literal_38("%0d: WARNING: Timer.set_addr_map: addr_base 0x%0h is not 4-Byte-aligned",
					  71u);
static std::string const __str_literal_39("%0d: WARNING: Timer.set_addr_map: addr_lim 0x%0h is not 4-Byte-aligned",
					  70u);
static std::string const __str_literal_7("'h%h", 4u);
static std::string const __str_literal_8(", ", 2u);
static std::string const __str_literal_18("AXI4_LITE_OKAY", 14u);
static std::string const __str_literal_19("AXI4_LITE_SLVERR", 16u);
static std::string const __str_literal_5("AXI4_Lite_Rd_Addr { ", 20u);
static std::string const __str_literal_16("AXI4_Lite_Rd_Data { ", 20u);
static std::string const __str_literal_27("AXI4_Lite_Wr_Addr { ", 20u);
static std::string const __str_literal_31("AXI4_Lite_Wr_Data { ", 20u);
static std::string const __str_literal_35("AXI4_Lite_Wr_Resp { ", 20u);
static std::string const __str_literal_6("araddr: ", 8u);
static std::string const __str_literal_9("arprot: ", 8u);
static std::string const __str_literal_10("aruser: ", 8u);
static std::string const __str_literal_28("awaddr: ", 8u);
static std::string const __str_literal_29("awprot: ", 8u);
static std::string const __str_literal_30("awuser: ", 8u);
static std::string const __str_literal_36("bresp: ", 7u);
static std::string const __str_literal_37("buser: ", 7u);
static std::string const __str_literal_20("rdata: ", 7u);
static std::string const __str_literal_17("rresp: ", 7u);
static std::string const __str_literal_21("ruser: ", 7u);
static std::string const __str_literal_32("wdata: ", 7u);
static std::string const __str_literal_33("wstrb: ", 7u);


/* Constructor */
MOD_mkTimer::MOD_mkTimer(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_cfg_verbosity(simHdl, "cfg_verbosity", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_crg_time(simHdl, "crg_time", this, 64u),
    INST_crg_timecmp(simHdl, "crg_timecmp", this, 64u),
    INST_f_reset_reqs(simHdl, "f_reset_reqs", this, 0u, 2u, 1u, 0u),
    INST_f_reset_rsps(simHdl, "f_reset_rsps", this, 0u, 2u, 1u, 0u),
    INST_f_sw_interrupt_req(simHdl, "f_sw_interrupt_req", this, 1u, 2u, 1u, 0u),
    INST_f_timer_interrupt_req(simHdl, "f_timer_interrupt_req", this, 1u, 2u, 1u, 0u),
    INST_rg_addr_base(simHdl, "rg_addr_base", this, 64u),
    INST_rg_addr_lim(simHdl, "rg_addr_lim", this, 64u),
    INST_rg_msip(simHdl, "rg_msip", this, 1u),
    INST_rg_mtip(simHdl, "rg_mtip", this, 1u),
    INST_rg_state(simHdl, "rg_state", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_slave_xactor_f_rd_addr(simHdl, "slave_xactor_f_rd_addr", this, 67u, 2u, 1u, 0u),
    INST_slave_xactor_f_rd_data(simHdl, "slave_xactor_f_rd_data", this, 66u, 2u, 1u, 0u),
    INST_slave_xactor_f_wr_addr(simHdl, "slave_xactor_f_wr_addr", this, 67u, 2u, 1u, 0u),
    INST_slave_xactor_f_wr_data(simHdl, "slave_xactor_f_wr_data", this, 72u, 2u, 1u, 0u),
    INST_slave_xactor_f_wr_resp(simHdl, "slave_xactor_f_wr_resp", this, 2u, 2u, 1u, 0u),
    PORT_RST_N((tUInt8)1u),
    DEF_slave_xactor_f_wr_data_first____d87(72u),
    DEF_slave_xactor_f_wr_addr_first____d82(67u),
    DEF_v__h4867(2863311530u),
    DEF_v__h4735(2863311530u),
    DEF_v__h4405(2863311530u),
    DEF_v__h4295(2863311530u),
    DEF_v__h3988(2863311530u),
    DEF_v__h3785(2863311530u),
    DEF_v__h3622(2863311530u),
    DEF_v__h3316(2863311530u),
    DEF_v__h3137(2863311530u),
    DEF_v__h2939(2863311530u),
    DEF_v__h2524(2863311530u),
    DEF_v__h2250(2863311530u),
    DEF_v__h2062(2863311530u),
    DEF_v__h1830(2863311530u),
    DEF_slave_xactor_f_rd_addr_first____d32(67u),
    DEF_slave_xactor_f_rd_data_first____d180(66u),
    DEF_slave_wdata_CONCAT_slave_wstrb___d173(72u),
    DEF_slave_araddr_CONCAT_slave_arprot___d178(67u),
    DEF_slave_awaddr_CONCAT_slave_awprot___d170(67u),
    DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74(66u)
{
  PORT_slave_awready = false;
  PORT_slave_wready = false;
  PORT_slave_bvalid = false;
  PORT_slave_bresp = 0u;
  PORT_slave_buser = 0u;
  PORT_slave_arready = false;
  PORT_slave_rvalid = false;
  PORT_slave_rresp = 0u;
  PORT_slave_rdata = 0llu;
  PORT_slave_ruser = 0u;
  PORT_RDY_slave_m_awvalid = false;
  PORT_RDY_slave_m_wvalid = false;
  PORT_RDY_slave_m_bready = false;
  PORT_RDY_slave_m_arvalid = false;
  PORT_RDY_slave_m_rready = false;
  symbol_count = 40u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTimer::init_symbols_0()
{
  init_symbol(&symbols[0u], "_read__h123", SYM_DEF, &DEF__read__h123, 64u);
  init_symbol(&symbols[1u], "byte_addr__h2724", SYM_DEF, &DEF_byte_addr__h2724, 64u);
  init_symbol(&symbols[2u], "cfg_verbosity", SYM_MODULE, &INST_cfg_verbosity);
  init_symbol(&symbols[3u], "crg_time", SYM_MODULE, &INST_crg_time);
  init_symbol(&symbols[4u], "crg_timecmp", SYM_MODULE, &INST_crg_timecmp);
  init_symbol(&symbols[5u], "f_reset_reqs", SYM_MODULE, &INST_f_reset_reqs);
  init_symbol(&symbols[6u], "f_reset_rsps", SYM_MODULE, &INST_f_reset_rsps);
  init_symbol(&symbols[7u], "f_sw_interrupt_req", SYM_MODULE, &INST_f_sw_interrupt_req);
  init_symbol(&symbols[8u], "f_timer_interrupt_req", SYM_MODULE, &INST_f_timer_interrupt_req);
  init_symbol(&symbols[9u], "RDY_slave_m_arvalid", SYM_PORT, &PORT_RDY_slave_m_arvalid, 1u);
  init_symbol(&symbols[10u], "RDY_slave_m_awvalid", SYM_PORT, &PORT_RDY_slave_m_awvalid, 1u);
  init_symbol(&symbols[11u], "RDY_slave_m_bready", SYM_PORT, &PORT_RDY_slave_m_bready, 1u);
  init_symbol(&symbols[12u], "RDY_slave_m_rready", SYM_PORT, &PORT_RDY_slave_m_rready, 1u);
  init_symbol(&symbols[13u], "RDY_slave_m_wvalid", SYM_PORT, &PORT_RDY_slave_m_wvalid, 1u);
  init_symbol(&symbols[14u], "RL_rl_compare", SYM_RULE);
  init_symbol(&symbols[15u], "RL_rl_process_rd_req", SYM_RULE);
  init_symbol(&symbols[16u], "RL_rl_process_wr_req", SYM_RULE);
  init_symbol(&symbols[17u], "RL_rl_reset", SYM_RULE);
  init_symbol(&symbols[18u], "RL_rl_tick_timer", SYM_RULE);
  init_symbol(&symbols[19u], "rg_addr_base", SYM_MODULE, &INST_rg_addr_base);
  init_symbol(&symbols[20u], "rg_addr_lim", SYM_MODULE, &INST_rg_addr_lim);
  init_symbol(&symbols[21u], "rg_msip", SYM_MODULE, &INST_rg_msip);
  init_symbol(&symbols[22u], "rg_msip__h2399", SYM_DEF, &DEF_rg_msip__h2399, 1u);
  init_symbol(&symbols[23u], "rg_mtip", SYM_MODULE, &INST_rg_mtip);
  init_symbol(&symbols[24u], "rg_state", SYM_MODULE, &INST_rg_state);
  init_symbol(&symbols[25u], "slave_arready", SYM_PORT, &PORT_slave_arready, 1u);
  init_symbol(&symbols[26u], "slave_awready", SYM_PORT, &PORT_slave_awready, 1u);
  init_symbol(&symbols[27u], "slave_bresp", SYM_PORT, &PORT_slave_bresp, 2u);
  init_symbol(&symbols[28u], "slave_buser", SYM_PORT, &PORT_slave_buser, 0u);
  init_symbol(&symbols[29u], "slave_bvalid", SYM_PORT, &PORT_slave_bvalid, 1u);
  init_symbol(&symbols[30u], "slave_rdata", SYM_PORT, &PORT_slave_rdata, 64u);
  init_symbol(&symbols[31u], "slave_rresp", SYM_PORT, &PORT_slave_rresp, 2u);
  init_symbol(&symbols[32u], "slave_ruser", SYM_PORT, &PORT_slave_ruser, 0u);
  init_symbol(&symbols[33u], "slave_rvalid", SYM_PORT, &PORT_slave_rvalid, 1u);
  init_symbol(&symbols[34u], "slave_wready", SYM_PORT, &PORT_slave_wready, 1u);
  init_symbol(&symbols[35u], "slave_xactor_f_rd_addr", SYM_MODULE, &INST_slave_xactor_f_rd_addr);
  init_symbol(&symbols[36u], "slave_xactor_f_rd_data", SYM_MODULE, &INST_slave_xactor_f_rd_data);
  init_symbol(&symbols[37u], "slave_xactor_f_wr_addr", SYM_MODULE, &INST_slave_xactor_f_wr_addr);
  init_symbol(&symbols[38u], "slave_xactor_f_wr_data", SYM_MODULE, &INST_slave_xactor_f_wr_data);
  init_symbol(&symbols[39u], "slave_xactor_f_wr_resp", SYM_MODULE, &INST_slave_xactor_f_wr_resp);
}


/* Rule actions */

void MOD_mkTimer::RL_rl_reset()
{
  tUInt32 DEF_v__h1824;
  tUInt8 DEF_NOT_cfg_verbosity_read_EQ_0___d6;
  DEF_x__h3960 = INST_cfg_verbosity.METH_read();
  DEF_NOT_cfg_verbosity_read_EQ_0___d6 = !(DEF_x__h3960 == (tUInt8)0u);
  INST_f_reset_reqs.METH_deq();
  INST_slave_xactor_f_wr_addr.METH_clear();
  INST_slave_xactor_f_wr_data.METH_clear();
  INST_slave_xactor_f_rd_addr.METH_clear();
  INST_slave_xactor_f_wr_resp.METH_clear();
  INST_slave_xactor_f_rd_data.METH_clear();
  INST_f_timer_interrupt_req.METH_clear();
  INST_f_sw_interrupt_req.METH_clear();
  INST_rg_state.METH_write((tUInt8)1u);
  INST_crg_time.METH_port1__write(1llu);
  INST_crg_timecmp.METH_port1__write(0llu);
  INST_rg_mtip.METH_write((tUInt8)0u);
  INST_rg_msip.METH_write((tUInt8)0u);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_EQ_0___d6)
      DEF_v__h1830 = dollar_stime(sim_hdl);
  DEF_v__h1824 = DEF_v__h1830 / 10u;
  INST_f_reset_rsps.METH_enq();
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_EQ_0___d6)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_1, DEF_v__h1824);
}

void MOD_mkTimer::RL_rl_tick_timer()
{
  tUInt64 DEF_x1__h1895;
  DEF_crg_time_port0__read____d10 = INST_crg_time.METH_port0__read();
  DEF_x1__h1895 = DEF_crg_time_port0__read____d10 + 1llu;
  INST_crg_time.METH_port0__write(DEF_x1__h1895);
}

void MOD_mkTimer::RL_rl_compare()
{
  tUInt32 DEF_v__h2056;
  DEF_crg_timecmp_port0__read____d17 = INST_crg_timecmp.METH_port0__read();
  DEF_crg_time_port0__read____d10 = INST_crg_time.METH_port0__read();
  DEF_x__h3960 = INST_cfg_verbosity.METH_read();
  DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19 = !(DEF_crg_time_port0__read____d10 < DEF_crg_timecmp_port0__read____d17);
  DEF_NOT_cfg_verbosity_read_ULE_1_4___d25 = !(DEF_x__h3960 <= (tUInt8)1u);
  INST_rg_mtip.METH_write(DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19);
  INST_f_timer_interrupt_req.METH_enq(DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      DEF_v__h2062 = dollar_stime(sim_hdl);
  DEF_v__h2056 = DEF_v__h2062 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_display(sim_hdl,
		     this,
		     "s,32,1,64,64",
		     &__str_literal_2,
		     DEF_v__h2056,
		     DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19,
		     DEF_crg_time_port0__read____d10,
		     DEF_crg_timecmp_port0__read____d17);
}

void MOD_mkTimer::RL_rl_process_rd_req()
{
  tUInt32 DEF_v__h2244;
  tUInt32 DEF_v__h2518;
  tUInt8 DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52;
  tUInt8 DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d78;
  tUInt8 DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d77;
  tUInt64 DEF_byte_addr__h2164;
  tUInt8 DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d61;
  tUInt64 DEF_rdata__h2181;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d36;
  tUInt64 DEF_rdr_rdata__h2386;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d38;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d40;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d42;
  tUInt64 DEF_rdata__h2205;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d44;
  tUInt64 DEF_rdata__h2211;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d46;
  tUInt8 DEF_slave_xactor_f_rd_addr_first__2_BITS_2_TO_0___d55;
  tUInt32 DEF_x__h2454;
  tUInt32 DEF_x__h2423;
  tUInt64 DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3___d33;
  DEF_slave_xactor_f_rd_addr_first____d32 = INST_slave_xactor_f_rd_addr.METH_first();
  DEF_crg_timecmp_port0__read____d17 = INST_crg_timecmp.METH_port0__read();
  DEF_crg_time_port0__read____d10 = INST_crg_time.METH_port0__read();
  DEF_x__h3960 = INST_cfg_verbosity.METH_read();
  DEF__read__h123 = INST_rg_addr_base.METH_read();
  DEF_rg_msip__h2399 = INST_rg_msip.METH_read();
  DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3___d33 = primExtract64(64u,
									 67u,
									 DEF_slave_xactor_f_rd_addr_first____d32,
									 32u,
									 66u,
									 32u,
									 3u);
  DEF_x__h2423 = (tUInt32)(DEF_crg_timecmp_port0__read____d17 >> 32u);
  DEF_x__h2454 = (tUInt32)(DEF_crg_time_port0__read____d10 >> 32u);
  DEF_slave_xactor_f_rd_addr_first__2_BITS_2_TO_0___d55 = DEF_slave_xactor_f_rd_addr_first____d32.get_bits_in_word8(0u,
														    0u,
														    3u);
  DEF_rdata__h2211 = (((tUInt64)(0u)) << 32u) | (tUInt64)(DEF_x__h2454);
  DEF_rdata__h2205 = (((tUInt64)(0u)) << 32u) | (tUInt64)(DEF_x__h2423);
  DEF_rdata__h2181 = (tUInt64)(DEF_rg_msip__h2399);
  DEF_byte_addr__h2164 = DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3___d33 - DEF__read__h123;
  DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d46 = DEF_byte_addr__h2164 == 49148llu;
  DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d44 = DEF_byte_addr__h2164 == 16388llu;
  DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d42 = DEF_byte_addr__h2164 == 4llu;
  DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d38 = DEF_byte_addr__h2164 == 16384llu;
  DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d40 = DEF_byte_addr__h2164 == 49144llu;
  switch (DEF_byte_addr__h2164) {
  case 0llu:
    DEF_rdr_rdata__h2386 = DEF_rdata__h2181;
    break;
  case 16384llu:
    DEF_rdr_rdata__h2386 = DEF_crg_timecmp_port0__read____d17;
    break;
  case 49144llu:
    DEF_rdr_rdata__h2386 = DEF_crg_time_port0__read____d10;
    break;
  case 16388llu:
    DEF_rdr_rdata__h2386 = DEF_rdata__h2205;
    break;
  case 49148llu:
    DEF_rdr_rdata__h2386 = DEF_rdata__h2211;
    break;
  default:
    DEF_rdr_rdata__h2386 = 0llu;
  }
  DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d36 = DEF_byte_addr__h2164 == 0llu;
  switch (DEF_byte_addr__h2164) {
  case 0llu:
  case 4llu:
  case 16384llu:
  case 16388llu:
  case 49144llu:
  case 49148llu:
    DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d61 = (tUInt8)0u;
    break;
  default:
    DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d61 = (tUInt8)2u;
  }
  DEF_NOT_cfg_verbosity_read_ULE_1_4___d25 = !(DEF_x__h3960 <= (tUInt8)1u);
  DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d77 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d25 && (DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d36 || (DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d38 || (DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d40 || (DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d42 || (DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d44 || DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d46)))));
  DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52 = !DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d36 && (!DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d38 && (!DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d40 && (!DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d42 && (!DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d44 && !DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3_3_ETC___d46))));
  DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d78 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d25 && DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52;
  DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74.build_concat(17179869183llu & ((((tUInt64)(DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d61)) << 32u) | (tUInt64)((tUInt32)(DEF_rdr_rdata__h2386 >> 32u))),
									    32u,
									    34u).set_whole_word((tUInt32)(DEF_rdr_rdata__h2386),
												0u);
  INST_slave_xactor_f_rd_addr.METH_deq();
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52)
      DEF_v__h2250 = dollar_stime(sim_hdl);
  DEF_v__h2244 = DEF_v__h2250 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_3, DEF_v__h2244);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52)
      dollar_write(sim_hdl, this, "s", &__str_literal_4);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_5, &__str_literal_6);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_7,
		   DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3___d33);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_9);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52)
      dollar_write(sim_hdl,
		   this,
		   "s,3",
		   &__str_literal_7,
		   DEF_slave_xactor_f_rd_addr_first__2_BITS_2_TO_0___d55);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_10);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_7, (tUInt8)0u, &__str_literal_11);
    if (DEF_NOT_slave_xactor_f_rd_addr_first__2_BITS_66_TO_ETC___d52)
      dollar_write(sim_hdl, this, "s", &__str_literal_12);
  }
  INST_slave_xactor_f_rd_data.METH_enq(DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      DEF_v__h2524 = dollar_stime(sim_hdl);
  DEF_v__h2518 = DEF_v__h2524 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_13, DEF_v__h2518);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s", &__str_literal_14);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_5, &__str_literal_6);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_7,
		   DEF_slave_xactor_f_rd_addr_first__2_BITS_66_TO_3___d33);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_9);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl,
		   this,
		   "s,3",
		   &__str_literal_7,
		   DEF_slave_xactor_f_rd_addr_first__2_BITS_2_TO_0___d55);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_10);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_7, (tUInt8)0u, &__str_literal_11);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s", &__str_literal_12);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s", &__str_literal_15);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_16, &__str_literal_17);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d77)
      dollar_write(sim_hdl, this, "s", &__str_literal_18);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d78)
      dollar_write(sim_hdl, this, "s", &__str_literal_19);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_20);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,64", &__str_literal_7, DEF_rdr_rdata__h2386);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_21);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_7, (tUInt8)0u, &__str_literal_11);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s", &__str_literal_12);
  }
}

void MOD_mkTimer::RL_rl_process_wr_req()
{
  tUInt64 DEF_slave_xactor_f_wr_data_first__7_BITS_71_TO_8_0_ETC___d117;
  tUInt32 DEF_v__h3982;
  tUInt32 DEF_v__h2933;
  tUInt32 DEF_v__h3131;
  tUInt32 DEF_v__h3310;
  tUInt32 DEF_v__h3616;
  tUInt32 DEF_v__h3779;
  tUInt8 DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d156;
  tUInt8 DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d157;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d98;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d100;
  tUInt8 DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d123;
  tUInt8 DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d106;
  tUInt8 DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143;
  tUInt8 DEF_NOT_rg_msip_2_EQ_slave_xactor_f_wr_data_first__ETC___d97;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d113;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d127;
  tUInt8 DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d118;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d130;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d135;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d104;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d120;
  tUInt8 DEF_IF_slave_xactor_f_wr_addr_first__2_BITS_66_TO__ETC___d153;
  tUInt64 DEF_x1__h3422;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d103;
  tUInt64 DEF_IF_slave_xactor_f_wr_addr_first__2_BITS_66_TO__ETC___d112;
  tUInt64 DEF_x1__h3519;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d119;
  tUInt64 DEF_IF_slave_xactor_f_wr_addr_first__2_BITS_66_TO__ETC___d126;
  tUInt8 DEF_slave_xactor_f_wr_addr_first__2_BITS_2_TO_0___d146;
  tUInt8 DEF_slave_xactor_f_wr_data_first__7_BITS_7_TO_0___d147;
  tUInt32 DEF_crg_time_port1__read__16_BITS_31_TO_0___d124;
  tUInt32 DEF_crg_time_port1__read__16_BITS_63_TO_32___d133;
  tUInt32 DEF_slave_xactor_f_wr_data_first__7_BITS_39_TO_8___d108;
  tUInt64 DEF_x1__h3065;
  tUInt64 DEF_y__h3177;
  DEF_slave_xactor_f_wr_data_first____d87 = INST_slave_xactor_f_wr_data.METH_first();
  DEF_slave_xactor_f_wr_addr_first____d82 = INST_slave_xactor_f_wr_addr.METH_first();
  DEF_y__h3177 = INST_crg_time.METH_port1__read();
  DEF__read__h123 = INST_rg_addr_base.METH_read();
  DEF_rg_msip__h2399 = INST_rg_msip.METH_read();
  DEF_x__h3960 = INST_cfg_verbosity.METH_read();
  DEF_x1__h3065 = primExtract64(64u, 72u, DEF_slave_xactor_f_wr_data_first____d87, 32u, 71u, 32u, 8u);
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83 = primExtract64(64u,
									 67u,
									 DEF_slave_xactor_f_wr_addr_first____d82,
									 32u,
									 66u,
									 32u,
									 3u);
  DEF_byte_addr__h2724 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83 - DEF__read__h123;
  DEF_slave_xactor_f_wr_data_first__7_BITS_39_TO_8___d108 = primExtract32(32u,
									  72u,
									  DEF_slave_xactor_f_wr_data_first____d87,
									  32u,
									  39u,
									  32u,
									  8u);
  DEF_crg_time_port1__read__16_BITS_63_TO_32___d133 = (tUInt32)(DEF_y__h3177 >> 32u);
  DEF_crg_time_port1__read__16_BITS_31_TO_0___d124 = (tUInt32)(DEF_y__h3177);
  DEF_slave_xactor_f_wr_addr_first__2_BITS_2_TO_0___d146 = DEF_slave_xactor_f_wr_addr_first____d82.get_bits_in_word8(0u,
														     0u,
														     3u);
  DEF_slave_xactor_f_wr_data_first__7_BITS_7_TO_0___d147 = DEF_slave_xactor_f_wr_data_first____d87.get_bits_in_word8(0u,
														     0u,
														     8u);
  DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88 = DEF_slave_xactor_f_wr_data_first____d87.get_bits_in_word8(0u,
													      8u,
													      1u);
  DEF_rg_msip_2_EQ_slave_xactor_f_wr_data_first__7_B_ETC___d89 = DEF_rg_msip__h2399 == DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88;
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d119 = DEF_byte_addr__h2724 == 49144llu;
  DEF_x1__h3519 = (((tUInt64)(DEF_slave_xactor_f_wr_data_first__7_BITS_39_TO_8___d108)) << 32u) | (tUInt64)(DEF_crg_time_port1__read__16_BITS_31_TO_0___d124);
  DEF_IF_slave_xactor_f_wr_addr_first__2_BITS_66_TO__ETC___d126 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d119 ? DEF_x1__h3065 : DEF_x1__h3519;
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d103 = DEF_byte_addr__h2724 == 16384llu;
  DEF_x1__h3422 = (((tUInt64)(DEF_slave_xactor_f_wr_data_first__7_BITS_39_TO_8___d108)) << 32u) | (tUInt64)((tUInt32)(INST_crg_timecmp.METH_port1__read()));
  DEF_IF_slave_xactor_f_wr_addr_first__2_BITS_66_TO__ETC___d112 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d103 ? DEF_x1__h3065 : DEF_x1__h3422;
  switch (DEF_byte_addr__h2724) {
  case 0llu:
  case 4llu:
  case 16384llu:
  case 16388llu:
  case 49144llu:
  case 49148llu:
    DEF_IF_slave_xactor_f_wr_addr_first__2_BITS_66_TO__ETC___d153 = (tUInt8)0u;
    break;
  default:
    DEF_IF_slave_xactor_f_wr_addr_first__2_BITS_66_TO__ETC___d153 = (tUInt8)2u;
  }
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d120 = DEF_byte_addr__h2724 == 49148llu;
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d104 = DEF_byte_addr__h2724 == 16388llu;
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d135 = DEF_byte_addr__h2724 == 4llu;
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85 = DEF_byte_addr__h2724 == 0llu;
  DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86 = !DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85;
  DEF_NOT_cfg_verbosity_read_ULE_1_4___d25 = !(DEF_x__h3960 <= (tUInt8)1u);
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d130 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d120 && DEF_NOT_cfg_verbosity_read_ULE_1_4___d25;
  DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d118 = !DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d103;
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d127 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d119 && DEF_NOT_cfg_verbosity_read_ULE_1_4___d25;
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d113 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d103 && DEF_NOT_cfg_verbosity_read_ULE_1_4___d25;
  DEF_NOT_rg_msip_2_EQ_slave_xactor_f_wr_data_first__ETC___d97 = !DEF_rg_msip_2_EQ_slave_xactor_f_wr_data_first__7_B_ETC___d89;
  DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143 = DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86 && (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d118 && (!DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d119 && (!DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d135 && (!DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d104 && !DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d120))));
  DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d106 = DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86 && (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d103 || DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d104);
  DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d123 = DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86 && (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d118 && (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d119 || DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d120));
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d100 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85 && (DEF_NOT_rg_msip_2_EQ_slave_xactor_f_wr_data_first__ETC___d97 && DEF_NOT_cfg_verbosity_read_ULE_1_4___d25);
  DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d98 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85 && DEF_NOT_rg_msip_2_EQ_slave_xactor_f_wr_data_first__ETC___d97;
  DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d157 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d25 && DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143;
  DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d156 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d25 && (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85 || (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d103 || (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d119 || (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d135 || (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d104 || DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d120)))));
  DEF_slave_xactor_f_wr_data_first__7_BITS_71_TO_8_0_ETC___d117 = DEF_x1__h3065 - DEF_y__h3177;
  INST_slave_xactor_f_wr_addr.METH_deq();
  INST_slave_xactor_f_wr_data.METH_deq();
  if (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d98)
    INST_rg_msip.METH_write(DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88);
  if (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d98)
    INST_f_sw_interrupt_req.METH_enq(DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d100)
      DEF_v__h2939 = dollar_stime(sim_hdl);
  DEF_v__h2933 = DEF_v__h2939 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d100)
      dollar_display(sim_hdl,
		     this,
		     "s,32,1",
		     &__str_literal_22,
		     DEF_v__h2933,
		     DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88);
  if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d106)
    INST_crg_timecmp.METH_port1__write(DEF_IF_slave_xactor_f_wr_addr_first__2_BITS_66_TO__ETC___d112);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d113)
      DEF_v__h3137 = dollar_stime(sim_hdl);
  DEF_v__h3131 = DEF_v__h3137 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d113)
      dollar_display(sim_hdl,
		     this,
		     "s,32,64,64,64",
		     &__str_literal_23,
		     DEF_v__h3131,
		     DEF_x1__h3065,
		     DEF_y__h3177,
		     DEF_slave_xactor_f_wr_data_first__7_BITS_71_TO_8_0_ETC___d117);
  if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d123)
    INST_crg_time.METH_port1__write(DEF_IF_slave_xactor_f_wr_addr_first__2_BITS_66_TO__ETC___d126);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d127)
      DEF_v__h3316 = dollar_stime(sim_hdl);
  DEF_v__h3310 = DEF_v__h3316 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d127)
      dollar_display(sim_hdl,
		     this,
		     "s,32,64,64",
		     &__str_literal_24,
		     DEF_v__h3310,
		     DEF_x1__h3065,
		     DEF_y__h3177);
    if (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d130)
      DEF_v__h3622 = dollar_stime(sim_hdl);
  }
  DEF_v__h3616 = DEF_v__h3622 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d130)
      dollar_display(sim_hdl,
		     this,
		     "s,32,32,32,32",
		     &__str_literal_25,
		     DEF_v__h3616,
		     DEF_crg_time_port1__read__16_BITS_63_TO_32___d133,
		     DEF_slave_xactor_f_wr_data_first__7_BITS_39_TO_8___d108,
		     DEF_crg_time_port1__read__16_BITS_31_TO_0___d124);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      DEF_v__h3785 = dollar_stime(sim_hdl);
  }
  DEF_v__h3779 = DEF_v__h3785 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_26, DEF_v__h3779);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl, this, "s", &__str_literal_4);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_27, &__str_literal_28);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_7,
		   DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_29);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl,
		   this,
		   "s,3",
		   &__str_literal_7,
		   DEF_slave_xactor_f_wr_addr_first__2_BITS_2_TO_0___d146);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_30);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_7, (tUInt8)0u, &__str_literal_11);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl, this, "s", &__str_literal_12);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl, this, "s", &__str_literal_4);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_31, &__str_literal_32);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl, this, "s,64", &__str_literal_7, DEF_x1__h3065);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_33);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl,
		   this,
		   "s,8,s",
		   &__str_literal_7,
		   DEF_slave_xactor_f_wr_data_first__7_BITS_7_TO_0___d147,
		   &__str_literal_11);
    if (DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d143)
      dollar_write(sim_hdl, this, "s", &__str_literal_12);
  }
  INST_slave_xactor_f_wr_resp.METH_enq(DEF_IF_slave_xactor_f_wr_addr_first__2_BITS_66_TO__ETC___d153);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      DEF_v__h3988 = dollar_stime(sim_hdl);
  DEF_v__h3982 = DEF_v__h3988 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_34, DEF_v__h3982);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s", &__str_literal_14);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_27, &__str_literal_28);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl,
		   this,
		   "s,64",
		   &__str_literal_7,
		   DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_29);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl,
		   this,
		   "s,3",
		   &__str_literal_7,
		   DEF_slave_xactor_f_wr_addr_first__2_BITS_2_TO_0___d146);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_30);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_7, (tUInt8)0u, &__str_literal_11);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s", &__str_literal_12);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s", &__str_literal_14);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_31, &__str_literal_32);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,64", &__str_literal_7, DEF_x1__h3065);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_33);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl,
		   this,
		   "s,8,s",
		   &__str_literal_7,
		   DEF_slave_xactor_f_wr_data_first__7_BITS_7_TO_0___d147,
		   &__str_literal_11);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s", &__str_literal_12);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s", &__str_literal_15);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_35, &__str_literal_36);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_slave_xac_ETC___d156)
      dollar_write(sim_hdl, this, "s", &__str_literal_18);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_slave_ETC___d157)
      dollar_write(sim_hdl, this, "s", &__str_literal_19);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,s", &__str_literal_8, &__str_literal_37);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s,0,s", &__str_literal_7, (tUInt8)0u, &__str_literal_11);
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_write(sim_hdl, this, "s", &__str_literal_12);
  }
}


/* Methods */

tUInt8 MOD_mkTimer::METH_slave_m_buser()
{
  PORT_slave_buser = (tUInt8)0u;
  return PORT_slave_buser;
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_buser()
{
  tUInt8 PORT_RDY_slave_m_buser;
  tUInt8 DEF_CAN_FIRE_slave_m_buser;
  DEF_CAN_FIRE_slave_m_buser = (tUInt8)1u;
  PORT_RDY_slave_m_buser = DEF_CAN_FIRE_slave_m_buser;
  return PORT_RDY_slave_m_buser;
}

tUInt8 MOD_mkTimer::METH_slave_m_ruser()
{
  PORT_slave_ruser = (tUInt8)0u;
  return PORT_slave_ruser;
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_ruser()
{
  tUInt8 PORT_RDY_slave_m_ruser;
  tUInt8 DEF_CAN_FIRE_slave_m_ruser;
  DEF_CAN_FIRE_slave_m_ruser = (tUInt8)1u;
  PORT_RDY_slave_m_ruser = DEF_CAN_FIRE_slave_m_ruser;
  return PORT_RDY_slave_m_ruser;
}

void MOD_mkTimer::METH_server_reset_request_put(tUInt8 ARG_server_reset_request_put)
{
  INST_f_reset_reqs.METH_enq();
}

tUInt8 MOD_mkTimer::METH_RDY_server_reset_request_put()
{
  tUInt8 DEF_CAN_FIRE_server_reset_request_put;
  tUInt8 PORT_RDY_server_reset_request_put;
  DEF_CAN_FIRE_server_reset_request_put = INST_f_reset_reqs.METH_i_notFull();
  PORT_RDY_server_reset_request_put = DEF_CAN_FIRE_server_reset_request_put;
  return PORT_RDY_server_reset_request_put;
}

void MOD_mkTimer::METH_server_reset_response_get()
{
  INST_f_reset_rsps.METH_deq();
}

tUInt8 MOD_mkTimer::METH_RDY_server_reset_response_get()
{
  tUInt8 DEF_CAN_FIRE_server_reset_response_get;
  tUInt8 PORT_RDY_server_reset_response_get;
  DEF_CAN_FIRE_server_reset_response_get = INST_f_reset_rsps.METH_i_notEmpty();
  PORT_RDY_server_reset_response_get = DEF_CAN_FIRE_server_reset_response_get;
  return PORT_RDY_server_reset_response_get;
}

void MOD_mkTimer::METH_set_addr_map(tUInt64 ARG_set_addr_map_addr_base,
				    tUInt64 ARG_set_addr_map_addr_lim)
{
  tUInt32 DEF_v__h4289;
  tUInt32 DEF_v__h4399;
  tUInt8 DEF_NOT_set_addr_map_addr_base_BITS_1_TO_0_58_EQ_0_59___d160;
  tUInt8 DEF_NOT_set_addr_map_addr_lim_BITS_1_TO_0_63_EQ_0_64___d165;
  tUInt8 DEF_x__h4244;
  tUInt8 DEF_x__h4358;
  DEF_x__h4358 = (tUInt8)((tUInt8)3u & ARG_set_addr_map_addr_lim);
  DEF_x__h4244 = (tUInt8)((tUInt8)3u & ARG_set_addr_map_addr_base);
  DEF_NOT_set_addr_map_addr_lim_BITS_1_TO_0_63_EQ_0_64___d165 = !(DEF_x__h4358 == (tUInt8)0u);
  DEF_NOT_set_addr_map_addr_base_BITS_1_TO_0_58_EQ_0_59___d160 = !(DEF_x__h4244 == (tUInt8)0u);
  if (DEF_NOT_set_addr_map_addr_base_BITS_1_TO_0_58_EQ_0_59___d160)
    DEF_v__h4295 = dollar_stime(sim_hdl);
  DEF_v__h4289 = DEF_v__h4295 / 10u;
  if (DEF_NOT_set_addr_map_addr_base_BITS_1_TO_0_58_EQ_0_59___d160)
    dollar_display(sim_hdl,
		   this,
		   "s,32,64",
		   &__str_literal_38,
		   DEF_v__h4289,
		   ARG_set_addr_map_addr_base);
  if (DEF_NOT_set_addr_map_addr_lim_BITS_1_TO_0_63_EQ_0_64___d165)
    DEF_v__h4405 = dollar_stime(sim_hdl);
  DEF_v__h4399 = DEF_v__h4405 / 10u;
  if (DEF_NOT_set_addr_map_addr_lim_BITS_1_TO_0_63_EQ_0_64___d165)
    dollar_display(sim_hdl,
		   this,
		   "s,32,64",
		   &__str_literal_39,
		   DEF_v__h4399,
		   ARG_set_addr_map_addr_lim);
  INST_rg_addr_base.METH_write(ARG_set_addr_map_addr_base);
  INST_rg_addr_lim.METH_write(ARG_set_addr_map_addr_lim);
}

tUInt8 MOD_mkTimer::METH_RDY_set_addr_map()
{
  tUInt8 DEF_CAN_FIRE_set_addr_map;
  tUInt8 PORT_RDY_set_addr_map;
  DEF_CAN_FIRE_set_addr_map = (tUInt8)1u;
  PORT_RDY_set_addr_map = DEF_CAN_FIRE_set_addr_map;
  return PORT_RDY_set_addr_map;
}

void MOD_mkTimer::METH_slave_m_awvalid(tUInt8 ARG_slave_awvalid,
				       tUInt64 ARG_slave_awaddr,
				       tUInt8 ARG_slave_awprot,
				       tUInt8 ARG_slave_awuser)
{
  tUInt8 DEF_slave_awvalid_AND_slave_xactor_f_wr_addr_i_not_ETC___d169;
  if (PORT_RDY_slave_m_awvalid)
  {
    DEF_slave_xactor_f_wr_addr_i_notFull____d168 = INST_slave_xactor_f_wr_addr.METH_i_notFull();
    DEF_slave_awvalid_AND_slave_xactor_f_wr_addr_i_not_ETC___d169 = ARG_slave_awvalid && DEF_slave_xactor_f_wr_addr_i_notFull____d168;
    DEF_slave_awaddr_CONCAT_slave_awprot___d170.set_bits_in_word((tUInt8)(ARG_slave_awaddr >> 61u),
								 2u,
								 0u,
								 3u).set_whole_word((tUInt32)(ARG_slave_awaddr >> 29u),
										    1u).set_whole_word((((tUInt32)(536870911u & ARG_slave_awaddr)) << 3u) | (tUInt32)(ARG_slave_awprot),
												       0u);
    if (DEF_slave_awvalid_AND_slave_xactor_f_wr_addr_i_not_ETC___d169)
      INST_slave_xactor_f_wr_addr.METH_enq(DEF_slave_awaddr_CONCAT_slave_awprot___d170);
  }
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_awvalid()
{
  tUInt8 DEF_CAN_FIRE_slave_m_awvalid;
  DEF_CAN_FIRE_slave_m_awvalid = (tUInt8)1u;
  PORT_RDY_slave_m_awvalid = DEF_CAN_FIRE_slave_m_awvalid;
  return PORT_RDY_slave_m_awvalid;
}

tUInt8 MOD_mkTimer::METH_slave_m_awready()
{
  DEF_slave_xactor_f_wr_addr_i_notFull____d168 = INST_slave_xactor_f_wr_addr.METH_i_notFull();
  PORT_slave_awready = DEF_slave_xactor_f_wr_addr_i_notFull____d168;
  return PORT_slave_awready;
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_awready()
{
  tUInt8 PORT_RDY_slave_m_awready;
  tUInt8 DEF_CAN_FIRE_slave_m_awready;
  DEF_CAN_FIRE_slave_m_awready = (tUInt8)1u;
  PORT_RDY_slave_m_awready = DEF_CAN_FIRE_slave_m_awready;
  return PORT_RDY_slave_m_awready;
}

void MOD_mkTimer::METH_slave_m_wvalid(tUInt8 ARG_slave_wvalid,
				      tUInt64 ARG_slave_wdata,
				      tUInt8 ARG_slave_wstrb)
{
  tUInt8 DEF_slave_wvalid_AND_slave_xactor_f_wr_data_i_notF_ETC___d172;
  if (PORT_RDY_slave_m_wvalid)
  {
    DEF_slave_xactor_f_wr_data_i_notFull____d171 = INST_slave_xactor_f_wr_data.METH_i_notFull();
    DEF_slave_wvalid_AND_slave_xactor_f_wr_data_i_notF_ETC___d172 = ARG_slave_wvalid && DEF_slave_xactor_f_wr_data_i_notFull____d171;
    DEF_slave_wdata_CONCAT_slave_wstrb___d173.set_bits_in_word((tUInt8)(ARG_slave_wdata >> 56u),
							       2u,
							       0u,
							       8u).set_whole_word((tUInt32)(ARG_slave_wdata >> 24u),
										  1u).set_whole_word((((tUInt32)(16777215u & ARG_slave_wdata)) << 8u) | (tUInt32)(ARG_slave_wstrb),
												     0u);
    if (DEF_slave_wvalid_AND_slave_xactor_f_wr_data_i_notF_ETC___d172)
      INST_slave_xactor_f_wr_data.METH_enq(DEF_slave_wdata_CONCAT_slave_wstrb___d173);
  }
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_wvalid()
{
  tUInt8 DEF_CAN_FIRE_slave_m_wvalid;
  DEF_CAN_FIRE_slave_m_wvalid = (tUInt8)1u;
  PORT_RDY_slave_m_wvalid = DEF_CAN_FIRE_slave_m_wvalid;
  return PORT_RDY_slave_m_wvalid;
}

tUInt8 MOD_mkTimer::METH_slave_m_wready()
{
  DEF_slave_xactor_f_wr_data_i_notFull____d171 = INST_slave_xactor_f_wr_data.METH_i_notFull();
  PORT_slave_wready = DEF_slave_xactor_f_wr_data_i_notFull____d171;
  return PORT_slave_wready;
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_wready()
{
  tUInt8 PORT_RDY_slave_m_wready;
  tUInt8 DEF_CAN_FIRE_slave_m_wready;
  DEF_CAN_FIRE_slave_m_wready = (tUInt8)1u;
  PORT_RDY_slave_m_wready = DEF_CAN_FIRE_slave_m_wready;
  return PORT_RDY_slave_m_wready;
}

tUInt8 MOD_mkTimer::METH_slave_m_bvalid()
{
  DEF_slave_xactor_f_wr_resp_i_notEmpty____d174 = INST_slave_xactor_f_wr_resp.METH_i_notEmpty();
  PORT_slave_bvalid = DEF_slave_xactor_f_wr_resp_i_notEmpty____d174;
  return PORT_slave_bvalid;
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_bvalid()
{
  tUInt8 PORT_RDY_slave_m_bvalid;
  tUInt8 DEF_CAN_FIRE_slave_m_bvalid;
  DEF_CAN_FIRE_slave_m_bvalid = (tUInt8)1u;
  PORT_RDY_slave_m_bvalid = DEF_CAN_FIRE_slave_m_bvalid;
  return PORT_RDY_slave_m_bvalid;
}

tUInt8 MOD_mkTimer::METH_slave_m_bresp()
{
  PORT_slave_bresp = INST_slave_xactor_f_wr_resp.METH_first();
  return PORT_slave_bresp;
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_bresp()
{
  tUInt8 PORT_RDY_slave_m_bresp;
  tUInt8 DEF_CAN_FIRE_slave_m_bresp;
  DEF_CAN_FIRE_slave_m_bresp = (tUInt8)1u;
  PORT_RDY_slave_m_bresp = DEF_CAN_FIRE_slave_m_bresp;
  return PORT_RDY_slave_m_bresp;
}

void MOD_mkTimer::METH_slave_m_bready(tUInt8 ARG_slave_bready)
{
  tUInt8 DEF_slave_bready_AND_slave_xactor_f_wr_resp_i_notE_ETC___d175;
  if (PORT_RDY_slave_m_bready)
  {
    DEF_slave_xactor_f_wr_resp_i_notEmpty____d174 = INST_slave_xactor_f_wr_resp.METH_i_notEmpty();
    DEF_slave_bready_AND_slave_xactor_f_wr_resp_i_notE_ETC___d175 = ARG_slave_bready && DEF_slave_xactor_f_wr_resp_i_notEmpty____d174;
    if (DEF_slave_bready_AND_slave_xactor_f_wr_resp_i_notE_ETC___d175)
      INST_slave_xactor_f_wr_resp.METH_deq();
  }
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_bready()
{
  tUInt8 DEF_CAN_FIRE_slave_m_bready;
  DEF_CAN_FIRE_slave_m_bready = (tUInt8)1u;
  PORT_RDY_slave_m_bready = DEF_CAN_FIRE_slave_m_bready;
  return PORT_RDY_slave_m_bready;
}

void MOD_mkTimer::METH_slave_m_arvalid(tUInt8 ARG_slave_arvalid,
				       tUInt64 ARG_slave_araddr,
				       tUInt8 ARG_slave_arprot,
				       tUInt8 ARG_slave_aruser)
{
  tUInt8 DEF_slave_arvalid_AND_slave_xactor_f_rd_addr_i_not_ETC___d177;
  if (PORT_RDY_slave_m_arvalid)
  {
    DEF_slave_xactor_f_rd_addr_i_notFull____d176 = INST_slave_xactor_f_rd_addr.METH_i_notFull();
    DEF_slave_arvalid_AND_slave_xactor_f_rd_addr_i_not_ETC___d177 = ARG_slave_arvalid && DEF_slave_xactor_f_rd_addr_i_notFull____d176;
    DEF_slave_araddr_CONCAT_slave_arprot___d178.set_bits_in_word((tUInt8)(ARG_slave_araddr >> 61u),
								 2u,
								 0u,
								 3u).set_whole_word((tUInt32)(ARG_slave_araddr >> 29u),
										    1u).set_whole_word((((tUInt32)(536870911u & ARG_slave_araddr)) << 3u) | (tUInt32)(ARG_slave_arprot),
												       0u);
    if (DEF_slave_arvalid_AND_slave_xactor_f_rd_addr_i_not_ETC___d177)
      INST_slave_xactor_f_rd_addr.METH_enq(DEF_slave_araddr_CONCAT_slave_arprot___d178);
  }
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_arvalid()
{
  tUInt8 DEF_CAN_FIRE_slave_m_arvalid;
  DEF_CAN_FIRE_slave_m_arvalid = (tUInt8)1u;
  PORT_RDY_slave_m_arvalid = DEF_CAN_FIRE_slave_m_arvalid;
  return PORT_RDY_slave_m_arvalid;
}

tUInt8 MOD_mkTimer::METH_slave_m_arready()
{
  DEF_slave_xactor_f_rd_addr_i_notFull____d176 = INST_slave_xactor_f_rd_addr.METH_i_notFull();
  PORT_slave_arready = DEF_slave_xactor_f_rd_addr_i_notFull____d176;
  return PORT_slave_arready;
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_arready()
{
  tUInt8 PORT_RDY_slave_m_arready;
  tUInt8 DEF_CAN_FIRE_slave_m_arready;
  DEF_CAN_FIRE_slave_m_arready = (tUInt8)1u;
  PORT_RDY_slave_m_arready = DEF_CAN_FIRE_slave_m_arready;
  return PORT_RDY_slave_m_arready;
}

tUInt8 MOD_mkTimer::METH_slave_m_rvalid()
{
  DEF_slave_xactor_f_rd_data_i_notEmpty____d179 = INST_slave_xactor_f_rd_data.METH_i_notEmpty();
  PORT_slave_rvalid = DEF_slave_xactor_f_rd_data_i_notEmpty____d179;
  return PORT_slave_rvalid;
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_rvalid()
{
  tUInt8 PORT_RDY_slave_m_rvalid;
  tUInt8 DEF_CAN_FIRE_slave_m_rvalid;
  DEF_CAN_FIRE_slave_m_rvalid = (tUInt8)1u;
  PORT_RDY_slave_m_rvalid = DEF_CAN_FIRE_slave_m_rvalid;
  return PORT_RDY_slave_m_rvalid;
}

tUInt8 MOD_mkTimer::METH_slave_m_rresp()
{
  DEF_slave_xactor_f_rd_data_first____d180 = INST_slave_xactor_f_rd_data.METH_first();
  PORT_slave_rresp = DEF_slave_xactor_f_rd_data_first____d180.get_bits_in_word8(2u, 0u, 2u);
  return PORT_slave_rresp;
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_rresp()
{
  tUInt8 PORT_RDY_slave_m_rresp;
  tUInt8 DEF_CAN_FIRE_slave_m_rresp;
  DEF_CAN_FIRE_slave_m_rresp = (tUInt8)1u;
  PORT_RDY_slave_m_rresp = DEF_CAN_FIRE_slave_m_rresp;
  return PORT_RDY_slave_m_rresp;
}

tUInt64 MOD_mkTimer::METH_slave_m_rdata()
{
  DEF_slave_xactor_f_rd_data_first____d180 = INST_slave_xactor_f_rd_data.METH_first();
  PORT_slave_rdata = primExtract64(64u,
				   66u,
				   DEF_slave_xactor_f_rd_data_first____d180,
				   32u,
				   63u,
				   32u,
				   0u);
  return PORT_slave_rdata;
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_rdata()
{
  tUInt8 PORT_RDY_slave_m_rdata;
  tUInt8 DEF_CAN_FIRE_slave_m_rdata;
  DEF_CAN_FIRE_slave_m_rdata = (tUInt8)1u;
  PORT_RDY_slave_m_rdata = DEF_CAN_FIRE_slave_m_rdata;
  return PORT_RDY_slave_m_rdata;
}

void MOD_mkTimer::METH_slave_m_rready(tUInt8 ARG_slave_rready)
{
  tUInt8 DEF_slave_rready_AND_slave_xactor_f_rd_data_i_notE_ETC___d181;
  if (PORT_RDY_slave_m_rready)
  {
    DEF_slave_xactor_f_rd_data_i_notEmpty____d179 = INST_slave_xactor_f_rd_data.METH_i_notEmpty();
    DEF_slave_rready_AND_slave_xactor_f_rd_data_i_notE_ETC___d181 = ARG_slave_rready && DEF_slave_xactor_f_rd_data_i_notEmpty____d179;
    if (DEF_slave_rready_AND_slave_xactor_f_rd_data_i_notE_ETC___d181)
      INST_slave_xactor_f_rd_data.METH_deq();
  }
}

tUInt8 MOD_mkTimer::METH_RDY_slave_m_rready()
{
  tUInt8 DEF_CAN_FIRE_slave_m_rready;
  DEF_CAN_FIRE_slave_m_rready = (tUInt8)1u;
  PORT_RDY_slave_m_rready = DEF_CAN_FIRE_slave_m_rready;
  return PORT_RDY_slave_m_rready;
}

tUInt8 MOD_mkTimer::METH_get_timer_interrupt_req_get()
{
  tUInt32 DEF_v__h4729;
  tUInt8 DEF_f_timer_interrupt_req_first____d184;
  tUInt8 PORT_get_timer_interrupt_req_get;
  DEF_x__h3960 = INST_cfg_verbosity.METH_read();
  DEF_f_timer_interrupt_req_first____d184 = INST_f_timer_interrupt_req.METH_first();
  PORT_get_timer_interrupt_req_get = DEF_f_timer_interrupt_req_first____d184;
  DEF_NOT_cfg_verbosity_read_ULE_1_4___d25 = !(DEF_x__h3960 <= (tUInt8)1u);
  INST_f_timer_interrupt_req.METH_deq();
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      DEF_v__h4735 = dollar_stime(sim_hdl);
  DEF_v__h4729 = DEF_v__h4735 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_display(sim_hdl,
		     this,
		     "s,32,1",
		     &__str_literal_40,
		     DEF_v__h4729,
		     DEF_f_timer_interrupt_req_first____d184);
  return PORT_get_timer_interrupt_req_get;
}

tUInt8 MOD_mkTimer::METH_RDY_get_timer_interrupt_req_get()
{
  tUInt8 DEF_CAN_FIRE_get_timer_interrupt_req_get;
  tUInt8 PORT_RDY_get_timer_interrupt_req_get;
  DEF_CAN_FIRE_get_timer_interrupt_req_get = INST_f_timer_interrupt_req.METH_i_notEmpty();
  PORT_RDY_get_timer_interrupt_req_get = DEF_CAN_FIRE_get_timer_interrupt_req_get;
  return PORT_RDY_get_timer_interrupt_req_get;
}

tUInt8 MOD_mkTimer::METH_get_sw_interrupt_req_get()
{
  tUInt32 DEF_v__h4861;
  tUInt8 DEF_f_sw_interrupt_req_first____d187;
  tUInt8 PORT_get_sw_interrupt_req_get;
  DEF_x__h3960 = INST_cfg_verbosity.METH_read();
  DEF_f_sw_interrupt_req_first____d187 = INST_f_sw_interrupt_req.METH_first();
  PORT_get_sw_interrupt_req_get = DEF_f_sw_interrupt_req_first____d187;
  DEF_NOT_cfg_verbosity_read_ULE_1_4___d25 = !(DEF_x__h3960 <= (tUInt8)1u);
  INST_f_sw_interrupt_req.METH_deq();
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      DEF_v__h4867 = dollar_stime(sim_hdl);
  DEF_v__h4861 = DEF_v__h4867 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      dollar_display(sim_hdl,
		     this,
		     "s,32,1",
		     &__str_literal_41,
		     DEF_v__h4861,
		     DEF_f_sw_interrupt_req_first____d187);
  return PORT_get_sw_interrupt_req_get;
}

tUInt8 MOD_mkTimer::METH_RDY_get_sw_interrupt_req_get()
{
  tUInt8 DEF_CAN_FIRE_get_sw_interrupt_req_get;
  tUInt8 PORT_RDY_get_sw_interrupt_req_get;
  DEF_CAN_FIRE_get_sw_interrupt_req_get = INST_f_sw_interrupt_req.METH_i_notEmpty();
  PORT_RDY_get_sw_interrupt_req_get = DEF_CAN_FIRE_get_sw_interrupt_req_get;
  return PORT_RDY_get_sw_interrupt_req_get;
}


/* Reset routines */

void MOD_mkTimer::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_slave_xactor_f_wr_resp.reset_RST(ARG_rst_in);
  INST_slave_xactor_f_wr_data.reset_RST(ARG_rst_in);
  INST_slave_xactor_f_wr_addr.reset_RST(ARG_rst_in);
  INST_slave_xactor_f_rd_data.reset_RST(ARG_rst_in);
  INST_slave_xactor_f_rd_addr.reset_RST(ARG_rst_in);
  INST_rg_state.reset_RST(ARG_rst_in);
  INST_f_timer_interrupt_req.reset_RST(ARG_rst_in);
  INST_f_sw_interrupt_req.reset_RST(ARG_rst_in);
  INST_f_reset_rsps.reset_RST(ARG_rst_in);
  INST_f_reset_reqs.reset_RST(ARG_rst_in);
  INST_crg_timecmp.reset_RST(ARG_rst_in);
  INST_crg_time.reset_RST(ARG_rst_in);
  INST_cfg_verbosity.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTimer::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTimer::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_cfg_verbosity.dump_state(indent + 2u);
  INST_crg_time.dump_state(indent + 2u);
  INST_crg_timecmp.dump_state(indent + 2u);
  INST_f_reset_reqs.dump_state(indent + 2u);
  INST_f_reset_rsps.dump_state(indent + 2u);
  INST_f_sw_interrupt_req.dump_state(indent + 2u);
  INST_f_timer_interrupt_req.dump_state(indent + 2u);
  INST_rg_addr_base.dump_state(indent + 2u);
  INST_rg_addr_lim.dump_state(indent + 2u);
  INST_rg_msip.dump_state(indent + 2u);
  INST_rg_mtip.dump_state(indent + 2u);
  INST_rg_state.dump_state(indent + 2u);
  INST_slave_xactor_f_rd_addr.dump_state(indent + 2u);
  INST_slave_xactor_f_rd_data.dump_state(indent + 2u);
  INST_slave_xactor_f_wr_addr.dump_state(indent + 2u);
  INST_slave_xactor_f_wr_data.dump_state(indent + 2u);
  INST_slave_xactor_f_wr_resp.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTimer::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 73u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74", 66u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_cfg_verbosity_read_ULE_1_4___d25", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read__h123", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "byte_addr__h2724", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "crg_time_port0__read____d10", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "crg_timecmp_port0__read____d17", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rg_msip_2_EQ_slave_xactor_f_wr_data_first__7_B_ETC___d89", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rg_msip__h2399", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_araddr_CONCAT_slave_arprot___d178", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_awaddr_CONCAT_slave_awprot___d170", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_wdata_CONCAT_slave_wstrb___d173", 72u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_addr_first____d32", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_addr_i_notFull____d176", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_data_first____d180", 66u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_rd_data_i_notEmpty____d179", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_addr_first____d82", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_addr_i_notFull____d168", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_data_first__7_BIT_8___d88", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_data_first____d87", 72u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_data_i_notFull____d171", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_xactor_f_wr_resp_i_notEmpty____d174", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h1830", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h2062", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h2250", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h2524", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h2939", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h3137", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h3316", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h3622", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h3785", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h3988", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h4295", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h4405", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h4735", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h4867", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h3960", 4u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_slave_m_arvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_slave_m_awvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_slave_m_bready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_slave_m_rready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_slave_m_wvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_arready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_awready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_bresp", 2u);
  vcd_write_def(sim_hdl, num++, "slave_buser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_bvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_rdata", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_rresp", 2u);
  vcd_write_def(sim_hdl, num++, "slave_ruser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_rvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "slave_wready", 1u);
  num = INST_cfg_verbosity.dump_VCD_defs(num);
  num = INST_crg_time.dump_VCD_defs(num);
  num = INST_crg_timecmp.dump_VCD_defs(num);
  num = INST_f_reset_reqs.dump_VCD_defs(num);
  num = INST_f_reset_rsps.dump_VCD_defs(num);
  num = INST_f_sw_interrupt_req.dump_VCD_defs(num);
  num = INST_f_timer_interrupt_req.dump_VCD_defs(num);
  num = INST_rg_addr_base.dump_VCD_defs(num);
  num = INST_rg_addr_lim.dump_VCD_defs(num);
  num = INST_rg_msip.dump_VCD_defs(num);
  num = INST_rg_mtip.dump_VCD_defs(num);
  num = INST_rg_state.dump_VCD_defs(num);
  num = INST_slave_xactor_f_rd_addr.dump_VCD_defs(num);
  num = INST_slave_xactor_f_rd_data.dump_VCD_defs(num);
  num = INST_slave_xactor_f_wr_addr.dump_VCD_defs(num);
  num = INST_slave_xactor_f_wr_data.dump_VCD_defs(num);
  num = INST_slave_xactor_f_wr_resp.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTimer::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTimer &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkTimer::vcd_defs(tVCDDumpType dt, MOD_mkTimer &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 66u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 72u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 66u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 72u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 4u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74) != DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74, 66u);
	backing.DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74 = DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74;
      }
      ++num;
      if ((backing.DEF_NOT_cfg_verbosity_read_ULE_1_4___d25) != DEF_NOT_cfg_verbosity_read_ULE_1_4___d25)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_cfg_verbosity_read_ULE_1_4___d25, 1u);
	backing.DEF_NOT_cfg_verbosity_read_ULE_1_4___d25 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d25;
      }
      ++num;
      if ((backing.DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19) != DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19, 1u);
	backing.DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19 = DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19;
      }
      ++num;
      if ((backing.DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86) != DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86, 1u);
	backing.DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86 = DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF__read__h123) != DEF__read__h123)
      {
	vcd_write_val(sim_hdl, num, DEF__read__h123, 64u);
	backing.DEF__read__h123 = DEF__read__h123;
      }
      ++num;
      if ((backing.DEF_byte_addr__h2724) != DEF_byte_addr__h2724)
      {
	vcd_write_val(sim_hdl, num, DEF_byte_addr__h2724, 64u);
	backing.DEF_byte_addr__h2724 = DEF_byte_addr__h2724;
      }
      ++num;
      if ((backing.DEF_crg_time_port0__read____d10) != DEF_crg_time_port0__read____d10)
      {
	vcd_write_val(sim_hdl, num, DEF_crg_time_port0__read____d10, 64u);
	backing.DEF_crg_time_port0__read____d10 = DEF_crg_time_port0__read____d10;
      }
      ++num;
      if ((backing.DEF_crg_timecmp_port0__read____d17) != DEF_crg_timecmp_port0__read____d17)
      {
	vcd_write_val(sim_hdl, num, DEF_crg_timecmp_port0__read____d17, 64u);
	backing.DEF_crg_timecmp_port0__read____d17 = DEF_crg_timecmp_port0__read____d17;
      }
      ++num;
      if ((backing.DEF_rg_msip_2_EQ_slave_xactor_f_wr_data_first__7_B_ETC___d89) != DEF_rg_msip_2_EQ_slave_xactor_f_wr_data_first__7_B_ETC___d89)
      {
	vcd_write_val(sim_hdl, num, DEF_rg_msip_2_EQ_slave_xactor_f_wr_data_first__7_B_ETC___d89, 1u);
	backing.DEF_rg_msip_2_EQ_slave_xactor_f_wr_data_first__7_B_ETC___d89 = DEF_rg_msip_2_EQ_slave_xactor_f_wr_data_first__7_B_ETC___d89;
      }
      ++num;
      if ((backing.DEF_rg_msip__h2399) != DEF_rg_msip__h2399)
      {
	vcd_write_val(sim_hdl, num, DEF_rg_msip__h2399, 1u);
	backing.DEF_rg_msip__h2399 = DEF_rg_msip__h2399;
      }
      ++num;
      if ((backing.DEF_slave_araddr_CONCAT_slave_arprot___d178) != DEF_slave_araddr_CONCAT_slave_arprot___d178)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_araddr_CONCAT_slave_arprot___d178, 67u);
	backing.DEF_slave_araddr_CONCAT_slave_arprot___d178 = DEF_slave_araddr_CONCAT_slave_arprot___d178;
      }
      ++num;
      if ((backing.DEF_slave_awaddr_CONCAT_slave_awprot___d170) != DEF_slave_awaddr_CONCAT_slave_awprot___d170)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_awaddr_CONCAT_slave_awprot___d170, 67u);
	backing.DEF_slave_awaddr_CONCAT_slave_awprot___d170 = DEF_slave_awaddr_CONCAT_slave_awprot___d170;
      }
      ++num;
      if ((backing.DEF_slave_wdata_CONCAT_slave_wstrb___d173) != DEF_slave_wdata_CONCAT_slave_wstrb___d173)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_wdata_CONCAT_slave_wstrb___d173, 72u);
	backing.DEF_slave_wdata_CONCAT_slave_wstrb___d173 = DEF_slave_wdata_CONCAT_slave_wstrb___d173;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_addr_first____d32) != DEF_slave_xactor_f_rd_addr_first____d32)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_addr_first____d32, 67u);
	backing.DEF_slave_xactor_f_rd_addr_first____d32 = DEF_slave_xactor_f_rd_addr_first____d32;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_addr_i_notFull____d176) != DEF_slave_xactor_f_rd_addr_i_notFull____d176)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_addr_i_notFull____d176, 1u);
	backing.DEF_slave_xactor_f_rd_addr_i_notFull____d176 = DEF_slave_xactor_f_rd_addr_i_notFull____d176;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_data_first____d180) != DEF_slave_xactor_f_rd_data_first____d180)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_data_first____d180, 66u);
	backing.DEF_slave_xactor_f_rd_data_first____d180 = DEF_slave_xactor_f_rd_data_first____d180;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_rd_data_i_notEmpty____d179) != DEF_slave_xactor_f_rd_data_i_notEmpty____d179)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_rd_data_i_notEmpty____d179, 1u);
	backing.DEF_slave_xactor_f_rd_data_i_notEmpty____d179 = DEF_slave_xactor_f_rd_data_i_notEmpty____d179;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85) != DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85, 1u);
	backing.DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83) != DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83, 64u);
	backing.DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_addr_first____d82) != DEF_slave_xactor_f_wr_addr_first____d82)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_addr_first____d82, 67u);
	backing.DEF_slave_xactor_f_wr_addr_first____d82 = DEF_slave_xactor_f_wr_addr_first____d82;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_addr_i_notFull____d168) != DEF_slave_xactor_f_wr_addr_i_notFull____d168)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_addr_i_notFull____d168, 1u);
	backing.DEF_slave_xactor_f_wr_addr_i_notFull____d168 = DEF_slave_xactor_f_wr_addr_i_notFull____d168;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88) != DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88, 1u);
	backing.DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88 = DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_data_first____d87) != DEF_slave_xactor_f_wr_data_first____d87)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_data_first____d87, 72u);
	backing.DEF_slave_xactor_f_wr_data_first____d87 = DEF_slave_xactor_f_wr_data_first____d87;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_data_i_notFull____d171) != DEF_slave_xactor_f_wr_data_i_notFull____d171)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_data_i_notFull____d171, 1u);
	backing.DEF_slave_xactor_f_wr_data_i_notFull____d171 = DEF_slave_xactor_f_wr_data_i_notFull____d171;
      }
      ++num;
      if ((backing.DEF_slave_xactor_f_wr_resp_i_notEmpty____d174) != DEF_slave_xactor_f_wr_resp_i_notEmpty____d174)
      {
	vcd_write_val(sim_hdl, num, DEF_slave_xactor_f_wr_resp_i_notEmpty____d174, 1u);
	backing.DEF_slave_xactor_f_wr_resp_i_notEmpty____d174 = DEF_slave_xactor_f_wr_resp_i_notEmpty____d174;
      }
      ++num;
      if ((backing.DEF_v__h1830) != DEF_v__h1830)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h1830, 32u);
	backing.DEF_v__h1830 = DEF_v__h1830;
      }
      ++num;
      if ((backing.DEF_v__h2062) != DEF_v__h2062)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h2062, 32u);
	backing.DEF_v__h2062 = DEF_v__h2062;
      }
      ++num;
      if ((backing.DEF_v__h2250) != DEF_v__h2250)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h2250, 32u);
	backing.DEF_v__h2250 = DEF_v__h2250;
      }
      ++num;
      if ((backing.DEF_v__h2524) != DEF_v__h2524)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h2524, 32u);
	backing.DEF_v__h2524 = DEF_v__h2524;
      }
      ++num;
      if ((backing.DEF_v__h2939) != DEF_v__h2939)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h2939, 32u);
	backing.DEF_v__h2939 = DEF_v__h2939;
      }
      ++num;
      if ((backing.DEF_v__h3137) != DEF_v__h3137)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h3137, 32u);
	backing.DEF_v__h3137 = DEF_v__h3137;
      }
      ++num;
      if ((backing.DEF_v__h3316) != DEF_v__h3316)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h3316, 32u);
	backing.DEF_v__h3316 = DEF_v__h3316;
      }
      ++num;
      if ((backing.DEF_v__h3622) != DEF_v__h3622)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h3622, 32u);
	backing.DEF_v__h3622 = DEF_v__h3622;
      }
      ++num;
      if ((backing.DEF_v__h3785) != DEF_v__h3785)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h3785, 32u);
	backing.DEF_v__h3785 = DEF_v__h3785;
      }
      ++num;
      if ((backing.DEF_v__h3988) != DEF_v__h3988)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h3988, 32u);
	backing.DEF_v__h3988 = DEF_v__h3988;
      }
      ++num;
      if ((backing.DEF_v__h4295) != DEF_v__h4295)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h4295, 32u);
	backing.DEF_v__h4295 = DEF_v__h4295;
      }
      ++num;
      if ((backing.DEF_v__h4405) != DEF_v__h4405)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h4405, 32u);
	backing.DEF_v__h4405 = DEF_v__h4405;
      }
      ++num;
      if ((backing.DEF_v__h4735) != DEF_v__h4735)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h4735, 32u);
	backing.DEF_v__h4735 = DEF_v__h4735;
      }
      ++num;
      if ((backing.DEF_v__h4867) != DEF_v__h4867)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h4867, 32u);
	backing.DEF_v__h4867 = DEF_v__h4867;
      }
      ++num;
      if ((backing.DEF_x__h3960) != DEF_x__h3960)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h3960, 4u);
	backing.DEF_x__h3960 = DEF_x__h3960;
      }
      ++num;
      if ((backing.PORT_RDY_slave_m_arvalid) != PORT_RDY_slave_m_arvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_slave_m_arvalid, 1u);
	backing.PORT_RDY_slave_m_arvalid = PORT_RDY_slave_m_arvalid;
      }
      ++num;
      if ((backing.PORT_RDY_slave_m_awvalid) != PORT_RDY_slave_m_awvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_slave_m_awvalid, 1u);
	backing.PORT_RDY_slave_m_awvalid = PORT_RDY_slave_m_awvalid;
      }
      ++num;
      if ((backing.PORT_RDY_slave_m_bready) != PORT_RDY_slave_m_bready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_slave_m_bready, 1u);
	backing.PORT_RDY_slave_m_bready = PORT_RDY_slave_m_bready;
      }
      ++num;
      if ((backing.PORT_RDY_slave_m_rready) != PORT_RDY_slave_m_rready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_slave_m_rready, 1u);
	backing.PORT_RDY_slave_m_rready = PORT_RDY_slave_m_rready;
      }
      ++num;
      if ((backing.PORT_RDY_slave_m_wvalid) != PORT_RDY_slave_m_wvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_slave_m_wvalid, 1u);
	backing.PORT_RDY_slave_m_wvalid = PORT_RDY_slave_m_wvalid;
      }
      ++num;
      if ((backing.PORT_slave_arready) != PORT_slave_arready)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_arready, 1u);
	backing.PORT_slave_arready = PORT_slave_arready;
      }
      ++num;
      if ((backing.PORT_slave_awready) != PORT_slave_awready)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_awready, 1u);
	backing.PORT_slave_awready = PORT_slave_awready;
      }
      ++num;
      if ((backing.PORT_slave_bresp) != PORT_slave_bresp)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_bresp, 2u);
	backing.PORT_slave_bresp = PORT_slave_bresp;
      }
      ++num;
      if ((backing.PORT_slave_buser) != PORT_slave_buser)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_buser, 0u);
	backing.PORT_slave_buser = PORT_slave_buser;
      }
      ++num;
      if ((backing.PORT_slave_bvalid) != PORT_slave_bvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_bvalid, 1u);
	backing.PORT_slave_bvalid = PORT_slave_bvalid;
      }
      ++num;
      if ((backing.PORT_slave_rdata) != PORT_slave_rdata)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_rdata, 64u);
	backing.PORT_slave_rdata = PORT_slave_rdata;
      }
      ++num;
      if ((backing.PORT_slave_rresp) != PORT_slave_rresp)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_rresp, 2u);
	backing.PORT_slave_rresp = PORT_slave_rresp;
      }
      ++num;
      if ((backing.PORT_slave_ruser) != PORT_slave_ruser)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_ruser, 0u);
	backing.PORT_slave_ruser = PORT_slave_ruser;
      }
      ++num;
      if ((backing.PORT_slave_rvalid) != PORT_slave_rvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_rvalid, 1u);
	backing.PORT_slave_rvalid = PORT_slave_rvalid;
      }
      ++num;
      if ((backing.PORT_slave_wready) != PORT_slave_wready)
      {
	vcd_write_val(sim_hdl, num, PORT_slave_wready, 1u);
	backing.PORT_slave_wready = PORT_slave_wready;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74, 66u);
      backing.DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74 = DEF_IF_slave_xactor_f_rd_addr_first__2_BITS_66_TO__ETC___d74;
      vcd_write_val(sim_hdl, num++, DEF_NOT_cfg_verbosity_read_ULE_1_4___d25, 1u);
      backing.DEF_NOT_cfg_verbosity_read_ULE_1_4___d25 = DEF_NOT_cfg_verbosity_read_ULE_1_4___d25;
      vcd_write_val(sim_hdl, num++, DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19, 1u);
      backing.DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19 = DEF_NOT_crg_time_port0__read__0_ULT_crg_timecmp_po_ETC___d19;
      vcd_write_val(sim_hdl, num++, DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86, 1u);
      backing.DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86 = DEF_NOT_slave_xactor_f_wr_addr_first__2_BITS_66_TO_ETC___d86;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF__read__h123, 64u);
      backing.DEF__read__h123 = DEF__read__h123;
      vcd_write_val(sim_hdl, num++, DEF_byte_addr__h2724, 64u);
      backing.DEF_byte_addr__h2724 = DEF_byte_addr__h2724;
      vcd_write_val(sim_hdl, num++, DEF_crg_time_port0__read____d10, 64u);
      backing.DEF_crg_time_port0__read____d10 = DEF_crg_time_port0__read____d10;
      vcd_write_val(sim_hdl, num++, DEF_crg_timecmp_port0__read____d17, 64u);
      backing.DEF_crg_timecmp_port0__read____d17 = DEF_crg_timecmp_port0__read____d17;
      vcd_write_val(sim_hdl, num++, DEF_rg_msip_2_EQ_slave_xactor_f_wr_data_first__7_B_ETC___d89, 1u);
      backing.DEF_rg_msip_2_EQ_slave_xactor_f_wr_data_first__7_B_ETC___d89 = DEF_rg_msip_2_EQ_slave_xactor_f_wr_data_first__7_B_ETC___d89;
      vcd_write_val(sim_hdl, num++, DEF_rg_msip__h2399, 1u);
      backing.DEF_rg_msip__h2399 = DEF_rg_msip__h2399;
      vcd_write_val(sim_hdl, num++, DEF_slave_araddr_CONCAT_slave_arprot___d178, 67u);
      backing.DEF_slave_araddr_CONCAT_slave_arprot___d178 = DEF_slave_araddr_CONCAT_slave_arprot___d178;
      vcd_write_val(sim_hdl, num++, DEF_slave_awaddr_CONCAT_slave_awprot___d170, 67u);
      backing.DEF_slave_awaddr_CONCAT_slave_awprot___d170 = DEF_slave_awaddr_CONCAT_slave_awprot___d170;
      vcd_write_val(sim_hdl, num++, DEF_slave_wdata_CONCAT_slave_wstrb___d173, 72u);
      backing.DEF_slave_wdata_CONCAT_slave_wstrb___d173 = DEF_slave_wdata_CONCAT_slave_wstrb___d173;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_addr_first____d32, 67u);
      backing.DEF_slave_xactor_f_rd_addr_first____d32 = DEF_slave_xactor_f_rd_addr_first____d32;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_addr_i_notFull____d176, 1u);
      backing.DEF_slave_xactor_f_rd_addr_i_notFull____d176 = DEF_slave_xactor_f_rd_addr_i_notFull____d176;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_data_first____d180, 66u);
      backing.DEF_slave_xactor_f_rd_data_first____d180 = DEF_slave_xactor_f_rd_data_first____d180;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_rd_data_i_notEmpty____d179, 1u);
      backing.DEF_slave_xactor_f_rd_data_i_notEmpty____d179 = DEF_slave_xactor_f_rd_data_i_notEmpty____d179;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85, 1u);
      backing.DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3_3_ETC___d85;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83, 64u);
      backing.DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83 = DEF_slave_xactor_f_wr_addr_first__2_BITS_66_TO_3___d83;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_addr_first____d82, 67u);
      backing.DEF_slave_xactor_f_wr_addr_first____d82 = DEF_slave_xactor_f_wr_addr_first____d82;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_addr_i_notFull____d168, 1u);
      backing.DEF_slave_xactor_f_wr_addr_i_notFull____d168 = DEF_slave_xactor_f_wr_addr_i_notFull____d168;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88, 1u);
      backing.DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88 = DEF_slave_xactor_f_wr_data_first__7_BIT_8___d88;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_data_first____d87, 72u);
      backing.DEF_slave_xactor_f_wr_data_first____d87 = DEF_slave_xactor_f_wr_data_first____d87;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_data_i_notFull____d171, 1u);
      backing.DEF_slave_xactor_f_wr_data_i_notFull____d171 = DEF_slave_xactor_f_wr_data_i_notFull____d171;
      vcd_write_val(sim_hdl, num++, DEF_slave_xactor_f_wr_resp_i_notEmpty____d174, 1u);
      backing.DEF_slave_xactor_f_wr_resp_i_notEmpty____d174 = DEF_slave_xactor_f_wr_resp_i_notEmpty____d174;
      vcd_write_val(sim_hdl, num++, DEF_v__h1830, 32u);
      backing.DEF_v__h1830 = DEF_v__h1830;
      vcd_write_val(sim_hdl, num++, DEF_v__h2062, 32u);
      backing.DEF_v__h2062 = DEF_v__h2062;
      vcd_write_val(sim_hdl, num++, DEF_v__h2250, 32u);
      backing.DEF_v__h2250 = DEF_v__h2250;
      vcd_write_val(sim_hdl, num++, DEF_v__h2524, 32u);
      backing.DEF_v__h2524 = DEF_v__h2524;
      vcd_write_val(sim_hdl, num++, DEF_v__h2939, 32u);
      backing.DEF_v__h2939 = DEF_v__h2939;
      vcd_write_val(sim_hdl, num++, DEF_v__h3137, 32u);
      backing.DEF_v__h3137 = DEF_v__h3137;
      vcd_write_val(sim_hdl, num++, DEF_v__h3316, 32u);
      backing.DEF_v__h3316 = DEF_v__h3316;
      vcd_write_val(sim_hdl, num++, DEF_v__h3622, 32u);
      backing.DEF_v__h3622 = DEF_v__h3622;
      vcd_write_val(sim_hdl, num++, DEF_v__h3785, 32u);
      backing.DEF_v__h3785 = DEF_v__h3785;
      vcd_write_val(sim_hdl, num++, DEF_v__h3988, 32u);
      backing.DEF_v__h3988 = DEF_v__h3988;
      vcd_write_val(sim_hdl, num++, DEF_v__h4295, 32u);
      backing.DEF_v__h4295 = DEF_v__h4295;
      vcd_write_val(sim_hdl, num++, DEF_v__h4405, 32u);
      backing.DEF_v__h4405 = DEF_v__h4405;
      vcd_write_val(sim_hdl, num++, DEF_v__h4735, 32u);
      backing.DEF_v__h4735 = DEF_v__h4735;
      vcd_write_val(sim_hdl, num++, DEF_v__h4867, 32u);
      backing.DEF_v__h4867 = DEF_v__h4867;
      vcd_write_val(sim_hdl, num++, DEF_x__h3960, 4u);
      backing.DEF_x__h3960 = DEF_x__h3960;
      vcd_write_val(sim_hdl, num++, PORT_RDY_slave_m_arvalid, 1u);
      backing.PORT_RDY_slave_m_arvalid = PORT_RDY_slave_m_arvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_slave_m_awvalid, 1u);
      backing.PORT_RDY_slave_m_awvalid = PORT_RDY_slave_m_awvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_slave_m_bready, 1u);
      backing.PORT_RDY_slave_m_bready = PORT_RDY_slave_m_bready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_slave_m_rready, 1u);
      backing.PORT_RDY_slave_m_rready = PORT_RDY_slave_m_rready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_slave_m_wvalid, 1u);
      backing.PORT_RDY_slave_m_wvalid = PORT_RDY_slave_m_wvalid;
      vcd_write_val(sim_hdl, num++, PORT_slave_arready, 1u);
      backing.PORT_slave_arready = PORT_slave_arready;
      vcd_write_val(sim_hdl, num++, PORT_slave_awready, 1u);
      backing.PORT_slave_awready = PORT_slave_awready;
      vcd_write_val(sim_hdl, num++, PORT_slave_bresp, 2u);
      backing.PORT_slave_bresp = PORT_slave_bresp;
      vcd_write_val(sim_hdl, num++, PORT_slave_buser, 0u);
      backing.PORT_slave_buser = PORT_slave_buser;
      vcd_write_val(sim_hdl, num++, PORT_slave_bvalid, 1u);
      backing.PORT_slave_bvalid = PORT_slave_bvalid;
      vcd_write_val(sim_hdl, num++, PORT_slave_rdata, 64u);
      backing.PORT_slave_rdata = PORT_slave_rdata;
      vcd_write_val(sim_hdl, num++, PORT_slave_rresp, 2u);
      backing.PORT_slave_rresp = PORT_slave_rresp;
      vcd_write_val(sim_hdl, num++, PORT_slave_ruser, 0u);
      backing.PORT_slave_ruser = PORT_slave_ruser;
      vcd_write_val(sim_hdl, num++, PORT_slave_rvalid, 1u);
      backing.PORT_slave_rvalid = PORT_slave_rvalid;
      vcd_write_val(sim_hdl, num++, PORT_slave_wready, 1u);
      backing.PORT_slave_wready = PORT_slave_wready;
    }
}

void MOD_mkTimer::vcd_prims(tVCDDumpType dt, MOD_mkTimer &backing)
{
  INST_cfg_verbosity.dump_VCD(dt, backing.INST_cfg_verbosity);
  INST_crg_time.dump_VCD(dt, backing.INST_crg_time);
  INST_crg_timecmp.dump_VCD(dt, backing.INST_crg_timecmp);
  INST_f_reset_reqs.dump_VCD(dt, backing.INST_f_reset_reqs);
  INST_f_reset_rsps.dump_VCD(dt, backing.INST_f_reset_rsps);
  INST_f_sw_interrupt_req.dump_VCD(dt, backing.INST_f_sw_interrupt_req);
  INST_f_timer_interrupt_req.dump_VCD(dt, backing.INST_f_timer_interrupt_req);
  INST_rg_addr_base.dump_VCD(dt, backing.INST_rg_addr_base);
  INST_rg_addr_lim.dump_VCD(dt, backing.INST_rg_addr_lim);
  INST_rg_msip.dump_VCD(dt, backing.INST_rg_msip);
  INST_rg_mtip.dump_VCD(dt, backing.INST_rg_mtip);
  INST_rg_state.dump_VCD(dt, backing.INST_rg_state);
  INST_slave_xactor_f_rd_addr.dump_VCD(dt, backing.INST_slave_xactor_f_rd_addr);
  INST_slave_xactor_f_rd_data.dump_VCD(dt, backing.INST_slave_xactor_f_rd_data);
  INST_slave_xactor_f_wr_addr.dump_VCD(dt, backing.INST_slave_xactor_f_wr_addr);
  INST_slave_xactor_f_wr_data.dump_VCD(dt, backing.INST_slave_xactor_f_wr_data);
  INST_slave_xactor_f_wr_resp.dump_VCD(dt, backing.INST_slave_xactor_f_wr_resp);
}
