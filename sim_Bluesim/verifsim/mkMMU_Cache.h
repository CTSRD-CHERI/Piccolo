/*
 * Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
 * 
 * On Fri Aug 24 12:25:43 BST 2018
 * 
 */

/* Generation options: */
#ifndef __mkMMU_Cache_h__
#define __mkMMU_Cache_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkSoC_Map.h"
#include "mkTLB.h"


/* Class declaration for the mkMMU_Cache module */
class MOD_mkMMU_Cache : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
  tUInt8 const PARAM_dmem_not_imem;
 
 /* Module state */
 public:
  MOD_ConfigReg<tUInt8> INST_cfg_verbosity;
  MOD_CReg<tUInt8> INST_ctr_wr_rsps_pending_crg;
  MOD_Wire<tUInt8> INST_dw_exc;
  MOD_Wire<tUInt8> INST_dw_exc_code;
  MOD_Wire<tUInt64> INST_dw_output_ld_val;
  MOD_Wire<tUInt64> INST_dw_output_st_amo_val;
  MOD_Wire<tUInt8> INST_dw_valid;
  MOD_Fifo<tUInt8> INST_f_reset_reqs;
  MOD_Fifo<tUInt8> INST_f_reset_rsps;
  MOD_CReg<tUInt8> INST_master_xactor_crg_rd_addr_full;
  MOD_CReg<tUInt8> INST_master_xactor_crg_rd_data_full;
  MOD_CReg<tUInt8> INST_master_xactor_crg_wr_addr_full;
  MOD_CReg<tUInt8> INST_master_xactor_crg_wr_data_full;
  MOD_CReg<tUInt8> INST_master_xactor_crg_wr_resp_full;
  MOD_Reg<tUWide> INST_master_xactor_rg_rd_addr;
  MOD_Reg<tUWide> INST_master_xactor_rg_rd_data;
  MOD_Reg<tUWide> INST_master_xactor_rg_wr_addr;
  MOD_Reg<tUWide> INST_master_xactor_rg_wr_data;
  MOD_Reg<tUInt8> INST_master_xactor_rg_wr_resp;
  MOD_BRAM<tUInt8,tUInt64,tUInt8> INST_ram_state_and_ctag_cset;
  MOD_BRAM<tUInt32,tUInt64,tUInt8> INST_ram_word64_set;
  MOD_Reg<tUInt64> INST_rg_addr;
  MOD_Reg<tUInt8> INST_rg_amo_funct7;
  MOD_Reg<tUInt8> INST_rg_cset_in_cache;
  MOD_Reg<tUInt8> INST_rg_error_during_refill;
  MOD_Reg<tUInt8> INST_rg_exc_code;
  MOD_Reg<tUInt8> INST_rg_f3;
  MOD_Reg<tUInt64> INST_rg_ld_val;
  MOD_Reg<tUInt32> INST_rg_lower_word32;
  MOD_Reg<tUInt8> INST_rg_lower_word32_full;
  MOD_Reg<tUInt64> INST_rg_lrsc_pa;
  MOD_Reg<tUInt8> INST_rg_lrsc_valid;
  MOD_Reg<tUInt8> INST_rg_mstatus_MXR;
  MOD_Reg<tUInt8> INST_rg_op;
  MOD_Reg<tUInt64> INST_rg_pa;
  MOD_Reg<tUInt8> INST_rg_priv;
  MOD_Reg<tUInt64> INST_rg_pte_pa;
  MOD_Reg<tUInt64> INST_rg_req_byte_in_cline;
  MOD_Reg<tUInt8> INST_rg_requesting_cline;
  MOD_Reg<tUInt64> INST_rg_satp;
  MOD_Reg<tUInt8> INST_rg_sstatus_SUM;
  MOD_Reg<tUInt64> INST_rg_st_amo_val;
  MOD_Reg<tUInt8> INST_rg_state;
  MOD_Reg<tUInt32> INST_rg_word64_set_in_cache;
  MOD_mkSoC_Map INST_soc_map;
  MOD_mkTLB INST_tlb;
 
 /* Constructor */
 public:
  MOD_mkMMU_Cache(tSimStateHdl simHdl, char const *name, Module *parent, tUInt8 ARG_dmem_not_imem);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_req;
  tUInt8 PORT_mem_master_rready;
  tUInt8 PORT_mem_master_arvalid;
  tUInt8 PORT_mem_master_bready;
  tUInt8 PORT_mem_master_wvalid;
  tUInt8 PORT_mem_master_awvalid;
  tUInt64 PORT_mem_master_awaddr;
  tUInt8 PORT_mem_master_awprot;
  tUInt8 PORT_mem_master_awuser;
  tUInt64 PORT_mem_master_wdata;
  tUInt8 PORT_mem_master_wstrb;
  tUInt64 PORT_mem_master_araddr;
  tUInt8 PORT_mem_master_arprot;
  tUInt8 PORT_mem_master_aruser;
  tUInt8 PORT_RDY_mem_master_m_awready;
  tUInt8 PORT_RDY_mem_master_m_wready;
  tUInt8 PORT_RDY_mem_master_m_bvalid;
  tUInt8 PORT_RDY_mem_master_m_arready;
  tUInt8 PORT_RDY_mem_master_m_rvalid;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_req;
  tUInt8 DEF_f_reset_rsps_first____d1282;
  tUInt8 DEF_f_reset_rsps_i_notEmpty____d1284;
  tUInt8 DEF_f_reset_reqs_i_notFull____d1281;
  tUInt8 DEF_NOT_master_xactor_rg_rd_data_36_BITS_65_TO_64__ETC___d839;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BIT_0___d840;
  tUInt32 DEF_ppn_1__h22155;
  tUInt32 DEF_ppn_0__h22156;
  tUInt8 DEF_NOT_master_xactor_rg_rd_data_36_BITS_27_TO_19__ETC___d856;
  tUInt8 DEF_NOT_master_xactor_rg_rd_data_36_BIT_0_40_41_OR_ETC___d846;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BIT_1___d842;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BIT_3___d847;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BITS_65_TO_64___d837;
  tUInt8 DEF_ram_state_and_ctag_cset_b_read__31_BITS_50_TO__ETC___d136;
  tUInt8 DEF_v_BIT_51___h4771;
  tUInt8 DEF_NOT_ram_state_and_ctag_cset_b_read__31_BIT_51__ETC___d138;
  tUInt8 DEF_lrsc_result__h14138;
  tUInt8 DEF_rg_op_6_EQ_1_85_OR_rg_op_6_EQ_2_9_AND_rg_amo_f_ETC___d188;
  tUInt8 DEF_rg_lrsc_valid__h13961;
  tUInt8 DEF_rg_lrsc_pa_91_EQ_IF_rg_priv_9_ULE_0b1_0_AND_rg_ETC___d192;
  tUInt8 DEF_rg_priv_9_ULE_0b1___d40;
  tUInt8 DEF_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_addr_0_ETC___d53;
  tUInt8 DEF_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_addr_0_ETC___d100;
  tUInt8 DEF_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_addr_0_ETC___d98;
  tUInt8 DEF_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_addr_0_ETC___d93;
  tUInt8 DEF_rg_op_6_EQ_0_7_OR_rg_op_6_EQ_2_9_AND_rg_amo_fu_ETC___d91;
  tUInt8 DEF_NOT_rg_lrsc_pa_91_EQ_IF_rg_priv_9_ULE_0b1_0_AN_ETC___d193;
  tUInt8 DEF_pte_x__h5336;
  tUInt8 DEF_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_addr_0_ETC___d57;
  tUInt8 DEF_rg_satp_BITS_63_TO_60___h5234;
  tUInt8 DEF_x__h32541;
  tUInt8 DEF_f5__h30229;
  tUInt8 DEF_addr_lsbs__h14429;
  tUInt8 DEF_rg_op__h5413;
  tUInt8 DEF_rg_op_6_EQ_2_9_AND_rg_amo_funct7_1_BITS_6_TO_2_ETC___d187;
  tUInt8 DEF_NOT_rg_lrsc_valid_89___d190;
  tUInt8 DEF_cfg_verbosity_read__0_ULE_1___d11;
  tUInt8 DEF_priv__h5151;
  tUInt8 DEF_NOT_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_ad_ETC___d54;
  tUInt8 DEF_NOT_rg_priv_9_ULE_0b1_0_1_OR_NOT_rg_satp_2_BIT_ETC___d46;
  tUInt8 DEF_rg_priv_9_EQ_0b0_6_AND_NOT_tlb_lookup_rg_satp__ETC___d104;
  tUInt8 DEF_rg_priv_9_ULE_0b1_0_AND_rg_satp_2_BITS_63_TO_6_ETC___d55;
  tUInt8 DEF_rg_priv_9_ULE_0b1_0_AND_rg_satp_2_BITS_63_TO_6_ETC___d106;
  tUInt8 DEF_soc_map_m_is_IO_addr_IF_rg_priv_9_ULE_0b1_0_AN_ETC___d130;
  tUInt8 DEF_NOT_ram_state_and_ctag_cset_b_read__31_BIT_51_32___d133;
  tUInt8 DEF_NOT_rg_op_6_EQ_2_9___d70;
  tUInt8 DEF_rg_priv_9_EQ_0b0_6_AND_NOT_tlb_lookup_rg_satp__ETC___d65;
  tUInt8 DEF_b__h21635;
  tUWide DEF_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_addr_0_ETC___d52;
  tUInt32 DEF_asid__h2382;
  tUInt32 DEF_vpn__h2372;
  tUWide DEF_master_xactor_rg_rd_data___d836;
  tUInt64 DEF_y__h21125;
  tUInt64 DEF_addr__h31625;
  tUInt64 DEF_rg_satp__h4380;
  tUInt64 DEF_v__h4683;
  tUInt8 DEF_x2__h3668;
  tUInt8 DEF_rg_amo_funct7__h30280;
  tUInt8 DEF_f3__h31624;
  tUInt8 DEF_mstatus_MXR__h5153;
  tUInt8 DEF_rg_sstatus_SUM__h5397;
  tUInt64 DEF_x1_avValue_pa__h5167;
  tUInt64 DEF_pa_ctag__h6143;
  tUInt64 DEF_n_ctag__h4704;
  tUInt32 DEF_rg_addr_BITS_29_TO_0___h5879;
  tUInt32 DEF_rg_addr_BITS_20_TO_0___h5789;
  tUInt32 DEF_rg_addr_BITS_11_TO_0___h5720;
  tUInt8 DEF_addr_lsbs__h30377;
  tUInt8 DEF_x__h30181;
  tUInt8 DEF_pte_r__h5338;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BIT_2___d844;
  tUInt8 DEF_rg_addr_0_BITS_2_TO_0_43_EQ_0x0___d144;
  tUInt64 DEF__theResult___fst__h5668;
  tUInt64 DEF_pa___1__h5674;
  tUInt64 DEF_pa___1__h5792;
  tUInt64 DEF_pa___1__h5723;
  tUInt64 DEF__theResult___fst__h5327;
  tUInt8 DEF_rg_priv_9_ULE_0b1_0_AND_rg_satp_2_BITS_63_TO_6_ETC___d48;
  tUInt64 DEF__theResult___fst__h5256;
  tUInt8 DEF_NOT_master_xactor_rg_rd_data_36_BIT_3_47_48_AN_ETC___d849;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BITS_18_TO_10_53_EQ_0___d854;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BITS_65_TO_64_37_EQ_0___d838;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BITS_27_TO_19_50_EQ_0___d851;
  tUInt8 DEF_rg_cset_in_cache_6_EQ_127___d17;
  tUInt8 DEF_rg_amo_funct7_1_BITS_6_TO_2_2_EQ_0b11___d186;
  tUInt8 DEF_rg_amo_funct7_1_BITS_6_TO_2_2_EQ_0b10___d73;
  tUInt8 DEF_rg_satp_2_BITS_63_TO_60_3_EQ_8___d44;
  tUInt8 DEF_rg_op_6_EQ_2___d69;
  tUInt8 DEF_rg_op_6_EQ_1___d185;
  tUInt8 DEF_rg_op_6_EQ_0___d67;
  tUInt8 DEF_rg_priv_9_EQ_0b1___d60;
  tUInt8 DEF_rg_priv_9_EQ_0b0___d56;
  tUInt8 DEF_NOT_master_xactor_rg_rd_data_36_BITS_18_TO_10__ETC___d855;
  tUInt8 DEF_NOT_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_ad_ETC___d58;
  tUInt8 DEF_NOT_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_ad_ETC___d99;
  tUInt8 DEF_NOT_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_ad_ETC___d101;
  tUInt8 DEF_NOT_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_ad_ETC___d94;
  tUInt8 DEF_NOT_dmem_not_imem___d81;
  tUInt8 DEF_NOT_rg_op_6_EQ_0_7_8_AND_NOT_rg_op_6_EQ_2_9_0__ETC___d76;
  tUInt8 DEF_NOT_rg_amo_funct7_1_BITS_6_TO_2_2_EQ_0b11_86___d354;
  tUInt8 DEF_NOT_rg_amo_funct7_1_BITS_6_TO_2_2_EQ_0b10_3___d74;
  tUInt8 DEF_rg_op_6_EQ_2_9_AND_rg_amo_funct7_1_BITS_6_TO_2_ETC___d90;
  tUInt8 DEF_NOT_master_xactor_rg_rd_data_36_BIT_1_42___d843;
  tUInt8 DEF_tlb_lookup_rg_satp_2_BITS_59_TO_44_9_rg_addr_0_ETC___d86;
  tUInt8 DEF_y__h5492;
  tUInt64 DEF_x__h5795;
  tUInt64 DEF_x__h5677;
  tUInt64 DEF_x__h5726;
 
 /* Local definitions */
 private:
  tUInt8 DEF_master_xactor_rg_rd_data_36_BIT_3_47_OR_master_ETC___d865;
  tUInt8 DEF_b__h20260;
  tUInt8 DEF_f_reset_reqs_first____d8;
  tUInt32 DEF_v__h34146;
  tUInt32 DEF_v__h32992;
  tUInt32 DEF_v__h32608;
  tUInt32 DEF_v__h32569;
  tUInt32 DEF_v__h31987;
  tUInt32 DEF_v__h31871;
  tUInt32 DEF_v__h31521;
  tUInt32 DEF_v__h30022;
  tUInt32 DEF_v__h29741;
  tUInt32 DEF_v__h29609;
  tUInt32 DEF_v__h29403;
  tUInt32 DEF_v__h29227;
  tUInt32 DEF_v__h29082;
  tUInt32 DEF_v__h28590;
  tUInt32 DEF_v__h28309;
  tUInt32 DEF_v__h28202;
  tUInt32 DEF_v__h27803;
  tUInt32 DEF_v__h27667;
  tUInt32 DEF_v__h25926;
  tUInt32 DEF_v__h25701;
  tUInt32 DEF_v__h25579;
  tUInt32 DEF_v__h25278;
  tUInt32 DEF_v__h24477;
  tUInt32 DEF_v__h24395;
  tUInt32 DEF_v__h24324;
  tUInt32 DEF_v__h24253;
  tUInt32 DEF_v__h23848;
  tUInt32 DEF_v__h23736;
  tUInt32 DEF_v__h23630;
  tUInt32 DEF_v__h23528;
  tUInt32 DEF_v__h23457;
  tUInt32 DEF_v__h22894;
  tUInt32 DEF_v__h22782;
  tUInt32 DEF_v__h22676;
  tUInt32 DEF_v__h22574;
  tUInt32 DEF_v__h22503;
  tUInt32 DEF_v__h21859;
  tUInt32 DEF_v__h21021;
  tUInt32 DEF_v__h20294;
  tUInt32 DEF_v__h19645;
  tUInt32 DEF_v__h13761;
  tUInt32 DEF_v__h4239;
  tUInt32 DEF_v__h4090;
  tUInt32 DEF_v__h3989;
  tUInt32 DEF_v__h3618;
  tUWide DEF_master_xactor_rg_wr_data___d1357;
  tUWide DEF_master_xactor_rg_rd_addr___d1363;
  tUWide DEF_master_xactor_rg_wr_addr___d1354;
  tUInt64 DEF_pte_pa__h24191;
  tUInt64 DEF_rg_ld_val__h28560;
  tUInt64 DEF_rg_pa__h31353;
  tUInt64 DEF_rg_st_amo_val__h30322;
  tUInt64 DEF_old_word64__h17176;
  tUInt8 DEF_master_xactor_crg_rd_data_full_port2__read____d1365;
  tUInt8 DEF_master_xactor_crg_rd_addr_full_port1__read____d1362;
  tUInt8 DEF_master_xactor_crg_wr_resp_full_port2__read____d1359;
  tUInt8 DEF_master_xactor_crg_wr_data_full_port1__read____d1356;
  tUInt8 DEF_master_xactor_crg_wr_addr_full_port1__read____d1353;
  tUInt64 DEF_pte__h21979;
  tUInt64 DEF_rg_pa_BITS_63_TO_3___h29974;
  tUInt64 DEF_rg_pa_BITS_63_TO_6___h25422;
  tUInt64 DEF_ppn__h22144;
  tUInt64 DEF_satp_ppn__h2383;
  tUInt32 DEF_x__h28127;
  tUInt32 DEF_x__h31257;
  tUInt32 DEF_x__h28075;
  tUInt32 DEF_word64_set_in_cache__h27199;
  tUInt32 DEF_vpn_1__h2374;
  tUInt32 DEF_vpn_0__h2375;
  tUInt8 DEF_x__h28022;
  tUInt8 DEF_cset_in_cache__h27004;
  tUInt8 DEF_shift_bytes__h29943;
  std::string DEF_d_or_i__h37;
  tUInt64 DEF_w2__h30225;
  tUInt64 DEF_result__h28046;
  tUInt64 DEF_result__h28098;
  tUInt64 DEF_result__h28150;
  tUInt8 DEF_rg_f3_39_EQ_0b10___d170;
  tUInt64 DEF_result__h28124;
  tUInt64 DEF_IF_rg_f3_39_EQ_0b10_70_THEN_SEXT_rg_st_amo_val_ETC___d638;
  tUInt64 DEF_w2___1__h30295;
  tUInt64 DEF_result__h28072;
  tUInt64 DEF_result__h28019;
  tUInt8 DEF_strobe64__h31366;
  tUInt8 DEF_strobe64__h31389;
  tUInt8 DEF_io_req_wr_data_wstrb__h30096;
  tUInt8 DEF_strobe64__h30212;
  tUInt8 DEF_IF_master_xactor_rg_rd_data_36_BITS_65_TO_64_3_ETC___d1057;
  tUInt8 DEF_IF_master_xactor_rg_rd_data_36_BITS_65_TO_64_3_ETC___d871;
  tUInt8 DEF_exc_code___1__h5566;
  tUInt8 DEF_access_exc_code__h3127;
  tUInt8 DEF_ctr_wr_rsps_pending_crg_port0__read__27_EQ_15___d769;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BITS_65_TO_64_37_EQ_2___d1017;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BITS_65_TO_64_37_EQ_1___d1015;
  tUInt8 DEF_NOT_cfg_verbosity_read__0_ULE_1_1___d12;
  tUInt8 DEF_NOT_cfg_verbosity_read__0_ULE_2_006___d1007;
  tUInt8 DEF_NOT_master_xactor_rg_rd_data_36_BITS_65_TO_64__ETC___d1022;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BIT_0_40_AND_maste_ETC___d884;
  tUInt8 DEF_NOT_master_xactor_rg_rd_data_36_BITS_65_TO_64__ETC___d918;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BITS_65_TO_64_37_E_ETC___d897;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BITS_65_TO_64_37_E_ETC___d886;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BITS_65_TO_64_37_E_ETC___d877;
  tUInt8 DEF_master_xactor_rg_rd_data_36_BITS_65_TO_64_37_E_ETC___d1074;
  tUInt8 DEF_NOT_cfg_verbosity_read__0_EQ_0_4___d25;
  tUInt8 DEF_NOT_cfg_verbosity_read__0_ULE_1_1_2_AND_NOT_ma_ETC___d1056;
  tUInt8 DEF_NOT_cfg_verbosity_read__0_ULE_1_1_2_AND_master_ETC___d1055;
  tUInt8 DEF_NOT_cfg_verbosity_read__0_ULE_1_1_2_AND_master_ETC___d1054;
  tUInt8 DEF_NOT_cfg_verbosity_read__0_ULE_1_1_2_AND_master_ETC___d1053;
  tUInt8 DEF_NOT_f_reset_reqs_first___d9;
  tUInt8 DEF_shift_bits__h29944;
  tUInt64 DEF_cline_addr__h25330;
  tUInt64 DEF_lev_1_PTN_pa__h22145;
  tUInt64 DEF_satp_pa__h2384;
  tUInt8 DEF_ctr_wr_rsps_pending_crg_port0__read__27_PLUS_1___d728;
  tUWide DEF_IF_rg_f3_39_BITS_1_TO_0_00_EQ_0b0_01_OR_rg_f3__ETC___d1234;
  tUWide DEF_IF_rg_op_6_EQ_1_85_OR_rg_op_6_EQ_2_9_AND_rg_am_ETC___d726;
  tUWide DEF_IF_rg_f3_39_BITS_1_TO_0_00_EQ_0b0_01_OR_rg_f3__ETC___d1114;
  tUWide DEF_rg_pa_89_BITS_63_TO_3_101_CONCAT_0_102_CONCAT_0___d1103;
  tUInt64 DEF_io_req_wr_addr_awaddr__h29936;
  tUWide DEF_rg_pa_89_BITS_63_TO_6_90_CONCAT_0_91_OR_rg_req_ETC___d1002;
  tUWide DEF_rg_pa_89_BITS_63_TO_6_90_CONCAT_0_91_CONCAT_0___d992;
  tUWide DEF_rg_pa_89_CONCAT_0___d1046;
  tUWide DEF__0_CONCAT_master_xactor_rg_rd_data_36_BITS_53_T_ETC___d941;
  tUWide DEF__0_CONCAT_master_xactor_rg_rd_data_36_BITS_53_T_ETC___d894;
  tUWide DEF_IF_rg_priv_9_ULE_0b1_0_AND_rg_satp_2_BITS_63_T_ETC___d709;
  tUWide DEF__0_CONCAT_rg_satp_2_BITS_43_TO_0_80_CONCAT_0b0__ETC___d832;
  tUWide DEF_mem_master_rresp_CONCAT_mem_master_rdata___d1368;
  tUInt64 DEF_x__h22372;
  tUInt64 DEF_x__h4359;
 
 /* Rules */
 public:
  void RL_rl_start_reset();
  void RL_rl_reset();
  void RL_rl_probe_and_immed_rsp();
  void RL_rl_start_tlb_refill();
  void RL_rl_ptw_level_2();
  void RL_rl_ptw_level_1();
  void RL_rl_ptw_level_0();
  void RL_rl_start_cache_refill();
  void RL_rl_cache_refill_req_loop();
  void RL_rl_cache_refill_rsps_loop();
  void RL_rl_rereq();
  void RL_rl_ST_AMO_response();
  void RL_rl_io_read_req();
  void RL_rl_io_read_rsp();
  void RL_rl_maintain_io_read_rsp();
  void RL_rl_io_wr_req();
  void RL_rl_io_AMO_ST_req();
  void RL_rl_io_AMO_op_req();
  void RL_rl_io_AMO_read_rsp();
  void RL_rl_discard_write_rsp();
  void RL_rl_drive_exception_rsp();
 
 /* Methods */
 public:
  tUInt8 METH_mem_master_m_awuser();
  tUInt8 METH_RDY_mem_master_m_awuser();
  tUInt8 METH_mem_master_m_aruser();
  tUInt8 METH_RDY_mem_master_m_aruser();
  void METH_set_verbosity(tUInt8 ARG_set_verbosity_verbosity);
  tUInt8 METH_RDY_set_verbosity();
  void METH_server_reset_request_put(tUInt8 ARG_server_reset_request_put);
  tUInt8 METH_RDY_server_reset_request_put();
  void METH_server_reset_response_get();
  tUInt8 METH_RDY_server_reset_response_get();
  void METH_req(tUInt8 ARG_req_op,
		tUInt8 ARG_req_f3,
		tUInt8 ARG_req_amo_funct7,
		tUInt64 ARG_req_addr,
		tUInt64 ARG_req_st_value,
		tUInt8 ARG_req_priv,
		tUInt8 ARG_req_sstatus_SUM,
		tUInt8 ARG_req_mstatus_MXR,
		tUInt64 ARG_req_satp);
  tUInt8 METH_RDY_req();
  tUInt8 METH_valid();
  tUInt8 METH_RDY_valid();
  tUInt64 METH_addr();
  tUInt8 METH_RDY_addr();
  tUInt64 METH_word64();
  tUInt8 METH_RDY_word64();
  tUInt64 METH_st_amo_val();
  tUInt8 METH_RDY_st_amo_val();
  tUInt8 METH_exc();
  tUInt8 METH_RDY_exc();
  tUInt8 METH_exc_code();
  tUInt8 METH_RDY_exc_code();
  void METH_server_flush_request_put(tUInt8 ARG_server_flush_request_put);
  tUInt8 METH_RDY_server_flush_request_put();
  void METH_server_flush_response_get();
  tUInt8 METH_RDY_server_flush_response_get();
  void METH_tlb_flush();
  tUInt8 METH_RDY_tlb_flush();
  tUInt8 METH_mem_master_m_awvalid();
  tUInt8 METH_RDY_mem_master_m_awvalid();
  tUInt64 METH_mem_master_m_awaddr();
  tUInt8 METH_RDY_mem_master_m_awaddr();
  tUInt8 METH_mem_master_m_awprot();
  tUInt8 METH_RDY_mem_master_m_awprot();
  void METH_mem_master_m_awready(tUInt8 ARG_mem_master_awready);
  tUInt8 METH_RDY_mem_master_m_awready();
  tUInt8 METH_mem_master_m_wvalid();
  tUInt8 METH_RDY_mem_master_m_wvalid();
  tUInt64 METH_mem_master_m_wdata();
  tUInt8 METH_RDY_mem_master_m_wdata();
  tUInt8 METH_mem_master_m_wstrb();
  tUInt8 METH_RDY_mem_master_m_wstrb();
  void METH_mem_master_m_wready(tUInt8 ARG_mem_master_wready);
  tUInt8 METH_RDY_mem_master_m_wready();
  void METH_mem_master_m_bvalid(tUInt8 ARG_mem_master_bvalid,
				tUInt8 ARG_mem_master_bresp,
				tUInt8 ARG_mem_master_buser);
  tUInt8 METH_RDY_mem_master_m_bvalid();
  tUInt8 METH_mem_master_m_bready();
  tUInt8 METH_RDY_mem_master_m_bready();
  tUInt8 METH_mem_master_m_arvalid();
  tUInt8 METH_RDY_mem_master_m_arvalid();
  tUInt64 METH_mem_master_m_araddr();
  tUInt8 METH_RDY_mem_master_m_araddr();
  tUInt8 METH_mem_master_m_arprot();
  tUInt8 METH_RDY_mem_master_m_arprot();
  void METH_mem_master_m_arready(tUInt8 ARG_mem_master_arready);
  tUInt8 METH_RDY_mem_master_m_arready();
  void METH_mem_master_m_rvalid(tUInt8 ARG_mem_master_rvalid,
				tUInt8 ARG_mem_master_rresp,
				tUInt64 ARG_mem_master_rdata,
				tUInt8 ARG_mem_master_ruser);
  tUInt8 METH_RDY_mem_master_m_rvalid();
  tUInt8 METH_mem_master_m_rready();
  tUInt8 METH_RDY_mem_master_m_rready();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkMMU_Cache &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkMMU_Cache &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkMMU_Cache &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkMMU_Cache &backing);
};

#endif /* ifndef __mkMMU_Cache_h__ */
