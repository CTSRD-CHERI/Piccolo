/*
 * Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
 * 
 * On Wed Aug 15 16:00:33 BST 2018
 * 
 */
#include "bluesim_primitives.h"
#include "mkNear_Mem.h"


/* String declarations */
static std::string const __str_literal_1("%0d: Near_Mem.rl_reset", 22u);
static std::string const __str_literal_2("%0d: Near_Mem.rl_reset_complete", 31u);


/* Constructor */
MOD_mkNear_Mem::MOD_mkNear_Mem(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_cfg_verbosity(simHdl, "cfg_verbosity", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_dcache(simHdl, "dcache", this, (tUInt8)1u),
    INST_f_reset_rsps(simHdl, "f_reset_rsps", this, 0u, 2u, 1u, 0u),
    INST_icache(simHdl, "icache", this, (tUInt8)0u),
    INST_rg_state(simHdl, "rg_state", this, 2u, (tUInt8)2u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_v__h1217(2863311530u),
    DEF_v__h1066(2863311530u)
{
  PORT_EN_server_fence_i_request_put = false;
  PORT_EN_server_fence_request_put = false;
  PORT_dmem_master_rready = false;
  PORT_dmem_master_arvalid = false;
  PORT_dmem_master_bready = false;
  PORT_dmem_master_wvalid = false;
  PORT_dmem_master_awvalid = false;
  PORT_imem_master_rready = false;
  PORT_imem_master_arvalid = false;
  PORT_imem_master_bready = false;
  PORT_imem_master_wvalid = false;
  PORT_imem_master_awvalid = false;
  PORT_imem_master_awaddr = 0llu;
  PORT_imem_master_awprot = 0u;
  PORT_imem_master_awuser = 0u;
  PORT_imem_master_wdata = 0llu;
  PORT_imem_master_wstrb = 0u;
  PORT_imem_master_araddr = 0llu;
  PORT_imem_master_arprot = 0u;
  PORT_imem_master_aruser = 0u;
  PORT_dmem_master_awaddr = 0llu;
  PORT_dmem_master_awprot = 0u;
  PORT_dmem_master_awuser = 0u;
  PORT_dmem_master_wdata = 0llu;
  PORT_dmem_master_wstrb = 0u;
  PORT_dmem_master_araddr = 0llu;
  PORT_dmem_master_arprot = 0u;
  PORT_dmem_master_aruser = 0u;
  PORT_near_mem_slave_awready = false;
  PORT_near_mem_slave_wready = false;
  PORT_near_mem_slave_bvalid = false;
  PORT_near_mem_slave_bresp = 0u;
  PORT_near_mem_slave_buser = 0u;
  PORT_near_mem_slave_arready = false;
  PORT_near_mem_slave_rvalid = false;
  PORT_near_mem_slave_rresp = 0u;
  PORT_near_mem_slave_rdata = 0llu;
  PORT_near_mem_slave_ruser = 0u;
  PORT_RDY_imem_master_m_awready = false;
  PORT_RDY_imem_master_m_wready = false;
  PORT_RDY_imem_master_m_bvalid = false;
  PORT_RDY_imem_master_m_arready = false;
  PORT_RDY_imem_master_m_rvalid = false;
  PORT_RDY_dmem_master_m_awready = false;
  PORT_RDY_dmem_master_m_wready = false;
  PORT_RDY_dmem_master_m_bvalid = false;
  PORT_RDY_dmem_master_m_arready = false;
  PORT_RDY_dmem_master_m_rvalid = false;
  PORT_RDY_near_mem_slave_m_awvalid = false;
  PORT_RDY_near_mem_slave_m_wvalid = false;
  PORT_RDY_near_mem_slave_m_bready = false;
  PORT_RDY_near_mem_slave_m_arvalid = false;
  PORT_RDY_near_mem_slave_m_rready = false;
  symbol_count = 63u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkNear_Mem::init_symbols_0()
{
  init_symbol(&symbols[0u], "cfg_verbosity", SYM_MODULE, &INST_cfg_verbosity);
  init_symbol(&symbols[1u], "dcache", SYM_MODULE, &INST_dcache);
  init_symbol(&symbols[2u], "dmem_master_araddr", SYM_PORT, &PORT_dmem_master_araddr, 64u);
  init_symbol(&symbols[3u], "dmem_master_arprot", SYM_PORT, &PORT_dmem_master_arprot, 3u);
  init_symbol(&symbols[4u], "dmem_master_aruser", SYM_PORT, &PORT_dmem_master_aruser, 0u);
  init_symbol(&symbols[5u], "dmem_master_arvalid", SYM_PORT, &PORT_dmem_master_arvalid, 1u);
  init_symbol(&symbols[6u], "dmem_master_awaddr", SYM_PORT, &PORT_dmem_master_awaddr, 64u);
  init_symbol(&symbols[7u], "dmem_master_awprot", SYM_PORT, &PORT_dmem_master_awprot, 3u);
  init_symbol(&symbols[8u], "dmem_master_awuser", SYM_PORT, &PORT_dmem_master_awuser, 0u);
  init_symbol(&symbols[9u], "dmem_master_awvalid", SYM_PORT, &PORT_dmem_master_awvalid, 1u);
  init_symbol(&symbols[10u], "dmem_master_bready", SYM_PORT, &PORT_dmem_master_bready, 1u);
  init_symbol(&symbols[11u], "dmem_master_rready", SYM_PORT, &PORT_dmem_master_rready, 1u);
  init_symbol(&symbols[12u], "dmem_master_wdata", SYM_PORT, &PORT_dmem_master_wdata, 64u);
  init_symbol(&symbols[13u], "dmem_master_wstrb", SYM_PORT, &PORT_dmem_master_wstrb, 8u);
  init_symbol(&symbols[14u], "dmem_master_wvalid", SYM_PORT, &PORT_dmem_master_wvalid, 1u);
  init_symbol(&symbols[15u],
	      "EN_server_fence_i_request_put",
	      SYM_PORT,
	      &PORT_EN_server_fence_i_request_put,
	      1u);
  init_symbol(&symbols[16u],
	      "EN_server_fence_request_put",
	      SYM_PORT,
	      &PORT_EN_server_fence_request_put,
	      1u);
  init_symbol(&symbols[17u], "f_reset_rsps", SYM_MODULE, &INST_f_reset_rsps);
  init_symbol(&symbols[18u], "icache", SYM_MODULE, &INST_icache);
  init_symbol(&symbols[19u], "imem_master_araddr", SYM_PORT, &PORT_imem_master_araddr, 64u);
  init_symbol(&symbols[20u], "imem_master_arprot", SYM_PORT, &PORT_imem_master_arprot, 3u);
  init_symbol(&symbols[21u], "imem_master_aruser", SYM_PORT, &PORT_imem_master_aruser, 0u);
  init_symbol(&symbols[22u], "imem_master_arvalid", SYM_PORT, &PORT_imem_master_arvalid, 1u);
  init_symbol(&symbols[23u], "imem_master_awaddr", SYM_PORT, &PORT_imem_master_awaddr, 64u);
  init_symbol(&symbols[24u], "imem_master_awprot", SYM_PORT, &PORT_imem_master_awprot, 3u);
  init_symbol(&symbols[25u], "imem_master_awuser", SYM_PORT, &PORT_imem_master_awuser, 0u);
  init_symbol(&symbols[26u], "imem_master_awvalid", SYM_PORT, &PORT_imem_master_awvalid, 1u);
  init_symbol(&symbols[27u], "imem_master_bready", SYM_PORT, &PORT_imem_master_bready, 1u);
  init_symbol(&symbols[28u], "imem_master_rready", SYM_PORT, &PORT_imem_master_rready, 1u);
  init_symbol(&symbols[29u], "imem_master_wdata", SYM_PORT, &PORT_imem_master_wdata, 64u);
  init_symbol(&symbols[30u], "imem_master_wstrb", SYM_PORT, &PORT_imem_master_wstrb, 8u);
  init_symbol(&symbols[31u], "imem_master_wvalid", SYM_PORT, &PORT_imem_master_wvalid, 1u);
  init_symbol(&symbols[32u], "near_mem_slave_arready", SYM_PORT, &PORT_near_mem_slave_arready, 1u);
  init_symbol(&symbols[33u], "near_mem_slave_awready", SYM_PORT, &PORT_near_mem_slave_awready, 1u);
  init_symbol(&symbols[34u], "near_mem_slave_bresp", SYM_PORT, &PORT_near_mem_slave_bresp, 2u);
  init_symbol(&symbols[35u], "near_mem_slave_buser", SYM_PORT, &PORT_near_mem_slave_buser, 0u);
  init_symbol(&symbols[36u], "near_mem_slave_bvalid", SYM_PORT, &PORT_near_mem_slave_bvalid, 1u);
  init_symbol(&symbols[37u], "near_mem_slave_rdata", SYM_PORT, &PORT_near_mem_slave_rdata, 64u);
  init_symbol(&symbols[38u], "near_mem_slave_rresp", SYM_PORT, &PORT_near_mem_slave_rresp, 2u);
  init_symbol(&symbols[39u], "near_mem_slave_ruser", SYM_PORT, &PORT_near_mem_slave_ruser, 0u);
  init_symbol(&symbols[40u], "near_mem_slave_rvalid", SYM_PORT, &PORT_near_mem_slave_rvalid, 1u);
  init_symbol(&symbols[41u], "near_mem_slave_wready", SYM_PORT, &PORT_near_mem_slave_wready, 1u);
  init_symbol(&symbols[42u],
	      "RDY_dmem_master_m_arready",
	      SYM_PORT,
	      &PORT_RDY_dmem_master_m_arready,
	      1u);
  init_symbol(&symbols[43u],
	      "RDY_dmem_master_m_awready",
	      SYM_PORT,
	      &PORT_RDY_dmem_master_m_awready,
	      1u);
  init_symbol(&symbols[44u],
	      "RDY_dmem_master_m_bvalid",
	      SYM_PORT,
	      &PORT_RDY_dmem_master_m_bvalid,
	      1u);
  init_symbol(&symbols[45u],
	      "RDY_dmem_master_m_rvalid",
	      SYM_PORT,
	      &PORT_RDY_dmem_master_m_rvalid,
	      1u);
  init_symbol(&symbols[46u],
	      "RDY_dmem_master_m_wready",
	      SYM_PORT,
	      &PORT_RDY_dmem_master_m_wready,
	      1u);
  init_symbol(&symbols[47u],
	      "RDY_imem_master_m_arready",
	      SYM_PORT,
	      &PORT_RDY_imem_master_m_arready,
	      1u);
  init_symbol(&symbols[48u],
	      "RDY_imem_master_m_awready",
	      SYM_PORT,
	      &PORT_RDY_imem_master_m_awready,
	      1u);
  init_symbol(&symbols[49u],
	      "RDY_imem_master_m_bvalid",
	      SYM_PORT,
	      &PORT_RDY_imem_master_m_bvalid,
	      1u);
  init_symbol(&symbols[50u],
	      "RDY_imem_master_m_rvalid",
	      SYM_PORT,
	      &PORT_RDY_imem_master_m_rvalid,
	      1u);
  init_symbol(&symbols[51u],
	      "RDY_imem_master_m_wready",
	      SYM_PORT,
	      &PORT_RDY_imem_master_m_wready,
	      1u);
  init_symbol(&symbols[52u],
	      "RDY_near_mem_slave_m_arvalid",
	      SYM_PORT,
	      &PORT_RDY_near_mem_slave_m_arvalid,
	      1u);
  init_symbol(&symbols[53u],
	      "RDY_near_mem_slave_m_awvalid",
	      SYM_PORT,
	      &PORT_RDY_near_mem_slave_m_awvalid,
	      1u);
  init_symbol(&symbols[54u],
	      "RDY_near_mem_slave_m_bready",
	      SYM_PORT,
	      &PORT_RDY_near_mem_slave_m_bready,
	      1u);
  init_symbol(&symbols[55u],
	      "RDY_near_mem_slave_m_rready",
	      SYM_PORT,
	      &PORT_RDY_near_mem_slave_m_rready,
	      1u);
  init_symbol(&symbols[56u],
	      "RDY_near_mem_slave_m_wvalid",
	      SYM_PORT,
	      &PORT_RDY_near_mem_slave_m_wvalid,
	      1u);
  init_symbol(&symbols[57u], "RL_rl_reset", SYM_RULE);
  init_symbol(&symbols[58u], "RL_rl_reset_complete", SYM_RULE);
  init_symbol(&symbols[59u], "rg_state", SYM_MODULE, &INST_rg_state);
  init_symbol(&symbols[60u], "rg_state__h929", SYM_DEF, &DEF_rg_state__h929, 2u);
  init_symbol(&symbols[61u],
	      "WILL_FIRE_server_fence_i_request_put",
	      SYM_DEF,
	      &DEF_WILL_FIRE_server_fence_i_request_put,
	      1u);
  init_symbol(&symbols[62u],
	      "WILL_FIRE_server_fence_request_put",
	      SYM_DEF,
	      &DEF_WILL_FIRE_server_fence_request_put,
	      1u);
}


/* Rule actions */

void MOD_mkNear_Mem::RL_rl_reset()
{
  tUInt32 DEF_v__h1060;
  DEF_x__h1198 = INST_cfg_verbosity.METH_read();
  DEF_NOT_cfg_verbosity_read_ULE_1___d9 = !(DEF_x__h1198 <= (tUInt8)1u);
  INST_icache.METH_server_reset_request_put((tUInt8)0u);
  INST_dcache.METH_server_reset_request_put((tUInt8)0u);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1___d9)
      DEF_v__h1066 = dollar_stime(sim_hdl);
  DEF_v__h1060 = DEF_v__h1066 / 10u;
  INST_rg_state.METH_write((tUInt8)1u);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1___d9)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_1, DEF_v__h1060);
}

void MOD_mkNear_Mem::RL_rl_reset_complete()
{
  tUInt32 DEF_v__h1211;
  DEF_x__h1198 = INST_cfg_verbosity.METH_read();
  DEF_NOT_cfg_verbosity_read_ULE_1___d9 = !(DEF_x__h1198 <= (tUInt8)1u);
  INST_icache.METH_server_reset_response_get();
  INST_dcache.METH_server_reset_response_get();
  INST_f_reset_rsps.METH_enq();
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1___d9)
      DEF_v__h1217 = dollar_stime(sim_hdl);
  DEF_v__h1211 = DEF_v__h1217 / 10u;
  INST_rg_state.METH_write((tUInt8)2u);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_cfg_verbosity_read_ULE_1___d9)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_2, DEF_v__h1211);
}


/* Methods */

tUInt8 MOD_mkNear_Mem::METH_imem_master_m_awuser()
{
  PORT_imem_master_awuser = INST_icache.METH_mem_master_m_awuser();
  return PORT_imem_master_awuser;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_awuser()
{
  tUInt8 PORT_RDY_imem_master_m_awuser;
  tUInt8 DEF_CAN_FIRE_imem_master_m_awuser;
  DEF_CAN_FIRE_imem_master_m_awuser = (tUInt8)1u;
  PORT_RDY_imem_master_m_awuser = DEF_CAN_FIRE_imem_master_m_awuser;
  return PORT_RDY_imem_master_m_awuser;
}

tUInt8 MOD_mkNear_Mem::METH_imem_master_m_aruser()
{
  PORT_imem_master_aruser = INST_icache.METH_mem_master_m_aruser();
  return PORT_imem_master_aruser;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_aruser()
{
  tUInt8 PORT_RDY_imem_master_m_aruser;
  tUInt8 DEF_CAN_FIRE_imem_master_m_aruser;
  DEF_CAN_FIRE_imem_master_m_aruser = (tUInt8)1u;
  PORT_RDY_imem_master_m_aruser = DEF_CAN_FIRE_imem_master_m_aruser;
  return PORT_RDY_imem_master_m_aruser;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_master_m_awuser()
{
  PORT_dmem_master_awuser = INST_dcache.METH_mem_master_m_awuser();
  return PORT_dmem_master_awuser;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_awuser()
{
  tUInt8 PORT_RDY_dmem_master_m_awuser;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_awuser;
  DEF_CAN_FIRE_dmem_master_m_awuser = (tUInt8)1u;
  PORT_RDY_dmem_master_m_awuser = DEF_CAN_FIRE_dmem_master_m_awuser;
  return PORT_RDY_dmem_master_m_awuser;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_master_m_aruser()
{
  PORT_dmem_master_aruser = INST_dcache.METH_mem_master_m_aruser();
  return PORT_dmem_master_aruser;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_aruser()
{
  tUInt8 PORT_RDY_dmem_master_m_aruser;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_aruser;
  DEF_CAN_FIRE_dmem_master_m_aruser = (tUInt8)1u;
  PORT_RDY_dmem_master_m_aruser = DEF_CAN_FIRE_dmem_master_m_aruser;
  return PORT_RDY_dmem_master_m_aruser;
}

tUInt8 MOD_mkNear_Mem::METH_near_mem_slave_m_awready()
{
  PORT_near_mem_slave_awready = (tUInt8)0u;
  return PORT_near_mem_slave_awready;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_awready()
{
  tUInt8 PORT_RDY_near_mem_slave_m_awready;
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_awready;
  DEF_CAN_FIRE_near_mem_slave_m_awready = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_awready = DEF_CAN_FIRE_near_mem_slave_m_awready;
  return PORT_RDY_near_mem_slave_m_awready;
}

tUInt8 MOD_mkNear_Mem::METH_near_mem_slave_m_wready()
{
  PORT_near_mem_slave_wready = (tUInt8)0u;
  return PORT_near_mem_slave_wready;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_wready()
{
  tUInt8 PORT_RDY_near_mem_slave_m_wready;
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_wready;
  DEF_CAN_FIRE_near_mem_slave_m_wready = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_wready = DEF_CAN_FIRE_near_mem_slave_m_wready;
  return PORT_RDY_near_mem_slave_m_wready;
}

tUInt8 MOD_mkNear_Mem::METH_near_mem_slave_m_bvalid()
{
  PORT_near_mem_slave_bvalid = (tUInt8)0u;
  return PORT_near_mem_slave_bvalid;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_bvalid()
{
  tUInt8 PORT_RDY_near_mem_slave_m_bvalid;
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_bvalid;
  DEF_CAN_FIRE_near_mem_slave_m_bvalid = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_bvalid = DEF_CAN_FIRE_near_mem_slave_m_bvalid;
  return PORT_RDY_near_mem_slave_m_bvalid;
}

tUInt8 MOD_mkNear_Mem::METH_near_mem_slave_m_bresp()
{
  PORT_near_mem_slave_bresp = (tUInt8)0u;
  return PORT_near_mem_slave_bresp;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_bresp()
{
  tUInt8 PORT_RDY_near_mem_slave_m_bresp;
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_bresp;
  DEF_CAN_FIRE_near_mem_slave_m_bresp = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_bresp = DEF_CAN_FIRE_near_mem_slave_m_bresp;
  return PORT_RDY_near_mem_slave_m_bresp;
}

tUInt8 MOD_mkNear_Mem::METH_near_mem_slave_m_buser()
{
  PORT_near_mem_slave_buser = (tUInt8)0u;
  return PORT_near_mem_slave_buser;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_buser()
{
  tUInt8 PORT_RDY_near_mem_slave_m_buser;
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_buser;
  DEF_CAN_FIRE_near_mem_slave_m_buser = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_buser = DEF_CAN_FIRE_near_mem_slave_m_buser;
  return PORT_RDY_near_mem_slave_m_buser;
}

tUInt8 MOD_mkNear_Mem::METH_near_mem_slave_m_arready()
{
  PORT_near_mem_slave_arready = (tUInt8)0u;
  return PORT_near_mem_slave_arready;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_arready()
{
  tUInt8 PORT_RDY_near_mem_slave_m_arready;
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_arready;
  DEF_CAN_FIRE_near_mem_slave_m_arready = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_arready = DEF_CAN_FIRE_near_mem_slave_m_arready;
  return PORT_RDY_near_mem_slave_m_arready;
}

tUInt8 MOD_mkNear_Mem::METH_near_mem_slave_m_rvalid()
{
  PORT_near_mem_slave_rvalid = (tUInt8)0u;
  return PORT_near_mem_slave_rvalid;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_rvalid()
{
  tUInt8 PORT_RDY_near_mem_slave_m_rvalid;
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_rvalid;
  DEF_CAN_FIRE_near_mem_slave_m_rvalid = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_rvalid = DEF_CAN_FIRE_near_mem_slave_m_rvalid;
  return PORT_RDY_near_mem_slave_m_rvalid;
}

tUInt8 MOD_mkNear_Mem::METH_near_mem_slave_m_rresp()
{
  PORT_near_mem_slave_rresp = (tUInt8)0u;
  return PORT_near_mem_slave_rresp;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_rresp()
{
  tUInt8 PORT_RDY_near_mem_slave_m_rresp;
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_rresp;
  DEF_CAN_FIRE_near_mem_slave_m_rresp = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_rresp = DEF_CAN_FIRE_near_mem_slave_m_rresp;
  return PORT_RDY_near_mem_slave_m_rresp;
}

tUInt64 MOD_mkNear_Mem::METH_near_mem_slave_m_rdata()
{
  PORT_near_mem_slave_rdata = 0llu;
  return PORT_near_mem_slave_rdata;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_rdata()
{
  tUInt8 PORT_RDY_near_mem_slave_m_rdata;
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_rdata;
  DEF_CAN_FIRE_near_mem_slave_m_rdata = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_rdata = DEF_CAN_FIRE_near_mem_slave_m_rdata;
  return PORT_RDY_near_mem_slave_m_rdata;
}

tUInt8 MOD_mkNear_Mem::METH_near_mem_slave_m_ruser()
{
  PORT_near_mem_slave_ruser = (tUInt8)0u;
  return PORT_near_mem_slave_ruser;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_ruser()
{
  tUInt8 PORT_RDY_near_mem_slave_m_ruser;
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_ruser;
  DEF_CAN_FIRE_near_mem_slave_m_ruser = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_ruser = DEF_CAN_FIRE_near_mem_slave_m_ruser;
  return PORT_RDY_near_mem_slave_m_ruser;
}

void MOD_mkNear_Mem::METH_server_reset_request_put(tUInt8 ARG_server_reset_request_put)
{
  INST_rg_state.METH_write((tUInt8)0u);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_server_reset_request_put()
{
  tUInt8 DEF_CAN_FIRE_server_reset_request_put;
  tUInt8 PORT_RDY_server_reset_request_put;
  DEF_rg_state__h929 = INST_rg_state.METH_read();
  DEF_CAN_FIRE_server_reset_request_put = DEF_rg_state__h929 == (tUInt8)2u;
  PORT_RDY_server_reset_request_put = DEF_CAN_FIRE_server_reset_request_put;
  return PORT_RDY_server_reset_request_put;
}

void MOD_mkNear_Mem::METH_server_reset_response_get()
{
  INST_f_reset_rsps.METH_deq();
}

tUInt8 MOD_mkNear_Mem::METH_RDY_server_reset_response_get()
{
  tUInt8 DEF_CAN_FIRE_server_reset_response_get;
  tUInt8 PORT_RDY_server_reset_response_get;
  DEF_CAN_FIRE_server_reset_response_get = INST_f_reset_rsps.METH_i_notEmpty();
  PORT_RDY_server_reset_response_get = DEF_CAN_FIRE_server_reset_response_get;
  return PORT_RDY_server_reset_response_get;
}

void MOD_mkNear_Mem::METH_imem_req(tUInt8 ARG_imem_req_f3,
				   tUInt64 ARG_imem_req_addr,
				   tUInt8 ARG_imem_req_priv,
				   tUInt8 ARG_imem_req_sstatus_SUM,
				   tUInt8 ARG_imem_req_mstatus_MXR,
				   tUInt64 ARG_imem_req_satp)
{
  INST_icache.METH_req((tUInt8)0u,
		       ARG_imem_req_f3,
		       (tUInt8)42u,
		       ARG_imem_req_addr,
		       12297829382473034410llu,
		       ARG_imem_req_priv,
		       ARG_imem_req_sstatus_SUM,
		       ARG_imem_req_mstatus_MXR,
		       ARG_imem_req_satp);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_req()
{
  tUInt8 PORT_RDY_imem_req;
  tUInt8 DEF_CAN_FIRE_imem_req;
  DEF_CAN_FIRE_imem_req = (tUInt8)1u;
  PORT_RDY_imem_req = DEF_CAN_FIRE_imem_req;
  return PORT_RDY_imem_req;
}

tUInt8 MOD_mkNear_Mem::METH_imem_valid()
{
  tUInt8 PORT_imem_valid;
  PORT_imem_valid = INST_icache.METH_valid();
  return PORT_imem_valid;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_valid()
{
  tUInt8 PORT_RDY_imem_valid;
  tUInt8 DEF_CAN_FIRE_imem_valid;
  DEF_CAN_FIRE_imem_valid = (tUInt8)1u;
  PORT_RDY_imem_valid = DEF_CAN_FIRE_imem_valid;
  return PORT_RDY_imem_valid;
}

tUInt64 MOD_mkNear_Mem::METH_imem_pc()
{
  tUInt64 PORT_imem_pc;
  PORT_imem_pc = INST_icache.METH_addr();
  return PORT_imem_pc;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_pc()
{
  tUInt8 PORT_RDY_imem_pc;
  tUInt8 DEF_CAN_FIRE_imem_pc;
  DEF_CAN_FIRE_imem_pc = (tUInt8)1u;
  PORT_RDY_imem_pc = DEF_CAN_FIRE_imem_pc;
  return PORT_RDY_imem_pc;
}

tUInt32 MOD_mkNear_Mem::METH_imem_instr()
{
  tUInt64 DEF_x__h1499;
  tUInt32 PORT_imem_instr;
  DEF_x__h1499 = INST_icache.METH_word64();
  PORT_imem_instr = (tUInt32)(DEF_x__h1499);
  return PORT_imem_instr;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_instr()
{
  tUInt8 PORT_RDY_imem_instr;
  tUInt8 DEF_CAN_FIRE_imem_instr;
  DEF_CAN_FIRE_imem_instr = (tUInt8)1u;
  PORT_RDY_imem_instr = DEF_CAN_FIRE_imem_instr;
  return PORT_RDY_imem_instr;
}

tUInt8 MOD_mkNear_Mem::METH_imem_exc()
{
  tUInt8 PORT_imem_exc;
  PORT_imem_exc = INST_icache.METH_exc();
  return PORT_imem_exc;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_exc()
{
  tUInt8 PORT_RDY_imem_exc;
  tUInt8 DEF_CAN_FIRE_imem_exc;
  DEF_CAN_FIRE_imem_exc = (tUInt8)1u;
  PORT_RDY_imem_exc = DEF_CAN_FIRE_imem_exc;
  return PORT_RDY_imem_exc;
}

tUInt8 MOD_mkNear_Mem::METH_imem_exc_code()
{
  tUInt8 PORT_imem_exc_code;
  PORT_imem_exc_code = INST_icache.METH_exc_code();
  return PORT_imem_exc_code;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_exc_code()
{
  tUInt8 PORT_RDY_imem_exc_code;
  tUInt8 DEF_CAN_FIRE_imem_exc_code;
  DEF_CAN_FIRE_imem_exc_code = (tUInt8)1u;
  PORT_RDY_imem_exc_code = DEF_CAN_FIRE_imem_exc_code;
  return PORT_RDY_imem_exc_code;
}

tUInt8 MOD_mkNear_Mem::METH_imem_master_m_awvalid()
{
  PORT_imem_master_awvalid = INST_icache.METH_mem_master_m_awvalid();
  return PORT_imem_master_awvalid;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_awvalid()
{
  tUInt8 PORT_RDY_imem_master_m_awvalid;
  tUInt8 DEF_CAN_FIRE_imem_master_m_awvalid;
  DEF_CAN_FIRE_imem_master_m_awvalid = (tUInt8)1u;
  PORT_RDY_imem_master_m_awvalid = DEF_CAN_FIRE_imem_master_m_awvalid;
  return PORT_RDY_imem_master_m_awvalid;
}

tUInt64 MOD_mkNear_Mem::METH_imem_master_m_awaddr()
{
  PORT_imem_master_awaddr = INST_icache.METH_mem_master_m_awaddr();
  return PORT_imem_master_awaddr;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_awaddr()
{
  tUInt8 PORT_RDY_imem_master_m_awaddr;
  tUInt8 DEF_CAN_FIRE_imem_master_m_awaddr;
  DEF_CAN_FIRE_imem_master_m_awaddr = (tUInt8)1u;
  PORT_RDY_imem_master_m_awaddr = DEF_CAN_FIRE_imem_master_m_awaddr;
  return PORT_RDY_imem_master_m_awaddr;
}

tUInt8 MOD_mkNear_Mem::METH_imem_master_m_awprot()
{
  PORT_imem_master_awprot = INST_icache.METH_mem_master_m_awprot();
  return PORT_imem_master_awprot;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_awprot()
{
  tUInt8 PORT_RDY_imem_master_m_awprot;
  tUInt8 DEF_CAN_FIRE_imem_master_m_awprot;
  DEF_CAN_FIRE_imem_master_m_awprot = (tUInt8)1u;
  PORT_RDY_imem_master_m_awprot = DEF_CAN_FIRE_imem_master_m_awprot;
  return PORT_RDY_imem_master_m_awprot;
}

void MOD_mkNear_Mem::METH_imem_master_m_awready(tUInt8 ARG_imem_master_awready)
{
  if (PORT_RDY_imem_master_m_awready)
    INST_icache.METH_mem_master_m_awready(ARG_imem_master_awready);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_awready()
{
  tUInt8 DEF_CAN_FIRE_imem_master_m_awready;
  DEF_CAN_FIRE_imem_master_m_awready = (tUInt8)1u;
  PORT_RDY_imem_master_m_awready = DEF_CAN_FIRE_imem_master_m_awready;
  return PORT_RDY_imem_master_m_awready;
}

tUInt8 MOD_mkNear_Mem::METH_imem_master_m_wvalid()
{
  PORT_imem_master_wvalid = INST_icache.METH_mem_master_m_wvalid();
  return PORT_imem_master_wvalid;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_wvalid()
{
  tUInt8 PORT_RDY_imem_master_m_wvalid;
  tUInt8 DEF_CAN_FIRE_imem_master_m_wvalid;
  DEF_CAN_FIRE_imem_master_m_wvalid = (tUInt8)1u;
  PORT_RDY_imem_master_m_wvalid = DEF_CAN_FIRE_imem_master_m_wvalid;
  return PORT_RDY_imem_master_m_wvalid;
}

tUInt64 MOD_mkNear_Mem::METH_imem_master_m_wdata()
{
  PORT_imem_master_wdata = INST_icache.METH_mem_master_m_wdata();
  return PORT_imem_master_wdata;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_wdata()
{
  tUInt8 PORT_RDY_imem_master_m_wdata;
  tUInt8 DEF_CAN_FIRE_imem_master_m_wdata;
  DEF_CAN_FIRE_imem_master_m_wdata = (tUInt8)1u;
  PORT_RDY_imem_master_m_wdata = DEF_CAN_FIRE_imem_master_m_wdata;
  return PORT_RDY_imem_master_m_wdata;
}

tUInt8 MOD_mkNear_Mem::METH_imem_master_m_wstrb()
{
  PORT_imem_master_wstrb = INST_icache.METH_mem_master_m_wstrb();
  return PORT_imem_master_wstrb;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_wstrb()
{
  tUInt8 PORT_RDY_imem_master_m_wstrb;
  tUInt8 DEF_CAN_FIRE_imem_master_m_wstrb;
  DEF_CAN_FIRE_imem_master_m_wstrb = (tUInt8)1u;
  PORT_RDY_imem_master_m_wstrb = DEF_CAN_FIRE_imem_master_m_wstrb;
  return PORT_RDY_imem_master_m_wstrb;
}

void MOD_mkNear_Mem::METH_imem_master_m_wready(tUInt8 ARG_imem_master_wready)
{
  if (PORT_RDY_imem_master_m_wready)
    INST_icache.METH_mem_master_m_wready(ARG_imem_master_wready);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_wready()
{
  tUInt8 DEF_CAN_FIRE_imem_master_m_wready;
  DEF_CAN_FIRE_imem_master_m_wready = (tUInt8)1u;
  PORT_RDY_imem_master_m_wready = DEF_CAN_FIRE_imem_master_m_wready;
  return PORT_RDY_imem_master_m_wready;
}

void MOD_mkNear_Mem::METH_imem_master_m_bvalid(tUInt8 ARG_imem_master_bvalid,
					       tUInt8 ARG_imem_master_bresp,
					       tUInt8 ARG_imem_master_buser)
{
  if (PORT_RDY_imem_master_m_bvalid)
    INST_icache.METH_mem_master_m_bvalid(ARG_imem_master_bvalid,
					 ARG_imem_master_bresp,
					 ARG_imem_master_buser);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_bvalid()
{
  tUInt8 DEF_CAN_FIRE_imem_master_m_bvalid;
  DEF_CAN_FIRE_imem_master_m_bvalid = (tUInt8)1u;
  PORT_RDY_imem_master_m_bvalid = DEF_CAN_FIRE_imem_master_m_bvalid;
  return PORT_RDY_imem_master_m_bvalid;
}

tUInt8 MOD_mkNear_Mem::METH_imem_master_m_bready()
{
  PORT_imem_master_bready = INST_icache.METH_mem_master_m_bready();
  return PORT_imem_master_bready;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_bready()
{
  tUInt8 PORT_RDY_imem_master_m_bready;
  tUInt8 DEF_CAN_FIRE_imem_master_m_bready;
  DEF_CAN_FIRE_imem_master_m_bready = (tUInt8)1u;
  PORT_RDY_imem_master_m_bready = DEF_CAN_FIRE_imem_master_m_bready;
  return PORT_RDY_imem_master_m_bready;
}

tUInt8 MOD_mkNear_Mem::METH_imem_master_m_arvalid()
{
  PORT_imem_master_arvalid = INST_icache.METH_mem_master_m_arvalid();
  return PORT_imem_master_arvalid;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_arvalid()
{
  tUInt8 PORT_RDY_imem_master_m_arvalid;
  tUInt8 DEF_CAN_FIRE_imem_master_m_arvalid;
  DEF_CAN_FIRE_imem_master_m_arvalid = (tUInt8)1u;
  PORT_RDY_imem_master_m_arvalid = DEF_CAN_FIRE_imem_master_m_arvalid;
  return PORT_RDY_imem_master_m_arvalid;
}

tUInt64 MOD_mkNear_Mem::METH_imem_master_m_araddr()
{
  PORT_imem_master_araddr = INST_icache.METH_mem_master_m_araddr();
  return PORT_imem_master_araddr;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_araddr()
{
  tUInt8 PORT_RDY_imem_master_m_araddr;
  tUInt8 DEF_CAN_FIRE_imem_master_m_araddr;
  DEF_CAN_FIRE_imem_master_m_araddr = (tUInt8)1u;
  PORT_RDY_imem_master_m_araddr = DEF_CAN_FIRE_imem_master_m_araddr;
  return PORT_RDY_imem_master_m_araddr;
}

tUInt8 MOD_mkNear_Mem::METH_imem_master_m_arprot()
{
  PORT_imem_master_arprot = INST_icache.METH_mem_master_m_arprot();
  return PORT_imem_master_arprot;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_arprot()
{
  tUInt8 PORT_RDY_imem_master_m_arprot;
  tUInt8 DEF_CAN_FIRE_imem_master_m_arprot;
  DEF_CAN_FIRE_imem_master_m_arprot = (tUInt8)1u;
  PORT_RDY_imem_master_m_arprot = DEF_CAN_FIRE_imem_master_m_arprot;
  return PORT_RDY_imem_master_m_arprot;
}

void MOD_mkNear_Mem::METH_imem_master_m_arready(tUInt8 ARG_imem_master_arready)
{
  if (PORT_RDY_imem_master_m_arready)
    INST_icache.METH_mem_master_m_arready(ARG_imem_master_arready);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_arready()
{
  tUInt8 DEF_CAN_FIRE_imem_master_m_arready;
  DEF_CAN_FIRE_imem_master_m_arready = (tUInt8)1u;
  PORT_RDY_imem_master_m_arready = DEF_CAN_FIRE_imem_master_m_arready;
  return PORT_RDY_imem_master_m_arready;
}

void MOD_mkNear_Mem::METH_imem_master_m_rvalid(tUInt8 ARG_imem_master_rvalid,
					       tUInt8 ARG_imem_master_rresp,
					       tUInt64 ARG_imem_master_rdata,
					       tUInt8 ARG_imem_master_ruser)
{
  if (PORT_RDY_imem_master_m_rvalid)
    INST_icache.METH_mem_master_m_rvalid(ARG_imem_master_rvalid,
					 ARG_imem_master_rresp,
					 ARG_imem_master_rdata,
					 ARG_imem_master_ruser);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_rvalid()
{
  tUInt8 DEF_CAN_FIRE_imem_master_m_rvalid;
  DEF_CAN_FIRE_imem_master_m_rvalid = (tUInt8)1u;
  PORT_RDY_imem_master_m_rvalid = DEF_CAN_FIRE_imem_master_m_rvalid;
  return PORT_RDY_imem_master_m_rvalid;
}

tUInt8 MOD_mkNear_Mem::METH_imem_master_m_rready()
{
  PORT_imem_master_rready = INST_icache.METH_mem_master_m_rready();
  return PORT_imem_master_rready;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_imem_master_m_rready()
{
  tUInt8 PORT_RDY_imem_master_m_rready;
  tUInt8 DEF_CAN_FIRE_imem_master_m_rready;
  DEF_CAN_FIRE_imem_master_m_rready = (tUInt8)1u;
  PORT_RDY_imem_master_m_rready = DEF_CAN_FIRE_imem_master_m_rready;
  return PORT_RDY_imem_master_m_rready;
}

void MOD_mkNear_Mem::METH_dmem_req(tUInt8 ARG_dmem_req_op,
				   tUInt8 ARG_dmem_req_f3,
				   tUInt8 ARG_dmem_req_amo_funct7,
				   tUInt64 ARG_dmem_req_addr,
				   tUInt64 ARG_dmem_req_store_value,
				   tUInt8 ARG_dmem_req_priv,
				   tUInt8 ARG_dmem_req_sstatus_SUM,
				   tUInt8 ARG_dmem_req_mstatus_MXR,
				   tUInt64 ARG_dmem_req_satp)
{
  INST_dcache.METH_req(ARG_dmem_req_op,
		       ARG_dmem_req_f3,
		       ARG_dmem_req_amo_funct7,
		       ARG_dmem_req_addr,
		       ARG_dmem_req_store_value,
		       ARG_dmem_req_priv,
		       ARG_dmem_req_sstatus_SUM,
		       ARG_dmem_req_mstatus_MXR,
		       ARG_dmem_req_satp);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_req()
{
  tUInt8 PORT_RDY_dmem_req;
  tUInt8 DEF_CAN_FIRE_dmem_req;
  DEF_CAN_FIRE_dmem_req = (tUInt8)1u;
  PORT_RDY_dmem_req = DEF_CAN_FIRE_dmem_req;
  return PORT_RDY_dmem_req;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_valid()
{
  tUInt8 PORT_dmem_valid;
  PORT_dmem_valid = INST_dcache.METH_valid();
  return PORT_dmem_valid;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_valid()
{
  tUInt8 PORT_RDY_dmem_valid;
  tUInt8 DEF_CAN_FIRE_dmem_valid;
  DEF_CAN_FIRE_dmem_valid = (tUInt8)1u;
  PORT_RDY_dmem_valid = DEF_CAN_FIRE_dmem_valid;
  return PORT_RDY_dmem_valid;
}

tUInt64 MOD_mkNear_Mem::METH_dmem_word64()
{
  tUInt64 PORT_dmem_word64;
  PORT_dmem_word64 = INST_dcache.METH_word64();
  return PORT_dmem_word64;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_word64()
{
  tUInt8 PORT_RDY_dmem_word64;
  tUInt8 DEF_CAN_FIRE_dmem_word64;
  DEF_CAN_FIRE_dmem_word64 = (tUInt8)1u;
  PORT_RDY_dmem_word64 = DEF_CAN_FIRE_dmem_word64;
  return PORT_RDY_dmem_word64;
}

tUInt64 MOD_mkNear_Mem::METH_dmem_st_amo_val()
{
  tUInt64 PORT_dmem_st_amo_val;
  PORT_dmem_st_amo_val = INST_dcache.METH_st_amo_val();
  return PORT_dmem_st_amo_val;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_st_amo_val()
{
  tUInt8 PORT_RDY_dmem_st_amo_val;
  tUInt8 DEF_CAN_FIRE_dmem_st_amo_val;
  DEF_CAN_FIRE_dmem_st_amo_val = (tUInt8)1u;
  PORT_RDY_dmem_st_amo_val = DEF_CAN_FIRE_dmem_st_amo_val;
  return PORT_RDY_dmem_st_amo_val;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_exc()
{
  tUInt8 PORT_dmem_exc;
  PORT_dmem_exc = INST_dcache.METH_exc();
  return PORT_dmem_exc;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_exc()
{
  tUInt8 PORT_RDY_dmem_exc;
  tUInt8 DEF_CAN_FIRE_dmem_exc;
  DEF_CAN_FIRE_dmem_exc = (tUInt8)1u;
  PORT_RDY_dmem_exc = DEF_CAN_FIRE_dmem_exc;
  return PORT_RDY_dmem_exc;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_exc_code()
{
  tUInt8 PORT_dmem_exc_code;
  PORT_dmem_exc_code = INST_dcache.METH_exc_code();
  return PORT_dmem_exc_code;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_exc_code()
{
  tUInt8 PORT_RDY_dmem_exc_code;
  tUInt8 DEF_CAN_FIRE_dmem_exc_code;
  DEF_CAN_FIRE_dmem_exc_code = (tUInt8)1u;
  PORT_RDY_dmem_exc_code = DEF_CAN_FIRE_dmem_exc_code;
  return PORT_RDY_dmem_exc_code;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_master_m_awvalid()
{
  PORT_dmem_master_awvalid = INST_dcache.METH_mem_master_m_awvalid();
  return PORT_dmem_master_awvalid;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_awvalid()
{
  tUInt8 PORT_RDY_dmem_master_m_awvalid;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_awvalid;
  DEF_CAN_FIRE_dmem_master_m_awvalid = (tUInt8)1u;
  PORT_RDY_dmem_master_m_awvalid = DEF_CAN_FIRE_dmem_master_m_awvalid;
  return PORT_RDY_dmem_master_m_awvalid;
}

tUInt64 MOD_mkNear_Mem::METH_dmem_master_m_awaddr()
{
  PORT_dmem_master_awaddr = INST_dcache.METH_mem_master_m_awaddr();
  return PORT_dmem_master_awaddr;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_awaddr()
{
  tUInt8 PORT_RDY_dmem_master_m_awaddr;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_awaddr;
  DEF_CAN_FIRE_dmem_master_m_awaddr = (tUInt8)1u;
  PORT_RDY_dmem_master_m_awaddr = DEF_CAN_FIRE_dmem_master_m_awaddr;
  return PORT_RDY_dmem_master_m_awaddr;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_master_m_awprot()
{
  PORT_dmem_master_awprot = INST_dcache.METH_mem_master_m_awprot();
  return PORT_dmem_master_awprot;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_awprot()
{
  tUInt8 PORT_RDY_dmem_master_m_awprot;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_awprot;
  DEF_CAN_FIRE_dmem_master_m_awprot = (tUInt8)1u;
  PORT_RDY_dmem_master_m_awprot = DEF_CAN_FIRE_dmem_master_m_awprot;
  return PORT_RDY_dmem_master_m_awprot;
}

void MOD_mkNear_Mem::METH_dmem_master_m_awready(tUInt8 ARG_dmem_master_awready)
{
  if (PORT_RDY_dmem_master_m_awready)
    INST_dcache.METH_mem_master_m_awready(ARG_dmem_master_awready);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_awready()
{
  tUInt8 DEF_CAN_FIRE_dmem_master_m_awready;
  DEF_CAN_FIRE_dmem_master_m_awready = (tUInt8)1u;
  PORT_RDY_dmem_master_m_awready = DEF_CAN_FIRE_dmem_master_m_awready;
  return PORT_RDY_dmem_master_m_awready;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_master_m_wvalid()
{
  PORT_dmem_master_wvalid = INST_dcache.METH_mem_master_m_wvalid();
  return PORT_dmem_master_wvalid;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_wvalid()
{
  tUInt8 PORT_RDY_dmem_master_m_wvalid;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_wvalid;
  DEF_CAN_FIRE_dmem_master_m_wvalid = (tUInt8)1u;
  PORT_RDY_dmem_master_m_wvalid = DEF_CAN_FIRE_dmem_master_m_wvalid;
  return PORT_RDY_dmem_master_m_wvalid;
}

tUInt64 MOD_mkNear_Mem::METH_dmem_master_m_wdata()
{
  PORT_dmem_master_wdata = INST_dcache.METH_mem_master_m_wdata();
  return PORT_dmem_master_wdata;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_wdata()
{
  tUInt8 PORT_RDY_dmem_master_m_wdata;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_wdata;
  DEF_CAN_FIRE_dmem_master_m_wdata = (tUInt8)1u;
  PORT_RDY_dmem_master_m_wdata = DEF_CAN_FIRE_dmem_master_m_wdata;
  return PORT_RDY_dmem_master_m_wdata;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_master_m_wstrb()
{
  PORT_dmem_master_wstrb = INST_dcache.METH_mem_master_m_wstrb();
  return PORT_dmem_master_wstrb;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_wstrb()
{
  tUInt8 PORT_RDY_dmem_master_m_wstrb;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_wstrb;
  DEF_CAN_FIRE_dmem_master_m_wstrb = (tUInt8)1u;
  PORT_RDY_dmem_master_m_wstrb = DEF_CAN_FIRE_dmem_master_m_wstrb;
  return PORT_RDY_dmem_master_m_wstrb;
}

void MOD_mkNear_Mem::METH_dmem_master_m_wready(tUInt8 ARG_dmem_master_wready)
{
  if (PORT_RDY_dmem_master_m_wready)
    INST_dcache.METH_mem_master_m_wready(ARG_dmem_master_wready);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_wready()
{
  tUInt8 DEF_CAN_FIRE_dmem_master_m_wready;
  DEF_CAN_FIRE_dmem_master_m_wready = (tUInt8)1u;
  PORT_RDY_dmem_master_m_wready = DEF_CAN_FIRE_dmem_master_m_wready;
  return PORT_RDY_dmem_master_m_wready;
}

void MOD_mkNear_Mem::METH_dmem_master_m_bvalid(tUInt8 ARG_dmem_master_bvalid,
					       tUInt8 ARG_dmem_master_bresp,
					       tUInt8 ARG_dmem_master_buser)
{
  if (PORT_RDY_dmem_master_m_bvalid)
    INST_dcache.METH_mem_master_m_bvalid(ARG_dmem_master_bvalid,
					 ARG_dmem_master_bresp,
					 ARG_dmem_master_buser);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_bvalid()
{
  tUInt8 DEF_CAN_FIRE_dmem_master_m_bvalid;
  DEF_CAN_FIRE_dmem_master_m_bvalid = (tUInt8)1u;
  PORT_RDY_dmem_master_m_bvalid = DEF_CAN_FIRE_dmem_master_m_bvalid;
  return PORT_RDY_dmem_master_m_bvalid;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_master_m_bready()
{
  PORT_dmem_master_bready = INST_dcache.METH_mem_master_m_bready();
  return PORT_dmem_master_bready;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_bready()
{
  tUInt8 PORT_RDY_dmem_master_m_bready;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_bready;
  DEF_CAN_FIRE_dmem_master_m_bready = (tUInt8)1u;
  PORT_RDY_dmem_master_m_bready = DEF_CAN_FIRE_dmem_master_m_bready;
  return PORT_RDY_dmem_master_m_bready;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_master_m_arvalid()
{
  PORT_dmem_master_arvalid = INST_dcache.METH_mem_master_m_arvalid();
  return PORT_dmem_master_arvalid;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_arvalid()
{
  tUInt8 PORT_RDY_dmem_master_m_arvalid;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_arvalid;
  DEF_CAN_FIRE_dmem_master_m_arvalid = (tUInt8)1u;
  PORT_RDY_dmem_master_m_arvalid = DEF_CAN_FIRE_dmem_master_m_arvalid;
  return PORT_RDY_dmem_master_m_arvalid;
}

tUInt64 MOD_mkNear_Mem::METH_dmem_master_m_araddr()
{
  PORT_dmem_master_araddr = INST_dcache.METH_mem_master_m_araddr();
  return PORT_dmem_master_araddr;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_araddr()
{
  tUInt8 PORT_RDY_dmem_master_m_araddr;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_araddr;
  DEF_CAN_FIRE_dmem_master_m_araddr = (tUInt8)1u;
  PORT_RDY_dmem_master_m_araddr = DEF_CAN_FIRE_dmem_master_m_araddr;
  return PORT_RDY_dmem_master_m_araddr;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_master_m_arprot()
{
  PORT_dmem_master_arprot = INST_dcache.METH_mem_master_m_arprot();
  return PORT_dmem_master_arprot;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_arprot()
{
  tUInt8 PORT_RDY_dmem_master_m_arprot;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_arprot;
  DEF_CAN_FIRE_dmem_master_m_arprot = (tUInt8)1u;
  PORT_RDY_dmem_master_m_arprot = DEF_CAN_FIRE_dmem_master_m_arprot;
  return PORT_RDY_dmem_master_m_arprot;
}

void MOD_mkNear_Mem::METH_dmem_master_m_arready(tUInt8 ARG_dmem_master_arready)
{
  if (PORT_RDY_dmem_master_m_arready)
    INST_dcache.METH_mem_master_m_arready(ARG_dmem_master_arready);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_arready()
{
  tUInt8 DEF_CAN_FIRE_dmem_master_m_arready;
  DEF_CAN_FIRE_dmem_master_m_arready = (tUInt8)1u;
  PORT_RDY_dmem_master_m_arready = DEF_CAN_FIRE_dmem_master_m_arready;
  return PORT_RDY_dmem_master_m_arready;
}

void MOD_mkNear_Mem::METH_dmem_master_m_rvalid(tUInt8 ARG_dmem_master_rvalid,
					       tUInt8 ARG_dmem_master_rresp,
					       tUInt64 ARG_dmem_master_rdata,
					       tUInt8 ARG_dmem_master_ruser)
{
  if (PORT_RDY_dmem_master_m_rvalid)
    INST_dcache.METH_mem_master_m_rvalid(ARG_dmem_master_rvalid,
					 ARG_dmem_master_rresp,
					 ARG_dmem_master_rdata,
					 ARG_dmem_master_ruser);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_rvalid()
{
  tUInt8 DEF_CAN_FIRE_dmem_master_m_rvalid;
  DEF_CAN_FIRE_dmem_master_m_rvalid = (tUInt8)1u;
  PORT_RDY_dmem_master_m_rvalid = DEF_CAN_FIRE_dmem_master_m_rvalid;
  return PORT_RDY_dmem_master_m_rvalid;
}

tUInt8 MOD_mkNear_Mem::METH_dmem_master_m_rready()
{
  PORT_dmem_master_rready = INST_dcache.METH_mem_master_m_rready();
  return PORT_dmem_master_rready;
}

tUInt8 MOD_mkNear_Mem::METH_RDY_dmem_master_m_rready()
{
  tUInt8 PORT_RDY_dmem_master_m_rready;
  tUInt8 DEF_CAN_FIRE_dmem_master_m_rready;
  DEF_CAN_FIRE_dmem_master_m_rready = (tUInt8)1u;
  PORT_RDY_dmem_master_m_rready = DEF_CAN_FIRE_dmem_master_m_rready;
  return PORT_RDY_dmem_master_m_rready;
}

void MOD_mkNear_Mem::METH_server_fence_i_request_put(tUInt8 ARG_server_fence_i_request_put)
{
  PORT_EN_server_fence_i_request_put = (tUInt8)1u;
  DEF_WILL_FIRE_server_fence_i_request_put = (tUInt8)1u;
  INST_icache.METH_server_flush_request_put((tUInt8)0u);
  INST_dcache.METH_server_flush_request_put((tUInt8)0u);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_server_fence_i_request_put()
{
  tUInt8 DEF_CAN_FIRE_server_fence_i_request_put;
  tUInt8 PORT_RDY_server_fence_i_request_put;
  DEF_dcache_RDY_server_flush_request_put____d23 = INST_dcache.METH_RDY_server_flush_request_put();
  DEF_CAN_FIRE_server_fence_i_request_put = INST_icache.METH_RDY_server_flush_request_put() && DEF_dcache_RDY_server_flush_request_put____d23;
  PORT_RDY_server_fence_i_request_put = DEF_CAN_FIRE_server_fence_i_request_put;
  return PORT_RDY_server_fence_i_request_put;
}

void MOD_mkNear_Mem::METH_server_fence_i_response_get()
{
  INST_icache.METH_server_flush_response_get();
  INST_dcache.METH_server_flush_response_get();
}

tUInt8 MOD_mkNear_Mem::METH_RDY_server_fence_i_response_get()
{
  tUInt8 DEF_CAN_FIRE_server_fence_i_response_get;
  tUInt8 PORT_RDY_server_fence_i_response_get;
  DEF_dcache_RDY_server_flush_response_get____d25 = INST_dcache.METH_RDY_server_flush_response_get();
  DEF_CAN_FIRE_server_fence_i_response_get = INST_icache.METH_RDY_server_flush_response_get() && DEF_dcache_RDY_server_flush_response_get____d25;
  PORT_RDY_server_fence_i_response_get = DEF_CAN_FIRE_server_fence_i_response_get;
  return PORT_RDY_server_fence_i_response_get;
}

void MOD_mkNear_Mem::METH_server_fence_request_put(tUInt8 ARG_server_fence_request_put)
{
  PORT_EN_server_fence_request_put = (tUInt8)1u;
  DEF_WILL_FIRE_server_fence_request_put = (tUInt8)1u;
  INST_dcache.METH_server_flush_request_put((tUInt8)0u);
}

tUInt8 MOD_mkNear_Mem::METH_RDY_server_fence_request_put()
{
  tUInt8 DEF_CAN_FIRE_server_fence_request_put;
  tUInt8 PORT_RDY_server_fence_request_put;
  DEF_dcache_RDY_server_flush_request_put____d23 = INST_dcache.METH_RDY_server_flush_request_put();
  DEF_CAN_FIRE_server_fence_request_put = DEF_dcache_RDY_server_flush_request_put____d23;
  PORT_RDY_server_fence_request_put = DEF_CAN_FIRE_server_fence_request_put;
  return PORT_RDY_server_fence_request_put;
}

void MOD_mkNear_Mem::METH_server_fence_response_get()
{
  INST_dcache.METH_server_flush_response_get();
}

tUInt8 MOD_mkNear_Mem::METH_RDY_server_fence_response_get()
{
  tUInt8 DEF_CAN_FIRE_server_fence_response_get;
  tUInt8 PORT_RDY_server_fence_response_get;
  DEF_dcache_RDY_server_flush_response_get____d25 = INST_dcache.METH_RDY_server_flush_response_get();
  DEF_CAN_FIRE_server_fence_response_get = DEF_dcache_RDY_server_flush_response_get____d25;
  PORT_RDY_server_fence_response_get = DEF_CAN_FIRE_server_fence_response_get;
  return PORT_RDY_server_fence_response_get;
}

void MOD_mkNear_Mem::METH_sfence_vma()
{
  INST_icache.METH_tlb_flush();
  INST_dcache.METH_tlb_flush();
}

tUInt8 MOD_mkNear_Mem::METH_RDY_sfence_vma()
{
  tUInt8 DEF_CAN_FIRE_sfence_vma;
  tUInt8 PORT_RDY_sfence_vma;
  DEF_CAN_FIRE_sfence_vma = (tUInt8)1u;
  PORT_RDY_sfence_vma = DEF_CAN_FIRE_sfence_vma;
  return PORT_RDY_sfence_vma;
}

void MOD_mkNear_Mem::METH_near_mem_slave_m_awvalid(tUInt8 ARG_near_mem_slave_awvalid,
						   tUInt64 ARG_near_mem_slave_awaddr,
						   tUInt8 ARG_near_mem_slave_awprot,
						   tUInt8 ARG_near_mem_slave_awuser)
{
  if (PORT_RDY_near_mem_slave_m_awvalid)
  {
  }
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_awvalid()
{
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_awvalid;
  DEF_CAN_FIRE_near_mem_slave_m_awvalid = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_awvalid = DEF_CAN_FIRE_near_mem_slave_m_awvalid;
  return PORT_RDY_near_mem_slave_m_awvalid;
}

void MOD_mkNear_Mem::METH_near_mem_slave_m_wvalid(tUInt8 ARG_near_mem_slave_wvalid,
						  tUInt64 ARG_near_mem_slave_wdata,
						  tUInt8 ARG_near_mem_slave_wstrb)
{
  if (PORT_RDY_near_mem_slave_m_wvalid)
  {
  }
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_wvalid()
{
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_wvalid;
  DEF_CAN_FIRE_near_mem_slave_m_wvalid = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_wvalid = DEF_CAN_FIRE_near_mem_slave_m_wvalid;
  return PORT_RDY_near_mem_slave_m_wvalid;
}

void MOD_mkNear_Mem::METH_near_mem_slave_m_bready(tUInt8 ARG_near_mem_slave_bready)
{
  if (PORT_RDY_near_mem_slave_m_bready)
  {
  }
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_bready()
{
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_bready;
  DEF_CAN_FIRE_near_mem_slave_m_bready = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_bready = DEF_CAN_FIRE_near_mem_slave_m_bready;
  return PORT_RDY_near_mem_slave_m_bready;
}

void MOD_mkNear_Mem::METH_near_mem_slave_m_arvalid(tUInt8 ARG_near_mem_slave_arvalid,
						   tUInt64 ARG_near_mem_slave_araddr,
						   tUInt8 ARG_near_mem_slave_arprot,
						   tUInt8 ARG_near_mem_slave_aruser)
{
  if (PORT_RDY_near_mem_slave_m_arvalid)
  {
  }
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_arvalid()
{
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_arvalid;
  DEF_CAN_FIRE_near_mem_slave_m_arvalid = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_arvalid = DEF_CAN_FIRE_near_mem_slave_m_arvalid;
  return PORT_RDY_near_mem_slave_m_arvalid;
}

void MOD_mkNear_Mem::METH_near_mem_slave_m_rready(tUInt8 ARG_near_mem_slave_rready)
{
  if (PORT_RDY_near_mem_slave_m_rready)
  {
  }
}

tUInt8 MOD_mkNear_Mem::METH_RDY_near_mem_slave_m_rready()
{
  tUInt8 DEF_CAN_FIRE_near_mem_slave_m_rready;
  DEF_CAN_FIRE_near_mem_slave_m_rready = (tUInt8)1u;
  PORT_RDY_near_mem_slave_m_rready = DEF_CAN_FIRE_near_mem_slave_m_rready;
  return PORT_RDY_near_mem_slave_m_rready;
}


/* Reset routines */

void MOD_mkNear_Mem::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_rg_state.reset_RST(ARG_rst_in);
  INST_icache.reset_RST_N(ARG_rst_in);
  INST_f_reset_rsps.reset_RST(ARG_rst_in);
  INST_dcache.reset_RST_N(ARG_rst_in);
  INST_cfg_verbosity.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkNear_Mem::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkNear_Mem::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_cfg_verbosity.dump_state(indent + 2u);
  INST_dcache.dump_state(indent + 2u);
  INST_f_reset_rsps.dump_state(indent + 2u);
  INST_icache.dump_state(indent + 2u);
  INST_rg_state.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkNear_Mem::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 66u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_cfg_verbosity_read_ULE_1___d9", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_server_fence_i_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_server_fence_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dcache_RDY_server_flush_request_put____d23", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dcache_RDY_server_flush_response_get____d25", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rg_state__h929", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h1066", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h1217", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1198", 4u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_server_fence_i_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_server_fence_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_dmem_master_m_arready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_dmem_master_m_awready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_dmem_master_m_bvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_dmem_master_m_rvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_dmem_master_m_wready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_imem_master_m_arready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_imem_master_m_awready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_imem_master_m_bvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_imem_master_m_rvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_imem_master_m_wready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_near_mem_slave_m_arvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_near_mem_slave_m_awvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_near_mem_slave_m_bready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_near_mem_slave_m_rready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_near_mem_slave_m_wvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dmem_master_araddr", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dmem_master_arprot", 3u);
  vcd_write_def(sim_hdl, num++, "dmem_master_aruser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dmem_master_arvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dmem_master_awaddr", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dmem_master_awprot", 3u);
  vcd_write_def(sim_hdl, num++, "dmem_master_awuser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dmem_master_awvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dmem_master_bready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dmem_master_rready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dmem_master_wdata", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dmem_master_wstrb", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dmem_master_wvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imem_master_araddr", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imem_master_arprot", 3u);
  vcd_write_def(sim_hdl, num++, "imem_master_aruser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imem_master_arvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imem_master_awaddr", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imem_master_awprot", 3u);
  vcd_write_def(sim_hdl, num++, "imem_master_awuser", 0u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imem_master_awvalid", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imem_master_bready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imem_master_rready", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imem_master_wdata", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imem_master_wstrb", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imem_master_wvalid", 1u);
  vcd_write_def(sim_hdl, num++, "near_mem_slave_arready", 1u);
  vcd_write_def(sim_hdl, num++, "near_mem_slave_awready", 1u);
  vcd_write_def(sim_hdl, num++, "near_mem_slave_bresp", 2u);
  vcd_write_def(sim_hdl, num++, "near_mem_slave_buser", 0u);
  vcd_write_def(sim_hdl, num++, "near_mem_slave_bvalid", 1u);
  vcd_write_def(sim_hdl, num++, "near_mem_slave_rdata", 64u);
  vcd_write_def(sim_hdl, num++, "near_mem_slave_rresp", 2u);
  vcd_write_def(sim_hdl, num++, "near_mem_slave_ruser", 0u);
  vcd_write_def(sim_hdl, num++, "near_mem_slave_rvalid", 1u);
  vcd_write_def(sim_hdl, num++, "near_mem_slave_wready", 1u);
  num = INST_cfg_verbosity.dump_VCD_defs(num);
  num = INST_f_reset_rsps.dump_VCD_defs(num);
  num = INST_rg_state.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_dcache.dump_VCD_defs(l);
    num = INST_icache.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkNear_Mem::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkNear_Mem &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkNear_Mem::vcd_defs(tVCDDumpType dt, MOD_mkNear_Mem &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 4u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 0u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_NOT_cfg_verbosity_read_ULE_1___d9) != DEF_NOT_cfg_verbosity_read_ULE_1___d9)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_cfg_verbosity_read_ULE_1___d9, 1u);
	backing.DEF_NOT_cfg_verbosity_read_ULE_1___d9 = DEF_NOT_cfg_verbosity_read_ULE_1___d9;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_server_fence_i_request_put) != DEF_WILL_FIRE_server_fence_i_request_put)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_server_fence_i_request_put, 1u);
	backing.DEF_WILL_FIRE_server_fence_i_request_put = DEF_WILL_FIRE_server_fence_i_request_put;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_server_fence_request_put) != DEF_WILL_FIRE_server_fence_request_put)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_server_fence_request_put, 1u);
	backing.DEF_WILL_FIRE_server_fence_request_put = DEF_WILL_FIRE_server_fence_request_put;
      }
      ++num;
      if ((backing.DEF_dcache_RDY_server_flush_request_put____d23) != DEF_dcache_RDY_server_flush_request_put____d23)
      {
	vcd_write_val(sim_hdl, num, DEF_dcache_RDY_server_flush_request_put____d23, 1u);
	backing.DEF_dcache_RDY_server_flush_request_put____d23 = DEF_dcache_RDY_server_flush_request_put____d23;
      }
      ++num;
      if ((backing.DEF_dcache_RDY_server_flush_response_get____d25) != DEF_dcache_RDY_server_flush_response_get____d25)
      {
	vcd_write_val(sim_hdl, num, DEF_dcache_RDY_server_flush_response_get____d25, 1u);
	backing.DEF_dcache_RDY_server_flush_response_get____d25 = DEF_dcache_RDY_server_flush_response_get____d25;
      }
      ++num;
      if ((backing.DEF_rg_state__h929) != DEF_rg_state__h929)
      {
	vcd_write_val(sim_hdl, num, DEF_rg_state__h929, 2u);
	backing.DEF_rg_state__h929 = DEF_rg_state__h929;
      }
      ++num;
      if ((backing.DEF_v__h1066) != DEF_v__h1066)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h1066, 32u);
	backing.DEF_v__h1066 = DEF_v__h1066;
      }
      ++num;
      if ((backing.DEF_v__h1217) != DEF_v__h1217)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h1217, 32u);
	backing.DEF_v__h1217 = DEF_v__h1217;
      }
      ++num;
      if ((backing.DEF_x__h1198) != DEF_x__h1198)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1198, 4u);
	backing.DEF_x__h1198 = DEF_x__h1198;
      }
      ++num;
      if ((backing.PORT_EN_server_fence_i_request_put) != PORT_EN_server_fence_i_request_put)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_server_fence_i_request_put, 1u);
	backing.PORT_EN_server_fence_i_request_put = PORT_EN_server_fence_i_request_put;
      }
      ++num;
      if ((backing.PORT_EN_server_fence_request_put) != PORT_EN_server_fence_request_put)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_server_fence_request_put, 1u);
	backing.PORT_EN_server_fence_request_put = PORT_EN_server_fence_request_put;
      }
      ++num;
      if ((backing.PORT_RDY_dmem_master_m_arready) != PORT_RDY_dmem_master_m_arready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_dmem_master_m_arready, 1u);
	backing.PORT_RDY_dmem_master_m_arready = PORT_RDY_dmem_master_m_arready;
      }
      ++num;
      if ((backing.PORT_RDY_dmem_master_m_awready) != PORT_RDY_dmem_master_m_awready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_dmem_master_m_awready, 1u);
	backing.PORT_RDY_dmem_master_m_awready = PORT_RDY_dmem_master_m_awready;
      }
      ++num;
      if ((backing.PORT_RDY_dmem_master_m_bvalid) != PORT_RDY_dmem_master_m_bvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_dmem_master_m_bvalid, 1u);
	backing.PORT_RDY_dmem_master_m_bvalid = PORT_RDY_dmem_master_m_bvalid;
      }
      ++num;
      if ((backing.PORT_RDY_dmem_master_m_rvalid) != PORT_RDY_dmem_master_m_rvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_dmem_master_m_rvalid, 1u);
	backing.PORT_RDY_dmem_master_m_rvalid = PORT_RDY_dmem_master_m_rvalid;
      }
      ++num;
      if ((backing.PORT_RDY_dmem_master_m_wready) != PORT_RDY_dmem_master_m_wready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_dmem_master_m_wready, 1u);
	backing.PORT_RDY_dmem_master_m_wready = PORT_RDY_dmem_master_m_wready;
      }
      ++num;
      if ((backing.PORT_RDY_imem_master_m_arready) != PORT_RDY_imem_master_m_arready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_imem_master_m_arready, 1u);
	backing.PORT_RDY_imem_master_m_arready = PORT_RDY_imem_master_m_arready;
      }
      ++num;
      if ((backing.PORT_RDY_imem_master_m_awready) != PORT_RDY_imem_master_m_awready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_imem_master_m_awready, 1u);
	backing.PORT_RDY_imem_master_m_awready = PORT_RDY_imem_master_m_awready;
      }
      ++num;
      if ((backing.PORT_RDY_imem_master_m_bvalid) != PORT_RDY_imem_master_m_bvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_imem_master_m_bvalid, 1u);
	backing.PORT_RDY_imem_master_m_bvalid = PORT_RDY_imem_master_m_bvalid;
      }
      ++num;
      if ((backing.PORT_RDY_imem_master_m_rvalid) != PORT_RDY_imem_master_m_rvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_imem_master_m_rvalid, 1u);
	backing.PORT_RDY_imem_master_m_rvalid = PORT_RDY_imem_master_m_rvalid;
      }
      ++num;
      if ((backing.PORT_RDY_imem_master_m_wready) != PORT_RDY_imem_master_m_wready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_imem_master_m_wready, 1u);
	backing.PORT_RDY_imem_master_m_wready = PORT_RDY_imem_master_m_wready;
      }
      ++num;
      if ((backing.PORT_RDY_near_mem_slave_m_arvalid) != PORT_RDY_near_mem_slave_m_arvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_near_mem_slave_m_arvalid, 1u);
	backing.PORT_RDY_near_mem_slave_m_arvalid = PORT_RDY_near_mem_slave_m_arvalid;
      }
      ++num;
      if ((backing.PORT_RDY_near_mem_slave_m_awvalid) != PORT_RDY_near_mem_slave_m_awvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_near_mem_slave_m_awvalid, 1u);
	backing.PORT_RDY_near_mem_slave_m_awvalid = PORT_RDY_near_mem_slave_m_awvalid;
      }
      ++num;
      if ((backing.PORT_RDY_near_mem_slave_m_bready) != PORT_RDY_near_mem_slave_m_bready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_near_mem_slave_m_bready, 1u);
	backing.PORT_RDY_near_mem_slave_m_bready = PORT_RDY_near_mem_slave_m_bready;
      }
      ++num;
      if ((backing.PORT_RDY_near_mem_slave_m_rready) != PORT_RDY_near_mem_slave_m_rready)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_near_mem_slave_m_rready, 1u);
	backing.PORT_RDY_near_mem_slave_m_rready = PORT_RDY_near_mem_slave_m_rready;
      }
      ++num;
      if ((backing.PORT_RDY_near_mem_slave_m_wvalid) != PORT_RDY_near_mem_slave_m_wvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_near_mem_slave_m_wvalid, 1u);
	backing.PORT_RDY_near_mem_slave_m_wvalid = PORT_RDY_near_mem_slave_m_wvalid;
      }
      ++num;
      if ((backing.PORT_dmem_master_araddr) != PORT_dmem_master_araddr)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_araddr, 64u);
	backing.PORT_dmem_master_araddr = PORT_dmem_master_araddr;
      }
      ++num;
      if ((backing.PORT_dmem_master_arprot) != PORT_dmem_master_arprot)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_arprot, 3u);
	backing.PORT_dmem_master_arprot = PORT_dmem_master_arprot;
      }
      ++num;
      if ((backing.PORT_dmem_master_aruser) != PORT_dmem_master_aruser)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_aruser, 0u);
	backing.PORT_dmem_master_aruser = PORT_dmem_master_aruser;
      }
      ++num;
      if ((backing.PORT_dmem_master_arvalid) != PORT_dmem_master_arvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_arvalid, 1u);
	backing.PORT_dmem_master_arvalid = PORT_dmem_master_arvalid;
      }
      ++num;
      if ((backing.PORT_dmem_master_awaddr) != PORT_dmem_master_awaddr)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_awaddr, 64u);
	backing.PORT_dmem_master_awaddr = PORT_dmem_master_awaddr;
      }
      ++num;
      if ((backing.PORT_dmem_master_awprot) != PORT_dmem_master_awprot)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_awprot, 3u);
	backing.PORT_dmem_master_awprot = PORT_dmem_master_awprot;
      }
      ++num;
      if ((backing.PORT_dmem_master_awuser) != PORT_dmem_master_awuser)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_awuser, 0u);
	backing.PORT_dmem_master_awuser = PORT_dmem_master_awuser;
      }
      ++num;
      if ((backing.PORT_dmem_master_awvalid) != PORT_dmem_master_awvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_awvalid, 1u);
	backing.PORT_dmem_master_awvalid = PORT_dmem_master_awvalid;
      }
      ++num;
      if ((backing.PORT_dmem_master_bready) != PORT_dmem_master_bready)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_bready, 1u);
	backing.PORT_dmem_master_bready = PORT_dmem_master_bready;
      }
      ++num;
      if ((backing.PORT_dmem_master_rready) != PORT_dmem_master_rready)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_rready, 1u);
	backing.PORT_dmem_master_rready = PORT_dmem_master_rready;
      }
      ++num;
      if ((backing.PORT_dmem_master_wdata) != PORT_dmem_master_wdata)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_wdata, 64u);
	backing.PORT_dmem_master_wdata = PORT_dmem_master_wdata;
      }
      ++num;
      if ((backing.PORT_dmem_master_wstrb) != PORT_dmem_master_wstrb)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_wstrb, 8u);
	backing.PORT_dmem_master_wstrb = PORT_dmem_master_wstrb;
      }
      ++num;
      if ((backing.PORT_dmem_master_wvalid) != PORT_dmem_master_wvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_dmem_master_wvalid, 1u);
	backing.PORT_dmem_master_wvalid = PORT_dmem_master_wvalid;
      }
      ++num;
      if ((backing.PORT_imem_master_araddr) != PORT_imem_master_araddr)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_araddr, 64u);
	backing.PORT_imem_master_araddr = PORT_imem_master_araddr;
      }
      ++num;
      if ((backing.PORT_imem_master_arprot) != PORT_imem_master_arprot)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_arprot, 3u);
	backing.PORT_imem_master_arprot = PORT_imem_master_arprot;
      }
      ++num;
      if ((backing.PORT_imem_master_aruser) != PORT_imem_master_aruser)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_aruser, 0u);
	backing.PORT_imem_master_aruser = PORT_imem_master_aruser;
      }
      ++num;
      if ((backing.PORT_imem_master_arvalid) != PORT_imem_master_arvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_arvalid, 1u);
	backing.PORT_imem_master_arvalid = PORT_imem_master_arvalid;
      }
      ++num;
      if ((backing.PORT_imem_master_awaddr) != PORT_imem_master_awaddr)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_awaddr, 64u);
	backing.PORT_imem_master_awaddr = PORT_imem_master_awaddr;
      }
      ++num;
      if ((backing.PORT_imem_master_awprot) != PORT_imem_master_awprot)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_awprot, 3u);
	backing.PORT_imem_master_awprot = PORT_imem_master_awprot;
      }
      ++num;
      if ((backing.PORT_imem_master_awuser) != PORT_imem_master_awuser)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_awuser, 0u);
	backing.PORT_imem_master_awuser = PORT_imem_master_awuser;
      }
      ++num;
      if ((backing.PORT_imem_master_awvalid) != PORT_imem_master_awvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_awvalid, 1u);
	backing.PORT_imem_master_awvalid = PORT_imem_master_awvalid;
      }
      ++num;
      if ((backing.PORT_imem_master_bready) != PORT_imem_master_bready)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_bready, 1u);
	backing.PORT_imem_master_bready = PORT_imem_master_bready;
      }
      ++num;
      if ((backing.PORT_imem_master_rready) != PORT_imem_master_rready)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_rready, 1u);
	backing.PORT_imem_master_rready = PORT_imem_master_rready;
      }
      ++num;
      if ((backing.PORT_imem_master_wdata) != PORT_imem_master_wdata)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_wdata, 64u);
	backing.PORT_imem_master_wdata = PORT_imem_master_wdata;
      }
      ++num;
      if ((backing.PORT_imem_master_wstrb) != PORT_imem_master_wstrb)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_wstrb, 8u);
	backing.PORT_imem_master_wstrb = PORT_imem_master_wstrb;
      }
      ++num;
      if ((backing.PORT_imem_master_wvalid) != PORT_imem_master_wvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_imem_master_wvalid, 1u);
	backing.PORT_imem_master_wvalid = PORT_imem_master_wvalid;
      }
      ++num;
      if ((backing.PORT_near_mem_slave_arready) != PORT_near_mem_slave_arready)
      {
	vcd_write_val(sim_hdl, num, PORT_near_mem_slave_arready, 1u);
	backing.PORT_near_mem_slave_arready = PORT_near_mem_slave_arready;
      }
      ++num;
      if ((backing.PORT_near_mem_slave_awready) != PORT_near_mem_slave_awready)
      {
	vcd_write_val(sim_hdl, num, PORT_near_mem_slave_awready, 1u);
	backing.PORT_near_mem_slave_awready = PORT_near_mem_slave_awready;
      }
      ++num;
      if ((backing.PORT_near_mem_slave_bresp) != PORT_near_mem_slave_bresp)
      {
	vcd_write_val(sim_hdl, num, PORT_near_mem_slave_bresp, 2u);
	backing.PORT_near_mem_slave_bresp = PORT_near_mem_slave_bresp;
      }
      ++num;
      if ((backing.PORT_near_mem_slave_buser) != PORT_near_mem_slave_buser)
      {
	vcd_write_val(sim_hdl, num, PORT_near_mem_slave_buser, 0u);
	backing.PORT_near_mem_slave_buser = PORT_near_mem_slave_buser;
      }
      ++num;
      if ((backing.PORT_near_mem_slave_bvalid) != PORT_near_mem_slave_bvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_near_mem_slave_bvalid, 1u);
	backing.PORT_near_mem_slave_bvalid = PORT_near_mem_slave_bvalid;
      }
      ++num;
      if ((backing.PORT_near_mem_slave_rdata) != PORT_near_mem_slave_rdata)
      {
	vcd_write_val(sim_hdl, num, PORT_near_mem_slave_rdata, 64u);
	backing.PORT_near_mem_slave_rdata = PORT_near_mem_slave_rdata;
      }
      ++num;
      if ((backing.PORT_near_mem_slave_rresp) != PORT_near_mem_slave_rresp)
      {
	vcd_write_val(sim_hdl, num, PORT_near_mem_slave_rresp, 2u);
	backing.PORT_near_mem_slave_rresp = PORT_near_mem_slave_rresp;
      }
      ++num;
      if ((backing.PORT_near_mem_slave_ruser) != PORT_near_mem_slave_ruser)
      {
	vcd_write_val(sim_hdl, num, PORT_near_mem_slave_ruser, 0u);
	backing.PORT_near_mem_slave_ruser = PORT_near_mem_slave_ruser;
      }
      ++num;
      if ((backing.PORT_near_mem_slave_rvalid) != PORT_near_mem_slave_rvalid)
      {
	vcd_write_val(sim_hdl, num, PORT_near_mem_slave_rvalid, 1u);
	backing.PORT_near_mem_slave_rvalid = PORT_near_mem_slave_rvalid;
      }
      ++num;
      if ((backing.PORT_near_mem_slave_wready) != PORT_near_mem_slave_wready)
      {
	vcd_write_val(sim_hdl, num, PORT_near_mem_slave_wready, 1u);
	backing.PORT_near_mem_slave_wready = PORT_near_mem_slave_wready;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_NOT_cfg_verbosity_read_ULE_1___d9, 1u);
      backing.DEF_NOT_cfg_verbosity_read_ULE_1___d9 = DEF_NOT_cfg_verbosity_read_ULE_1___d9;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_server_fence_i_request_put, 1u);
      backing.DEF_WILL_FIRE_server_fence_i_request_put = DEF_WILL_FIRE_server_fence_i_request_put;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_server_fence_request_put, 1u);
      backing.DEF_WILL_FIRE_server_fence_request_put = DEF_WILL_FIRE_server_fence_request_put;
      vcd_write_val(sim_hdl, num++, DEF_dcache_RDY_server_flush_request_put____d23, 1u);
      backing.DEF_dcache_RDY_server_flush_request_put____d23 = DEF_dcache_RDY_server_flush_request_put____d23;
      vcd_write_val(sim_hdl, num++, DEF_dcache_RDY_server_flush_response_get____d25, 1u);
      backing.DEF_dcache_RDY_server_flush_response_get____d25 = DEF_dcache_RDY_server_flush_response_get____d25;
      vcd_write_val(sim_hdl, num++, DEF_rg_state__h929, 2u);
      backing.DEF_rg_state__h929 = DEF_rg_state__h929;
      vcd_write_val(sim_hdl, num++, DEF_v__h1066, 32u);
      backing.DEF_v__h1066 = DEF_v__h1066;
      vcd_write_val(sim_hdl, num++, DEF_v__h1217, 32u);
      backing.DEF_v__h1217 = DEF_v__h1217;
      vcd_write_val(sim_hdl, num++, DEF_x__h1198, 4u);
      backing.DEF_x__h1198 = DEF_x__h1198;
      vcd_write_val(sim_hdl, num++, PORT_EN_server_fence_i_request_put, 1u);
      backing.PORT_EN_server_fence_i_request_put = PORT_EN_server_fence_i_request_put;
      vcd_write_val(sim_hdl, num++, PORT_EN_server_fence_request_put, 1u);
      backing.PORT_EN_server_fence_request_put = PORT_EN_server_fence_request_put;
      vcd_write_val(sim_hdl, num++, PORT_RDY_dmem_master_m_arready, 1u);
      backing.PORT_RDY_dmem_master_m_arready = PORT_RDY_dmem_master_m_arready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_dmem_master_m_awready, 1u);
      backing.PORT_RDY_dmem_master_m_awready = PORT_RDY_dmem_master_m_awready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_dmem_master_m_bvalid, 1u);
      backing.PORT_RDY_dmem_master_m_bvalid = PORT_RDY_dmem_master_m_bvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_dmem_master_m_rvalid, 1u);
      backing.PORT_RDY_dmem_master_m_rvalid = PORT_RDY_dmem_master_m_rvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_dmem_master_m_wready, 1u);
      backing.PORT_RDY_dmem_master_m_wready = PORT_RDY_dmem_master_m_wready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_imem_master_m_arready, 1u);
      backing.PORT_RDY_imem_master_m_arready = PORT_RDY_imem_master_m_arready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_imem_master_m_awready, 1u);
      backing.PORT_RDY_imem_master_m_awready = PORT_RDY_imem_master_m_awready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_imem_master_m_bvalid, 1u);
      backing.PORT_RDY_imem_master_m_bvalid = PORT_RDY_imem_master_m_bvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_imem_master_m_rvalid, 1u);
      backing.PORT_RDY_imem_master_m_rvalid = PORT_RDY_imem_master_m_rvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_imem_master_m_wready, 1u);
      backing.PORT_RDY_imem_master_m_wready = PORT_RDY_imem_master_m_wready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_near_mem_slave_m_arvalid, 1u);
      backing.PORT_RDY_near_mem_slave_m_arvalid = PORT_RDY_near_mem_slave_m_arvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_near_mem_slave_m_awvalid, 1u);
      backing.PORT_RDY_near_mem_slave_m_awvalid = PORT_RDY_near_mem_slave_m_awvalid;
      vcd_write_val(sim_hdl, num++, PORT_RDY_near_mem_slave_m_bready, 1u);
      backing.PORT_RDY_near_mem_slave_m_bready = PORT_RDY_near_mem_slave_m_bready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_near_mem_slave_m_rready, 1u);
      backing.PORT_RDY_near_mem_slave_m_rready = PORT_RDY_near_mem_slave_m_rready;
      vcd_write_val(sim_hdl, num++, PORT_RDY_near_mem_slave_m_wvalid, 1u);
      backing.PORT_RDY_near_mem_slave_m_wvalid = PORT_RDY_near_mem_slave_m_wvalid;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_araddr, 64u);
      backing.PORT_dmem_master_araddr = PORT_dmem_master_araddr;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_arprot, 3u);
      backing.PORT_dmem_master_arprot = PORT_dmem_master_arprot;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_aruser, 0u);
      backing.PORT_dmem_master_aruser = PORT_dmem_master_aruser;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_arvalid, 1u);
      backing.PORT_dmem_master_arvalid = PORT_dmem_master_arvalid;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_awaddr, 64u);
      backing.PORT_dmem_master_awaddr = PORT_dmem_master_awaddr;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_awprot, 3u);
      backing.PORT_dmem_master_awprot = PORT_dmem_master_awprot;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_awuser, 0u);
      backing.PORT_dmem_master_awuser = PORT_dmem_master_awuser;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_awvalid, 1u);
      backing.PORT_dmem_master_awvalid = PORT_dmem_master_awvalid;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_bready, 1u);
      backing.PORT_dmem_master_bready = PORT_dmem_master_bready;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_rready, 1u);
      backing.PORT_dmem_master_rready = PORT_dmem_master_rready;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_wdata, 64u);
      backing.PORT_dmem_master_wdata = PORT_dmem_master_wdata;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_wstrb, 8u);
      backing.PORT_dmem_master_wstrb = PORT_dmem_master_wstrb;
      vcd_write_val(sim_hdl, num++, PORT_dmem_master_wvalid, 1u);
      backing.PORT_dmem_master_wvalid = PORT_dmem_master_wvalid;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_araddr, 64u);
      backing.PORT_imem_master_araddr = PORT_imem_master_araddr;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_arprot, 3u);
      backing.PORT_imem_master_arprot = PORT_imem_master_arprot;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_aruser, 0u);
      backing.PORT_imem_master_aruser = PORT_imem_master_aruser;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_arvalid, 1u);
      backing.PORT_imem_master_arvalid = PORT_imem_master_arvalid;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_awaddr, 64u);
      backing.PORT_imem_master_awaddr = PORT_imem_master_awaddr;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_awprot, 3u);
      backing.PORT_imem_master_awprot = PORT_imem_master_awprot;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_awuser, 0u);
      backing.PORT_imem_master_awuser = PORT_imem_master_awuser;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_awvalid, 1u);
      backing.PORT_imem_master_awvalid = PORT_imem_master_awvalid;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_bready, 1u);
      backing.PORT_imem_master_bready = PORT_imem_master_bready;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_rready, 1u);
      backing.PORT_imem_master_rready = PORT_imem_master_rready;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_wdata, 64u);
      backing.PORT_imem_master_wdata = PORT_imem_master_wdata;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_wstrb, 8u);
      backing.PORT_imem_master_wstrb = PORT_imem_master_wstrb;
      vcd_write_val(sim_hdl, num++, PORT_imem_master_wvalid, 1u);
      backing.PORT_imem_master_wvalid = PORT_imem_master_wvalid;
      vcd_write_val(sim_hdl, num++, PORT_near_mem_slave_arready, 1u);
      backing.PORT_near_mem_slave_arready = PORT_near_mem_slave_arready;
      vcd_write_val(sim_hdl, num++, PORT_near_mem_slave_awready, 1u);
      backing.PORT_near_mem_slave_awready = PORT_near_mem_slave_awready;
      vcd_write_val(sim_hdl, num++, PORT_near_mem_slave_bresp, 2u);
      backing.PORT_near_mem_slave_bresp = PORT_near_mem_slave_bresp;
      vcd_write_val(sim_hdl, num++, PORT_near_mem_slave_buser, 0u);
      backing.PORT_near_mem_slave_buser = PORT_near_mem_slave_buser;
      vcd_write_val(sim_hdl, num++, PORT_near_mem_slave_bvalid, 1u);
      backing.PORT_near_mem_slave_bvalid = PORT_near_mem_slave_bvalid;
      vcd_write_val(sim_hdl, num++, PORT_near_mem_slave_rdata, 64u);
      backing.PORT_near_mem_slave_rdata = PORT_near_mem_slave_rdata;
      vcd_write_val(sim_hdl, num++, PORT_near_mem_slave_rresp, 2u);
      backing.PORT_near_mem_slave_rresp = PORT_near_mem_slave_rresp;
      vcd_write_val(sim_hdl, num++, PORT_near_mem_slave_ruser, 0u);
      backing.PORT_near_mem_slave_ruser = PORT_near_mem_slave_ruser;
      vcd_write_val(sim_hdl, num++, PORT_near_mem_slave_rvalid, 1u);
      backing.PORT_near_mem_slave_rvalid = PORT_near_mem_slave_rvalid;
      vcd_write_val(sim_hdl, num++, PORT_near_mem_slave_wready, 1u);
      backing.PORT_near_mem_slave_wready = PORT_near_mem_slave_wready;
    }
}

void MOD_mkNear_Mem::vcd_prims(tVCDDumpType dt, MOD_mkNear_Mem &backing)
{
  INST_cfg_verbosity.dump_VCD(dt, backing.INST_cfg_verbosity);
  INST_f_reset_rsps.dump_VCD(dt, backing.INST_f_reset_rsps);
  INST_rg_state.dump_VCD(dt, backing.INST_rg_state);
}

void MOD_mkNear_Mem::vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkNear_Mem &backing)
{
  INST_dcache.dump_VCD(dt, levels, backing.INST_dcache);
  INST_icache.dump_VCD(dt, levels, backing.INST_icache);
}
